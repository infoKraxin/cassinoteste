const __vite__fileDeps = ["assets/ActionBlockchaim-NFa5p7TG-2024_8_30_15_11.js", "assets/index-a_Ow1xUN-2024_8_30_15_11.js", "assets/index-CPzRzJM3-2024_8_30_15_11.css", "assets/ActionCasino-CwXt-tYH-2024_8_30_15_11.js", "assets/ActionCockfighting-CGnTCsKU-2024_8_30_15_11.js", "assets/ActionEsports-KfV9xh0a-2024_8_30_15_11.js", "assets/ActionEsportsIcon-Cf5-XNcl-2024_8_30_15_11.js", "assets/ActionFavoritos-ByjL9ukC-2024_8_30_15_11.js", "assets/ActionFishing-C12EC6Lr-2024_8_30_15_11.js", "assets/ActionHotIcon-DaKu13yQ-2024_8_30_15_11.js", "assets/ActionJogos-BVpy0E_x-2024_8_30_15_11.js", "assets/ActionLettery-ziDKcflh-2024_8_30_15_11.js", "assets/ActionPoker-CLq5mRy_-2024_8_30_15_11.js", "assets/ActionRecente-Bv_dP03X-2024_8_30_15_11.js", "assets/ActionSports-Cn_1saH2-2024_8_30_15_11.js", "assets/BottomActive-WlY5S84V-2024_8_30_15_11.js", "assets/BottomArrow-C1thwUUs-2024_8_30_15_11.js", "assets/Android-B66EuxNM-2024_8_30_15_11.js", "assets/Bank-PiViDWV1-2024_8_30_15_11.js", "assets/CarteiraCentral-Di_r02Uv-2024_8_30_15_11.js", "assets/CentroDeMensagens-Du-aSVmA-2024_8_30_15_11.js", "assets/Delete-Cgx9NjxU-2024_8_30_15_11.js", "assets/Email-gUjxgRhU-2024_8_30_15_11.js", "assets/FreshMoney-P5OceOTo-2024_8_30_15_11.js", "assets/FullScreenIcon-BUj2hhfc-2024_8_30_15_11.js", "assets/Interest-kD0Z8Dj4-2024_8_30_15_11.js", "assets/InvitationCode-QrMHpi7S-2024_8_30_15_11.js", "assets/Ios-C3dMEWJB-2024_8_30_15_11.js", "assets/LinhaSelectedIcon-Bi4d-rqs-2024_8_30_15_11.js", "assets/Lock-Bwwwc1Wc-2024_8_30_15_11.js", "assets/Message-CQUzCq3b-2024_8_30_15_11.js", "assets/MessageSet-B9Um2_sV-2024_8_30_15_11.js", "assets/MessageVolum-DhM4RQbH-2024_8_30_15_11.js", "assets/Notify-CumUEJzR-2024_8_30_15_11.js", "assets/Password-DmF5SOze-2024_8_30_15_11.js", "assets/PriceTip-CRoGaEWW-2024_8_30_15_11.js", "assets/Recommend-CAGl3UTw-2024_8_30_15_11.js", "assets/Recycle-BCjZalcR-2024_8_30_15_11.js", "assets/RelatorioPessoal-Cbuuxcm8-2024_8_30_15_11.js", "assets/RoundDown-CHyu9tEr-2024_8_30_15_11.js", "assets/SearchToolS-BBajhuVB-2024_8_30_15_11.js", "assets/Select-BL-vF3FW-2024_8_30_15_11.js", "assets/SiderMenuIcon-C-dPct6p-2024_8_30_15_11.js", "assets/Triangle-Et9Bhd3y-2024_8_30_15_11.js", "assets/Tudo-DV5ETPvZ-2024_8_30_15_11.js", "assets/Tudos-Bq9UPBqF-2024_8_30_15_11.js", "assets/User-ClatpqvK-2024_8_30_15_11.js", "assets/Jogar-CzcHlXHR-2024_8_30_15_11.js", "assets/index-DLU8b8X_-2024_8_30_15_11.js", "assets/index-BzLy5ZC1-2024_8_30_15_11.css", "assets/index-BNGQrtiU-2024_8_30_15_11.js", "assets/util-voEpZeRQ-2024_8_30_15_11.js", "assets/index-Cw8D1bq7-2024_8_30_15_11.js", "assets/index-DrQ3s3jg-2024_8_30_15_11.css", "assets/index-hOOyKCVU-2024_8_30_15_11.js", "assets/index-XlLnAGLh-2024_8_30_15_11.css", "assets/index-Bhw2MjsX-2024_8_30_15_11.js", "assets/index-1xm8SFo0-2024_8_30_15_11.css", "assets/s3-CXhGbR_j-2024_8_30_15_11.js", "assets/index-DWQ5oTYO-2024_8_30_15_11.css", "assets/index-CreDiGRi-2024_8_30_15_11.js", "assets/index-B2a4YUDy-2024_8_30_15_11.css", "assets/index-Mry5-Ar1-2024_8_30_15_11.js", "assets/index--6igQ1bG-2024_8_30_15_11.js", "assets/index-CJm9HKmt-2024_8_30_15_11.css", "assets/map-C3EIoPQv-2024_8_30_15_11.js", "assets/index-By1nV14q-2024_8_30_15_11.css", "assets/index-CAFNsVLs-2024_8_30_15_11.js", "assets/index-DivDyG7a-2024_8_30_15_11.css", "assets/index-nz2_Ac5N-2024_8_30_15_11.js", "assets/index-BqzXl6JZ-2024_8_30_15_11.js", "assets/index-CwQm3CnD-2024_8_30_15_11.css", "assets/index-6lAYkrXI-2024_8_30_15_11.js", "assets/index-BS_b_aGX-2024_8_30_15_11.css", "assets/index-CXUvC2rK-2024_8_30_15_11.js", "assets/index-C4kSXIAb-2024_8_30_15_11.css", "assets/index-BnmWxtvR-2024_8_30_15_11.js", "assets/index-CJRkgAoO-2024_8_30_15_11.js", "assets/index-Dn-kWR46-2024_8_30_15_11.css", "assets/index-DvxrCaxO-2024_8_30_15_11.css", "assets/index-s2cos2xj-2024_8_30_15_11.js", "assets/index-DMA2fgso-2024_8_30_15_11.css", "assets/index-DIq8-yCo-2024_8_30_15_11.js", "assets/index-CmNjnQSb-2024_8_30_15_11.js", "assets/index-CmzL8dRS-2024_8_30_15_11.js", "assets/index-ZAM1rhVf-2024_8_30_15_11.js", "assets/index-Hvw0r7zB-2024_8_30_15_11.css", "assets/index-EQsmaghr-2024_8_30_15_11.js", "assets/index-C8I8EFtB-2024_8_30_15_11.js", "assets/index-DobA8bd7-2024_8_30_15_11.css", "assets/index-DS8DNyCn-2024_8_30_15_11.js", "assets/index-Cur_yjpe-2024_8_30_15_11.css", "assets/index-BZuKA4-R-2024_8_30_15_11.js", "assets/index-DBB1olXP-2024_8_30_15_11.js", "assets/index-Bzhkcul--2024_8_30_15_11.css", "assets/index-C68HEtLq-2024_8_30_15_11.js", "assets/index-DJHlqIc9-2024_8_30_15_11.css", "assets/index-C6BO2BmA-2024_8_30_15_11.js", "assets/index-sJLg8MBX-2024_8_30_15_11.css", "assets/index-BHd9_Tmf-2024_8_30_15_11.js", "assets/index-B6gUljj--2024_8_30_15_11.css", "assets/index-BIEVly6S-2024_8_30_15_11.js", "assets/index-DzkSl8Uy-2024_8_30_15_11.css", "assets/index-CoAFjgVa-2024_8_30_15_11.js", "assets/index-wHIxepdM-2024_8_30_15_11.css", "assets/index-D7mgjaD3-2024_8_30_15_11.js", "assets/index-D7-CMEqI-2024_8_30_15_11.css", "assets/index-BzzkfSqW-2024_8_30_15_11.js", "assets/index-b-pcFaQk-2024_8_30_15_11.css", "assets/index-B1LG1uCU-2024_8_30_15_11.js", "assets/index-CyOoNWWt-2024_8_30_15_11.css", "assets/index-BtTP9-bd-2024_8_30_15_11.js", "assets/index-D40nq0zY-2024_8_30_15_11.css", "assets/index-BjBiOkFg-2024_8_30_15_11.js", "assets/index-B_M5bDYi-2024_8_30_15_11.css", "assets/index-CDzHGLFI-2024_8_30_15_11.js", "assets/index-CzG5CD4Z-2024_8_30_15_11.js", "assets/index-CKqRDGgI-2024_8_30_15_11.css"], __vite__mapDeps = i => i.map(i => __vite__fileDeps[i]);
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value2) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value2 }) : obj[key] = value2;
var __publicField = (obj, key, value2) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value2);
  return value2;
};
import { r as reactExports, g as getDefaults, a as getI18n, _ as __spreadArray, b as __read, d as depsAreSame, c as __assign, u as useUnmount$1, e as commonjsGlobal, f as getDefaultExportFromCjs, i as isBrowser$1, h as __awaiter, j as __generator, k as __rest$9, l as isFunction$1, m as useLatest$1, n as getTargetElement$1, o as useEffectWithTarget, p as getQueryVariable, q as useUserInfoStore, s as browser$1, t as addIcoToHead, v as addManifestToHead, w as useParams, x as useNavigate, y as getPromoList, z as sendMessage, A as useLocation, B as useGameStore, C as useMessageStore, D as getLinkList, E as getMoneyUnit, F as getWebType, G as Cache$1, H as mqttConnect, I as memberPointStatisticsDeposit, J as postPixiChargeEvent, K as jsxRuntimeExports, L as getMemberCustomerList, M as reactDomExports, N as Motion, O as spring, P as joinClass, Q as isH5$1, R as Image, S as trans, T as React, U as ReactDOM, V as dayjs, W as React$1, X as ReactDOM$1, Y as antdLocale, Z as copyText, $ as __vitePreload, a0 as minPxChip, a1 as postRecallbalance, a2 as Loading$1, a3 as getUrlParams, a4 as getFinanceChannelType, a5 as getFinanceChannelList, a6 as memberWebsetList, a7 as Message$1, a8 as postFinanceThirdDeposit, a9 as instance, aa as customToFixed, ab as getMemberRecordTrade, ac as getMemberShortInfo, ad as getCountryFlag, ae as postMemberBankcardInsert, af as getMemberBankcardPixTypeList, ag as postMemberBankcardInsertPH, ah as getMemberBankcardPHTypeList, ai as getMemberBankcardListPh, aj as events, ak as getMemberBankcardList, al as getFinanceWithdrawProcessing, am as postMemberWpwCheck, an as postFinanceWithdraw, ao as getFinanceWithdrawFee, ap as toPXBack, aq as postDirectAgencyState, ar as rebateAgencyRecord, as as postAgencyMydata, at as postAgencyAlldata, au as myBet, av as postDirectAgencyFinance, aw as postAgentSubMember, ax as removeEmpty, ay as betDetail, az as postDirectAgencyBete, aA as useFloatPopShareStore, aB as getGamesNav, aC as getCommissionConfig, aD as checkInputUserName, aE as checkInputUserPwd, aF as register, aG as postAgencyMypick, aH as postRebateAgencyBrief, aI as lodashExports, aJ as getMemberRecordGame, aK as getMemberAgencyReportSubPlat, aL as H5Skeleton, aM as useThreeLoginStore, aN as slideBlockByGeetest4, aO as postThreeLogin, aP as login, aQ as useSearchParams, aR as checkPasswordStrength, aS as checkInputPhoneNumber, aT as countryCode, aU as languageOptions, aV as getLineClass, aW as getRandomInt, aX as useMusicStore, aY as sortGameTabs, aZ as scrollToPlatromItem, a_ as useAlertStore, a$ as getPromoTurntableShare, b0 as getBrowser, b1 as getPayMethod, b2 as getPromoTurntableTrans, b3 as getPromoTurntablePrizeList, b4 as postPromoTurntableApply, b5 as getPromoDetail, b6 as getNoticeList, b7 as preloadImage, b8 as useGuideStore, b9 as useRoutes, ba as getH5Type } from "./index-a_Ow1xUN-2024_8_30_15_11.js";
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function warn() {
  if (console && console.warn) {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (typeof args[0] === "string")
      args[0] = "react-i18next:: ".concat(args[0]);
    console.warn(...args);
  }
}
const alreadyWarned = {};
function warnOnce() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  if (typeof args[0] === "string" && alreadyWarned[args[0]])
    return;
  if (typeof args[0] === "string")
    alreadyWarned[args[0]] = /* @__PURE__ */ new Date();
  warn(...args);
}
const loadedClb = (i18n, cb) => () => {
  if (i18n.isInitialized) {
    cb();
  } else {
    const initialized = () => {
      setTimeout(() => {
        i18n.off("initialized", initialized);
      }, 0);
      cb();
    };
    i18n.on("initialized", initialized);
  }
};
function loadNamespaces(i18n, ns, cb) {
  i18n.loadNamespaces(ns, loadedClb(i18n, cb));
}
function loadLanguages(i18n, lng, ns, cb) {
  if (typeof ns === "string")
    ns = [ns];
  ns.forEach((n2) => {
    if (i18n.options.ns.indexOf(n2) < 0)
      i18n.options.ns.push(n2);
  });
  i18n.loadLanguages(lng, loadedClb(i18n, cb));
}
function oldI18nextHasLoadedNamespace(ns, i18n) {
  let options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const lng = i18n.languages[0];
  const fallbackLng = i18n.options ? i18n.options.fallbackLng : false;
  const lastLng = i18n.languages[i18n.languages.length - 1];
  if (lng.toLowerCase() === "cimode")
    return true;
  const loadNotPending = (l2, n2) => {
    const loadState = i18n.services.backendConnector.state["".concat(l2, "|").concat(n2)];
    return loadState === -1 || loadState === 2;
  };
  if (options2.bindI18n && options2.bindI18n.indexOf("languageChanging") > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns))
    return false;
  if (i18n.hasResourceBundle(lng, ns))
    return true;
  if (!i18n.services.backendConnector.backend || i18n.options.resources && !i18n.options.partialBundledLanguages)
    return true;
  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))
    return true;
  return false;
}
function hasLoadedNamespace(ns, i18n) {
  let options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (!i18n.languages || !i18n.languages.length) {
    warnOnce("i18n.languages were undefined or empty", i18n.languages);
    return true;
  }
  const isNewerI18next = i18n.options.ignoreJSONStructure !== void 0;
  if (!isNewerI18next) {
    return oldI18nextHasLoadedNamespace(ns, i18n, options2);
  }
  return i18n.hasLoadedNamespace(ns, {
    lng: options2.lng,
    precheck: (i18nInstance, loadNotPending) => {
      if (options2.bindI18n && options2.bindI18n.indexOf("languageChanging") > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns))
        return false;
    }
  });
}
const I18nContext = reactExports.createContext();
class ReportNamespaces {
  constructor() {
    this.usedNamespaces = {};
  }
  addUsedNamespaces(namespaces) {
    namespaces.forEach((ns) => {
      if (!this.usedNamespaces[ns])
        this.usedNamespaces[ns] = true;
    });
  }
  getUsedNamespaces() {
    return Object.keys(this.usedNamespaces);
  }
}
const usePrevious = (value2, ignore2) => {
  const ref = reactExports.useRef();
  reactExports.useEffect(() => {
    ref.current = value2;
  }, [value2, ignore2]);
  return ref.current;
};
function useTranslation(ns) {
  let props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    i18n: i18nFromProps
  } = props;
  const {
    i18n: i18nFromContext,
    defaultNS: defaultNSFromContext
  } = reactExports.useContext(I18nContext) || {};
  const i18n = i18nFromProps || i18nFromContext || getI18n();
  if (i18n && !i18n.reportNamespaces)
    i18n.reportNamespaces = new ReportNamespaces();
  if (!i18n) {
    warnOnce("You will need to pass in an i18next instance by using initReactI18next");
    const notReadyT = (k2, optsOrDefaultValue) => {
      if (typeof optsOrDefaultValue === "string")
        return optsOrDefaultValue;
      if (optsOrDefaultValue && typeof optsOrDefaultValue === "object" && typeof optsOrDefaultValue.defaultValue === "string")
        return optsOrDefaultValue.defaultValue;
      return Array.isArray(k2) ? k2[k2.length - 1] : k2;
    };
    const retNotReady = [notReadyT, {}, false];
    retNotReady.t = notReadyT;
    retNotReady.i18n = {};
    retNotReady.ready = false;
    return retNotReady;
  }
  if (i18n.options.react && i18n.options.react.wait !== void 0)
    warnOnce("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
  const i18nOptions = {
    ...getDefaults(),
    ...i18n.options.react,
    ...props
  };
  const {
    useSuspense,
    keyPrefix
  } = i18nOptions;
  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === "string" ? [namespaces] : namespaces || ["translation"];
  if (i18n.reportNamespaces.addUsedNamespaces)
    i18n.reportNamespaces.addUsedNamespaces(namespaces);
  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every((n2) => hasLoadedNamespace(n2, i18n, i18nOptions));
  function getT() {
    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === "fallback" ? namespaces : namespaces[0], keyPrefix);
  }
  const [t2, setT] = reactExports.useState(getT);
  let joinedNS = namespaces.join();
  if (props.lng)
    joinedNS = "".concat(props.lng).concat(joinedNS);
  const previousJoinedNS = usePrevious(joinedNS);
  const isMounted = reactExports.useRef(true);
  reactExports.useEffect(() => {
    const {
      bindI18n,
      bindI18nStore
    } = i18nOptions;
    isMounted.current = true;
    if (!ready && !useSuspense) {
      if (props.lng) {
        loadLanguages(i18n, props.lng, namespaces, () => {
          if (isMounted.current)
            setT(getT);
        });
      } else {
        loadNamespaces(i18n, namespaces, () => {
          if (isMounted.current)
            setT(getT);
        });
      }
    }
    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {
      setT(getT);
    }
    function boundReset() {
      if (isMounted.current)
        setT(getT);
    }
    if (bindI18n && i18n)
      i18n.on(bindI18n, boundReset);
    if (bindI18nStore && i18n)
      i18n.store.on(bindI18nStore, boundReset);
    return () => {
      isMounted.current = false;
      if (bindI18n && i18n)
        bindI18n.split(" ").forEach((e2) => i18n.off(e2, boundReset));
      if (bindI18nStore && i18n)
        bindI18nStore.split(" ").forEach((e2) => i18n.store.off(e2, boundReset));
    };
  }, [i18n, joinedNS]);
  const isInitial = reactExports.useRef(true);
  reactExports.useEffect(() => {
    if (isMounted.current && !isInitial.current) {
      setT(getT);
    }
    isInitial.current = false;
  }, [i18n, keyPrefix]);
  const ret = [t2, i18n, ready];
  ret.t = t2;
  ret.i18n = i18n;
  ret.ready = ready;
  if (ready)
    return ret;
  if (!ready && !useSuspense)
    return ret;
  throw new Promise((resolve) => {
    if (props.lng) {
      loadLanguages(i18n, props.lng, namespaces, () => resolve());
    } else {
      loadNamespaces(i18n, namespaces, () => resolve());
    }
  });
}
function Translation(props) {
  const {
    ns,
    children,
    ...options2
  } = props;
  const [t2, i18n, ready] = useTranslation(ns, options2);
  return children(t2, {
    i18n,
    lng: i18n.language
  }, ready);
}
var createUpdateEffect = function (hook) {
  return function (effect, deps) {
    var isMounted = reactExports.useRef(false);
    hook(function () {
      return function () {
        isMounted.current = false;
      };
    }, []);
    hook(function () {
      if (!isMounted.current) {
        isMounted.current = true;
      } else {
        return effect();
      }
    }, deps);
  };
};
function useMemoizedFn$1(fn) {
  var fnRef = reactExports.useRef(fn);
  fnRef.current = reactExports.useMemo(function () {
    return fn;
  }, [fn]);
  var memoizedFn = reactExports.useRef();
  if (!memoizedFn.current) {
    memoizedFn.current = function () {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return fnRef.current.apply(this, args);
    };
  }
  return memoizedFn.current;
}
const useUpdateEffect$1 = createUpdateEffect(reactExports.useEffect);
var useAutoRunPlugin = function (fetchInstance, _a) {
  var manual = _a.manual, _b = _a.ready, ready = _b === void 0 ? true : _b, _c = _a.defaultParams, defaultParams = _c === void 0 ? [] : _c, _d = _a.refreshDeps, refreshDeps = _d === void 0 ? [] : _d, refreshDepsAction = _a.refreshDepsAction;
  var hasAutoRun = reactExports.useRef(false);
  hasAutoRun.current = false;
  useUpdateEffect$1(function () {
    if (!manual && ready) {
      hasAutoRun.current = true;
      fetchInstance.run.apply(fetchInstance, __spreadArray([], __read(defaultParams), false));
    }
  }, [ready]);
  useUpdateEffect$1(function () {
    if (hasAutoRun.current) {
      return;
    }
    if (!manual) {
      hasAutoRun.current = true;
      if (refreshDepsAction) {
        refreshDepsAction();
      } else {
        fetchInstance.refresh();
      }
    }
  }, __spreadArray([], __read(refreshDeps), false));
  return {
    onBefore: function () {
      if (!ready) {
        return {
          stopNow: true
        };
      }
    }
  };
};
useAutoRunPlugin.onInit = function (_a) {
  var _b = _a.ready, ready = _b === void 0 ? true : _b, manual = _a.manual;
  return {
    loading: !manual && ready
  };
};
function useCreation(factory, deps) {
  var current = reactExports.useRef({
    deps,
    obj: void 0,
    initialized: false
  }).current;
  if (current.initialized === false || !depsAreSame(current.deps, deps)) {
    current.deps = deps;
    current.obj = factory();
    current.initialized = true;
  }
  return current.obj;
}
var cache = /* @__PURE__ */ new Map();
var setCache = function (key, cacheTime, cachedData) {
  var currentCache = cache.get(key);
  if (currentCache === null || currentCache === void 0 ? void 0 : currentCache.timer) {
    clearTimeout(currentCache.timer);
  }
  var timer2 = void 0;
  if (cacheTime > -1) {
    timer2 = setTimeout(function () {
      cache.delete(key);
    }, cacheTime);
  }
  cache.set(key, __assign(__assign({}, cachedData), {
    timer: timer2
  }));
};
var getCache = function (key) {
  return cache.get(key);
};
var cachePromise = /* @__PURE__ */ new Map();
var getCachePromise = function (cacheKey) {
  return cachePromise.get(cacheKey);
};
var setCachePromise = function (cacheKey, promise) {
  cachePromise.set(cacheKey, promise);
  promise.then(function (res) {
    cachePromise.delete(cacheKey);
    return res;
  }).catch(function () {
    cachePromise.delete(cacheKey);
  });
};
var listeners$2 = {};
var trigger = function (key, data) {
  if (listeners$2[key]) {
    listeners$2[key].forEach(function (item2) {
      return item2(data);
    });
  }
};
var subscribe$2 = function (key, listener) {
  if (!listeners$2[key]) {
    listeners$2[key] = [];
  }
  listeners$2[key].push(listener);
  return function unsubscribe() {
    var index2 = listeners$2[key].indexOf(listener);
    listeners$2[key].splice(index2, 1);
  };
};
var useCachePlugin = function (fetchInstance, _a) {
  var cacheKey = _a.cacheKey, _b = _a.cacheTime, cacheTime = _b === void 0 ? 5 * 60 * 1e3 : _b, _c = _a.staleTime, staleTime = _c === void 0 ? 0 : _c, customSetCache = _a.setCache, customGetCache = _a.getCache;
  var unSubscribeRef = reactExports.useRef();
  var currentPromiseRef = reactExports.useRef();
  var _setCache = function (key, cachedData) {
    if (customSetCache) {
      customSetCache(cachedData);
    } else {
      setCache(key, cacheTime, cachedData);
    }
    trigger(key, cachedData.data);
  };
  var _getCache = function (key, params) {
    if (params === void 0) {
      params = [];
    }
    if (customGetCache) {
      return customGetCache(params);
    }
    return getCache(key);
  };
  useCreation(function () {
    if (!cacheKey) {
      return;
    }
    var cacheData = _getCache(cacheKey);
    if (cacheData && Object.hasOwnProperty.call(cacheData, "data")) {
      fetchInstance.state.data = cacheData.data;
      fetchInstance.state.params = cacheData.params;
      if (staleTime === -1 || (/* @__PURE__ */ new Date()).getTime() - cacheData.time <= staleTime) {
        fetchInstance.state.loading = false;
      }
    }
    unSubscribeRef.current = subscribe$2(cacheKey, function (data) {
      fetchInstance.setState({
        data
      });
    });
  }, []);
  useUnmount$1(function () {
    var _a2;
    (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
  });
  if (!cacheKey) {
    return {};
  }
  return {
    onBefore: function (params) {
      var cacheData = _getCache(cacheKey, params);
      if (!cacheData || !Object.hasOwnProperty.call(cacheData, "data")) {
        return {};
      }
      if (staleTime === -1 || (/* @__PURE__ */ new Date()).getTime() - cacheData.time <= staleTime) {
        return {
          loading: false,
          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,
          error: void 0,
          returnNow: true
        };
      } else {
        return {
          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,
          error: void 0
        };
      }
    },
    onRequest: function (service, args) {
      var servicePromise = getCachePromise(cacheKey);
      if (servicePromise && servicePromise !== currentPromiseRef.current) {
        return {
          servicePromise
        };
      }
      servicePromise = service.apply(void 0, __spreadArray([], __read(args), false));
      currentPromiseRef.current = servicePromise;
      setCachePromise(cacheKey, servicePromise);
      return {
        servicePromise
      };
    },
    onSuccess: function (data, params) {
      var _a2;
      if (cacheKey) {
        (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
        _setCache(cacheKey, {
          data,
          params,
          time: (/* @__PURE__ */ new Date()).getTime()
        });
        unSubscribeRef.current = subscribe$2(cacheKey, function (d2) {
          fetchInstance.setState({
            data: d2
          });
        });
      }
    },
    onMutate: function (data) {
      var _a2;
      if (cacheKey) {
        (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
        _setCache(cacheKey, {
          data,
          params: fetchInstance.state.params,
          time: (/* @__PURE__ */ new Date()).getTime()
        });
        unSubscribeRef.current = subscribe$2(cacheKey, function (d2) {
          fetchInstance.setState({
            data: d2
          });
        });
      }
    }
  };
};
function isObject$5(value2) {
  var type4 = typeof value2;
  return value2 != null && (type4 == "object" || type4 == "function");
}
var isObject_1 = isObject$5;
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$3 = freeGlobal || freeSelf || Function("return this")();
var _root = root$3;
var root$2 = _root;
var now$1 = function () {
  return root$2.Date.now();
};
var now_1 = now$1;
var reWhitespace = /\s/;
function trimmedEndIndex$1(string3) {
  var index2 = string3.length;
  while (index2-- && reWhitespace.test(string3.charAt(index2))) {
  }
  return index2;
}
var _trimmedEndIndex = trimmedEndIndex$1;
var trimmedEndIndex = _trimmedEndIndex;
var reTrimStart = /^\s+/;
function baseTrim$1(string3) {
  return string3 ? string3.slice(0, trimmedEndIndex(string3) + 1).replace(reTrimStart, "") : string3;
}
var _baseTrim = baseTrim$1;
var root$1 = _root;
var Symbol$3 = root$1.Symbol;
var _Symbol = Symbol$3;
var Symbol$2 = _Symbol;
var objectProto$2 = Object.prototype;
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
var nativeObjectToString$1 = objectProto$2.toString;
var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
function getRawTag$1(value2) {
  var isOwn = hasOwnProperty$1.call(value2, symToStringTag$1), tag2 = value2[symToStringTag$1];
  try {
    value2[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e2) {
  }
  var result = nativeObjectToString$1.call(value2);
  if (unmasked) {
    if (isOwn) {
      value2[symToStringTag$1] = tag2;
    } else {
      delete value2[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$1 = Object.prototype;
var nativeObjectToString = objectProto$1.toString;
function objectToString$1(value2) {
  return nativeObjectToString.call(value2);
}
var _objectToString = objectToString$1;
var Symbol$1 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : void 0;
function baseGetTag$2(value2) {
  if (value2 == null) {
    return value2 === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value2) ? getRawTag(value2) : objectToString(value2);
}
var _baseGetTag = baseGetTag$2;
function isObjectLike$2(value2) {
  return value2 != null && typeof value2 == "object";
}
var isObjectLike_1 = isObjectLike$2;
var baseGetTag$1 = _baseGetTag, isObjectLike$1 = isObjectLike_1;
var symbolTag = "[object Symbol]";
function isSymbol$1(value2) {
  return typeof value2 == "symbol" || isObjectLike$1(value2) && baseGetTag$1(value2) == symbolTag;
}
var isSymbol_1 = isSymbol$1;
var baseTrim = _baseTrim, isObject$4 = isObject_1, isSymbol = isSymbol_1;
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber$1(value2) {
  if (typeof value2 == "number") {
    return value2;
  }
  if (isSymbol(value2)) {
    return NAN;
  }
  if (isObject$4(value2)) {
    var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
    value2 = isObject$4(other) ? other + "" : other;
  }
  if (typeof value2 != "string") {
    return value2 === 0 ? value2 : +value2;
  }
  value2 = baseTrim(value2);
  var isBinary = reIsBinary.test(value2);
  return isBinary || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value2) ? NAN : +value2;
}
var toNumber_1 = toNumber$1;
var isObject$3 = isObject_1, now = now_1, toNumber = toNumber_1;
var FUNC_ERROR_TEXT$1 = "Expected a function";
var nativeMax = Math.max, nativeMin = Math.min;
function debounce$2(func, wait, options2) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber(wait) || 0;
  if (isObject$3(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? nativeMax(toNumber(options2.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time2) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time2) : result;
  }
  function remainingWait(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time2 = now();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = setTimeout(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel2() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now());
  }
  function debounced() {
    var time2 = now(), isInvoking = shouldInvoke(time2);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel2;
  debounced.flush = flush;
  return debounced;
}
var debounce_1 = debounce$2;
const debounce$3 = /* @__PURE__ */ getDefaultExportFromCjs(debounce_1);
var useDebouncePlugin = function (fetchInstance, _a) {
  var debounceWait = _a.debounceWait, debounceLeading = _a.debounceLeading, debounceTrailing = _a.debounceTrailing, debounceMaxWait = _a.debounceMaxWait;
  var debouncedRef = reactExports.useRef();
  var options2 = reactExports.useMemo(function () {
    var ret = {};
    if (debounceLeading !== void 0) {
      ret.leading = debounceLeading;
    }
    if (debounceTrailing !== void 0) {
      ret.trailing = debounceTrailing;
    }
    if (debounceMaxWait !== void 0) {
      ret.maxWait = debounceMaxWait;
    }
    return ret;
  }, [debounceLeading, debounceTrailing, debounceMaxWait]);
  reactExports.useEffect(function () {
    if (debounceWait) {
      var _originRunAsync_1 = fetchInstance.runAsync.bind(fetchInstance);
      debouncedRef.current = debounce$3(function (callback) {
        callback();
      }, debounceWait, options2);
      fetchInstance.runAsync = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new Promise(function (resolve, reject) {
          var _a2;
          (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(debouncedRef, function () {
            _originRunAsync_1.apply(void 0, __spreadArray([], __read(args), false)).then(resolve).catch(reject);
          });
        });
      };
      return function () {
        var _a2;
        (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
        fetchInstance.runAsync = _originRunAsync_1;
      };
    }
  }, [debounceWait, options2]);
  if (!debounceWait) {
    return {};
  }
  return {
    onCancel: function () {
      var _a2;
      (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
    }
  };
};
var useLoadingDelayPlugin = function (fetchInstance, _a) {
  var loadingDelay = _a.loadingDelay, ready = _a.ready;
  var timerRef = reactExports.useRef();
  if (!loadingDelay) {
    return {};
  }
  var cancelTimeout = function () {
    if (timerRef.current) {
      clearTimeout(timerRef.current);
    }
  };
  return {
    onBefore: function () {
      cancelTimeout();
      if (ready !== false) {
        timerRef.current = setTimeout(function () {
          fetchInstance.setState({
            loading: true
          });
        }, loadingDelay);
      }
      return {
        loading: false
      };
    },
    onFinally: function () {
      cancelTimeout();
    },
    onCancel: function () {
      cancelTimeout();
    }
  };
};
function isDocumentVisible() {
  if (isBrowser$1) {
    return document.visibilityState !== "hidden";
  }
  return true;
}
var listeners$1 = [];
function subscribe$1(listener) {
  listeners$1.push(listener);
  return function unsubscribe() {
    var index2 = listeners$1.indexOf(listener);
    listeners$1.splice(index2, 1);
  };
}
if (isBrowser$1) {
  var revalidate$1 = function () {
    if (!isDocumentVisible())
      return;
    for (var i = 0; i < listeners$1.length; i++) {
      var listener = listeners$1[i];
      listener();
    }
  };
  window.addEventListener("visibilitychange", revalidate$1, false);
}
var usePollingPlugin = function (fetchInstance, _a) {
  var pollingInterval = _a.pollingInterval, _b = _a.pollingWhenHidden, pollingWhenHidden = _b === void 0 ? true : _b, _c = _a.pollingErrorRetryCount, pollingErrorRetryCount = _c === void 0 ? -1 : _c;
  var timerRef = reactExports.useRef();
  var unsubscribeRef = reactExports.useRef();
  var countRef = reactExports.useRef(0);
  var stopPolling = function () {
    var _a2;
    if (timerRef.current) {
      clearTimeout(timerRef.current);
    }
    (_a2 = unsubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unsubscribeRef);
  };
  useUpdateEffect$1(function () {
    if (!pollingInterval) {
      stopPolling();
    }
  }, [pollingInterval]);
  if (!pollingInterval) {
    return {};
  }
  return {
    onBefore: function () {
      stopPolling();
    },
    onError: function () {
      countRef.current += 1;
    },
    onSuccess: function () {
      countRef.current = 0;
    },
    onFinally: function () {
      if (pollingErrorRetryCount === -1 || // When an error occurs, the request is not repeated after pollingErrorRetryCount retries
        pollingErrorRetryCount !== -1 && countRef.current <= pollingErrorRetryCount) {
        timerRef.current = setTimeout(function () {
          if (!pollingWhenHidden && !isDocumentVisible()) {
            unsubscribeRef.current = subscribe$1(function () {
              fetchInstance.refresh();
            });
          } else {
            fetchInstance.refresh();
          }
        }, pollingInterval);
      } else {
        countRef.current = 0;
      }
    },
    onCancel: function () {
      stopPolling();
    }
  };
};
function limit(fn, timespan) {
  var pending = false;
  return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (pending)
      return;
    pending = true;
    fn.apply(void 0, __spreadArray([], __read(args), false));
    setTimeout(function () {
      pending = false;
    }, timespan);
  };
}
function isOnline() {
  if (isBrowser$1 && typeof navigator.onLine !== "undefined") {
    return navigator.onLine;
  }
  return true;
}
var listeners = [];
function subscribe(listener) {
  listeners.push(listener);
  return function unsubscribe() {
    var index2 = listeners.indexOf(listener);
    if (index2 > -1) {
      listeners.splice(index2, 1);
    }
  };
}
if (isBrowser$1) {
  var revalidate = function () {
    if (!isDocumentVisible() || !isOnline())
      return;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }
  };
  window.addEventListener("visibilitychange", revalidate, false);
  window.addEventListener("focus", revalidate, false);
}
var useRefreshOnWindowFocusPlugin = function (fetchInstance, _a) {
  var refreshOnWindowFocus = _a.refreshOnWindowFocus, _b = _a.focusTimespan, focusTimespan = _b === void 0 ? 5e3 : _b;
  var unsubscribeRef = reactExports.useRef();
  var stopSubscribe = function () {
    var _a2;
    (_a2 = unsubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unsubscribeRef);
  };
  reactExports.useEffect(function () {
    if (refreshOnWindowFocus) {
      var limitRefresh_1 = limit(fetchInstance.refresh.bind(fetchInstance), focusTimespan);
      unsubscribeRef.current = subscribe(function () {
        limitRefresh_1();
      });
    }
    return function () {
      stopSubscribe();
    };
  }, [refreshOnWindowFocus, focusTimespan]);
  useUnmount$1(function () {
    stopSubscribe();
  });
  return {};
};
var useRetryPlugin = function (fetchInstance, _a) {
  var retryInterval = _a.retryInterval, retryCount = _a.retryCount;
  var timerRef = reactExports.useRef();
  var countRef = reactExports.useRef(0);
  var triggerByRetry = reactExports.useRef(false);
  if (!retryCount) {
    return {};
  }
  return {
    onBefore: function () {
      if (!triggerByRetry.current) {
        countRef.current = 0;
      }
      triggerByRetry.current = false;
      if (timerRef.current) {
        clearTimeout(timerRef.current);
      }
    },
    onSuccess: function () {
      countRef.current = 0;
    },
    onError: function () {
      countRef.current += 1;
      if (retryCount === -1 || countRef.current <= retryCount) {
        var timeout2 = retryInterval !== null && retryInterval !== void 0 ? retryInterval : Math.min(1e3 * Math.pow(2, countRef.current), 3e4);
        timerRef.current = setTimeout(function () {
          triggerByRetry.current = true;
          fetchInstance.refresh();
        }, timeout2);
      } else {
        countRef.current = 0;
      }
    },
    onCancel: function () {
      countRef.current = 0;
      if (timerRef.current) {
        clearTimeout(timerRef.current);
      }
    }
  };
};
var debounce$1 = debounce_1, isObject$2 = isObject_1;
var FUNC_ERROR_TEXT = "Expected a function";
function throttle$1(func, wait, options2) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject$2(options2)) {
    leading = "leading" in options2 ? !!options2.leading : leading;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  return debounce$1(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_1 = throttle$1;
const throttle$2 = /* @__PURE__ */ getDefaultExportFromCjs(throttle_1);
var useThrottlePlugin = function (fetchInstance, _a) {
  var throttleWait = _a.throttleWait, throttleLeading = _a.throttleLeading, throttleTrailing = _a.throttleTrailing;
  var throttledRef = reactExports.useRef();
  var options2 = {};
  if (throttleLeading !== void 0) {
    options2.leading = throttleLeading;
  }
  if (throttleTrailing !== void 0) {
    options2.trailing = throttleTrailing;
  }
  reactExports.useEffect(function () {
    if (throttleWait) {
      var _originRunAsync_1 = fetchInstance.runAsync.bind(fetchInstance);
      throttledRef.current = throttle$2(function (callback) {
        callback();
      }, throttleWait, options2);
      fetchInstance.runAsync = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new Promise(function (resolve, reject) {
          var _a2;
          (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(throttledRef, function () {
            _originRunAsync_1.apply(void 0, __spreadArray([], __read(args), false)).then(resolve).catch(reject);
          });
        });
      };
      return function () {
        var _a2;
        fetchInstance.runAsync = _originRunAsync_1;
        (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
      };
    }
  }, [throttleWait, throttleLeading, throttleTrailing]);
  if (!throttleWait) {
    return {};
  }
  return {
    onCancel: function () {
      var _a2;
      (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
    }
  };
};
var useMount = function (fn) {
  reactExports.useEffect(function () {
    fn === null || fn === void 0 ? void 0 : fn();
  }, []);
};
var useUpdate$1 = function () {
  var _a = __read(reactExports.useState({}), 2), setState = _a[1];
  return reactExports.useCallback(function () {
    return setState({});
  }, []);
};
var Fetch = (
  /** @class */
  function () {
    function Fetch2(serviceRef, options2, subscribe2, initState) {
      if (initState === void 0) {
        initState = {};
      }
      this.serviceRef = serviceRef;
      this.options = options2;
      this.subscribe = subscribe2;
      this.initState = initState;
      this.count = 0;
      this.state = {
        loading: false,
        params: void 0,
        data: void 0,
        error: void 0
      };
      this.state = __assign(__assign(__assign({}, this.state), {
        loading: !options2.manual
      }), initState);
    }
    Fetch2.prototype.setState = function (s) {
      if (s === void 0) {
        s = {};
      }
      this.state = __assign(__assign({}, this.state), s);
      this.subscribe();
    };
    Fetch2.prototype.runPluginHandler = function (event) {
      var rest = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        rest[_i - 1] = arguments[_i];
      }
      var r2 = this.pluginImpls.map(function (i) {
        var _a;
        return (_a = i[event]) === null || _a === void 0 ? void 0 : _a.call.apply(_a, __spreadArray([i], __read(rest), false));
      }).filter(Boolean);
      return Object.assign.apply(Object, __spreadArray([{}], __read(r2), false));
    };
    Fetch2.prototype.runAsync = function () {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
      var params = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        params[_i] = arguments[_i];
      }
      return __awaiter(this, void 0, void 0, function () {
        var currentCount, _l, _m, stopNow, _o, returnNow, state2, servicePromise, res, error_1;
        var _p;
        return __generator(this, function (_q) {
          switch (_q.label) {
            case 0:
              this.count += 1;
              currentCount = this.count;
              _l = this.runPluginHandler("onBefore", params), _m = _l.stopNow, stopNow = _m === void 0 ? false : _m, _o = _l.returnNow, returnNow = _o === void 0 ? false : _o, state2 = __rest$9(_l, ["stopNow", "returnNow"]);
              if (stopNow) {
                return [2, new Promise(function () {
                })];
              }
              this.setState(__assign({
                loading: true,
                params
              }, state2));
              if (returnNow) {
                return [2, Promise.resolve(state2.data)];
              }
              (_b = (_a = this.options).onBefore) === null || _b === void 0 ? void 0 : _b.call(_a, params);
              _q.label = 1;
            case 1:
              _q.trys.push([1, 3, , 4]);
              servicePromise = this.runPluginHandler("onRequest", this.serviceRef.current, params).servicePromise;
              if (!servicePromise) {
                servicePromise = (_p = this.serviceRef).current.apply(_p, __spreadArray([], __read(params), false));
              }
              return [4, servicePromise];
            case 2:
              res = _q.sent();
              if (currentCount !== this.count) {
                return [2, new Promise(function () {
                })];
              }
              this.setState({
                data: res,
                error: void 0,
                loading: false
              });
              (_d = (_c = this.options).onSuccess) === null || _d === void 0 ? void 0 : _d.call(_c, res, params);
              this.runPluginHandler("onSuccess", res, params);
              (_f = (_e = this.options).onFinally) === null || _f === void 0 ? void 0 : _f.call(_e, params, res, void 0);
              if (currentCount === this.count) {
                this.runPluginHandler("onFinally", params, res, void 0);
              }
              return [2, res];
            case 3:
              error_1 = _q.sent();
              if (currentCount !== this.count) {
                return [2, new Promise(function () {
                })];
              }
              this.setState({
                error: error_1,
                loading: false
              });
              (_h = (_g = this.options).onError) === null || _h === void 0 ? void 0 : _h.call(_g, error_1, params);
              this.runPluginHandler("onError", error_1, params);
              (_k = (_j = this.options).onFinally) === null || _k === void 0 ? void 0 : _k.call(_j, params, void 0, error_1);
              if (currentCount === this.count) {
                this.runPluginHandler("onFinally", params, void 0, error_1);
              }
              throw error_1;
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Fetch2.prototype.run = function () {
      var _this = this;
      var params = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        params[_i] = arguments[_i];
      }
      this.runAsync.apply(this, __spreadArray([], __read(params), false)).catch(function (error2) {
        if (!_this.options.onError) {
          console.error(error2);
        }
      });
    };
    Fetch2.prototype.cancel = function () {
      this.count += 1;
      this.setState({
        loading: false
      });
      this.runPluginHandler("onCancel");
    };
    Fetch2.prototype.refresh = function () {
      this.run.apply(this, __spreadArray([], __read(this.state.params || []), false));
    };
    Fetch2.prototype.refreshAsync = function () {
      return this.runAsync.apply(this, __spreadArray([], __read(this.state.params || []), false));
    };
    Fetch2.prototype.mutate = function (data) {
      var targetData = isFunction$1(data) ? data(this.state.data) : data;
      this.runPluginHandler("onMutate", targetData);
      this.setState({
        data: targetData
      });
    };
    return Fetch2;
  }()
);
function useRequestImplement(service, options2, plugins) {
  if (options2 === void 0) {
    options2 = {};
  }
  if (plugins === void 0) {
    plugins = [];
  }
  var _a = options2.manual, manual = _a === void 0 ? false : _a, rest = __rest$9(options2, ["manual"]);
  var fetchOptions = __assign({
    manual
  }, rest);
  var serviceRef = useLatest$1(service);
  var update = useUpdate$1();
  var fetchInstance = useCreation(function () {
    var initState = plugins.map(function (p2) {
      var _a2;
      return (_a2 = p2 === null || p2 === void 0 ? void 0 : p2.onInit) === null || _a2 === void 0 ? void 0 : _a2.call(p2, fetchOptions);
    }).filter(Boolean);
    return new Fetch(serviceRef, fetchOptions, update, Object.assign.apply(Object, __spreadArray([{}], __read(initState), false)));
  }, []);
  fetchInstance.options = fetchOptions;
  fetchInstance.pluginImpls = plugins.map(function (p2) {
    return p2(fetchInstance, fetchOptions);
  });
  useMount(function () {
    if (!manual) {
      var params = fetchInstance.state.params || options2.defaultParams || [];
      fetchInstance.run.apply(fetchInstance, __spreadArray([], __read(params), false));
    }
  });
  useUnmount$1(function () {
    fetchInstance.cancel();
  });
  return {
    loading: fetchInstance.state.loading,
    data: fetchInstance.state.data,
    error: fetchInstance.state.error,
    params: fetchInstance.state.params || [],
    cancel: useMemoizedFn$1(fetchInstance.cancel.bind(fetchInstance)),
    refresh: useMemoizedFn$1(fetchInstance.refresh.bind(fetchInstance)),
    refreshAsync: useMemoizedFn$1(fetchInstance.refreshAsync.bind(fetchInstance)),
    run: useMemoizedFn$1(fetchInstance.run.bind(fetchInstance)),
    runAsync: useMemoizedFn$1(fetchInstance.runAsync.bind(fetchInstance)),
    mutate: useMemoizedFn$1(fetchInstance.mutate.bind(fetchInstance))
  };
}
function useRequest(service, options2, plugins) {
  return useRequestImplement(service, options2, __spreadArray(__spreadArray([], __read([]), false), [useDebouncePlugin, useLoadingDelayPlugin, usePollingPlugin, useRefreshOnWindowFocusPlugin, useThrottlePlugin, useAutoRunPlugin, useCachePlugin, useRetryPlugin], false));
}
function isAsyncGenerator(val) {
  return isFunction$1(val[Symbol.asyncIterator]);
}
function useAsyncEffect(effect, deps) {
  reactExports.useEffect(function () {
    var e2 = effect();
    var cancelled = false;
    function execute() {
      return __awaiter(this, void 0, void 0, function () {
        var result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!isAsyncGenerator(e2))
                return [3, 4];
              _a.label = 1;
            case 1:
              return [4, e2.next()];
            case 2:
              result = _a.sent();
              if (result.done || cancelled) {
                return [3, 3];
              }
              return [3, 1];
            case 3:
              return [3, 6];
            case 4:
              return [4, e2];
            case 5:
              _a.sent();
              _a.label = 6;
            case 6:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    execute();
    return function () {
      cancelled = true;
    };
  }, deps);
}
var checkIfAllInShadow = function (targets) {
  return targets.every(function (item2) {
    var targetElement = getTargetElement$1(item2);
    if (!targetElement)
      return false;
    if (targetElement.getRootNode() instanceof ShadowRoot)
      return true;
  });
};
var getShadow = function (node2) {
  if (!node2) {
    return document;
  }
  return node2.getRootNode();
};
var getDocumentOrShadow = function (target) {
  if (!target || !document.getRootNode) {
    return document;
  }
  var targets = Array.isArray(target) ? target : [target];
  if (checkIfAllInShadow(targets)) {
    return getShadow(getTargetElement$1(targets[0]));
  }
  return document;
};
function useClickAway(onClickAway, target, eventName) {
  if (eventName === void 0) {
    eventName = "click";
  }
  var onClickAwayRef = useLatest$1(onClickAway);
  useEffectWithTarget(function () {
    var handler = function (event) {
      var targets = Array.isArray(target) ? target : [target];
      if (targets.some(function (item2) {
        var targetElement = getTargetElement$1(item2);
        return !targetElement || targetElement.contains(event.target);
      })) {
        return;
      }
      onClickAwayRef.current(event);
    };
    var documentOrShadow = getDocumentOrShadow(target);
    var eventNames = Array.isArray(eventName) ? eventName : [eventName];
    eventNames.forEach(function (event) {
      return documentOrShadow.addEventListener(event, handler);
    });
    return function () {
      eventNames.forEach(function (event) {
        return documentOrShadow.removeEventListener(event, handler);
      });
    };
  }, Array.isArray(eventName) ? eventName : [eventName], target);
}
function useEventListener$1(eventName, handler, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var handlerRef = useLatest$1(handler);
  useEffectWithTarget(function () {
    var targetElement = getTargetElement$1(options2.target, window);
    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
      return;
    }
    var eventListener = function (event) {
      return handlerRef.current(event);
    };
    targetElement.addEventListener(eventName, eventListener, {
      capture: options2.capture,
      once: options2.once,
      passive: options2.passive
    });
    return function () {
      targetElement.removeEventListener(eventName, eventListener, {
        capture: options2.capture
      });
    };
  }, [eventName, options2.capture, options2.once, options2.passive], options2.target);
}
function useGetState(initialState) {
  var _a = __read(reactExports.useState(initialState), 2), state2 = _a[0], setState = _a[1];
  var stateRef = useLatest$1(state2);
  var getState = reactExports.useCallback(function () {
    return stateRef.current;
  }, []);
  return [state2, setState, getState];
}
function overArg$1(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$1;
var overArg = _overArg;
var getPrototype$1 = overArg(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype$1;
var baseGetTag = _baseGetTag, getPrototype = _getPrototype, isObjectLike = isObjectLike_1;
var objectTag = "[object Object]";
var funcProto = Function.prototype, objectProto = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty = objectProto.hasOwnProperty;
var objectCtorString = funcToString.call(Object);
function isPlainObject(value2) {
  if (!isObjectLike(value2) || baseGetTag(value2) != objectTag) {
    return false;
  }
  var proto = getPrototype(value2);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}
var isPlainObject_1 = isPlainObject;
const isPlainObject$1 = /* @__PURE__ */ getDefaultExportFromCjs(isPlainObject_1);
var proxyMap = /* @__PURE__ */ new WeakMap();
var rawMap = /* @__PURE__ */ new WeakMap();
function observer(initialVal, cb) {
  var existingProxy = proxyMap.get(initialVal);
  if (existingProxy) {
    return existingProxy;
  }
  if (rawMap.has(initialVal)) {
    return initialVal;
  }
  var proxy = new Proxy(initialVal, {
    get: function (target, key, receiver) {
      var res = Reflect.get(target, key, receiver);
      var descriptor = Reflect.getOwnPropertyDescriptor(target, key);
      if (!(descriptor === null || descriptor === void 0 ? void 0 : descriptor.configurable) && !(descriptor === null || descriptor === void 0 ? void 0 : descriptor.writable)) {
        return res;
      }
      return isPlainObject$1(res) || Array.isArray(res) ? observer(res, cb) : res;
    },
    set: function (target, key, val) {
      var ret = Reflect.set(target, key, val);
      cb();
      return ret;
    },
    deleteProperty: function (target, key) {
      var ret = Reflect.deleteProperty(target, key);
      cb();
      return ret;
    }
  });
  proxyMap.set(initialVal, proxy);
  rawMap.set(proxy, initialVal);
  return proxy;
}
function useReactive(initialState) {
  var update = useUpdate$1();
  var stateRef = reactExports.useRef(initialState);
  var state2 = useCreation(function () {
    return observer(stateRef.current, function () {
      update();
    });
  }, []);
  return state2;
}
var useSetState$1 = function (initialState) {
  var _a = __read(reactExports.useState(initialState), 2), state2 = _a[0], setState = _a[1];
  var setMergeState = reactExports.useCallback(function (patch) {
    setState(function (prevState) {
      var newState = isFunction$1(patch) ? patch(prevState) : patch;
      return newState ? __assign(__assign({}, prevState), newState) : prevState;
    });
  }, []);
  return [state2, setMergeState];
};
var MapShim = function () {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result = -1;
    arr.some(function (entry, index2) {
      if (entry[0] === key) {
        result = index2;
        return true;
      }
      return false;
    });
    return result;
  }
  return (
    /** @class */
    function () {
      function class_1() {
        this.__entries__ = [];
      }
      Object.defineProperty(class_1.prototype, "size", {
        /**
         * @returns {boolean}
         */
        get: function () {
          return this.__entries__.length;
        },
        enumerable: true,
        configurable: true
      });
      class_1.prototype.get = function (key) {
        var index2 = getIndex(this.__entries__, key);
        var entry = this.__entries__[index2];
        return entry && entry[1];
      };
      class_1.prototype.set = function (key, value2) {
        var index2 = getIndex(this.__entries__, key);
        if (~index2) {
          this.__entries__[index2][1] = value2;
        } else {
          this.__entries__.push([key, value2]);
        }
      };
      class_1.prototype.delete = function (key) {
        var entries = this.__entries__;
        var index2 = getIndex(entries, key);
        if (~index2) {
          entries.splice(index2, 1);
        }
      };
      class_1.prototype.has = function (key) {
        return !!~getIndex(this.__entries__, key);
      };
      class_1.prototype.clear = function () {
        this.__entries__.splice(0);
      };
      class_1.prototype.forEach = function (callback, ctx) {
        if (ctx === void 0) {
          ctx = null;
        }
        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
          var entry = _a[_i];
          callback.call(ctx, entry[1], entry[0]);
        }
      };
      return class_1;
    }()
  );
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function () {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function () {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function (callback) {
    return setTimeout(function () {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = (
  /** @class */
  function () {
    function ResizeObserverController2() {
      this.connected_ = false;
      this.mutationEventsAdded_ = false;
      this.mutationsObserver_ = null;
      this.observers_ = [];
      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
      this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    ResizeObserverController2.prototype.addObserver = function (observer2) {
      if (!~this.observers_.indexOf(observer2)) {
        this.observers_.push(observer2);
      }
      if (!this.connected_) {
        this.connect_();
      }
    };
    ResizeObserverController2.prototype.removeObserver = function (observer2) {
      var observers2 = this.observers_;
      var index2 = observers2.indexOf(observer2);
      if (~index2) {
        observers2.splice(index2, 1);
      }
      if (!observers2.length && this.connected_) {
        this.disconnect_();
      }
    };
    ResizeObserverController2.prototype.refresh = function () {
      var changesDetected = this.updateObservers_();
      if (changesDetected) {
        this.refresh();
      }
    };
    ResizeObserverController2.prototype.updateObservers_ = function () {
      var activeObservers = this.observers_.filter(function (observer2) {
        return observer2.gatherActive(), observer2.hasActive();
      });
      activeObservers.forEach(function (observer2) {
        return observer2.broadcastActive();
      });
      return activeObservers.length > 0;
    };
    ResizeObserverController2.prototype.connect_ = function () {
      if (!isBrowser || this.connected_) {
        return;
      }
      document.addEventListener("transitionend", this.onTransitionEnd_);
      window.addEventListener("resize", this.refresh);
      if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);
        this.mutationsObserver_.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      } else {
        document.addEventListener("DOMSubtreeModified", this.refresh);
        this.mutationEventsAdded_ = true;
      }
      this.connected_ = true;
    };
    ResizeObserverController2.prototype.disconnect_ = function () {
      if (!isBrowser || !this.connected_) {
        return;
      }
      document.removeEventListener("transitionend", this.onTransitionEnd_);
      window.removeEventListener("resize", this.refresh);
      if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
      }
      if (this.mutationEventsAdded_) {
        document.removeEventListener("DOMSubtreeModified", this.refresh);
      }
      this.mutationsObserver_ = null;
      this.mutationEventsAdded_ = false;
      this.connected_ = false;
    };
    ResizeObserverController2.prototype.onTransitionEnd_ = function (_a) {
      var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
      var isReflowProperty = transitionKeys.some(function (key) {
        return !!~propertyName.indexOf(key);
      });
      if (isReflowProperty) {
        this.refresh();
      }
    };
    ResizeObserverController2.getInstance = function () {
      if (!this.instance_) {
        this.instance_ = new ResizeObserverController2();
      }
      return this.instance_;
    };
    ResizeObserverController2.instance_ = null;
    return ResizeObserverController2;
  }()
);
var defineConfigurable = function (target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function (target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value2) {
  return parseFloat(value2) || 0;
}
function getBordersSize(styles) {
  var positions = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }
  return positions.reduce(function (size2, position2) {
    var value2 = styles["border-" + position2 + "-width"];
    return size2 + toFloat(value2);
  }, 0);
}
function getPaddings(styles) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position2 = positions_1[_i];
    var value2 = styles["padding-" + position2];
    paddings[position2] = toFloat(value2);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles.width), height = toFloat(styles.height);
  if (styles.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function () {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function (target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function (target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
  var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x,
    y,
    width,
    height,
    top: y,
    right: x + width,
    bottom: height + y,
    left: x
  });
  return rect;
}
function createRectInit(x, y, width, height) {
  return { x, y, width, height };
}
var ResizeObservation = (
  /** @class */
  function () {
    function ResizeObservation2(target) {
      this.broadcastWidth = 0;
      this.broadcastHeight = 0;
      this.contentRect_ = createRectInit(0, 0, 0, 0);
      this.target = target;
    }
    ResizeObservation2.prototype.isActive = function () {
      var rect = getContentRect(this.target);
      this.contentRect_ = rect;
      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    ResizeObservation2.prototype.broadcastRect = function () {
      var rect = this.contentRect_;
      this.broadcastWidth = rect.width;
      this.broadcastHeight = rect.height;
      return rect;
    };
    return ResizeObservation2;
  }()
);
var ResizeObserverEntry = (
  /** @class */
  /* @__PURE__ */ function () {
    function ResizeObserverEntry2(target, rectInit) {
      var contentRect = createReadOnlyRect(rectInit);
      defineConfigurable(this, { target, contentRect });
    }
    return ResizeObserverEntry2;
  }()
);
var ResizeObserverSPI = (
  /** @class */
  function () {
    function ResizeObserverSPI2(callback, controller, callbackCtx) {
      this.activeObservations_ = [];
      this.observations_ = new MapShim();
      if (typeof callback !== "function") {
        throw new TypeError("The callback provided as parameter 1 is not a function.");
      }
      this.callback_ = callback;
      this.controller_ = controller;
      this.callbackCtx_ = callbackCtx;
    }
    ResizeObserverSPI2.prototype.observe = function (target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (observations.has(target)) {
        return;
      }
      observations.set(target, new ResizeObservation(target));
      this.controller_.addObserver(this);
      this.controller_.refresh();
    };
    ResizeObserverSPI2.prototype.unobserve = function (target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (!observations.has(target)) {
        return;
      }
      observations.delete(target);
      if (!observations.size) {
        this.controller_.removeObserver(this);
      }
    };
    ResizeObserverSPI2.prototype.disconnect = function () {
      this.clearActive();
      this.observations_.clear();
      this.controller_.removeObserver(this);
    };
    ResizeObserverSPI2.prototype.gatherActive = function () {
      var _this = this;
      this.clearActive();
      this.observations_.forEach(function (observation) {
        if (observation.isActive()) {
          _this.activeObservations_.push(observation);
        }
      });
    };
    ResizeObserverSPI2.prototype.broadcastActive = function () {
      if (!this.hasActive()) {
        return;
      }
      var ctx = this.callbackCtx_;
      var entries = this.activeObservations_.map(function (observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
      });
      this.callback_.call(ctx, entries, ctx);
      this.clearActive();
    };
    ResizeObserverSPI2.prototype.clearActive = function () {
      this.activeObservations_.splice(0);
    };
    ResizeObserverSPI2.prototype.hasActive = function () {
      return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI2;
  }()
);
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver$2 = (
  /** @class */
  /* @__PURE__ */ function () {
    function ResizeObserver2(callback) {
      if (!(this instanceof ResizeObserver2)) {
        throw new TypeError("Cannot call a class as a function.");
      }
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      var controller = ResizeObserverController.getInstance();
      var observer2 = new ResizeObserverSPI(callback, controller, this);
      observers.set(this, observer2);
    }
    return ResizeObserver2;
  }()
);
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function (method4) {
  ResizeObserver$2.prototype[method4] = function () {
    var _a;
    return (_a = observers.get(this))[method4].apply(_a, arguments);
  };
});
var index$3 = function () {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver$2;
}();
function useFlutterApp() {
  const [isApp] = reactExports.useState(getQueryVariable("source") === "app");
  return {
    isApp
  };
}
function isExitBannerHiddenProxy(banner_hidden_proxy) {
  banner_hidden_proxy = banner_hidden_proxy || "";
  const link_id = getQueryVariable("link_id");
  const id2 = getQueryVariable("id");
  if (!link_id && !id2) {
    return false;
  }
  const _bannerHiddenProxyList = banner_hidden_proxy.split(",");
  return _bannerHiddenProxyList.includes(link_id) || _bannerHiddenProxyList.includes(id2);
}
function useWebsetConfig() {
  const { websetConfig: config2 } = useUserInfoStore();
  const baseUrl = window.location.origin;
  const websetConfig = reactExports.useMemo(() => {
    if (!config2 || Object.keys(config2).length === 0) {
      return {};
    }
    const isHiddenDownloadApp = !browser$1.versions.mobile || !+config2.banner_switch || isExitBannerHiddenProxy(config2.banner_hidden_proxy);
    return {
      ...config2,
      pool_switch: config2.pool_switch === "1",
      netsignal_switch: config2.netsignal_switch === "1",
      lang_switch: config2.lang_switch === "1",
      player_switch: config2.player_switch === "1",
      isHiddenDownloadApp,
      banner_img: "".concat(config2.banner_img || ""),
      desktop_img: "".concat(config2.desktop_img || ""),
      favicon_img: "".concat(config2.favicon_img || ""),
      logo_img: "".concat(config2.logo_img || "")
    };
  }, [config2]);
  reactExports.useEffect(() => {
    if (!config2 || Object.keys(config2).length === 0) {
      return;
    }
    if (config2.favicon_img) {
      addIcoToHead("".concat(baseUrl).concat(config2.favicon_img));
    } else {
      addIcoToHead("/xxxx/h5/favicon.ico");
    }
    addManifestToHead();
  }, [config2]);
  return {
    websetConfig
  };
}
function useTimeFilter() {
  const [ty] = reactExports.useState(0);
  const [start_time, setStartTime] = reactExports.useState("");
  const [end_time, setEndTime] = reactExports.useState("");
  const changeTime = reactExports.useCallback((start, end) => {
    setStartTime(start);
    setEndTime(end);
  }, []);
  return {
    ty,
    start_time,
    end_time,
    changeTime
  };
}
function useNavigateToActivity() {
  const [list, setList] = reactExports.useState([]);
  const { token: token2, isSetWithdrawPassword } = useUserInfoStore((state2) => state2);
  const { id: id2 } = useParams();
  const navigate = useNavigate();
  const { isApp } = useFlutterApp();
  const flagMapRouting = {
    invite: "/activity/recommend-friends",
    turntable: "/activity/lucky-wheel"
  };
  const curId = reactExports.useMemo(() => {
    if (!id2 && list.length === 0) {
      return "";
    }
    if (id2) {
      return id2;
    }
    const pathname = window.location.pathname;
    const flag = Object.keys(flagMapRouting).find(
      (key) => pathname.indexOf(flagMapRouting[key]) > -1
    );
    if (!flag) {
      return "";
    }
    const item2 = list.find((item22) => item22.flag === flag);
    return item2 ? item2.id : "";
  }, [id2, list]);
  async function setServerPromoListToLocalList() {
    const [res, error2] = await getPromoList();
    if (error2) {
      return;
    }
    if (res && res.length > 0) {
      setList(res);
    }
  }
  const onClickToLink = (link) => {
    console.log("--------", link);
    if (link === "web_login" || link === "登录") {
      if (token2) {
        return;
      }
      useUserInfoStore.setState({ openForLogin: true });
      return;
    }
    if (link === "web_reg" || link === "注册") {
      if (token2) {
        return;
      }
      useUserInfoStore.setState({ openForRegister: true });
      return;
    }
    if (link === "web_agent" || link === "推广") {
      navigate("/agent");
      return;
    }
    if (link === "web_deposit" || link === "充值") {
      navigate("/deposit");
      return;
    }
    if (link === "web_withdraw" || link === "提现") {
      if (isSetWithdrawPassword) {
        navigate("/withdraw");
      } else {
        navigate("/set-withdraw-psw?to=withdraw");
      }
      return;
    }
    if (link === "web_service" || link === "客服") {
      navigate("/message?service=1");
      return;
    }
    if (link === "web_vip" || link === "VIP") {
      navigate("/vip");
      return;
    }
    if (link === "web_mine" || link === "个人中心") {
      navigate("/mine");
      return;
    }
    navigate(link);
  };
  const handleClick = (item2) => {
    var _a, _b, _c, _d, _e;
    if (((_a = item2.static) == null ? void 0 : _a.display_mode) === 2) {
      if (((_b = item2.static) == null ? void 0 : _b.link_url.indexOf("http")) > -1) {
        window.open((_c = item2.static) == null ? void 0 : _c.link_url);
        return;
      }
      if (isApp) {
        sendMessage("onChatSystemMessage", (_d = item2.static) == null ? void 0 : _d.link_url);
      } else {
        const curObj = list.find((ttt) => {
          var _a2;
          return ttt.id === ((_a2 = item2.static) == null ? void 0 : _a2.link_url);
        });
        if (curObj) {
          item2 = { ...curObj };
          return goToPage(item2);
        } else {
          return onClickToLink((_e = item2.static) == null ? void 0 : _e.link_url);
        }
      }
      return;
    }
    goToPage(item2);
  };
  const goToPage = (item2) => {
    let url2 = "";
    if (flagMapRouting[item2.flag]) {
      url2 = flagMapRouting[item2.flag];
    } else if (item2.flag === "rescue_deposit") {
      url2 = "/activity/rescue-deposit/".concat(item2.id, "/").concat(item2.flag);
    } else if (item2.flag === "single_topup") {
      url2 = "/activity/top-up-winnings/".concat(item2.id, "/").concat(item2.flag);
    } else {
      url2 = "/activity-detail/".concat(item2.id, "/").concat(item2.flag);
    }
    if (isApp && location.search) {
      url2 += location.search;
    }
    navigate(url2);
  };
  const next2 = reactExports.useCallback(() => {
    const index2 = list.findIndex((item2) => item2.id === curId);
    if (index2 === -1) {
      return;
    }
    const nextIndex = index2 + 1;
    if (nextIndex >= list.length) {
      return;
    }
    handleClick(list[nextIndex]);
  }, [curId, list]);
  const prev2 = reactExports.useCallback(() => {
    const index2 = list.findIndex((item2) => item2.id === curId);
    if (index2 === -1) {
      return;
    }
    const prevIndex = index2 - 1;
    if (prevIndex < 0) {
      return;
    }
    handleClick(list[prevIndex]);
  }, [curId, list]);
  reactExports.useEffect(() => {
    if (list.length === 0) {
      setServerPromoListToLocalList();
    }
  }, []);
  return {
    list,
    id: id2,
    curId,
    next: next2,
    prev: prev2,
    handleClick
  };
}
const cacheState$6 = {
  uid: "",
  prefix: ""
};
let cacheTimer = null;
const Container = ({ routesMaps: routesMaps2 }) => {
  const location2 = useLocation();
  const navigate = useNavigate();
  const { isApp } = useFlutterApp();
  const {
    prefix: prefix2,
    token: token2,
    info: info2,
    getUserInfoByStore,
    getDownloadAppByStore,
    getUserBalanceByStore,
    getWithdrawPsdStatus,
    setServiriesChat,
    getWheelInfo
  } = useUserInfoStore((state2) => state2);
  const { getGamesByStore, activityStatus, setActivityStatus, getAllPlatform } = useGameStore((state2) => state2);
  const { getMessageNumBySotre } = useMessageStore((state2) => state2);
  const getCustomerService = async () => {
    const [data, error2] = await getMemberCustomerList({ flag: 1 });
    if (!error2 && Array.isArray(data) && data.length > 0) {
      const items2 = data[0].items || [];
      if (Array.isArray(items2) && items2.length > 0) {
        const item2 = items2[0] || {};
        const url2 = item2.link || "";
        Cache$1.set("services_url", url2);
      }
    }
  };
  reactExports.useEffect(() => {
    setActivityStatus();
    if (token2) {
      getUserInfoByStore();
      getMessageNumBySotre();
      getWithdrawPsdStatus();
      getLinkList().then(([res, err]) => {
        if (res && Array.isArray(res) && res.length > 0) {
          const url2 = "".concat(window.location.origin, "/?id=").concat(res[0].code, "&currency=").concat(getMoneyUnit(), "&type=2");
          useUserInfoStore.setState({ agentUrl: url2, agentId: res[0].code });
        }
      });
      (activityStatus == null ? void 0 : activityStatus.turntable) === 2 && getWheelInfo();
      const googleDom = document.getElementById("g_id_signIn");
      if (googleDom)
        googleDom.innerHTML = "";
    } else {
      (activityStatus == null ? void 0 : activityStatus.turntable) === 2 && useUserInfoStore.setState({ wheelInfo: {} });
      useUserInfoStore.setState({ agentUrl: window.location.origin, agentId: "" });
    }
  }, [token2]);
  reactExports.useLayoutEffect(() => {
    getGamesByStore();
    getAllPlatform();
    getDownloadAppByStore();
    window.addEventListener("resize", () => {
      const isH52 = getWebType();
      const cacheIsH5 = Cache$1.get("isH5");
      if (isH52 !== cacheIsH5) {
        Cache$1.set("isH5", isH52);
      }
    });
    getCustomerService();
  }, []);
  reactExports.useLayoutEffect(() => {
    const meta = routesMaps2[location2.pathname] || {};
    if (meta.auth && !token2 && !getQueryVariable("t")) {
      navigate("/");
      useUserInfoStore.setState({
        openForLogin: true
      });
    }
  }, [location2, token2]);
  reactExports.useEffect(() => {
    if (prefix2) {
      if (info2) {
        const { uid: uid2 } = info2;
        if (prefix2 !== cacheState$6.prefix || uid2 !== cacheState$6.uid) {
          cacheState$6.prefix = prefix2;
          cacheState$6.uid = uid2;
          mqttConnect(prefix2, uid2);
        }
      } else {
        mqttConnect(prefix2, "");
      }
    }
  }, [prefix2, info2]);
  reactExports.useEffect(() => {
    if (token2) {
      if (location2.pathname === "/" || location2.pathname === "/mine") {
        getUserBalanceByStore();
      }
    }
  }, [location2, token2]);
  reactExports.useEffect(() => {
    cacheTimer = setInterval(() => {
      if (!token2)
        return;
      memberPointStatisticsDeposit({}, { noMsg: true }).then((res) => {
        const [data] = res;
        const list = data || [];
        if (Array.isArray(list) && list.length > 0) {
          list.forEach((item2) => {
            postPixiChargeEvent(item2);
          });
        }
      });
    }, 10 * 1e3);
    return () => {
      clearInterval(cacheTimer);
    };
  }, [token2]);
  reactExports.useEffect(() => {
    if (!isApp && !Cache$1.get("token")) {
      useUserInfoStore.setState({
        openForRegister: true
      });
    }
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
};
const svg_theme_fill_color$1C = "_svg_theme_fill_color_mdcvr_3";
const modalBox = "_modalBox_mdcvr_55";
const inBox$2 = "_inBox_mdcvr_68";
const css$1y = {
  svg_theme_fill_color: svg_theme_fill_color$1C,
  modalBox,
  inBox: inBox$2
};
const cacheState$5 = {
  zIndex: 100
};
const aniList = [
  0, 0.001, 0.002, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1
];

const Modal = ({
  isOpen,
  isShow = true,
  onClose = () => { },
  background,
  closeByClickOut = true,
  children,
  zIndex,
  showType
}) => {
  const myCache = reactExports.useRef({
    isAlreadyOpen: false,
    closeTimer: null
  });
  const modalState = useReactive({
    contOpen: false,
    count: 0
  });

  cacheState$5.zIndex += 1;

  reactExports.useEffect(() => {
    if (isOpen) {
      modalState.contOpen = true;
      myCache.current.isAlreadyOpen = true;
    } else {
      if (!myCache.current.isAlreadyOpen) return;

      let startTime;
      const duration = 300; // Duração da animação em milissegundos

      const animateClose = (timestamp) => {
        if (!startTime) startTime = timestamp;

        const progress = timestamp - startTime;
        const percentage = Math.min(progress / duration, 1); // Limitar a 100%

        modalState.count = 1 - percentage;
        if (percentage < 1) {
          requestAnimationFrame(animateClose);
        } else {
          modalState.contOpen = false;
          modalState.count = 0;
        }
      };

      requestAnimationFrame(animateClose);
    }
  }, [isOpen]);

  if (!modalState.contOpen) return null;

  showType = showType || "";
  const { count } = modalState;

  return reactDomExports.createPortal(
    jsxRuntimeExports.jsx(Motion, {
      defaultStyle: { x: 0 },
      style: { x: spring(1, { stiffness: 280, damping: 30 }) },
      children: ({ x }) => {
        x = count || x;
        let styles = {
          WebkitTransform: `scale(${x})`,
          transform: `scale(${x})`,
          opacity: count ? x - 0.3 : 1
        };

        if (showType === "bottom") {
          styles = {
            WebkitTransform: `translateY(${(1 - x) * 100}%)`,
            transform: `translateY(${(1 - x) * 100}%)`
          };
        }

        if (showType === "top") {
          styles = {
            WebkitTransform: `translateY(-${(1 - x) * 100}%)`,
            transform: `translateY(-${(1 - x) * 100}%)`
          };
        }

        return jsxRuntimeExports.jsx("div", {
          style: {
            backgroundColor: `rgba(0, 0, 0, ${0.4 * x})`,
            zIndex: zIndex || cacheState$5.zIndex,
            display: isShow ? "block" : "none"
          },
          className: joinClass(css$1y.modalBox, css$1y.show),
          onClick: (e2) => {
            e2.stopPropagation();
            e2.preventDefault();
            if (closeByClickOut) {
              onClose();
            }
          },
          children: jsxRuntimeExports.jsx("div", {
            className: css$1y.inBox,
            style: styles,
            children
          })
        });
      }
    }),
    document.body
  );
};

const svg_theme_fill_color$1B = "_svg_theme_fill_color_30sr8_3";
const active$h = "_active_30sr8_55";
const freshBox = "_freshBox_30sr8_60";
const css$1x = {
  svg_theme_fill_color: svg_theme_fill_color$1B,
  active: active$h,
  freshBox
};
const cacheState$4 = {
  timer: null
};
const Fresh = ({ src = "", className = "", onClick = async () => {
} }) => {
  const state2 = useReactive({
    start: false
  });
  const { start } = state2;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      onClick: async () => {
        if (!state2.start) {
          clearTimeout(cacheState$4.timer);
          state2.start = true;
          await onClick();
          cacheState$4.timer = setTimeout(() => {
            state2.start = false;
          }, 1 * 1e3);
        }
      },
      className: joinClass(css$1x.freshBox, className, start ? css$1x.active : ""),
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
        xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "-3 -3 30 30", fill: "none", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.6602 9.93942L8.83734 6.85343C6.36057 8.54995 4.74023 11.3676 4.74023 14.5566C4.74023 17.1597 5.81987 19.5153 7.56365 21.2158C4.01303 19.8443 1.5 16.4489 1.5 12.4774C1.5 8.67748 3.80053 5.40493 7.10928 3.92798L5.67507 1.5L14.773 2.11155L10.6602 9.93942Z", fill: "#EAB700" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M13.3398 14.0606L15.1627 17.1466C17.6394 15.4501 19.2598 12.6324 19.2598 9.44342C19.2598 6.84032 18.1801 4.48468 16.4363 2.78425C19.987 4.15568 22.5 7.55115 22.5 11.5226C22.5 15.3225 20.1995 18.5951 16.8907 20.072L18.3249 22.5L9.227 21.8884L13.3398 14.0606Z", fill: "#EAB700" })
        ]
      })
    }
  );
};
const svg_theme_fill_color$1A = "_svg_theme_fill_color_rx4e3_3";
const pcBox = "_pcBox_rx4e3_55";
const btn$4 = "_btn_rx4e3_61";
const h5Box = "_h5Box_rx4e3_82";
const css$1w = {
  svg_theme_fill_color: svg_theme_fill_color$1A,
  pcBox,
  btn: btn$4,
  h5Box
};
const NotFind = () => {
  const navigate = useNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: isH5$1 ? css$1w.h5Box : css$1w.pcBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/icons/404_icon.webp" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      onClick: () => {
        navigate("/");
      }, className: css$1w.btn, children: trans("Return to home page")
    })
    ]
  });
};
function getTargetElement(target, defaultElement) {
  if (!target) {
    return defaultElement;
  }
  let targetElement;
  if (typeof target === "function") {
    targetElement = target();
  } else if ("current" in target) {
    targetElement = target.current;
  } else {
    targetElement = target;
  }
  return targetElement;
}
function noop$2() {
}
const extend = Object.assign;
const inBrowser = typeof window !== "undefined";
function isDef(val) {
  return val !== void 0 && val !== null;
}
function isFunction(val) {
  return typeof val === "function";
}
function isPromise(val) {
  return isObject$1(val) && isFunction(val.then) && isFunction(val.catch);
}
function isObject$1(val) {
  return val !== null && typeof val === "object";
}
function gen(name2, mods) {
  if (!mods) {
    return "";
  }
  if (typeof mods === "string") {
    return " ".concat(name2, "--").concat(mods);
  }
  if (Array.isArray(mods)) {
    return mods.reduce((ret, item2) => ret + gen(name2, item2), "");
  }
  return Object.keys(mods).reduce((ret, key) => ret + (mods[key] ? gen(name2, key) : ""), "");
}
function createBEM(name2) {
  return (el, mods) => {
    if (el && typeof el !== "string") {
      mods = el;
      el = "";
    }
    el = el ? "".concat(name2, "__").concat(el) : name2;
    return "".concat(el).concat(gen(el, mods));
  };
}
function createNamespace(name2, prefix2) {
  name2 = "".concat("rv", "-").concat(name2);
  return [createBEM(name2), name2];
}
function stopPropagation(event) {
  event.stopPropagation();
}
function preventDefault(event, isStopPropagation) {
  if (typeof event.cancelable !== "boolean" || event.cancelable) {
    event.preventDefault();
  }
  if (isStopPropagation) {
    stopPropagation(event);
  }
}
const eventToPropRecord = {
  "click": "onClick"
};
function withStopPropagation(events2, element) {
  const props = Object.assign({}, element.props);
  for (const key of events2) {
    const prop = eventToPropRecord[key];
    props[prop] = function (e2) {
      var _a, _b;
      e2.stopPropagation();
      (_b = (_a = element.props)[prop]) === null || _b === void 0 ? void 0 : _b.call(_a, e2);
    };
  }
  return React.cloneElement(element, props);
}
const root = inBrowser ? window : global;
function isNumeric(val) {
  return /^\d+(\.\d+)?$/.test(val);
}
function isNaN$1(val) {
  if (Number.isNaN) {
    return Number.isNaN(val);
  }
  return val !== val;
}
function addUnit(value2) {
  if (!isDef(value2)) {
    return void 0;
  }
  value2 = String(value2);
  return isNumeric(value2) ? "".concat(value2, "px") : value2;
}
function getSizeStyle(originSize) {
  if (isDef(originSize)) {
    const size2 = addUnit(originSize);
    return {
      width: size2,
      height: size2
    };
  }
  return {};
}
let rootFontSize;
function getRootFontSize() {
  if (!rootFontSize) {
    const doc = document.documentElement;
    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;
    rootFontSize = parseFloat(fontSize);
  }
  return rootFontSize;
}
function convertRem(value2) {
  value2 = value2.replace(/rem/g, "");
  return +value2 * getRootFontSize();
}
function convertVw(value2) {
  value2 = value2.replace(/vw/g, "");
  return +value2 * window.innerWidth / 100;
}
function convertVh(value2) {
  value2 = value2.replace(/vh/g, "");
  return +value2 * window.innerHeight / 100;
}
function unitToPx(value2) {
  if (typeof value2 === "number") {
    return value2;
  }
  if (inBrowser) {
    if (value2.indexOf("rem") !== -1) {
      return convertRem(value2);
    }
    if (value2.indexOf("vw") !== -1) {
      return convertVw(value2);
    }
    if (value2.indexOf("vh") !== -1) {
      return convertVh(value2);
    }
  }
  return parseFloat(value2);
}
function range$1(num2, min, max) {
  return Math.min(Math.max(num2, min), max);
}
function padZero(num2, targetLength = 2) {
  let str2 = "".concat(num2);
  while (str2.length < targetLength) {
    str2 = "0".concat(str2);
  }
  return str2;
}
let supportsPassive = false;
if (inBrowser) {
  try {
    const opts = {};
    Object.defineProperty(opts, "passive", {
      get() {
        supportsPassive = true;
      }
    });
    window.addEventListener("test-passive", null, opts);
  } catch (e2) {
  }
}
function useEventListener(type4, listener, options2 = {}) {
  if (!inBrowser) {
    return;
  }
  const {
    target = window,
    passive = false,
    capture = false,
    depends = []
  } = options2;
  let attached;
  const add = () => {
    const element = getTargetElement(target);
    if (element && !attached) {
      element.addEventListener(type4, listener, supportsPassive ? {
        capture,
        passive
      } : capture);
      attached = true;
    }
  };
  const remove = () => {
    const element = getTargetElement(target);
    if (element && attached) {
      element.removeEventListener(type4, listener, capture);
      attached = false;
    }
  };
  reactExports.useEffect(() => {
    add();
    return () => remove();
  }, [target, ...depends]);
}
function useRefState(initialState) {
  const [state2, setState] = reactExports.useState(initialState);
  const ref = reactExports.useRef(state2);
  const setRafState = reactExports.useCallback((patch) => {
    setState((prevState) => {
      return ref.current = isFunction(patch) ? patch(prevState) : patch;
    });
  }, [state2]);
  return [state2, setRafState, ref];
}
const useUnmountedRef = () => {
  const unmountedRef = reactExports.useRef(false);
  reactExports.useEffect(() => {
    unmountedRef.current = false;
    return () => {
      unmountedRef.current = true;
    };
  }, []);
  return unmountedRef;
};
const useSetState = (initialState = {}) => {
  const unmountedRef = useUnmountedRef();
  const [state2, setState, ref] = useRefState(initialState);
  const setMergeState = reactExports.useCallback((patch) => {
    if (unmountedRef.current)
      return;
    setState((prevState) => Object.assign(Object.assign({}, prevState), isFunction(patch) ? patch(prevState) : patch));
  }, []);
  return [state2, setMergeState, ref];
};
const useUpdateEffect = (effect, deps) => {
  const isMounted = reactExports.useRef(false);
  reactExports.useEffect(() => {
    if (!isMounted.current) {
      isMounted.current = true;
    } else {
      return effect();
    }
    return void 0;
  }, deps);
};
function useLatest(value2) {
  const ref = reactExports.useRef(value2);
  ref.current = value2;
  return ref;
}
const useUnmount = (fn) => {
  const fnRef = useLatest(fn);
  reactExports.useEffect(() => () => {
    fnRef.current();
  }, []);
};
const MIN_DISTANCE = 10;
function getDirection(x, y) {
  if (x > y && x > MIN_DISTANCE) {
    return "horizontal";
  }
  if (y > x && y > MIN_DISTANCE) {
    return "vertical";
  }
  return "";
}
function useTouch() {
  const startX = reactExports.useRef(0);
  const startY = reactExports.useRef(0);
  const deltaX = reactExports.useRef(0);
  const deltaY = reactExports.useRef(0);
  const offsetX = reactExports.useRef(0);
  const offsetY = reactExports.useRef(0);
  const direction = reactExports.useRef("");
  const firstMove = reactExports.useRef(null);
  const isVertical = () => direction.current === "vertical";
  const isHorizontal = () => direction.current === "horizontal";
  const reset = () => {
    deltaX.current = 0;
    deltaY.current = 0;
    offsetX.current = 0;
    offsetY.current = 0;
    direction.current = "";
    firstMove.current = null;
  };
  const start = (event) => {
    reset();
    startX.current = event.touches[0].clientX;
    startY.current = event.touches[0].clientY;
  };
  const move2 = (event) => {
    const touch = event.touches[0];
    deltaX.current = touch.clientX < 0 ? 0 : touch.clientX - startX.current;
    deltaY.current = touch.clientY - startY.current;
    offsetX.current = Math.abs(deltaX.current);
    offsetY.current = Math.abs(deltaY.current);
    if (firstMove.current === null) {
      firstMove.current = true;
    } else {
      firstMove.current = false;
    }
    if (!direction.current) {
      direction.current = getDirection(offsetX.current, offsetY.current);
    }
  };
  return {
    move: move2,
    start,
    reset,
    startX,
    startY,
    deltaX,
    deltaY,
    offsetX,
    offsetY,
    direction,
    isVertical,
    isHorizontal,
    firstMove
  };
}
const overflowScrollReg = /scroll|auto/i;
const defaultRoot = inBrowser ? window : void 0;
function isElement(node2) {
  const ELEMENT_NODE_TYPE = 1;
  return node2.tagName !== "HTML" && node2.tagName !== "BODY" && node2.nodeType === ELEMENT_NODE_TYPE;
}
function getScrollParent(el, root2 = defaultRoot) {
  if (root2 === void 0) {
    root2 = window;
  }
  let node2 = el;
  while (node2 && node2 !== root2 && isElement(node2)) {
    const {
      overflowY
    } = window.getComputedStyle(node2);
    if (overflowScrollReg.test(overflowY)) {
      if (node2.tagName !== "BODY") {
        return node2;
      }
      const htmlOverflowY = window.getComputedStyle(node2.parentNode).overflowY;
      if (overflowScrollReg.test(htmlOverflowY)) {
        return node2;
      }
    }
    node2 = node2.parentNode;
  }
  return root2;
}
const useIsomorphicLayoutEffect$1 = inBrowser ? React.useLayoutEffect : React.useEffect;
const useUpdate = () => {
  const [, setState] = reactExports.useState({});
  return reactExports.useCallback(() => setState({}), []);
};
function useMemoizedFn(fn) {
  const fnRef = reactExports.useRef(fn);
  fnRef.current = reactExports.useMemo(() => fn, [fn]);
  const memoizedFn = reactExports.useRef();
  if (!memoizedFn.current) {
    memoizedFn.current = function (...args) {
      return fnRef.current.apply(this, args);
    };
  }
  return memoizedFn.current;
}
function usePropsValue(options2) {
  const {
    value: value2,
    defaultValue,
    onChange
  } = options2;
  const update = useUpdate();
  const stateRef = reactExports.useRef(value2 !== void 0 ? value2 : defaultValue);
  if (value2 !== void 0) {
    stateRef.current = value2;
  }
  const setState = useMemoizedFn((v2, forceTrigger) => {
    const nextValue = typeof v2 === "function" ? v2(stateRef.current) : v2;
    if (!forceTrigger && nextValue === stateRef.current)
      return;
    stateRef.current = nextValue;
    update();
    onChange === null || onChange === void 0 ? void 0 : onChange(nextValue);
  });
  return [stateRef.current, setState];
}
function __rest$8(s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
typeof SuppressedError === "function" ? SuppressedError : function (error2, suppressed, message2) {
  var e2 = new Error(message2);
  return e2.name = "SuppressedError", e2.error = error2, e2.suppressed = suppressed, e2;
};
function r(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2))
      for (t2 = 0; t2 < e2.length; t2++)
        e2[t2] && (f2 = r(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    else
      for (t2 in e2)
        e2[t2] && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function clsx() {
  for (var e2, t2, f2 = 0, n2 = ""; f2 < arguments.length;)
    (e2 = arguments[f2++]) && (t2 = r(e2)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
const SpinIcon = ({
  bem: bem2
}) => jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
  children: Array(12).fill(null).map((_, index2) => jsxRuntimeExports.jsx("i", {
    className: clsx(bem2("line", String(index2 + 1)))
  }, index2))
});
const CircularIcon = ({
  bem: bem2
}) => jsxRuntimeExports.jsx("svg", Object.assign({
  className: clsx(bem2("circular")),
  viewBox: "25 25 50 50"
}, {
  children: jsxRuntimeExports.jsx("circle", {
    cx: "50",
    cy: "50",
    r: "20",
    fill: "none"
  })
}));
const BallIcon = ({
  bem: bem2
}) => jsxRuntimeExports.jsxs("div", Object.assign({
  className: clsx(bem2("ball"))
}, {
  children: [jsxRuntimeExports.jsx("div", {}), jsxRuntimeExports.jsx("div", {}), jsxRuntimeExports.jsx("div", {})]
}));
const Icon$2 = (bem2) => ({
  spinner: jsxRuntimeExports.jsx(SpinIcon, {
    bem: bem2
  }),
  circular: jsxRuntimeExports.jsx(CircularIcon, {
    bem: bem2
  }),
  ball: jsxRuntimeExports.jsx(BallIcon, {
    bem: bem2
  })
});
const [bem$5] = createNamespace("loading");
const Loading = (props) => {
  const {
    className,
    type: type4 = "circular",
    vertical: vertical2,
    color,
    size: size2,
    textColor,
    children,
    textSize
  } = props;
  const spinnerStyle = reactExports.useMemo(() => Object.assign({
    color
  }, getSizeStyle(size2)), [color, size2]);
  const renderText = () => {
    if (children) {
      return jsxRuntimeExports.jsx("span", Object.assign({
        className: clsx(bem$5("text")),
        style: {
          fontSize: addUnit(textSize),
          color: textColor !== null && textColor !== void 0 ? textColor : color
        }
      }, {
        children
      }));
    }
    return null;
  };
  return jsxRuntimeExports.jsxs("div", Object.assign({
    className: clsx(className, bem$5([type4, {
      vertical: vertical2
    }])),
    style: props.style
  }, {
    children: [jsxRuntimeExports.jsx("span", Object.assign({
      className: clsx(bem$5("spinner", type4)),
      style: spinnerStyle
    }, {
      children: Icon$2(bem$5)[type4]
    })), renderText()]
  }));
};
const BORDER = "rv-hairline";
const BORDER_UNSET_TOP_BOTTOM = "".concat(BORDER, "-unset--top-bottom");
function mergeProps(...items2) {
  const result = Object.assign({}, items2[0]);
  items2.forEach((item2) => {
    for (const key in item2) {
      const val = item2[key];
      result[key] = result.hasOwnProperty(key) ? result[key] : val;
    }
  });
  return result;
}
var __rest$7 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
function kebabCase(str2) {
  return str2.substring(3).replace(/([A-Z])/g, "-$1").toLowerCase().replace(/^-/, "");
}
const IconBase$1 = React.forwardRef((props, ref) => {
  const { name: name2 = "", className, style: style2, spin, rotate, tabIndex, onClick, children } = props, restProps = __rest$7(props, ["name", "className", "style", "spin", "rotate", "tabIndex", "onClick", "children"]);
  const svgStyle = {};
  if (rotate) {
    svgStyle.msTransform = "rotate(".concat(rotate, "deg)");
    svgStyle.transform = "rotate(".concat(rotate, "deg)");
  }
  const kebabCaseName = name2 ? kebabCase(name2) : void 0;
  let iconTabIndex = tabIndex;
  if (iconTabIndex === void 0 && onClick) {
    iconTabIndex = -1;
  }
  const attrs = Object.assign({
    role: "img", "aria-label": kebabCaseName, focusable: "false", "data-icon": kebabCaseName, "aria-hidden": "true", preserveAspectRatio: "xMidYMid meet", ref, tabIndex: iconTabIndex, onClick, className: [
      "rv-icon",
      kebabCaseName ? "rv-icon-".concat(kebabCaseName) : "",
      spin ? "rv-icon--spin" : "",
      className
    ].join(" ").trim(), style: Object.assign(Object.assign({}, style2), svgStyle)
  }, restProps);
  return React.cloneElement(children, attrs);
});
const SvgIcon = (props) => reactExports.createElement(
  "svg",
  Object.assign({ width: "1em", height: "1em", viewBox: "0 0 1024 1024", xmlns: "http://www.w3.org/2000/svg", fill: "currentColor" }, props),
  reactExports.createElement("path", { d: "M560.149 501.223l255.344 255.344c16.272 16.272 16.272 42.654 0 58.926s-42.654 16.272-58.926 0L501.223 560.149 245.88 815.493c-16.272 16.272-42.654 16.272-58.925 0-16.272-16.272-16.272-42.654 0-58.926l255.344-255.344L186.954 245.88c-16.272-16.272-16.272-42.654 0-58.925 16.271-16.272 42.653-16.272 58.925 0l255.344 255.344 255.344-255.344c16.272-16.272 42.654-16.272 58.926 0 16.272 16.271 16.272 42.653 0 58.925L560.149 501.223z", fillRule: "nonzero" })
);
const SvgCross = reactExports.forwardRef((props, ref) => {
  return reactExports.createElement(
    IconBase$1,
    Object.assign({ name: "SvgCross" }, props, { ref }),
    reactExports.createElement(SvgIcon, null)
  );
});
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  for (var key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _setPrototypeOf$1(o, p2) {
  _setPrototypeOf$1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$1(o, p2);
}
function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$1(subClass, superClass);
}
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass$1(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}
const config = {
  disabled: false
};
const TransitionGroupContext = React.createContext(null);
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = /* @__PURE__ */ function (_React$Component) {
  _inheritsLoose$1(Transition2, _React$Component);
  function Transition2(props, context2) {
    var _this;
    _this = _React$Component.call(this, props, context2) || this;
    var parentGroup = context2;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter2, appear;
    exit = enter2 = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter2 = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter2;
    }
    return {
      exit,
      enter: enter2,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter2 = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter2 || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : ReactDOM.findDOMNode(this);
    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active2 = true;
    this.nextCallback = function (event) {
      if (active2) {
        active2 = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function () {
      active2 = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node2 = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node2 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node2, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render3() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children = _this$props.children;
    _this$props.in;
    _this$props.mountOnEnter;
    _this$props.unmountOnExit;
    _this$props.appear;
    _this$props.enter;
    _this$props.exit;
    _this$props.timeout;
    _this$props.addEndListener;
    _this$props.onEnter;
    _this$props.onEntering;
    _this$props.onEntered;
    _this$props.onExit;
    _this$props.onExiting;
    _this$props.onExited;
    _this$props.nodeRef;
    var childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
      value: null
    }, typeof children === "function" ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))
    );
  };
  return Transition2;
}(React.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes = {};
function noop$1() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop$1,
  onEntering: noop$1,
  onEntered: noop$1,
  onExit: noop$1,
  onExiting: noop$1,
  onExited: noop$1
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var _addClass = function addClass$1(node2, classes) {
  return node2 && classes && classes.split(" ").forEach(function (c2) {
    return addClass(node2, c2);
  });
};
var removeClass = function removeClass2(node2, classes) {
  return node2 && classes && classes.split(" ").forEach(function (c2) {
    return removeClass$1(node2, c2);
  });
};
var CSSTransition = /* @__PURE__ */ function (_React$Component) {
  _inheritsLoose$1(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type4 = appearing ? "appear" : "enter";
      _this.addClass(node2, type4, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type4 = appearing ? "appear" : "enter";
      _this.removeClasses(node2, type4);
      _this.addClass(node2, type4, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument4[0];
      _this.removeClasses(node2, "appear");
      _this.removeClasses(node2, "enter");
      _this.addClass(node2, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument5[0];
      _this.addClass(node2, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument6[0];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function (type4) {
      var classNames2 = _this.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix2 = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix2 + type4 : classNames2[type4];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type4 + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type4 + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass2(node2, type4, phase) {
    var className = this.getClassNames(type4)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type4 === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      node2 && node2.scrollTop;
    }
    if (className) {
      this.appliedClasses[type4][phase] = className;
      _addClass(node2, className);
    }
  };
  _proto.removeClasses = function removeClasses(node2, type4) {
    var _this$appliedClasses$ = this.appliedClasses[type4], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type4] = {};
    if (baseClassName) {
      removeClass(node2, baseClassName);
    }
    if (activeClassName) {
      removeClass(node2, activeClassName);
    }
    if (doneClassName) {
      removeClass(node2, doneClassName);
    }
  };
  _proto.render = function render3() {
    var _this$props = this.props;
    _this$props.classNames;
    var props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return /* @__PURE__ */ React.createElement(Transition, _extends$1({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(React.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = {};
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
const [bem$4] = createNamespace("overlay");
const Overlay = (p2) => {
  const nodeRef = reactExports.useRef(null);
  const props = mergeProps(p2, {
    stopPropagation: ["click"],
    lockScroll: true,
    duration: 300
  });
  const {
    visible,
    duration
  } = props;
  const preventTouchMove = (event) => {
    if (!props.lockScroll)
      return;
    preventDefault(event, true);
  };
  const renderOverlay = () => {
    const style2 = Object.assign(Object.assign({
      zIndex: props.zIndex !== void 0 ? +props.zIndex : void 0,
      touchAction: props.lockScroll && "none"
    }, props.style), props.customStyle);
    if (isDef(duration)) {
      style2.animationDuration = "".concat(duration, "ms");
    }
    return withStopPropagation(props.stopPropagation, jsxRuntimeExports.jsx("div", Object.assign({
      ref: nodeRef,
      style: style2,
      onClick: (e2) => {
        var _a;
        if (e2.target === e2.currentTarget) {
          (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e2);
        }
      },
      className: clsx(bem$4(), props.className)
    }, {
      children: props.children
    })));
  };
  useEventListener("touchmove", preventTouchMove, {
    target: nodeRef
  });
  return jsxRuntimeExports.jsx(CSSTransition, Object.assign({
    nodeRef,
    mountOnEnter: true,
    unmountOnExit: true,
    in: visible,
    timeout: duration,
    classNames: "rv-fade"
  }, {
    children: renderOverlay()
  }));
};
function callInterceptor(options2) {
  const {
    interceptor,
    args,
    done,
    canceled
  } = options2;
  if (interceptor) {
    const returnVal = interceptor.apply(null, args || []);
    if (isPromise(returnVal)) {
      returnVal.then((value2) => {
        if (value2) {
          done();
        } else if (canceled) {
          canceled();
        }
      }).catch(noop$2);
    } else if (returnVal) {
      done();
    } else if (canceled) {
      canceled();
    }
  } else {
    done();
  }
}
function resolveContainer(getContainer2) {
  const container2 = typeof getContainer2 === "function" ? getContainer2() : getContainer2;
  return container2 || document.body;
}
function canUseDom$1() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
function renderToContainer(getContainer2, node2) {
  if (canUseDom$1() && getContainer2) {
    const container2 = resolveContainer(getContainer2);
    return reactDomExports.createPortal(node2, container2);
  }
  return node2;
}
const PopupContext = reactExports.createContext({});
let totalLockCount = 0;
const BODY_LOCK_CLASS = "rv-overflow-hidden";
function useLockScroll(rootRef, shouldLock) {
  const touch = useTouch();
  const onTouchMove = (event) => {
    touch.move(event);
    const direction = touch.deltaY.current > 0 ? "10" : "01";
    const el = getScrollParent(event.target, rootRef.current);
    if (!el)
      return;
    const {
      scrollHeight,
      offsetHeight,
      scrollTop
    } = el;
    let status = "11";
    if (scrollTop === 0) {
      status = offsetHeight >= scrollHeight ? "00" : "01";
    } else if (scrollTop + offsetHeight >= scrollHeight) {
      status = "10";
    }
    if (status !== "11" && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {
      if (event.cancelable) {
        event.preventDefault();
      }
    }
  };
  const lock = () => {
    document.addEventListener("touchstart", touch.start);
    document.addEventListener("touchmove", onTouchMove, false);
    if (!totalLockCount) {
      document.body.classList.add(BODY_LOCK_CLASS);
    }
    totalLockCount++;
  };
  const unlock = () => {
    if (totalLockCount) {
      document.removeEventListener("touchstart", touch.start);
      document.removeEventListener("touchmove", onTouchMove);
      totalLockCount--;
      if (!totalLockCount) {
        document.body.classList.remove(BODY_LOCK_CLASS);
      }
    }
  };
  reactExports.useEffect(() => {
    if (shouldLock) {
      lock();
      return () => {
        unlock();
      };
    }
  }, [shouldLock]);
}
let globalZIndex = 2e3;
const [bem$3] = createNamespace("popup");
const Popup$2 = reactExports.forwardRef((p2, ref) => {
  var _a;
  const props = mergeProps(p2, {
    duration: 300,
    overlay: true,
    lockScroll: true,
    position: "center",
    closeIcon: jsxRuntimeExports.jsx(SvgCross, {}),
    closeIconPosition: "top-right",
    closeOnClickOverlay: true,
    stopPropagation: ["click"],
    teleport: () => document.body
  });
  const {
    round: round2,
    closeable,
    title: title2,
    description,
    children,
    duration,
    closeIcon,
    position: position2
  } = props;
  const opened = reactExports.useRef(false);
  const zIndex = reactExports.useRef((_a = props.zIndex) !== null && _a !== void 0 ? _a : globalZIndex);
  const popupRef = reactExports.useRef();
  const [visible, setVisible] = reactExports.useState(props.visible);
  const [animatedVisible, setAnimatedVisible] = reactExports.useState(visible);
  const style2 = reactExports.useMemo(() => {
    const initStyle = Object.assign({
      zIndex: zIndex.current
    }, props.style);
    if (isDef(props.duration)) {
      const key = props.position === "center" ? "animationDuration" : "transitionDuration";
      initStyle[key] = "".concat(props.duration, "ms");
    }
    return initStyle;
  }, [zIndex.current, props.position, props.style, props.duration]);
  const open2 = () => {
    var _a2;
    if (props.zIndex !== void 0) {
      zIndex.current = +props.zIndex;
    } else {
      zIndex.current = globalZIndex++;
    }
    opened.current = true;
    (_a2 = props.onOpen) === null || _a2 === void 0 ? void 0 : _a2.call(props);
  };
  const close2 = () => {
    callInterceptor({
      interceptor: props.beforeClose,
      args: ["close"],
      done: () => {
        var _a2;
        opened.current = false;
        (_a2 = props.onClose) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      }
    });
  };
  const onClickOverlay = (event) => {
    var _a2;
    (_a2 = props.onClickOverlay) === null || _a2 === void 0 ? void 0 : _a2.call(props, event);
    if (props.closeOnClickOverlay) {
      close2();
    }
  };
  const renderOverlay = () => {
    if (props.overlay) {
      return jsxRuntimeExports.jsx(Overlay, {
        visible,
        className: props.overlayClass,
        customStyle: props.overlayStyle,
        zIndex: zIndex.current,
        duration,
        onClick: onClickOverlay
      });
    }
    return null;
  };
  const onClickCloseIcon = (e2) => {
    if (props.onClickCloseIcon) {
      props.onClickCloseIcon(e2);
    }
    close2();
  };
  const renderCloseIcon = () => {
    if (closeable) {
      const {
        closeIconPosition
      } = props;
      if (closeIcon) {
        return jsxRuntimeExports.jsx("div", Object.assign({
          className: clsx(bem$3("close-icon", closeIconPosition)),
          onClick: onClickCloseIcon
        }, {
          children: closeIcon
        }));
      }
      return null;
    }
    return null;
  };
  const renderTitle = () => {
    if (title2) {
      return jsxRuntimeExports.jsx("div", Object.assign({
        className: clsx(bem$3("title"))
      }, {
        children: title2
      }));
    }
    return null;
  };
  const renderDescription = () => {
    if (description) {
      return jsxRuntimeExports.jsx("div", Object.assign({
        className: clsx(bem$3("description"))
      }, {
        children: description
      }));
    }
    return null;
  };
  const renderPopup = () => {
    const {
      safeAreaInsetBottom
    } = props;
    return withStopPropagation(props.stopPropagation, jsxRuntimeExports.jsxs("div", Object.assign({
      ref: popupRef,
      style: Object.assign(Object.assign({}, style2), {
        display: !visible && !animatedVisible ? "none" : void 0
      }),
      className: clsx(bem$3({
        round: round2,
        [position2]: position2
      }), {
        "rv-safe-area-bottom": safeAreaInsetBottom
      }, props.className),
      onClick: props.onClick
    }, {
      children: [renderTitle(), renderDescription(), children, renderCloseIcon()]
    })));
  };
  const renderTransition = () => {
    const {
      transition,
      destroyOnClose,
      forceRender
    } = props;
    const name2 = position2 === "center" ? "rv-fade" : "rv-popup-slide-".concat(position2);
    return jsxRuntimeExports.jsx(CSSTransition, Object.assign({
      in: visible,
      /**
       * https://github.com/reactjs/react-transition-group/pull/559
       */
      nodeRef: popupRef,
      timeout: duration,
      classNames: transition || name2,
      mountOnEnter: !forceRender,
      unmountOnExit: destroyOnClose,
      onEnter: open2,
      onEntered: props.onOpened,
      onExited: () => {
        var _a2;
        setAnimatedVisible(false);
        (_a2 = props.onClosed) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      }
    }, {
      children: renderPopup()
    }));
  };
  useEventListener("popstate", () => {
    if (props.closeOnPopstate) {
      close2();
    }
  });
  useIsomorphicLayoutEffect$1(() => {
    if (visible) {
      setAnimatedVisible(true);
    }
  }, [visible]);
  useIsomorphicLayoutEffect$1(() => {
    setVisible(props.visible);
  }, [props.visible]);
  useLockScroll(popupRef, visible && props.lockScroll);
  reactExports.useImperativeHandle(ref, () => ({
    popupRef
  }));
  return renderToContainer(props.teleport, jsxRuntimeExports.jsxs(PopupContext.Provider, Object.assign({
    value: {
      visible
    }
  }, {
    children: [renderOverlay(), renderTransition()]
  })));
});
function assignKey(to2, from2, key) {
  const val = from2[key];
  if (!isDef(val)) {
    return;
  }
  if (!Object.prototype.hasOwnProperty.call(to2, key) || !isObject$1(val)) {
    to2[key] = val;
  } else {
    to2[key] = deepAssign(Object(to2[key]), from2[key]);
  }
}
function deepAssign(to2, from2) {
  Object.keys(from2).forEach((key) => {
    assignKey(to2, from2, key);
  });
  return to2;
}
const base = {
  name: "姓名",
  tel: "电话",
  save: "保存",
  confirm: "确认",
  cancel: "取消",
  delete: "删除",
  loading: "加载中...",
  noCoupon: "暂无优惠券",
  nameEmpty: "请填写姓名",
  telInvalid: "请填写正确的电话",
  vanCalendar: {
    end: "结束",
    start: "开始",
    title: "日期选择",
    confirm: "确定",
    startEnd: "开始/结束",
    weekdays: ["日", "一", "二", "三", "四", "五", "六"],
    monthTitle: (year, month) => "".concat(year, "年").concat(month, "月"),
    rangePrompt: (maxRange) => "最多选择 ".concat(maxRange, " 天")
  },
  vanPicker: {
    select: "请选择"
  },
  vanContactCard: {
    addText: "添加联系人"
  },
  vanContactList: {
    addText: "新建联系人"
  },
  vanPagination: {
    prev: "上一页",
    next: "下一页"
  },
  vanPullRefresh: {
    pulling: "下拉即可刷新...",
    loosing: "释放即可刷新...",
    loading: "加载中..."
  },
  vanSubmitBar: {
    label: "合计："
  },
  vanCoupon: {
    unlimited: "无使用门槛",
    discount: (discount) => "".concat(discount, "折"),
    condition: (condition) => "满".concat(condition, "元可用")
  },
  vanCouponCell: {
    title: "优惠券",
    count: (count) => "".concat(count, "张可用")
  },
  vanCouponList: {
    exchange: "兑换",
    close: "不使用优惠券",
    enable: "可用",
    disabled: "不可用",
    placeholder: "请输入优惠码"
  },
  vanAddressEdit: {
    area: "地区",
    postal: "邮政编码",
    areaEmpty: "请选择地区",
    addressEmpty: "请填写详细地址",
    postalEmpty: "邮政编码不正确",
    defaultAddress: "设为默认收货地址"
  },
  vanAddressEditDetail: {
    label: "详细地址",
    placeholder: "街道门牌信息"
  },
  vanAddressList: {
    add: "新增地址"
  }
};
const zhCN = deepAssign(base, {});
const INITIAL_STATE = {
  locale: zhCN
};
const ConfigProvider$1 = reactExports.createContext(INITIAL_STATE);
function debounce(func, wait, options2) {
  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;
  let lastInvokeTime = 0;
  let leading = false;
  let maxing = false;
  let trailing = true;
  const useRAF = !wait && wait !== 0 && typeof root.requestAnimationFrame === "function";
  if (typeof func !== "function") {
    throw new TypeError("Expected a function");
  }
  wait = +wait || 0;
  if (isObject$1(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? Math.max(+options2.maxWait || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time2) {
    const args = lastArgs;
    const thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result = func.apply(thisArg, args);
    return result;
  }
  function startTimer(pendingFunc, wait2) {
    if (useRAF) {
      root.cancelAnimationFrame(timerId);
      return root.requestAnimationFrame(pendingFunc);
    }
    return setTimeout(() => pendingFunc(), wait2);
  }
  function cancelTimer(id2) {
    if (useRAF) {
      return root.cancelAnimationFrame(id2);
    }
    clearTimeout(id2);
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = startTimer(timerExpired, wait);
    return leading ? invokeFunc(time2) : result;
  }
  function remainingWait(time2) {
    const timeSinceLastCall = time2 - lastCallTime;
    const timeSinceLastInvoke = time2 - lastInvokeTime;
    const timeWaiting = wait - timeSinceLastCall;
    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time2) {
    const timeSinceLastCall = time2 - lastCallTime;
    const timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    const time2 = Date.now();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = startTimer(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel2() {
    if (timerId !== void 0) {
      cancelTimer(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(Date.now());
  }
  function pending() {
    return timerId !== void 0;
  }
  function debounced(...args) {
    const time2 = Date.now();
    const isInvoking = shouldInvoke(time2);
    lastArgs = args;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        timerId = startTimer(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = startTimer(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel2;
  debounced.flush = flush;
  debounced.pending = pending;
  return debounced;
}
function useRefs() {
  const refs = React.useRef([]);
  const setRefs = React.useCallback((index2) => (el) => {
    if (el)
      refs.current[index2] = el;
  }, []);
  const reset = React.useCallback(() => {
    refs.current = [];
  }, []);
  return [refs.current, setRefs, reset];
}
function times(n2, iteratee) {
  let index2 = -1;
  const result = Array(n2);
  while (++index2 < n2) {
    result[index2] = iteratee(index2);
  }
  return result;
}
function getTrueValue(value2) {
  if (!value2) {
    return 0;
  }
  while (isNaN$1(parseInt(value2, 10))) {
    if (value2.length > 1) {
      value2 = value2.slice(1);
    } else {
      return 0;
    }
  }
  return parseInt(value2, 10);
}
function getMonthEndDay(year, month) {
  return 32 - new Date(year, month - 1, 32).getDate();
}
function useDebounceFn(fn, options2) {
  var _a;
  const fnRef = useLatest(fn);
  const wait = (_a = options2 === null || options2 === void 0 ? void 0 : options2.wait) !== null && _a !== void 0 ? _a : 1e3;
  const debounced = reactExports.useMemo(() => debounce((...args) => {
    return fnRef.current(...args);
  }, wait, options2), []);
  useUnmount(() => {
    debounced.cancel();
  });
  return {
    run: debounced,
    cancel: debounced.cancel,
    flush: debounced.flush
  };
}
function useDebounceEffect(effect, deps, options2) {
  const [flag, setFlag] = reactExports.useState({});
  const {
    run
  } = useDebounceFn(() => {
    setFlag({});
  }, options2);
  reactExports.useEffect(() => {
    return run();
  }, deps);
  useUpdateEffect(effect, [flag]);
}
const DEFAULT_DURATION = 200;
const MOMENTUM_LIMIT_TIME = 300;
const MOMENTUM_LIMIT_DISTANCE = 15;
function getElementTranslateY(element) {
  const style2 = window.getComputedStyle(element);
  const transform = style2.transform || style2.webkitTransform;
  const translateY = transform.slice(7, transform.length - 1).split(", ")[5];
  return Number(translateY);
}
const [bem$2] = createNamespace("picker-column");
const PickerColumn = reactExports.memo(reactExports.forwardRef((props, ref) => {
  const {
    locale: locale2
  } = reactExports.useContext(ConfigProvider$1);
  const {
    valueKey,
    textKey,
    itemHeight,
    visibleItemCount,
    placeholder: placeholder2,
    value: value2
  } = props;
  const options2 = reactExports.useMemo(() => {
    if (Array.isArray(props.options) && !props.options.length)
      return [];
    if (placeholder2) {
      const DEFAULT_OPTION = {
        [valueKey]: void 0,
        [textKey]: placeholder2 === true ? locale2.vanPicker.select : placeholder2
      };
      return [DEFAULT_OPTION, ...props.options];
    }
    return props.options;
  }, [props.options]);
  const wrapper2 = reactExports.useRef(null);
  const moving = reactExports.useRef(false);
  const startOffset = reactExports.useRef(0);
  const transitionEndTrigger = reactExports.useRef(null);
  const touchStartTime = reactExports.useRef(0);
  const momentumOffset = reactExports.useRef(0);
  const [state2, updateState, stateRef] = useSetState({
    offset: 0,
    duration: 0
  });
  const touch = useTouch();
  const baseOffset = reactExports.useMemo(() => {
    return itemHeight * (+visibleItemCount - 1) / 2;
  }, [itemHeight, visibleItemCount]);
  const adjustIndex = (index2) => {
    var _a, _b;
    index2 = range$1(index2, 0, options2.length);
    for (let i = index2; i < options2.length; i += 1) {
      if (!((_a = options2[i]) === null || _a === void 0 ? void 0 : _a.disabled))
        return i;
    }
    for (let i = index2 - 1; i >= 0; i -= 1) {
      if (!((_b = options2[i]) === null || _b === void 0 ? void 0 : _b.disabled))
        return i;
    }
    return null;
  };
  const onSelect = (val) => {
    props.onSelect(val, props.index);
  };
  const setIndex = (index2) => {
    index2 = adjustIndex(index2) || 0;
    const offset = -index2 * props.itemHeight;
    const trigger2 = () => {
      var _a;
      if (((_a = options2[index2]) === null || _a === void 0 ? void 0 : _a[valueKey]) !== value2) {
        onSelect(options2[index2]);
      }
    };
    if (moving.current && offset !== stateRef.current.offset) {
      transitionEndTrigger.current = trigger2;
    } else {
      trigger2();
    }
    updateState({
      offset
    });
  };
  const animate = (index2) => {
    index2 = adjustIndex(index2) || 0;
    const offset = -index2 * props.itemHeight;
    updateState({
      offset
    });
  };
  useIsomorphicLayoutEffect$1(() => {
    if (options2.length === 0) {
      if (value2 !== void 0) {
        onSelect(void 0);
      }
    } else {
      let targetIndex = options2.findIndex((item2) => item2[valueKey] === value2);
      if (targetIndex < 0) {
        targetIndex = 0;
        onSelect(options2[0]);
      }
      animate(targetIndex);
    }
  }, [value2, JSON.stringify(options2)]);
  const onClickItem = (index2) => {
    if (moving.current || props.readOnly) {
      return;
    }
    transitionEndTrigger.current = null;
    updateState({
      duration: DEFAULT_DURATION
    });
    setIndex(index2);
  };
  const getIndexByOffset = (offset) => range$1(Math.round(-offset / props.itemHeight), 0, options2.length - 1);
  const momentum = (distance, _duration) => {
    const speed = Math.abs(distance / _duration);
    distance = stateRef.current.offset + speed / 3e-3 * (distance < 0 ? -1 : 1);
    const index2 = getIndexByOffset(distance);
    updateState({
      duration: +props.swipeDuration
    });
    setIndex(index2);
  };
  const stopMomentum = () => {
    moving.current = false;
    updateState({
      duration: 0
    });
    if (transitionEndTrigger.current) {
      transitionEndTrigger.current();
      transitionEndTrigger.current = null;
    }
  };
  const onTouchStart = (event) => {
    if (props.readOnly) {
      return;
    }
    touch.start(event);
    let {
      offset
    } = state2;
    if (moving.current) {
      const translateY = getElementTranslateY(wrapper2.current);
      offset = Math.min(0, translateY - baseOffset);
      startOffset.current = offset;
    } else {
      startOffset.current = offset;
    }
    updateState({
      duration: 0,
      offset
    });
    touchStartTime.current = Date.now();
    momentumOffset.current = startOffset.current;
    transitionEndTrigger.current = null;
  };
  const onTouchMove = (event) => {
    if (props.readOnly) {
      return;
    }
    touch.move(event);
    if (touch.isVertical()) {
      moving.current = true;
    }
    const offset = range$1(startOffset.current + touch.deltaY.current, -(options2.length * props.itemHeight), props.itemHeight);
    updateState({
      offset
    });
    const now2 = Date.now();
    if (now2 - touchStartTime.current > MOMENTUM_LIMIT_TIME) {
      touchStartTime.current = now2;
      momentumOffset.current = offset;
    }
  };
  const onTouchEnd = () => {
    if (props.readOnly || !moving.current) {
      return;
    }
    const distance = stateRef.current.offset - momentumOffset.current;
    const duration = Date.now() - touchStartTime.current;
    const allowMomentum = duration < MOMENTUM_LIMIT_TIME && Math.abs(distance) > MOMENTUM_LIMIT_DISTANCE;
    if (allowMomentum) {
      momentum(distance, duration);
      return;
    }
    const index2 = getIndexByOffset(stateRef.current.offset);
    updateState({
      duration: DEFAULT_DURATION
    });
    setIndex(index2);
    setTimeout(() => {
      moving.current = false;
    }, 0);
  };
  const renderOptions = () => {
    const optionStyle = {
      height: "".concat(props.itemHeight, "px")
    };
    return options2.map((option2, index2) => {
      const {
        disabled: disabled2
      } = option2;
      const data = {
        role: "button",
        style: optionStyle,
        tabIndex: disabled2 ? -1 : 0,
        className: clsx(bem$2("item", {
          disabled: disabled2,
          selected: option2[valueKey] === value2
        })),
        onClick: () => {
          onClickItem(index2);
        }
      };
      const childData = {
        className: "rv-ellipsis",
        children: option2[textKey]
      };
      return reactExports.createElement("li", Object.assign({}, data, {
        key: index2
      }), props.optionRender ? props.optionRender(option2) : jsxRuntimeExports.jsx("div", Object.assign({}, childData)));
    });
  };
  reactExports.useImperativeHandle(ref, () => ({
    stopMomentum
  }));
  return jsxRuntimeExports.jsx("div", Object.assign({
    className: clsx(bem$2(), props.className),
    onTouchStart,
    onTouchMove,
    onTouchEnd,
    onTouchCancel: onTouchEnd
  }, {
    children: jsxRuntimeExports.jsx("ul", Object.assign({
      ref: wrapper2,
      style: {
        transform: "translate3d(0, ".concat(state2.offset + baseOffset, "px, 0)"),
        transitionDuration: "".concat(state2.duration, "ms"),
        transitionProperty: state2.duration ? "all" : "none"
      },
      className: clsx(bem$2("wrapper")),
      onTransitionEnd: stopMomentum
    }, {
      children: renderOptions()
    }))
  }));
}), (prev2, next2) => {
  if (prev2.index !== next2.index)
    return false;
  if (prev2.value !== next2.value) {
    return false;
  }
  if (prev2.onSelect !== next2.onSelect)
    return false;
  if (JSON.stringify(prev2.options) !== JSON.stringify(next2.options)) {
    return false;
  }
  return true;
});
function useColumnsFn(options2, keys2) {
  const {
    textKey,
    valueKey,
    childrenKey
  } = keys2;
  const dataType = reactExports.useMemo(() => {
    const isCascade = options2.some((el) => typeof el === "object" && childrenKey in el);
    if (isCascade)
      return "cascade";
    const firstColumn = options2[0] || {};
    if (typeof firstColumn === "object") {
      if (childrenKey in firstColumn) {
        return "cascade";
      }
      return "object";
    }
    return "plain";
  }, [options2, childrenKey]);
  const depth = reactExports.useMemo(() => {
    let depth2 = 0;
    function traverse(options3, currentDepth) {
      if (currentDepth > depth2)
        depth2 = currentDepth;
      const nextDepth = currentDepth + 1;
      options3.forEach((option2) => {
        if (option2[childrenKey]) {
          traverse(option2[childrenKey], nextDepth);
        }
      });
    }
    traverse(options2, 1);
    return depth2;
  }, [options2, childrenKey]);
  if (dataType !== "cascade")
    return options2;
  return (selected2) => {
    const columns = [];
    let currentOptions = options2;
    let i = 0;
    while (true) {
      columns.push(currentOptions.map((option2) => {
        var _a;
        return {
          [textKey]: option2[textKey],
          [valueKey]: (_a = option2[valueKey]) !== null && _a !== void 0 ? _a : option2[textKey]
        };
      }));
      const x = selected2[i];
      const targetOptions = currentOptions.find((option2) => {
        var _a;
        return ((_a = option2[valueKey]) !== null && _a !== void 0 ? _a : option2[textKey]) === x;
      });
      if (!targetOptions || !targetOptions[childrenKey])
        break;
      currentOptions = targetOptions[childrenKey];
      i++;
    }
    while (i < depth - 1) {
      columns.push([]);
      i++;
    }
    return columns;
  };
}
function withCache(generate2) {
  let cache2 = null;
  return () => {
    if (cache2 === null) {
      cache2 = generate2();
    }
    return cache2;
  };
}
function generateColumnsExtend(rawColumns, keys2, val) {
  const {
    textKey,
    valueKey
  } = keys2;
  const columns = withCache(() => {
    let cls = typeof rawColumns === "function" ? rawColumns(val) : rawColumns;
    if (!Array.isArray(cls[0]))
      cls = [cls];
    return cls.map((column2) => column2.map((item2) => {
      if (typeof item2 === "string")
        return {
          [textKey]: item2,
          [valueKey]: item2
        };
      if (!(valueKey in item2))
        item2[valueKey] = item2[textKey];
      return item2;
    }));
  });
  const items2 = withCache(() => {
    return val.map((v2, index2) => {
      var _a;
      const column2 = columns()[index2];
      if (!column2)
        return null;
      return (_a = column2.find((item2) => item2[valueKey] === v2)) !== null && _a !== void 0 ? _a : void 0;
    });
  });
  const indexes = withCache(() => {
    return val.map((v2, index2) => {
      var _a;
      const column2 = columns()[index2];
      if (!column2)
        return null;
      return (_a = column2.findIndex((item2) => item2[valueKey] === v2)) !== null && _a !== void 0 ? _a : null;
    });
  });
  const result = {
    get columns() {
      return columns();
    },
    get items() {
      return items2();
    },
    get indexes() {
      return indexes();
    }
  };
  return result;
}
function useColumnsExtend(columns, keys2, value2) {
  const formatColumns = useColumnsFn(columns, keys2);
  return reactExports.useMemo(() => generateColumnsExtend(formatColumns, keys2, value2), [columns, keys2, value2]);
}
const [bem$1] = createNamespace("picker");
function PickerInner(props) {
  const {
    locale: locale2
  } = reactExports.useContext(ConfigProvider$1);
  const wrapper2 = reactExports.useRef(null);
  const [refs, setRefs] = useRefs();
  const {
    text: textKey,
    value: valueKey,
    children: childrenKey
  } = extend({
    text: "text",
    value: "value",
    children: "children"
  }, props.columnsFieldNames);
  const [innerValue, setInnerValue] = reactExports.useState(props.value);
  reactExports.useEffect(() => {
    if (props.value === void 0)
      return;
    if (JSON.stringify(innerValue) === JSON.stringify(props.value))
      return;
    setInnerValue(props.value);
  }, [props.value]);
  const formatColumns = useColumnsExtend(props.columns, {
    textKey,
    valueKey,
    childrenKey
  }, innerValue);
  const {
    columns,
    items: items2,
    indexes
  } = formatColumns;
  useDebounceEffect(() => {
    var _a;
    if (JSON.stringify(props.value) === JSON.stringify(innerValue))
      return;
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, items2, indexes);
  }, [innerValue], {
    wait: 100,
    leading: false,
    trailing: true
  });
  const itemHeight = reactExports.useMemo(() => unitToPx(props.itemHeight), [props.itemHeight]);
  const handleSelect = (val, index2) => {
    setInnerValue((prev2) => {
      const next2 = [...prev2];
      next2[index2] = val === null || val === void 0 ? void 0 : val[valueKey];
      return next2;
    });
  };
  const confirm = () => {
    var _a;
    refs.forEach((_ref) => _ref.stopMomentum());
    (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, items2, indexes);
  };
  const cancel2 = () => {
    var _a;
    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);
  };
  const renderTitle = () => {
    if (props.title) {
      return jsxRuntimeExports.jsx("div", Object.assign({
        className: clsx(bem$1("title"), "rv-ellipsis")
      }, {
        children: props.title
      }));
    }
    return null;
  };
  const renderCancel = () => {
    const text2 = props.cancelButtonText || locale2.cancel;
    return jsxRuntimeExports.jsx("button", Object.assign({
      type: "button",
      className: clsx(bem$1("cancel")),
      onClick: cancel2
    }, {
      children: text2
    }));
  };
  const renderConfirm = () => {
    const text2 = props.confirmButtonText || locale2.confirm;
    return jsxRuntimeExports.jsx("button", Object.assign({
      type: "button",
      className: clsx(bem$1("confirm")),
      onClick: confirm
    }, {
      children: text2
    }));
  };
  const renderToolbar = () => {
    if (props.showToolbar) {
      return jsxRuntimeExports.jsx("div", Object.assign({
        className: clsx(bem$1("toolbar"))
      }, {
        children: props.toolbar || jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
          children: [renderCancel(), renderTitle(), renderConfirm()]
        })
      }));
    }
    return null;
  };
  const renderColumnItems = () => {
    return columns.map((item2, columnIndex) => {
      const placeholder2 = Array.isArray(props.placeholder) ? props.placeholder[columnIndex] : props.placeholder;
      return jsxRuntimeExports.jsx(PickerColumn, {
        textKey,
        valueKey,
        ref: setRefs(columnIndex),
        placeholder: placeholder2,
        optionRender: props.optionRender,
        readOnly: props.readOnly,
        value: innerValue[columnIndex],
        itemHeight,
        index: columnIndex,
        swipeDuration: props.swipeDuration,
        visibleItemCount: props.visibleItemCount,
        options: item2,
        onSelect: handleSelect
      }, columnIndex);
    });
  };
  const renderColumns = () => {
    const wrapHeight = itemHeight * props.visibleItemCount;
    const frameStyle = {
      height: "".concat(itemHeight, "px")
    };
    const columnsStyle = {
      height: "".concat(wrapHeight, "px")
    };
    const maskStyle = {
      backgroundSize: "100% ".concat((wrapHeight - itemHeight) / 2, "px")
    };
    return jsxRuntimeExports.jsxs("div", Object.assign({
      ref: wrapper2,
      className: clsx(bem$1("columns")),
      style: columnsStyle
    }, {
      children: [renderColumnItems(), jsxRuntimeExports.jsx("div", {
        className: clsx(bem$1("mask")),
        style: maskStyle
      }), jsxRuntimeExports.jsx("div", {
        className: clsx(BORDER_UNSET_TOP_BOTTOM, bem$1("frame")),
        style: frameStyle
      })]
    }));
  };
  useEventListener("touchmove", preventDefault, {
    target: wrapper2.current
  });
  return jsxRuntimeExports.jsxs("div", Object.assign({
    className: clsx(bem$1(), props.className)
  }, {
    children: [props.toolbarPosition === "top" ? renderToolbar() : null, props.loading ? jsxRuntimeExports.jsx(Loading, {
      className: clsx(bem$1("loading"))
    }) : null, props.columnsTop, renderColumns(), props.columnsBottom, props.toolbarPosition === "bottom" ? renderToolbar() : null]
  }));
}
function PopupPicker(p2, ref) {
  const props = mergeProps(p2, {
    columns: [],
    itemHeight: 44,
    visibleItemCount: 5,
    swipeDuration: 300,
    showToolbar: true,
    placeholder: true,
    toolbarPosition: "top"
  });
  const {
    visible: outerVisible,
    popup,
    children,
    defaultValue = []
  } = props, pickerProps = __rest$8(props, ["visible", "popup", "children", "defaultValue"]);
  const [visible, setVisible] = usePropsValue({
    value: outerVisible,
    defaultValue: false,
    onChange: (v2) => {
      var _a;
      if (v2 === false) {
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
      }
    }
  });
  const actions = {
    toggle: () => {
      if (popup)
        setVisible((v2) => !v2);
    },
    open: () => {
      if (popup) {
        setVisible(true);
      }
    },
    close: () => {
      if (popup) {
        setVisible(false);
      }
    }
  };
  reactExports.useImperativeHandle(ref, () => actions);
  const formatValue2 = Array.isArray(props.value) ? props.value : props.value !== void 0 ? [props.value] : void 0;
  const formatDefaultValue = Array.isArray(defaultValue) ? defaultValue : defaultValue !== void 0 ? [defaultValue] : [];
  const {
    text: textKey,
    value: valueKey,
    children: childrenKey
  } = extend({
    text: "text",
    value: "value",
    children: "children"
  }, props.columnsFieldNames);
  const isPlainType = reactExports.useMemo(() => {
    const firstColumn = props.columns[0] || {};
    if (Array.isArray(firstColumn))
      return false;
    if (typeof firstColumn === "object") {
      if (childrenKey in firstColumn) {
        return false;
      }
    }
    return true;
  }, [props.columns, childrenKey]);
  const parseValue = (target) => isPlainType ? target === null || target === void 0 ? void 0 : target[0] : target;
  const [value2, setValue] = usePropsValue({
    value: formatValue2,
    defaultValue: formatDefaultValue
  });
  const formatColumns = useColumnsExtend(props.columns, {
    textKey,
    valueKey,
    childrenKey
  }, value2);
  const [innerValue, setInnerValue] = reactExports.useState(value2);
  reactExports.useEffect(() => {
    if (popup && JSON.stringify(innerValue) !== JSON.stringify(value2)) {
      setInnerValue(value2);
    }
  }, [visible]);
  reactExports.useEffect(() => {
    if (!popup && JSON.stringify(innerValue) !== JSON.stringify(value2)) {
      setInnerValue(value2);
    }
  }, [value2]);
  const onConfirm = (val, items2, indexes) => {
    var _a;
    setValue(innerValue, true);
    (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, parseValue(val), parseValue(items2), parseValue(indexes));
    if (popup)
      actions.close();
  };
  const onCancel = () => {
    var _a;
    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);
    if (popup)
      actions.close();
  };
  const onChange = useMemoizedFn((val, ext, indexes) => {
    var _a, _b;
    setInnerValue(val);
    if (popup) {
      if (visible)
        (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, parseValue(val), parseValue(ext), parseValue(indexes));
    } else {
      (_b = props.onChange) === null || _b === void 0 ? void 0 : _b.call(props, parseValue(val), parseValue(ext), parseValue(indexes));
    }
  });
  const popupProps = isObject$1(popup) ? Object.assign({
    closeOnClickOverlay: true
  }, popup) : {
    closeOnClickOverlay: true
  };
  const content2 = jsxRuntimeExports.jsx(PickerInner, Object.assign({}, pickerProps, {
    value: innerValue,
    onCancel,
    onConfirm,
    onChange
  }));
  if (!popup)
    return content2;
  return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [jsxRuntimeExports.jsx(Popup$2, Object.assign({
      round: true,
      position: "bottom",
      visible,
      closeOnClickOverlay: true,
      onClickOverlay: () => {
        if (!(popupProps === null || popupProps === void 0 ? void 0 : popupProps.closeOnClickOverlay))
          return;
        setVisible(false);
      }
    }, popupProps, {
      children: content2
    })), children === null || children === void 0 ? void 0 : children(parseValue(value2), parseValue(formatColumns.items), actions)]
  });
}
const Picker$2 = reactExports.forwardRef(PopupPicker);
function isDate(val) {
  return Object.prototype.toString.call(val) === "[object Date]" && !isNaN$1(val.getTime());
}
const DatePicker$2 = reactExports.forwardRef((p2, ref) => {
  const props = mergeProps(p2, {
    type: "datetime",
    placeholder: false,
    minDate: DefaultMinDate,
    maxDate: DefaultMaxDate,
    formatter: (type4, value3) => value3
  });
  const {
    value: value2,
    defaultValue,
    formatter,
    columnsOrder,
    type: datePickerType,
    filter: filter2,
    minDate,
    maxDate
  } = props, pickerProps = __rest$8(props, ["value", "defaultValue", "formatter", "columnsOrder", "type", "filter", "minDate", "maxDate"]);
  const formatValue2 = (date5) => {
    if (!isDate(date5)) {
      date5 = /* @__PURE__ */ new Date();
    }
    date5 = Math.max(date5, minDate.getTime());
    date5 = Math.min(date5, maxDate.getTime());
    return new Date(date5);
  };
  const [currentDate, setCurrentDate, currentDateRef] = useRefState(() => formatValue2(value2 || defaultValue));
  const getBoundary = (type4, value3) => {
    const boundary = props["".concat(type4, "Date")];
    const year = boundary.getFullYear();
    let month = 1;
    let date5 = 1;
    let hour = 0;
    let minute = 0;
    if (type4 === "max") {
      month = 12;
      date5 = getMonthEndDay(value3.getFullYear(), value3.getMonth() + 1);
      hour = 23;
      minute = 59;
    }
    if (value3.getFullYear() === year) {
      month = boundary.getMonth() + 1;
      if (value3.getMonth() + 1 === month) {
        date5 = boundary.getDate();
        if (value3.getDate() === date5) {
          hour = boundary.getHours();
          if (value3.getHours() === hour) {
            minute = boundary.getMinutes();
          }
        }
      }
    }
    return {
      ["".concat(type4, "Year")]: year,
      ["".concat(type4, "Month")]: month,
      ["".concat(type4, "Date")]: date5,
      ["".concat(type4, "Hour")]: hour,
      ["".concat(type4, "Minute")]: minute
    };
  };
  const originColumns = reactExports.useMemo(() => {
    const {
      maxYear,
      maxDate: maxDate2,
      maxMonth,
      maxHour,
      maxMinute
    } = getBoundary("max", currentDateRef.current);
    const {
      minYear,
      minDate: minDate2,
      minMonth,
      minHour,
      minMinute
    } = getBoundary("min", currentDateRef.current);
    let result = [{
      type: "year",
      range: [minYear, maxYear]
    }, {
      type: "month",
      range: [minMonth, maxMonth]
    }, {
      type: "day",
      range: [minDate2, maxDate2]
    }, {
      type: "hour",
      range: [minHour, maxHour]
    }, {
      type: "minute",
      range: [minMinute, maxMinute]
    }];
    switch (datePickerType) {
      case "date":
        result = result.slice(0, 3);
        break;
      case "year-month":
        result = result.slice(0, 2);
        break;
      case "month-day":
        result = result.slice(1, 3);
        break;
      case "datehour":
        result = result.slice(0, 4);
        break;
    }
    if (columnsOrder) {
      const columnsOrderArr = columnsOrder.concat(result.map((column2) => column2.type));
      result.sort((a, b2) => columnsOrderArr.indexOf(a.type) - columnsOrderArr.indexOf(b2.type));
    }
    return result.map(({
      type: type4,
      range: rangeArr
    }) => {
      let values2 = times(rangeArr[1] - rangeArr[0] + 1, (index2) => {
        return padZero(rangeArr[0] + index2);
      });
      if (filter2) {
        values2 = filter2(type4, values2);
      }
      return {
        type: type4,
        values: values2
      };
    });
  }, [columnsOrder, currentDateRef.current, minDate, maxDate]);
  const columns = reactExports.useMemo(() => originColumns.map((column2) => column2.values.map((value3) => formatter(column2.type, value3))), [originColumns, formatter]);
  const pickerValue = reactExports.useMemo(() => {
    const value3 = props.popup ? formatValue2(currentDateRef.current) : currentDateRef.current;
    const values2 = originColumns.map((column2) => {
      switch (column2.type) {
        case "year":
          return formatter("year", "".concat(value3.getFullYear()));
        case "month":
          return formatter("month", padZero(value3.getMonth() + 1));
        case "day":
          return formatter("day", padZero(value3.getDate()));
        case "hour":
          return formatter("hour", padZero(value3.getHours()));
        case "minute":
          return formatter("minute", padZero(value3.getMinutes()));
        default:
          return "";
      }
    });
    return values2;
  }, [props.value, currentDateRef.current, formatValue2]);
  const updateInnerValue = (indexes) => {
    const {
      type: type4
    } = props;
    const getValue2 = (datetimePickerColumnType) => {
      let index2 = 0;
      originColumns.forEach((column2, columnIndex) => {
        if (datetimePickerColumnType === column2.type) {
          index2 = columnIndex;
        }
      });
      const {
        values: values2
      } = originColumns[index2];
      return getTrueValue(values2[indexes[index2]]);
    };
    let year = null;
    let month = null;
    let day = null;
    if (type4 === "month-day") {
      year = (currentDate || minDate).getFullYear();
      month = getValue2("month");
      day = getValue2("day");
    } else {
      year = getValue2("year");
      month = getValue2("month");
      day = type4 === "year-month" ? 1 : getValue2("day");
    }
    const maxDay = getMonthEndDay(year, month);
    day = day > maxDay ? maxDay : day;
    let hour = 0;
    let minute = 0;
    if (type4 === "datehour") {
      hour = +getValue2("hour");
    }
    if (type4 === "datetime") {
      hour = +getValue2("hour");
      minute = +getValue2("minute");
    }
    return formatValue2(new Date(year, month - 1, day, hour, minute));
  };
  const onChange = (val, values2, indexes) => {
    var _a;
    const nextValue = updateInnerValue(indexes);
    setCurrentDate(nextValue);
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, nextValue);
  };
  const onConfirm = () => {
    var _a;
    (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, currentDate);
  };
  useUpdateEffect(() => {
    const nextValue = formatValue2(value2);
    if (nextValue && nextValue.valueOf() !== (currentDate === null || currentDate === void 0 ? void 0 : currentDate.valueOf())) {
      setCurrentDate(nextValue);
    }
  }, [value2, filter2, minDate, maxDate]);
  return jsxRuntimeExports.jsx(Picker$2, Object.assign({}, pickerProps, {
    value: pickerValue,
    ref,
    columns,
    onChange,
    onConfirm,
    onCancel: props.onCancel
  }, {
    children: (_, selectRows, actions) => {
      var _a;
      return (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, value2 || defaultValue, selectRows, actions);
    }
  }));
});
const currentYear = (/* @__PURE__ */ new Date()).getFullYear();
const DefaultMinDate = new Date(currentYear - 10, 0, 1);
const DefaultMaxDate = new Date(currentYear + 10, 11, 31);
const TimePicker = reactExports.forwardRef((p2, ref) => {
  const props = mergeProps(p2, {
    minHour: 0,
    maxHour: 23,
    minMinute: 0,
    maxMinute: 59,
    placeholder: false,
    defaultValue: "",
    formatter: (type4, value3) => value3
  });
  const {
    value: value2,
    defaultValue,
    formatter,
    filter: filter2,
    minHour,
    maxHour,
    minMinute,
    maxMinute
  } = props, pickerProps = __rest$8(props, ["value", "defaultValue", "formatter", "filter", "minHour", "maxHour", "minMinute", "maxMinute"]);
  const formatValue2 = (str2) => {
    if (!str2) {
      str2 = "".concat(padZero(minHour), ":").concat(padZero(minMinute));
    }
    let [hour, minute] = str2.split(":");
    hour = padZero(range$1(hour, +minHour, +maxHour));
    minute = padZero(range$1(minute, +minMinute, +maxMinute));
    return "".concat(hour, ":").concat(minute);
  };
  const [currentDate, setCurrentDate] = reactExports.useState(() => formatValue2(value2 === void 0 ? defaultValue : value2));
  const ranges = reactExports.useMemo(() => [{
    type: "hour",
    range: [+minHour, +maxHour]
  }, {
    type: "minute",
    range: [+minMinute, +maxMinute]
  }], [minHour, maxHour, minMinute, maxMinute]);
  const originColumns = reactExports.useMemo(() => ranges.map(({
    type: type4,
    range: rangeArr
  }) => {
    let values2 = times(rangeArr[1] - rangeArr[0] + 1, (index2) => padZero(rangeArr[0] + index2));
    if (filter2) {
      values2 = filter2(type4, values2);
    }
    return {
      type: type4,
      values: values2
    };
  }), [ranges]);
  const columns = reactExports.useMemo(() => originColumns.map((column2) => column2.values.map((value3) => formatter(column2.type, value3))), [originColumns]);
  const pickerValue = reactExports.useMemo(() => {
    const pair = (props.popup ? formatValue2(props.value) : currentDate).split(":");
    return [formatter("hour", pair[0]), formatter("minute", pair[1])];
  }, [props.value, currentDate, formatValue2]);
  const onConfirm = () => {
    var _a;
    (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, currentDate);
  };
  const onCancel = () => {
    var _a;
    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);
  };
  const onChange = (val) => {
    var _a;
    const nextValue = formatValue2(val.join(":"));
    setCurrentDate(nextValue);
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, nextValue);
  };
  useUpdateEffect(() => {
    const nextValue = formatValue2(currentDate);
    setCurrentDate(nextValue);
  }, [filter2, minHour, maxHour, minMinute, maxMinute]);
  useUpdateEffect(() => {
    const nextValue = formatValue2(value2);
    if (nextValue !== currentDate) {
      setCurrentDate(nextValue);
    }
  }, [value2]);
  return jsxRuntimeExports.jsx(Picker$2, Object.assign({}, pickerProps, {
    ref,
    columns,
    value: pickerValue,
    onChange,
    onConfirm,
    onCancel
  }, {
    children: (_, selectRows, actions) => {
      var _a;
      return (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, value2, selectRows, actions);
    }
  }));
});
const [bem] = createNamespace("datetime-picker");
const DateTimePicker = reactExports.forwardRef((props, ref) => {
  const isTimePicker = props.type === "time";
  if (isTimePicker)
    return jsxRuntimeExports.jsx(TimePicker, Object.assign({
      ref,
      className: clsx(bem())
    }, props));
  return jsxRuntimeExports.jsx(DatePicker$2, Object.assign({
    ref,
    className: clsx(bem())
  }, props));
});
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o2) {
    return typeof o2;
  } : function (o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function _regeneratorRuntime2() {
    return e2;
  };
  var t2, e2 = {}, r2 = Object.prototype, n2 = r2.hasOwnProperty, o = Object.defineProperty || function (t3, e3, r3) {
    t3[e3] = r3.value;
  }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c2 = i.asyncIterator || "@@asyncIterator", u2 = i.toStringTag || "@@toStringTag";
  function define(t3, e3, r3) {
    return Object.defineProperty(t3, e3, {
      value: r3,
      enumerable: true,
      configurable: true,
      writable: true
    }), t3[e3];
  }
  try {
    define({}, "");
  } catch (t3) {
    define = function define2(t4, e3, r3) {
      return t4[e3] = r3;
    };
  }
  function wrap2(t3, e3, r3, n3) {
    var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c3 = new Context2(n3 || []);
    return o(a2, "_invoke", {
      value: makeInvokeMethod(t3, r3, c3)
    }), a2;
  }
  function tryCatch(t3, e3, r3) {
    try {
      return {
        type: "normal",
        arg: t3.call(e3, r3)
      };
    } catch (t4) {
      return {
        type: "throw",
        arg: t4
      };
    }
  }
  e2.wrap = wrap2;
  var h2 = "suspendedStart", l2 = "suspendedYield", f2 = "executing", s = "completed", y = {};
  function Generator() {
  }
  function GeneratorFunction() {
  }
  function GeneratorFunctionPrototype() {
  }
  var p2 = {};
  define(p2, a, function () {
    return this;
  });
  var d2 = Object.getPrototypeOf, v2 = d2 && d2(d2(values2([])));
  v2 && v2 !== r2 && n2.call(v2, a) && (p2 = v2);
  var g2 = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p2);
  function defineIteratorMethods(t3) {
    ["next", "throw", "return"].forEach(function (e3) {
      define(t3, e3, function (t4) {
        return this._invoke(e3, t4);
      });
    });
  }
  function AsyncIterator(t3, e3) {
    function invoke(r4, o2, i2, a2) {
      var c3 = tryCatch(t3[r4], t3, o2);
      if ("throw" !== c3.type) {
        var u3 = c3.arg, h3 = u3.value;
        return h3 && "object" == _typeof(h3) && n2.call(h3, "__await") ? e3.resolve(h3.__await).then(function (t4) {
          invoke("next", t4, i2, a2);
        }, function (t4) {
          invoke("throw", t4, i2, a2);
        }) : e3.resolve(h3).then(function (t4) {
          u3.value = t4, i2(u3);
        }, function (t4) {
          return invoke("throw", t4, i2, a2);
        });
      }
      a2(c3.arg);
    }
    var r3;
    o(this, "_invoke", {
      value: function value2(t4, n3) {
        function callInvokeWithMethodAndArg() {
          return new e3(function (e4, r4) {
            invoke(t4, n3, e4, r4);
          });
        }
        return r3 = r3 ? r3.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e3, r3, n3) {
    var o2 = h2;
    return function (i2, a2) {
      if (o2 === f2)
        throw Error("Generator is already running");
      if (o2 === s) {
        if ("throw" === i2)
          throw a2;
        return {
          value: t2,
          done: true
        };
      }
      for (n3.method = i2, n3.arg = a2; ;) {
        var c3 = n3.delegate;
        if (c3) {
          var u3 = maybeInvokeDelegate(c3, n3);
          if (u3) {
            if (u3 === y)
              continue;
            return u3;
          }
        }
        if ("next" === n3.method)
          n3.sent = n3._sent = n3.arg;
        else if ("throw" === n3.method) {
          if (o2 === h2)
            throw o2 = s, n3.arg;
          n3.dispatchException(n3.arg);
        } else
          "return" === n3.method && n3.abrupt("return", n3.arg);
        o2 = f2;
        var p3 = tryCatch(e3, r3, n3);
        if ("normal" === p3.type) {
          if (o2 = n3.done ? s : l2, p3.arg === y)
            continue;
          return {
            value: p3.arg,
            done: n3.done
          };
        }
        "throw" === p3.type && (o2 = s, n3.method = "throw", n3.arg = p3.arg);
      }
    };
  }
  function maybeInvokeDelegate(e3, r3) {
    var n3 = r3.method, o2 = e3.iterator[n3];
    if (o2 === t2)
      return r3.delegate = null, "throw" === n3 && e3.iterator["return"] && (r3.method = "return", r3.arg = t2, maybeInvokeDelegate(e3, r3), "throw" === r3.method) || "return" !== n3 && (r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
    var i2 = tryCatch(o2, e3.iterator, r3.arg);
    if ("throw" === i2.type)
      return r3.method = "throw", r3.arg = i2.arg, r3.delegate = null, y;
    var a2 = i2.arg;
    return a2 ? a2.done ? (r3[e3.resultName] = a2.value, r3.next = e3.nextLoc, "return" !== r3.method && (r3.method = "next", r3.arg = t2), r3.delegate = null, y) : a2 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, y);
  }
  function pushTryEntry(t3) {
    var e3 = {
      tryLoc: t3[0]
    };
    1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
  }
  function resetTryEntry(t3) {
    var e3 = t3.completion || {};
    e3.type = "normal", delete e3.arg, t3.completion = e3;
  }
  function Context2(t3) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t3.forEach(pushTryEntry, this), this.reset(true);
  }
  function values2(e3) {
    if (e3 || "" === e3) {
      var r3 = e3[a];
      if (r3)
        return r3.call(e3);
      if ("function" == typeof e3.next)
        return e3;
      if (!isNaN(e3.length)) {
        var o2 = -1, i2 = function next2() {
          for (; ++o2 < e3.length;)
            if (n2.call(e3, o2))
              return next2.value = e3[o2], next2.done = false, next2;
          return next2.value = t2, next2.done = true, next2;
        };
        return i2.next = i2;
      }
    }
    throw new TypeError(_typeof(e3) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g2, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: true
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: true
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u2, "GeneratorFunction"), e2.isGeneratorFunction = function (t3) {
    var e3 = "function" == typeof t3 && t3.constructor;
    return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
  }, e2.mark = function (t3) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define(t3, u2, "GeneratorFunction")), t3.prototype = Object.create(g2), t3;
  }, e2.awrap = function (t3) {
    return {
      __await: t3
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c2, function () {
    return this;
  }), e2.AsyncIterator = AsyncIterator, e2.async = function (t3, r3, n3, o2, i2) {
    void 0 === i2 && (i2 = Promise);
    var a2 = new AsyncIterator(wrap2(t3, r3, n3, o2), i2);
    return e2.isGeneratorFunction(r3) ? a2 : a2.next().then(function (t4) {
      return t4.done ? t4.value : a2.next();
    });
  }, defineIteratorMethods(g2), define(g2, u2, "Generator"), define(g2, a, function () {
    return this;
  }), define(g2, "toString", function () {
    return "[object Generator]";
  }), e2.keys = function (t3) {
    var e3 = Object(t3), r3 = [];
    for (var n3 in e3)
      r3.push(n3);
    return r3.reverse(), function next2() {
      for (; r3.length;) {
        var t4 = r3.pop();
        if (t4 in e3)
          return next2.value = t4, next2.done = false, next2;
      }
      return next2.done = true, next2;
    };
  }, e2.values = values2, Context2.prototype = {
    constructor: Context2,
    reset: function reset(e3) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3)
        for (var r3 in this)
          "t" === r3.charAt(0) && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = t2);
    },
    stop: function stop() {
      this.done = true;
      var t3 = this.tryEntries[0].completion;
      if ("throw" === t3.type)
        throw t3.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e3) {
      if (this.done)
        throw e3;
      var r3 = this;
      function handle(n3, o3) {
        return a2.type = "throw", a2.arg = e3, r3.next = n3, o3 && (r3.method = "next", r3.arg = t2), !!o3;
      }
      for (var o2 = this.tryEntries.length - 1; o2 >= 0; --o2) {
        var i2 = this.tryEntries[o2], a2 = i2.completion;
        if ("root" === i2.tryLoc)
          return handle("end");
        if (i2.tryLoc <= this.prev) {
          var c3 = n2.call(i2, "catchLoc"), u3 = n2.call(i2, "finallyLoc");
          if (c3 && u3) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          } else if (c3) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
          } else {
            if (!u3)
              throw Error("try statement without catch or finally");
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t3, e3) {
      for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
        var o2 = this.tryEntries[r3];
        if (o2.tryLoc <= this.prev && n2.call(o2, "finallyLoc") && this.prev < o2.finallyLoc) {
          var i2 = o2;
          break;
        }
      }
      i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
      var a2 = i2 ? i2.completion : {};
      return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
    },
    complete: function complete(t3, e3) {
      if ("throw" === t3.type)
        throw t3.arg;
      return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
    },
    finish: function finish(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.finallyLoc === t3)
          return this.complete(r3.completion, r3.afterLoc), resetTryEntry(r3), y;
      }
    },
    "catch": function _catch(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.tryLoc === t3) {
          var n3 = r3.completion;
          if ("throw" === n3.type) {
            var o2 = n3.arg;
            resetTryEntry(r3);
          }
          return o2;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e3, r3, n3) {
      return this.delegate = {
        iterator: values2(e3),
        resultName: r3,
        nextLoc: n3
      }, "next" === this.method && (this.arg = t2), y;
    }
  }, e2;
}
function asyncGeneratorStep(gen2, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen2[key](arg);
    var value2 = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self2 = this, args = arguments;
    return new Promise(function (resolve, reject) {
      var gen2 = fn.apply(self2, args);
      function _next(value2) {
        asyncGeneratorStep(gen2, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep(gen2, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function toPrimitive(t2, r2) {
  if ("object" != _typeof(t2) || !t2)
    return t2;
  var e2 = t2[Symbol.toPrimitive];
  if (void 0 !== e2) {
    var i = e2.call(t2, r2 || "default");
    if ("object" != _typeof(i))
      return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function toPropertyKey(t2) {
  var i = toPrimitive(t2, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _defineProperty(obj, key, value2) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys(e2, r2) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e2);
    r2 && (o = o.filter(function (r3) {
      return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
function _objectSpread2(e2) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys(Object(t2), true).forEach(function (r3) {
      _defineProperty(e2, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function (r3) {
      Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e2;
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o, minLen);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _classCallCheck(instance2, Constructor) {
  if (!(instance2 instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf$1(subClass, superClass);
}
function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$1(o);
}
function _isNativeReflectConstruct$1() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$1 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _possibleConstructorReturn(self2, call2) {
  if (call2 && (_typeof(call2) === "object" || typeof call2 === "function")) {
    return call2;
  } else if (call2 !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$1(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$1(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
var reactIs = { exports: {} };
var reactIs_production_min = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = Symbol.for("react.element"), c = Symbol.for("react.portal"), d = Symbol.for("react.fragment"), e = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), g = Symbol.for("react.provider"), h = Symbol.for("react.context"), k = Symbol.for("react.server_context"), l = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), n = Symbol.for("react.suspense_list"), p$4 = Symbol.for("react.memo"), q = Symbol.for("react.lazy"), t = Symbol.for("react.offscreen"), u;
u = Symbol.for("react.module.reference");
function v(a) {
  if ("object" === typeof a && null !== a) {
    var r2 = a.$$typeof;
    switch (r2) {
      case b:
        switch (a = a.type, a) {
          case d:
          case f:
          case e:
          case m:
          case n:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case h:
              case l:
              case q:
              case p$4:
              case g:
                return a;
              default:
                return r2;
            }
        }
      case c:
        return r2;
    }
  }
}
reactIs_production_min.ContextConsumer = h;
reactIs_production_min.ContextProvider = g;
reactIs_production_min.Element = b;
reactIs_production_min.ForwardRef = l;
reactIs_production_min.Fragment = d;
reactIs_production_min.Lazy = q;
reactIs_production_min.Memo = p$4;
reactIs_production_min.Portal = c;
reactIs_production_min.Profiler = f;
reactIs_production_min.StrictMode = e;
reactIs_production_min.Suspense = m;
reactIs_production_min.SuspenseList = n;
reactIs_production_min.isAsyncMode = function () {
  return false;
};
reactIs_production_min.isConcurrentMode = function () {
  return false;
};
reactIs_production_min.isContextConsumer = function (a) {
  return v(a) === h;
};
reactIs_production_min.isContextProvider = function (a) {
  return v(a) === g;
};
reactIs_production_min.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === b;
};
reactIs_production_min.isForwardRef = function (a) {
  return v(a) === l;
};
reactIs_production_min.isFragment = function (a) {
  return v(a) === d;
};
reactIs_production_min.isLazy = function (a) {
  return v(a) === q;
};
reactIs_production_min.isMemo = function (a) {
  return v(a) === p$4;
};
reactIs_production_min.isPortal = function (a) {
  return v(a) === c;
};
reactIs_production_min.isProfiler = function (a) {
  return v(a) === f;
};
reactIs_production_min.isStrictMode = function (a) {
  return v(a) === e;
};
reactIs_production_min.isSuspense = function (a) {
  return v(a) === m;
};
reactIs_production_min.isSuspenseList = function (a) {
  return v(a) === n;
};
reactIs_production_min.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === d || a === f || a === e || a === m || a === n || a === t || "object" === typeof a && null !== a && (a.$$typeof === q || a.$$typeof === p$4 || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === u || void 0 !== a.getModuleId) ? true : false;
};
reactIs_production_min.typeOf = v;
{
  reactIs.exports = reactIs_production_min;
}
var reactIsExports = reactIs.exports;
function toArray$4(children) {
  var option2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var ret = [];
  React.Children.forEach(children, function (child) {
    if ((child === void 0 || child === null) && !option2.keepEmpty) {
      return;
    }
    if (Array.isArray(child)) {
      ret = ret.concat(toArray$4(child));
    } else if (reactIsExports.isFragment(child) && child.props) {
      ret = ret.concat(toArray$4(child.props.children, option2));
    } else {
      ret.push(child);
    }
  });
  return ret;
}
var warned = {};
var preMessage = function preMessage2(fn) {
};
function warning$2(valid, message2) {
}
function note(valid, message2) {
}
function resetWarned() {
  warned = {};
}
function call(method4, valid, message2) {
  if (!valid && !warned[message2]) {
    method4(false, message2);
    warned[message2] = true;
  }
}
function warningOnce(valid, message2) {
  call(warning$2, valid, message2);
}
function noteOnce(valid, message2) {
  call(note, valid, message2);
}
warningOnce.preMessage = preMessage;
warningOnce.resetWarned = resetWarned;
warningOnce.noteOnce = noteOnce;
function isEqual(obj1, obj2) {
  var shallow = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var refSet = /* @__PURE__ */ new Set();
  function deepEqual(a, b2) {
    var level = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    var circular = refSet.has(a);
    warningOnce(!circular, "Warning: There may be circular references");
    if (circular) {
      return false;
    }
    if (a === b2) {
      return true;
    }
    if (shallow && level > 1) {
      return false;
    }
    refSet.add(a);
    var newLevel = level + 1;
    if (Array.isArray(a)) {
      if (!Array.isArray(b2) || a.length !== b2.length) {
        return false;
      }
      for (var i = 0; i < a.length; i++) {
        if (!deepEqual(a[i], b2[i], newLevel)) {
          return false;
        }
      }
      return true;
    }
    if (a && b2 && _typeof(a) === "object" && _typeof(b2) === "object") {
      var keys2 = Object.keys(a);
      if (keys2.length !== Object.keys(b2).length) {
        return false;
      }
      return keys2.every(function (key) {
        return deepEqual(a[key], b2[key], newLevel);
      });
    }
    return false;
  }
  return deepEqual(obj1, obj2);
}
var HOOK_MARK$1 = "RC_FORM_INTERNAL_HOOKS";
var warningFunc$1 = function warningFunc() {
  warningOnce(false, "Can not find FormContext. Please make sure you wrap Field under Form.");
};
var Context$2 = /* @__PURE__ */ reactExports.createContext({
  getFieldValue: warningFunc$1,
  getFieldsValue: warningFunc$1,
  getFieldError: warningFunc$1,
  getFieldWarning: warningFunc$1,
  getFieldsError: warningFunc$1,
  isFieldsTouched: warningFunc$1,
  isFieldTouched: warningFunc$1,
  isFieldValidating: warningFunc$1,
  isFieldsValidating: warningFunc$1,
  resetFields: warningFunc$1,
  setFields: warningFunc$1,
  setFieldValue: warningFunc$1,
  setFieldsValue: warningFunc$1,
  validateFields: warningFunc$1,
  submit: warningFunc$1,
  getInternalHooks: function getInternalHooks() {
    warningFunc$1();
    return {
      dispatch: warningFunc$1,
      initEntityValue: warningFunc$1,
      registerField: warningFunc$1,
      useSubscribe: warningFunc$1,
      setInitialValues: warningFunc$1,
      destroyForm: warningFunc$1,
      setCallbacks: warningFunc$1,
      registerWatch: warningFunc$1,
      getFields: warningFunc$1,
      setValidateMessages: warningFunc$1,
      setPreserve: warningFunc$1,
      getInitialValue: warningFunc$1
    };
  }
});
var ListContext$1 = /* @__PURE__ */ reactExports.createContext(null);
function toArray$3(value2) {
  if (value2 === void 0 || value2 === null) {
    return [];
  }
  return Array.isArray(value2) ? value2 : [value2];
}
function isFormInstance$1(form) {
  return form && !!form._init;
}
var define_process_env_default = {};
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p22) {
    o2.__proto__ = p22;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance2 = new Constructor();
      if (Class2)
        _setPrototypeOf(instance2, Class2.prototype);
      return instance2;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
var formatRegExp = /%[sdj%]/g;
var warning$1 = function warning2() {
};
if (typeof process !== "undefined" && define_process_env_default && false) {
  warning$1 = function warning3(type4, errors) {
    if (typeof console !== "undefined" && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING === "undefined") {
      if (errors.every(function (e2) {
        return typeof e2 === "string";
      })) {
        console.warn(type4, errors);
      }
    }
  };
}
function convertFieldsError(errors) {
  if (!errors || !errors.length)
    return null;
  var fields = {};
  errors.forEach(function (error2) {
    var field = error2.field;
    fields[field] = fields[field] || [];
    fields[field].push(error2);
  });
  return fields;
}
function format(template) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  var i = 0;
  var len = args.length;
  if (typeof template === "function") {
    return template.apply(null, args);
  }
  if (typeof template === "string") {
    var str2 = template.replace(formatRegExp, function (x) {
      if (x === "%%") {
        return "%";
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case "%s":
          return String(args[i++]);
        case "%d":
          return Number(args[i++]);
        case "%j":
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return "[Circular]";
          }
          break;
        default:
          return x;
      }
    });
    return str2;
  }
  return template;
}
function isNativeStringType(type4) {
  return type4 === "string" || type4 === "url" || type4 === "hex" || type4 === "email" || type4 === "date" || type4 === "pattern";
}
function isEmptyValue(value2, type4) {
  if (value2 === void 0 || value2 === null) {
    return true;
  }
  if (type4 === "array" && Array.isArray(value2) && !value2.length) {
    return true;
  }
  if (isNativeStringType(type4) && typeof value2 === "string" && !value2) {
    return true;
  }
  return false;
}
function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total2 = 0;
  var arrLength = arr.length;
  function count(errors) {
    results.push.apply(results, errors || []);
    total2++;
    if (total2 === arrLength) {
      callback(results);
    }
  }
  arr.forEach(function (a) {
    func(a, count);
  });
}
function asyncSerialArray(arr, func, callback) {
  var index2 = 0;
  var arrLength = arr.length;
  function next2(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index2;
    index2 = index2 + 1;
    if (original < arrLength) {
      func(arr[original], next2);
    } else {
      callback([]);
    }
  }
  next2([]);
}
function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function (k2) {
    ret.push.apply(ret, objArr[k2] || []);
  });
  return ret;
}
var AsyncValidationError = /* @__PURE__ */ function (_Error) {
  _inheritsLoose(AsyncValidationError2, _Error);
  function AsyncValidationError2(errors, fields) {
    var _this;
    _this = _Error.call(this, "Async Validation Error") || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }
  return AsyncValidationError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function asyncMap(objArr, option2, func, callback, source) {
  if (option2.first) {
    var _pending = new Promise(function (resolve, reject) {
      var next2 = function next22(errors) {
        callback(errors);
        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);
      };
      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next2);
    });
    _pending["catch"](function (e2) {
      return e2;
    });
    return _pending;
  }
  var firstFields = option2.firstFields === true ? Object.keys(objArr) : option2.firstFields || [];
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total2 = 0;
  var results = [];
  var pending = new Promise(function (resolve, reject) {
    var next2 = function next22(errors) {
      results.push.apply(results, errors);
      total2++;
      if (total2 === objArrLength) {
        callback(results);
        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);
      }
    };
    if (!objArrKeys.length) {
      callback(results);
      resolve(source);
    }
    objArrKeys.forEach(function (key) {
      var arr = objArr[key];
      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next2);
      } else {
        asyncParallelArray(arr, func, next2);
      }
    });
  });
  pending["catch"](function (e2) {
    return e2;
  });
  return pending;
}
function isErrorObj(obj) {
  return !!(obj && obj.message !== void 0);
}
function getValue$1(value2, path) {
  var v2 = value2;
  for (var i = 0; i < path.length; i++) {
    if (v2 == void 0) {
      return v2;
    }
    v2 = v2[path[i]];
  }
  return v2;
}
function complementError(rule, source) {
  return function (oe) {
    var fieldValue;
    if (rule.fullFields) {
      fieldValue = getValue$1(source, rule.fullFields);
    } else {
      fieldValue = source[oe.field || rule.fullField];
    }
    if (isErrorObj(oe)) {
      oe.field = oe.field || rule.fullField;
      oe.fieldValue = fieldValue;
      return oe;
    }
    return {
      message: typeof oe === "function" ? oe() : oe,
      fieldValue,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value2 = source[s];
        if (typeof value2 === "object" && typeof target[s] === "object") {
          target[s] = _extends({}, target[s], value2);
        } else {
          target[s] = value2;
        }
      }
    }
  }
  return target;
}
var required$1 = function required(rule, value2, source, errors, options2, type4) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value2, type4 || rule.type))) {
    errors.push(format(options2.messages.required, rule.fullField));
  }
};
var whitespace$1 = function whitespace2(rule, value2, source, errors, options2) {
  if (/^\s+$/.test(value2) || value2 === "") {
    errors.push(format(options2.messages.whitespace, rule.fullField));
  }
};
var urlReg;
var getUrlRegex = function () {
  if (urlReg) {
    return urlReg;
  }
  var word = "[a-fA-F\\d:]";
  var b2 = function b22(options2) {
    return options2 && options2.includeBoundaries ? "(?:(?<=\\s|^)(?=" + word + ")|(?<=" + word + ")(?=\\s|$))" : "";
  };
  var v4 = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}";
  var v6seg = "[a-fA-F\\d]{1,4}";
  var v6 = ("\n(?:\n(?:" + v6seg + ":){7}(?:" + v6seg + "|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:" + v6seg + ":){6}(?:" + v4 + "|:" + v6seg + "|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:" + v6seg + ":){5}(?::" + v4 + "|(?::" + v6seg + "){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:" + v6seg + ":){4}(?:(?::" + v6seg + "){0,1}:" + v4 + "|(?::" + v6seg + "){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:" + v6seg + ":){3}(?:(?::" + v6seg + "){0,2}:" + v4 + "|(?::" + v6seg + "){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:" + v6seg + ":){2}(?:(?::" + v6seg + "){0,3}:" + v4 + "|(?::" + v6seg + "){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:" + v6seg + ":){1}(?:(?::" + v6seg + "){0,4}:" + v4 + "|(?::" + v6seg + "){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::" + v6seg + "){0,5}:" + v4 + "|(?::" + v6seg + "){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n").replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim();
  var v46Exact = new RegExp("(?:^" + v4 + "$)|(?:^" + v6 + "$)");
  var v4exact = new RegExp("^" + v4 + "$");
  var v6exact = new RegExp("^" + v6 + "$");
  var ip = function ip2(options2) {
    return options2 && options2.exact ? v46Exact : new RegExp("(?:" + b2(options2) + v4 + b2(options2) + ")|(?:" + b2(options2) + v6 + b2(options2) + ")", "g");
  };
  ip.v4 = function (options2) {
    return options2 && options2.exact ? v4exact : new RegExp("" + b2(options2) + v4 + b2(options2), "g");
  };
  ip.v6 = function (options2) {
    return options2 && options2.exact ? v6exact : new RegExp("" + b2(options2) + v6 + b2(options2), "g");
  };
  var protocol = "(?:(?:[a-z]+:)?//)";
  var auth = "(?:\\S+(?::\\S*)?@)?";
  var ipv4 = ip.v4().source;
  var ipv6 = ip.v6().source;
  var host = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)";
  var domain = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*";
  var tld = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))";
  var port = "(?::\\d{2,5})?";
  var path = '(?:[/?#][^\\s"]*)?';
  var regex2 = "(?:" + protocol + "|www\\.)" + auth + "(?:localhost|" + ipv4 + "|" + ipv6 + "|" + host + domain + tld + ")" + port + path;
  urlReg = new RegExp("(?:^" + regex2 + "$)", "i");
  return urlReg;
};
var pattern$2 = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
  // url: new RegExp(
  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
  //   'i',
  // ),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value2) {
    return types.number(value2) && parseInt(value2, 10) === value2;
  },
  "float": function float(value2) {
    return types.number(value2) && !types.integer(value2);
  },
  array: function array(value2) {
    return Array.isArray(value2);
  },
  regexp: function regexp(value2) {
    if (value2 instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value2);
    } catch (e2) {
      return false;
    }
  },
  date: function date(value2) {
    return typeof value2.getTime === "function" && typeof value2.getMonth === "function" && typeof value2.getYear === "function" && !isNaN(value2.getTime());
  },
  number: function number(value2) {
    if (isNaN(value2)) {
      return false;
    }
    return typeof value2 === "number";
  },
  object: function object(value2) {
    return typeof value2 === "object" && !types.array(value2);
  },
  method: function method(value2) {
    return typeof value2 === "function";
  },
  email: function email(value2) {
    return typeof value2 === "string" && value2.length <= 320 && !!value2.match(pattern$2.email);
  },
  url: function url(value2) {
    return typeof value2 === "string" && value2.length <= 2048 && !!value2.match(getUrlRegex());
  },
  hex: function hex(value2) {
    return typeof value2 === "string" && !!value2.match(pattern$2.hex);
  }
};
var type$1 = function type(rule, value2, source, errors, options2) {
  if (rule.required && value2 === void 0) {
    required$1(rule, value2, source, errors, options2);
    return;
  }
  var custom = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value2)) {
      errors.push(format(options2.messages.types[ruleType], rule.fullField, rule.type));
    }
  } else if (ruleType && typeof value2 !== rule.type) {
    errors.push(format(options2.messages.types[ruleType], rule.fullField, rule.type));
  }
};
var range = function range2(rule, value2, source, errors, options2) {
  var len = typeof rule.len === "number";
  var min = typeof rule.min === "number";
  var max = typeof rule.max === "number";
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value2;
  var key = null;
  var num2 = typeof value2 === "number";
  var str2 = typeof value2 === "string";
  var arr = Array.isArray(value2);
  if (num2) {
    key = "number";
  } else if (str2) {
    key = "string";
  } else if (arr) {
    key = "array";
  }
  if (!key) {
    return false;
  }
  if (arr) {
    val = value2.length;
  }
  if (str2) {
    val = value2.replace(spRegexp, "_").length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format(options2.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(format(options2.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(format(options2.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(format(options2.messages[key].range, rule.fullField, rule.min, rule.max));
  }
};
var ENUM$1 = "enum";
var enumerable$1 = function enumerable(rule, value2, source, errors, options2) {
  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];
  if (rule[ENUM$1].indexOf(value2) === -1) {
    errors.push(format(options2.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(", ")));
  }
};
var pattern$1 = function pattern(rule, value2, source, errors, options2) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value2)) {
        errors.push(format(options2.messages.pattern.mismatch, rule.fullField, value2, rule.pattern));
      }
    } else if (typeof rule.pattern === "string") {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value2)) {
        errors.push(format(options2.messages.pattern.mismatch, rule.fullField, value2, rule.pattern));
      }
    }
  }
};
var rules = {
  required: required$1,
  whitespace: whitespace$1,
  type: type$1,
  range,
  "enum": enumerable$1,
  pattern: pattern$1
};
var string = function string2(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2, "string");
    if (!isEmptyValue(value2, "string")) {
      rules.type(rule, value2, source, errors, options2);
      rules.range(rule, value2, source, errors, options2);
      rules.pattern(rule, value2, source, errors, options2);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value2, source, errors, options2);
      }
    }
  }
  callback(errors);
};
var method2 = function method3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var number2 = function number3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (value2 === "") {
      value2 = void 0;
    }
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
      rules.range(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var _boolean = function _boolean2(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var regexp2 = function regexp3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (!isEmptyValue(value2)) {
      rules.type(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var integer2 = function integer3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
      rules.range(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var floatFn = function floatFn2(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
      rules.range(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var array2 = function array3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((value2 === void 0 || value2 === null) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2, "array");
    if (value2 !== void 0 && value2 !== null) {
      rules.type(rule, value2, source, errors, options2);
      rules.range(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var object2 = function object3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules.type(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var ENUM = "enum";
var enumerable2 = function enumerable3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (value2 !== void 0) {
      rules[ENUM](rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var pattern2 = function pattern3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (!isEmptyValue(value2, "string")) {
      rules.pattern(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var date2 = function date3(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2, "date") && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
    if (!isEmptyValue(value2, "date")) {
      var dateObject;
      if (value2 instanceof Date) {
        dateObject = value2;
      } else {
        dateObject = new Date(value2);
      }
      rules.type(rule, dateObject, source, errors, options2);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options2);
      }
    }
  }
  callback(errors);
};
var required2 = function required3(rule, value2, callback, source, options2) {
  var errors = [];
  var type4 = Array.isArray(value2) ? "array" : typeof value2;
  rules.required(rule, value2, source, errors, options2, type4);
  callback(errors);
};
var type2 = function type3(rule, value2, callback, source, options2) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2, ruleType);
    if (!isEmptyValue(value2, ruleType)) {
      rules.type(rule, value2, source, errors, options2);
    }
  }
  callback(errors);
};
var any = function any2(rule, value2, callback, source, options2) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value2) && !rule.required) {
      return callback();
    }
    rules.required(rule, value2, source, errors, options2);
  }
  callback(errors);
};
var validators = {
  string,
  method: method2,
  number: number2,
  "boolean": _boolean,
  regexp: regexp2,
  integer: integer2,
  "float": floatFn,
  array: array2,
  object: object2,
  "enum": enumerable2,
  pattern: pattern2,
  date: date2,
  url: type2,
  hex: type2,
  email: type2,
  required: required2,
  any
};
function newMessages() {
  return {
    "default": "Validation error on field %s",
    required: "%s is required",
    "enum": "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      "boolean": "%s is not a %s",
      integer: "%s is not an %s",
      "float": "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function clone() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();
var Schema = /* @__PURE__ */ function () {
  function Schema2(descriptor) {
    this.rules = null;
    this._messages = messages;
    this.define(descriptor);
  }
  var _proto = Schema2.prototype;
  _proto.define = function define(rules2) {
    var _this = this;
    if (!rules2) {
      throw new Error("Cannot configure a schema with no rules");
    }
    if (typeof rules2 !== "object" || Array.isArray(rules2)) {
      throw new Error("Rules must be an object");
    }
    this.rules = {};
    Object.keys(rules2).forEach(function (name2) {
      var item2 = rules2[name2];
      _this.rules[name2] = Array.isArray(item2) ? item2 : [item2];
    });
  };
  _proto.messages = function messages2(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  };
  _proto.validate = function validate(source_, o, oc) {
    var _this2 = this;
    if (o === void 0) {
      o = {};
    }
    if (oc === void 0) {
      oc = function oc2() {
      };
    }
    var source = source_;
    var options2 = o;
    var callback = oc;
    if (typeof options2 === "function") {
      callback = options2;
      options2 = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback(null, source);
      }
      return Promise.resolve(source);
    }
    function complete(results) {
      var errors = [];
      var fields = {};
      function add(e2) {
        if (Array.isArray(e2)) {
          var _errors;
          errors = (_errors = errors).concat.apply(_errors, e2);
        } else {
          errors.push(e2);
        }
      }
      for (var i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        callback(null, source);
      } else {
        fields = convertFieldsError(errors);
        callback(errors, fields);
      }
    }
    if (options2.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options2.messages);
      options2.messages = messages$1;
    } else {
      options2.messages = this.messages();
    }
    var series = {};
    var keys2 = options2.keys || Object.keys(this.rules);
    keys2.forEach(function (z) {
      var arr = _this2.rules[z];
      var value2 = source[z];
      arr.forEach(function (r2) {
        var rule = r2;
        if (typeof rule.transform === "function") {
          if (source === source_) {
            source = _extends({}, source);
          }
          value2 = source[z] = rule.transform(value2);
        }
        if (typeof rule === "function") {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends({}, rule);
        }
        rule.validator = _this2.getValidationMethod(rule);
        if (!rule.validator) {
          return;
        }
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this2.getType(rule);
        series[z] = series[z] || [];
        series[z].push({
          rule,
          value: value2,
          source,
          field: z
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options2, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === "object" || rule.type === "array") && (typeof rule.fields === "object" || typeof rule.defaultField === "object");
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullField(key, schema) {
        return _extends({}, schema, {
          fullField: rule.fullField + "." + key,
          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key]) : [key]
        });
      }
      function cb(e2) {
        if (e2 === void 0) {
          e2 = [];
        }
        var errorList = Array.isArray(e2) ? e2 : [e2];
        if (!options2.suppressWarning && errorList.length) {
          Schema2.warning("async-validator:", errorList);
        }
        if (errorList.length && rule.message !== void 0) {
          errorList = [].concat(rule.message);
        }
        var filledErrors = errorList.map(complementError(rule, source));
        if (options2.first && filledErrors.length) {
          errorFields[rule.field] = 1;
          return doIt(filledErrors);
        }
        if (!deep) {
          doIt(filledErrors);
        } else {
          if (rule.required && !data.value) {
            if (rule.message !== void 0) {
              filledErrors = [].concat(rule.message).map(complementError(rule, source));
            } else if (options2.error) {
              filledErrors = [options2.error(rule, format(options2.messages.required, rule.field))];
            }
            return doIt(filledErrors);
          }
          var fieldsSchema = {};
          if (rule.defaultField) {
            Object.keys(data.value).map(function (key) {
              fieldsSchema[key] = rule.defaultField;
            });
          }
          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);
          var paredFieldsSchema = {};
          Object.keys(fieldsSchema).forEach(function (field) {
            var fieldSchema = fieldsSchema[field];
            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];
            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));
          });
          var schema = new Schema2(paredFieldsSchema);
          schema.messages(options2.messages);
          if (data.rule.options) {
            data.rule.options.messages = options2.messages;
            data.rule.options.error = options2.error;
          }
          schema.validate(data.value, data.rule.options || options2, function (errs) {
            var finalErrors = [];
            if (filledErrors && filledErrors.length) {
              finalErrors.push.apply(finalErrors, filledErrors);
            }
            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }
            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }
      var res;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options2);
      } else if (rule.validator) {
        try {
          res = rule.validator(rule, data.value, cb, data.source, options2);
        } catch (error2) {
          console.error == null ? void 0 : console.error(error2);
          if (!options2.suppressValidatorError) {
            setTimeout(function () {
              throw error2;
            }, 0);
          }
          cb(error2.message);
        }
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(typeof rule.message === "function" ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e2) {
          return cb(e2);
        });
      }
    }, function (results) {
      complete(results);
    }, source);
  };
  _proto.getType = function getType(rule) {
    if (rule.type === void 0 && rule.pattern instanceof RegExp) {
      rule.type = "pattern";
    }
    if (typeof rule.validator !== "function" && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format("Unknown rule type %s", rule.type));
    }
    return rule.type || "string";
  };
  _proto.getValidationMethod = function getValidationMethod(rule) {
    if (typeof rule.validator === "function") {
      return rule.validator;
    }
    var keys2 = Object.keys(rule);
    var messageIndex = keys2.indexOf("message");
    if (messageIndex !== -1) {
      keys2.splice(messageIndex, 1);
    }
    if (keys2.length === 1 && keys2[0] === "required") {
      return validators.required;
    }
    return validators[this.getType(rule)] || void 0;
  };
  return Schema2;
}();
Schema.register = function register2(type4, validator) {
  if (typeof validator !== "function") {
    throw new Error("Cannot register a validator by type, validator is not a function");
  }
  validators[type4] = validator;
};
Schema.warning = warning$1;
Schema.messages = messages;
Schema.validators = validators;
var typeTemplate$2 = "'${name}' is not a valid ${type}";
var defaultValidateMessages$1 = {
  default: "Validation error on field '${name}'",
  required: "'${name}' is required",
  enum: "'${name}' must be one of [${enum}]",
  whitespace: "'${name}' cannot be empty",
  date: {
    format: "'${name}' is invalid for format date",
    parse: "'${name}' could not be parsed as date",
    invalid: "'${name}' is invalid date"
  },
  types: {
    string: typeTemplate$2,
    method: typeTemplate$2,
    array: typeTemplate$2,
    object: typeTemplate$2,
    number: typeTemplate$2,
    date: typeTemplate$2,
    boolean: typeTemplate$2,
    integer: typeTemplate$2,
    float: typeTemplate$2,
    regexp: typeTemplate$2,
    email: typeTemplate$2,
    url: typeTemplate$2,
    hex: typeTemplate$2
  },
  string: {
    len: "'${name}' must be exactly ${len} characters",
    min: "'${name}' must be at least ${min} characters",
    max: "'${name}' cannot be longer than ${max} characters",
    range: "'${name}' must be between ${min} and ${max} characters"
  },
  number: {
    len: "'${name}' must equal ${len}",
    min: "'${name}' cannot be less than ${min}",
    max: "'${name}' cannot be greater than ${max}",
    range: "'${name}' must be between ${min} and ${max}"
  },
  array: {
    len: "'${name}' must be exactly ${len} in length",
    min: "'${name}' cannot be less than ${min} in length",
    max: "'${name}' cannot be greater than ${max} in length",
    range: "'${name}' must be between ${min} and ${max} in length"
  },
  pattern: {
    mismatch: "'${name}' does not match pattern ${pattern}"
  }
};
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
function get(entity, path) {
  var current = entity;
  for (var i = 0; i < path.length; i += 1) {
    if (current === null || current === void 0) {
      return void 0;
    }
    current = current[path[i]];
  }
  return current;
}
function internalSet(entity, paths, value2, removeIfUndefined) {
  if (!paths.length) {
    return value2;
  }
  var _paths = _toArray(paths), path = _paths[0], restPath = _paths.slice(1);
  var clone;
  if (!entity && typeof path === "number") {
    clone = [];
  } else if (Array.isArray(entity)) {
    clone = _toConsumableArray(entity);
  } else {
    clone = _objectSpread2({}, entity);
  }
  if (removeIfUndefined && value2 === void 0 && restPath.length === 1) {
    delete clone[path][restPath[0]];
  } else {
    clone[path] = internalSet(clone[path], restPath, value2, removeIfUndefined);
  }
  return clone;
}
function set(entity, paths, value2) {
  var removeIfUndefined = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  if (paths.length && removeIfUndefined && value2 === void 0 && !get(entity, paths.slice(0, -1))) {
    return entity;
  }
  return internalSet(entity, paths, value2, removeIfUndefined);
}
function isObject(obj) {
  return _typeof(obj) === "object" && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;
}
function createEmpty(source) {
  return Array.isArray(source) ? [] : {};
}
var keys = typeof Reflect === "undefined" ? Object.keys : Reflect.ownKeys;
function merge$1() {
  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }
  var clone = createEmpty(sources[0]);
  sources.forEach(function (src) {
    function internalMerge(path, parentLoopSet) {
      var loopSet = new Set(parentLoopSet);
      var value2 = get(src, path);
      var isArr = Array.isArray(value2);
      if (isArr || isObject(value2)) {
        if (!loopSet.has(value2)) {
          loopSet.add(value2);
          var originValue = get(clone, path);
          if (isArr) {
            clone = set(clone, path, []);
          } else if (!originValue || _typeof(originValue) !== "object") {
            clone = set(clone, path, createEmpty(value2));
          }
          keys(value2).forEach(function (key) {
            internalMerge([].concat(_toConsumableArray(path), [key]), loopSet);
          });
        }
      } else {
        clone = set(clone, path, value2);
      }
    }
    internalMerge([]);
  });
  return clone;
}
var AsyncValidator$1 = Schema;
function replaceMessage$1(template, kv) {
  return template.replace(/\$\{\w+\}/g, function (str2) {
    var key = str2.slice(2, -1);
    return kv[key];
  });
}
var CODE_LOGIC_ERROR$1 = "CODE_LOGIC_ERROR";
function validateRule$1(_x, _x2, _x3, _x4, _x5) {
  return _validateRule$1.apply(this, arguments);
}
function _validateRule$1() {
  _validateRule$1 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee2(name2, value2, rule, options2, messageVariables) {
    var cloneRule, originValidator, subRuleField, validator, messages2, result, subResults, kv, fillVariableResult;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1)
        switch (_context2.prev = _context2.next) {
          case 0:
            cloneRule = _objectSpread2({}, rule);
            delete cloneRule.ruleIndex;
            AsyncValidator$1.warning = function () {
              return void 0;
            };
            if (cloneRule.validator) {
              originValidator = cloneRule.validator;
              cloneRule.validator = function () {
                try {
                  return originValidator.apply(void 0, arguments);
                } catch (error2) {
                  console.error(error2);
                  return Promise.reject(CODE_LOGIC_ERROR$1);
                }
              };
            }
            subRuleField = null;
            if (cloneRule && cloneRule.type === "array" && cloneRule.defaultField) {
              subRuleField = cloneRule.defaultField;
              delete cloneRule.defaultField;
            }
            validator = new AsyncValidator$1(_defineProperty({}, name2, [cloneRule]));
            messages2 = merge$1(defaultValidateMessages$1, options2.validateMessages);
            validator.messages(messages2);
            result = [];
            _context2.prev = 10;
            _context2.next = 13;
            return Promise.resolve(validator.validate(_defineProperty({}, name2, value2), _objectSpread2({}, options2)));
          case 13:
            _context2.next = 18;
            break;
          case 15:
            _context2.prev = 15;
            _context2.t0 = _context2["catch"](10);
            if (_context2.t0.errors) {
              result = _context2.t0.errors.map(function (_ref4, index2) {
                var message2 = _ref4.message;
                var mergedMessage = message2 === CODE_LOGIC_ERROR$1 ? messages2.default : message2;
                return /* @__PURE__ */ reactExports.isValidElement(mergedMessage) ? (
                  // Wrap ReactNode with `key`
                  /* @__PURE__ */ reactExports.cloneElement(mergedMessage, {
                  key: "error_".concat(index2)
                })
                ) : mergedMessage;
              });
            }
          case 18:
            if (!(!result.length && subRuleField)) {
              _context2.next = 23;
              break;
            }
            _context2.next = 21;
            return Promise.all(value2.map(function (subValue, i) {
              return validateRule$1("".concat(name2, ".").concat(i), subValue, subRuleField, options2, messageVariables);
            }));
          case 21:
            subResults = _context2.sent;
            return _context2.abrupt("return", subResults.reduce(function (prev2, errors) {
              return [].concat(_toConsumableArray(prev2), _toConsumableArray(errors));
            }, []));
          case 23:
            kv = _objectSpread2(_objectSpread2({}, rule), {}, {
              name: name2,
              enum: (rule.enum || []).join(", ")
            }, messageVariables);
            fillVariableResult = result.map(function (error2) {
              if (typeof error2 === "string") {
                return replaceMessage$1(error2, kv);
              }
              return error2;
            });
            return _context2.abrupt("return", fillVariableResult);
          case 26:
          case "end":
            return _context2.stop();
        }
    }, _callee2, null, [[10, 15]]);
  }));
  return _validateRule$1.apply(this, arguments);
}
function validateRules$1(namePath, value2, rules2, options2, validateFirst, messageVariables) {
  var name2 = namePath.join(".");
  var filledRules = rules2.map(function (currentRule, ruleIndex) {
    var originValidatorFunc = currentRule.validator;
    var cloneRule = _objectSpread2(_objectSpread2({}, currentRule), {}, {
      ruleIndex
    });
    if (originValidatorFunc) {
      cloneRule.validator = function (rule, val, callback) {
        var hasPromise = false;
        var wrappedCallback = function wrappedCallback2() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          Promise.resolve().then(function () {
            warningOnce(!hasPromise, "Your validator function has already return a promise. `callback` will be ignored.");
            if (!hasPromise) {
              callback.apply(void 0, args);
            }
          });
        };
        var promise = originValidatorFunc(rule, val, wrappedCallback);
        hasPromise = promise && typeof promise.then === "function" && typeof promise.catch === "function";
        warningOnce(hasPromise, "`callback` is deprecated. Please return a promise instead.");
        if (hasPromise) {
          promise.then(function () {
            callback();
          }).catch(function (err) {
            callback(err || " ");
          });
        }
      };
    }
    return cloneRule;
  }).sort(function (_ref, _ref2) {
    var w1 = _ref.warningOnly, i1 = _ref.ruleIndex;
    var w2 = _ref2.warningOnly, i2 = _ref2.ruleIndex;
    if (!!w1 === !!w2) {
      return i1 - i2;
    }
    if (w1) {
      return 1;
    }
    return -1;
  });
  var summaryPromise;
  if (validateFirst === true) {
    summaryPromise = new Promise(/* @__PURE__ */ function () {
      var _ref3 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee(resolve, reject) {
        var i, rule, errors;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                i = 0;
              case 1:
                if (!(i < filledRules.length)) {
                  _context.next = 12;
                  break;
                }
                rule = filledRules[i];
                _context.next = 5;
                return validateRule$1(name2, value2, rule, options2, messageVariables);
              case 5:
                errors = _context.sent;
                if (!errors.length) {
                  _context.next = 9;
                  break;
                }
                reject([{
                  errors,
                  rule
                }]);
                return _context.abrupt("return");
              case 9:
                i += 1;
                _context.next = 1;
                break;
              case 12:
                resolve([]);
              case 13:
              case "end":
                return _context.stop();
            }
        }, _callee);
      }));
      return function (_x6, _x7) {
        return _ref3.apply(this, arguments);
      };
    }());
  } else {
    var rulePromises = filledRules.map(function (rule) {
      return validateRule$1(name2, value2, rule, options2, messageVariables).then(function (errors) {
        return {
          errors,
          rule
        };
      });
    });
    summaryPromise = (validateFirst ? finishOnFirstFailed$1(rulePromises) : finishOnAllFailed$1(rulePromises)).then(function (errors) {
      return Promise.reject(errors);
    });
  }
  summaryPromise.catch(function (e2) {
    return e2;
  });
  return summaryPromise;
}
function finishOnAllFailed$1(_x8) {
  return _finishOnAllFailed$1.apply(this, arguments);
}
function _finishOnAllFailed$1() {
  _finishOnAllFailed$1 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee3(rulePromises) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1)
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", Promise.all(rulePromises).then(function (errorsList) {
              var _ref5;
              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));
              return errors;
            }));
          case 1:
          case "end":
            return _context3.stop();
        }
    }, _callee3);
  }));
  return _finishOnAllFailed$1.apply(this, arguments);
}
function finishOnFirstFailed$1(_x9) {
  return _finishOnFirstFailed$1.apply(this, arguments);
}
function _finishOnFirstFailed$1() {
  _finishOnFirstFailed$1 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee4(rulePromises) {
    var count;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1)
        switch (_context4.prev = _context4.next) {
          case 0:
            count = 0;
            return _context4.abrupt("return", new Promise(function (resolve) {
              rulePromises.forEach(function (promise) {
                promise.then(function (ruleError) {
                  if (ruleError.errors.length) {
                    resolve([ruleError]);
                  }
                  count += 1;
                  if (count === rulePromises.length) {
                    resolve([]);
                  }
                });
              });
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
    }, _callee4);
  }));
  return _finishOnFirstFailed$1.apply(this, arguments);
}
function getNamePath$1(path) {
  return toArray$3(path);
}
function cloneByNamePathList$1(store, namePathList) {
  var newStore = {};
  namePathList.forEach(function (namePath) {
    var value2 = get(store, namePath);
    newStore = set(newStore, namePath, value2);
  });
  return newStore;
}
function containsNamePath$1(namePathList, namePath) {
  var partialMatch = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  return namePathList && namePathList.some(function (path) {
    return matchNamePath$1(namePath, path, partialMatch);
  });
}
function matchNamePath$1(namePath, subNamePath) {
  var partialMatch = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!namePath || !subNamePath) {
    return false;
  }
  if (!partialMatch && namePath.length !== subNamePath.length) {
    return false;
  }
  return subNamePath.every(function (nameUnit, i) {
    return namePath[i] === nameUnit;
  });
}
function isSimilar$1(source, target) {
  if (source === target) {
    return true;
  }
  if (!source && target || source && !target) {
    return false;
  }
  if (!source || !target || _typeof(source) !== "object" || _typeof(target) !== "object") {
    return false;
  }
  var sourceKeys = Object.keys(source);
  var targetKeys = Object.keys(target);
  var keys2 = new Set([].concat(sourceKeys, targetKeys));
  return _toConsumableArray(keys2).every(function (key) {
    var sourceValue = source[key];
    var targetValue = target[key];
    if (typeof sourceValue === "function" && typeof targetValue === "function") {
      return true;
    }
    return sourceValue === targetValue;
  });
}
function defaultGetValueFromEvent$1(valuePropName) {
  var event = arguments.length <= 1 ? void 0 : arguments[1];
  if (event && event.target && _typeof(event.target) === "object" && valuePropName in event.target) {
    return event.target[valuePropName];
  }
  return event;
}
function move$1(array4, moveIndex, toIndex) {
  var length2 = array4.length;
  if (moveIndex < 0 || moveIndex >= length2 || toIndex < 0 || toIndex >= length2) {
    return array4;
  }
  var item2 = array4[moveIndex];
  var diff = moveIndex - toIndex;
  if (diff > 0) {
    return [].concat(_toConsumableArray(array4.slice(0, toIndex)), [item2], _toConsumableArray(array4.slice(toIndex, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, length2)));
  }
  if (diff < 0) {
    return [].concat(_toConsumableArray(array4.slice(0, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, toIndex + 1)), [item2], _toConsumableArray(array4.slice(toIndex + 1, length2)));
  }
  return array4;
}
var _excluded$h = ["name"];
var EMPTY_ERRORS$1 = [];
function requireUpdate$1(shouldUpdate, prev2, next2, prevValue, nextValue, info2) {
  if (typeof shouldUpdate === "function") {
    return shouldUpdate(prev2, next2, "source" in info2 ? {
      source: info2.source
    } : {});
  }
  return prevValue !== nextValue;
}
var Field$1 = /* @__PURE__ */ function (_React$Component) {
  _inherits(Field2, _React$Component);
  var _super = _createSuper(Field2);
  function Field2(props) {
    var _this;
    _classCallCheck(this, Field2);
    _this = _super.call(this, props);
    _defineProperty(_assertThisInitialized(_this), "state", {
      resetCount: 0
    });
    _defineProperty(_assertThisInitialized(_this), "cancelRegisterFunc", null);
    _defineProperty(_assertThisInitialized(_this), "mounted", false);
    _defineProperty(_assertThisInitialized(_this), "touched", false);
    _defineProperty(_assertThisInitialized(_this), "dirty", false);
    _defineProperty(_assertThisInitialized(_this), "validatePromise", void 0);
    _defineProperty(_assertThisInitialized(_this), "prevValidating", void 0);
    _defineProperty(_assertThisInitialized(_this), "errors", EMPTY_ERRORS$1);
    _defineProperty(_assertThisInitialized(_this), "warnings", EMPTY_ERRORS$1);
    _defineProperty(_assertThisInitialized(_this), "cancelRegister", function () {
      var _this$props = _this.props, preserve2 = _this$props.preserve, isListField = _this$props.isListField, name2 = _this$props.name;
      if (_this.cancelRegisterFunc) {
        _this.cancelRegisterFunc(isListField, preserve2, getNamePath$1(name2));
      }
      _this.cancelRegisterFunc = null;
    });
    _defineProperty(_assertThisInitialized(_this), "getNamePath", function () {
      var _this$props2 = _this.props, name2 = _this$props2.name, fieldContext = _this$props2.fieldContext;
      var _fieldContext$prefixN = fieldContext.prefixName, prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;
      return name2 !== void 0 ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name2)) : [];
    });
    _defineProperty(_assertThisInitialized(_this), "getRules", function () {
      var _this$props3 = _this.props, _this$props3$rules = _this$props3.rules, rules2 = _this$props3$rules === void 0 ? [] : _this$props3$rules, fieldContext = _this$props3.fieldContext;
      return rules2.map(function (rule) {
        if (typeof rule === "function") {
          return rule(fieldContext);
        }
        return rule;
      });
    });
    _defineProperty(_assertThisInitialized(_this), "refresh", function () {
      if (!_this.mounted)
        return;
      _this.setState(function (_ref) {
        var resetCount = _ref.resetCount;
        return {
          resetCount: resetCount + 1
        };
      });
    });
    _defineProperty(_assertThisInitialized(_this), "metaCache", null);
    _defineProperty(_assertThisInitialized(_this), "triggerMetaEvent", function (destroy) {
      var onMetaChange = _this.props.onMetaChange;
      if (onMetaChange) {
        var _meta = _objectSpread2(_objectSpread2({}, _this.getMeta()), {}, {
          destroy
        });
        if (!isEqual(_this.metaCache, _meta)) {
          onMetaChange(_meta);
        }
        _this.metaCache = _meta;
      } else {
        _this.metaCache = null;
      }
    });
    _defineProperty(_assertThisInitialized(_this), "onStoreChange", function (prevStore, namePathList, info2) {
      var _this$props4 = _this.props, shouldUpdate = _this$props4.shouldUpdate, _this$props4$dependen = _this$props4.dependencies, dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen, onReset = _this$props4.onReset;
      var store = info2.store;
      var namePath = _this.getNamePath();
      var prevValue = _this.getValue(prevStore);
      var curValue = _this.getValue(store);
      var namePathMatch = namePathList && containsNamePath$1(namePathList, namePath);
      if (info2.type === "valueUpdate" && info2.source === "external" && !isEqual(prevValue, curValue)) {
        _this.touched = true;
        _this.dirty = true;
        _this.validatePromise = null;
        _this.errors = EMPTY_ERRORS$1;
        _this.warnings = EMPTY_ERRORS$1;
        _this.triggerMetaEvent();
      }
      switch (info2.type) {
        case "reset":
          if (!namePathList || namePathMatch) {
            _this.touched = false;
            _this.dirty = false;
            _this.validatePromise = void 0;
            _this.errors = EMPTY_ERRORS$1;
            _this.warnings = EMPTY_ERRORS$1;
            _this.triggerMetaEvent();
            onReset === null || onReset === void 0 || onReset();
            _this.refresh();
            return;
          }
          break;
        case "remove": {
          if (shouldUpdate) {
            _this.reRender();
            return;
          }
          break;
        }
        case "setField": {
          var data = info2.data;
          if (namePathMatch) {
            if ("touched" in data) {
              _this.touched = data.touched;
            }
            if ("validating" in data && !("originRCField" in data)) {
              _this.validatePromise = data.validating ? Promise.resolve([]) : null;
            }
            if ("errors" in data) {
              _this.errors = data.errors || EMPTY_ERRORS$1;
            }
            if ("warnings" in data) {
              _this.warnings = data.warnings || EMPTY_ERRORS$1;
            }
            _this.dirty = true;
            _this.triggerMetaEvent();
            _this.reRender();
            return;
          } else if ("value" in data && containsNamePath$1(namePathList, namePath, true)) {
            _this.reRender();
            return;
          }
          if (shouldUpdate && !namePath.length && requireUpdate$1(shouldUpdate, prevStore, store, prevValue, curValue, info2)) {
            _this.reRender();
            return;
          }
          break;
        }
        case "dependenciesUpdate": {
          var dependencyList = dependencies.map(getNamePath$1);
          if (dependencyList.some(function (dependency) {
            return containsNamePath$1(info2.relatedFields, dependency);
          })) {
            _this.reRender();
            return;
          }
          break;
        }
        default:
          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate$1(shouldUpdate, prevStore, store, prevValue, curValue, info2)) {
            _this.reRender();
            return;
          }
          break;
      }
      if (shouldUpdate === true) {
        _this.reRender();
      }
    });
    _defineProperty(_assertThisInitialized(_this), "validateRules", function (options2) {
      var namePath = _this.getNamePath();
      var currentValue = _this.getValue();
      var _ref2 = options2 || {}, triggerName = _ref2.triggerName, _ref2$validateOnly = _ref2.validateOnly, validateOnly = _ref2$validateOnly === void 0 ? false : _ref2$validateOnly;
      var rootPromise = Promise.resolve().then(/* @__PURE__ */ _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
        var _this$props5, _this$props5$validate, validateFirst, messageVariables, validateDebounce, filteredRules, promise;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.mounted) {
                  _context.next = 2;
                  break;
                }
                return _context.abrupt("return", []);
              case 2:
                _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables, validateDebounce = _this$props5.validateDebounce;
                filteredRules = _this.getRules();
                if (triggerName) {
                  filteredRules = filteredRules.filter(function (rule) {
                    return rule;
                  }).filter(function (rule) {
                    var validateTrigger = rule.validateTrigger;
                    if (!validateTrigger) {
                      return true;
                    }
                    var triggerList = toArray$3(validateTrigger);
                    return triggerList.includes(triggerName);
                  });
                }
                if (!(validateDebounce && triggerName)) {
                  _context.next = 10;
                  break;
                }
                _context.next = 8;
                return new Promise(function (resolve) {
                  setTimeout(resolve, validateDebounce);
                });
              case 8:
                if (!(_this.validatePromise !== rootPromise)) {
                  _context.next = 10;
                  break;
                }
                return _context.abrupt("return", []);
              case 10:
                promise = validateRules$1(namePath, currentValue, filteredRules, options2, validateFirst, messageVariables);
                promise.catch(function (e2) {
                  return e2;
                }).then(function () {
                  var ruleErrors = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : EMPTY_ERRORS$1;
                  if (_this.validatePromise === rootPromise) {
                    var _ruleErrors$forEach;
                    _this.validatePromise = null;
                    var nextErrors = [];
                    var nextWarnings = [];
                    (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref4) {
                      var warningOnly = _ref4.rule.warningOnly, _ref4$errors = _ref4.errors, errors = _ref4$errors === void 0 ? EMPTY_ERRORS$1 : _ref4$errors;
                      if (warningOnly) {
                        nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));
                      } else {
                        nextErrors.push.apply(nextErrors, _toConsumableArray(errors));
                      }
                    });
                    _this.errors = nextErrors;
                    _this.warnings = nextWarnings;
                    _this.triggerMetaEvent();
                    _this.reRender();
                  }
                });
                return _context.abrupt("return", promise);
              case 13:
              case "end":
                return _context.stop();
            }
        }, _callee);
      })));
      if (validateOnly) {
        return rootPromise;
      }
      _this.validatePromise = rootPromise;
      _this.dirty = true;
      _this.errors = EMPTY_ERRORS$1;
      _this.warnings = EMPTY_ERRORS$1;
      _this.triggerMetaEvent();
      _this.reRender();
      return rootPromise;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldValidating", function () {
      return !!_this.validatePromise;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldTouched", function () {
      return _this.touched;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldDirty", function () {
      if (_this.dirty || _this.props.initialValue !== void 0) {
        return true;
      }
      var fieldContext = _this.props.fieldContext;
      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK$1), getInitialValue = _fieldContext$getInte.getInitialValue;
      if (getInitialValue(_this.getNamePath()) !== void 0) {
        return true;
      }
      return false;
    });
    _defineProperty(_assertThisInitialized(_this), "getErrors", function () {
      return _this.errors;
    });
    _defineProperty(_assertThisInitialized(_this), "getWarnings", function () {
      return _this.warnings;
    });
    _defineProperty(_assertThisInitialized(_this), "isListField", function () {
      return _this.props.isListField;
    });
    _defineProperty(_assertThisInitialized(_this), "isList", function () {
      return _this.props.isList;
    });
    _defineProperty(_assertThisInitialized(_this), "isPreserve", function () {
      return _this.props.preserve;
    });
    _defineProperty(_assertThisInitialized(_this), "getMeta", function () {
      _this.prevValidating = _this.isFieldValidating();
      var meta = {
        touched: _this.isFieldTouched(),
        validating: _this.prevValidating,
        errors: _this.errors,
        warnings: _this.warnings,
        name: _this.getNamePath(),
        validated: _this.validatePromise === null
      };
      return meta;
    });
    _defineProperty(_assertThisInitialized(_this), "getOnlyChild", function (children) {
      if (typeof children === "function") {
        var _meta2 = _this.getMeta();
        return _objectSpread2(_objectSpread2({}, _this.getOnlyChild(children(_this.getControlled(), _meta2, _this.props.fieldContext))), {}, {
          isFunction: true
        });
      }
      var childList = toArray$4(children);
      if (childList.length !== 1 || !/* @__PURE__ */ reactExports.isValidElement(childList[0])) {
        return {
          child: childList,
          isFunction: false
        };
      }
      return {
        child: childList[0],
        isFunction: false
      };
    });
    _defineProperty(_assertThisInitialized(_this), "getValue", function (store) {
      var getFieldsValue = _this.props.fieldContext.getFieldsValue;
      var namePath = _this.getNamePath();
      return get(store || getFieldsValue(true), namePath);
    });
    _defineProperty(_assertThisInitialized(_this), "getControlled", function () {
      var childProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _this$props6 = _this.props, name2 = _this$props6.name, trigger2 = _this$props6.trigger, validateTrigger = _this$props6.validateTrigger, getValueFromEvent = _this$props6.getValueFromEvent, normalize2 = _this$props6.normalize, valuePropName = _this$props6.valuePropName, getValueProps = _this$props6.getValueProps, fieldContext = _this$props6.fieldContext;
      var mergedValidateTrigger = validateTrigger !== void 0 ? validateTrigger : fieldContext.validateTrigger;
      var namePath = _this.getNamePath();
      var getInternalHooks22 = fieldContext.getInternalHooks, getFieldsValue = fieldContext.getFieldsValue;
      var _getInternalHooks = getInternalHooks22(HOOK_MARK$1), dispatch = _getInternalHooks.dispatch;
      var value2 = _this.getValue();
      var mergedGetValueProps = getValueProps || function (val) {
        return _defineProperty({}, valuePropName, val);
      };
      var originTriggerFunc = childProps[trigger2];
      var valueProps = name2 !== void 0 ? mergedGetValueProps(value2) : {};
      var control = _objectSpread2(_objectSpread2({}, childProps), valueProps);
      control[trigger2] = function () {
        _this.touched = true;
        _this.dirty = true;
        _this.triggerMetaEvent();
        var newValue;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (getValueFromEvent) {
          newValue = getValueFromEvent.apply(void 0, args);
        } else {
          newValue = defaultGetValueFromEvent$1.apply(void 0, [valuePropName].concat(args));
        }
        if (normalize2) {
          newValue = normalize2(newValue, value2, getFieldsValue(true));
        }
        dispatch({
          type: "updateValue",
          namePath,
          value: newValue
        });
        if (originTriggerFunc) {
          originTriggerFunc.apply(void 0, args);
        }
      };
      var validateTriggerList = toArray$3(mergedValidateTrigger || []);
      validateTriggerList.forEach(function (triggerName) {
        var originTrigger = control[triggerName];
        control[triggerName] = function () {
          if (originTrigger) {
            originTrigger.apply(void 0, arguments);
          }
          var rules2 = _this.props.rules;
          if (rules2 && rules2.length) {
            dispatch({
              type: "validateField",
              namePath,
              triggerName
            });
          }
        };
      });
      return control;
    });
    if (props.fieldContext) {
      var getInternalHooks3 = props.fieldContext.getInternalHooks;
      var _getInternalHooks2 = getInternalHooks3(HOOK_MARK$1), initEntityValue = _getInternalHooks2.initEntityValue;
      initEntityValue(_assertThisInitialized(_this));
    }
    return _this;
  }
  _createClass(Field2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props7 = this.props, shouldUpdate = _this$props7.shouldUpdate, fieldContext = _this$props7.fieldContext;
      this.mounted = true;
      if (fieldContext) {
        var getInternalHooks3 = fieldContext.getInternalHooks;
        var _getInternalHooks3 = getInternalHooks3(HOOK_MARK$1), registerField = _getInternalHooks3.registerField;
        this.cancelRegisterFunc = registerField(this);
      }
      if (shouldUpdate === true) {
        this.reRender();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelRegister();
      this.triggerMetaEvent(true);
      this.mounted = false;
    }
  }, {
    key: "reRender",
    value: function reRender() {
      if (!this.mounted)
        return;
      this.forceUpdate();
    }
  }, {
    key: "render",
    value: function render3() {
      var resetCount = this.state.resetCount;
      var children = this.props.children;
      var _this$getOnlyChild = this.getOnlyChild(children), child = _this$getOnlyChild.child, isFunction2 = _this$getOnlyChild.isFunction;
      var returnChildNode;
      if (isFunction2) {
        returnChildNode = child;
      } else if (/* @__PURE__ */ reactExports.isValidElement(child)) {
        returnChildNode = /* @__PURE__ */ reactExports.cloneElement(child, this.getControlled(child.props));
      } else {
        warningOnce(!child, "`children` of Field is not validate ReactElement.");
        returnChildNode = child;
      }
      return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, {
        key: resetCount
      }, returnChildNode);
    }
  }]);
  return Field2;
}(reactExports.Component);
_defineProperty(Field$1, "contextType", Context$2);
_defineProperty(Field$1, "defaultProps", {
  trigger: "onChange",
  valuePropName: "value"
});
function WrapperField$1(_ref6) {
  var name2 = _ref6.name, restProps = _objectWithoutProperties(_ref6, _excluded$h);
  var fieldContext = reactExports.useContext(Context$2);
  var listContext = reactExports.useContext(ListContext$1);
  var namePath = name2 !== void 0 ? getNamePath$1(name2) : void 0;
  var key = "keep";
  if (!restProps.isListField) {
    key = "_".concat((namePath || []).join("_"));
  }
  return /* @__PURE__ */ reactExports.createElement(Field$1, _extends$1({
    key,
    name: namePath,
    isListField: !!listContext
  }, restProps, {
    fieldContext
  }));
}
function List$1(_ref) {
  var name2 = _ref.name, initialValue = _ref.initialValue, children = _ref.children, rules2 = _ref.rules, validateTrigger = _ref.validateTrigger, isListField = _ref.isListField;
  var context2 = reactExports.useContext(Context$2);
  var wrapperListContext = reactExports.useContext(ListContext$1);
  var keyRef = reactExports.useRef({
    keys: [],
    id: 0
  });
  var keyManager = keyRef.current;
  var prefixName = reactExports.useMemo(function () {
    var parentPrefixName = getNamePath$1(context2.prefixName) || [];
    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath$1(name2)));
  }, [context2.prefixName, name2]);
  var fieldContext = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, context2), {}, {
      prefixName
    });
  }, [context2, prefixName]);
  var listContext = reactExports.useMemo(function () {
    return {
      getKey: function getKey(namePath) {
        var len = prefixName.length;
        var pathName = namePath[len];
        return [keyManager.keys[pathName], namePath.slice(len + 1)];
      }
    };
  }, [prefixName]);
  if (typeof children !== "function") {
    warningOnce(false, "Form.List only accepts function as children.");
    return null;
  }
  var shouldUpdate = function shouldUpdate2(prevValue, nextValue, _ref2) {
    var source = _ref2.source;
    if (source === "internal") {
      return false;
    }
    return prevValue !== nextValue;
  };
  return /* @__PURE__ */ reactExports.createElement(ListContext$1.Provider, {
    value: listContext
  }, /* @__PURE__ */ reactExports.createElement(Context$2.Provider, {
    value: fieldContext
  }, /* @__PURE__ */ reactExports.createElement(WrapperField$1, {
    name: [],
    shouldUpdate,
    rules: rules2,
    validateTrigger,
    initialValue,
    isList: true,
    isListField: isListField !== null && isListField !== void 0 ? isListField : !!wrapperListContext
  }, function (_ref3, meta) {
    var _ref3$value = _ref3.value, value2 = _ref3$value === void 0 ? [] : _ref3$value, onChange = _ref3.onChange;
    var getFieldValue = context2.getFieldValue;
    var getNewValue = function getNewValue2() {
      var values2 = getFieldValue(prefixName || []);
      return values2 || [];
    };
    var operations = {
      add: function add(defaultValue, index2) {
        var newValue = getNewValue();
        if (index2 >= 0 && index2 <= newValue.length) {
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index2)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index2)));
          onChange([].concat(_toConsumableArray(newValue.slice(0, index2)), [defaultValue], _toConsumableArray(newValue.slice(index2))));
        } else {
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);
          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));
        }
        keyManager.id += 1;
      },
      remove: function remove(index2) {
        var newValue = getNewValue();
        var indexSet = new Set(Array.isArray(index2) ? index2 : [index2]);
        if (indexSet.size <= 0) {
          return;
        }
        keyManager.keys = keyManager.keys.filter(function (_, keysIndex) {
          return !indexSet.has(keysIndex);
        });
        onChange(newValue.filter(function (_, valueIndex) {
          return !indexSet.has(valueIndex);
        }));
      },
      move: function move2(from2, to2) {
        if (from2 === to2) {
          return;
        }
        var newValue = getNewValue();
        if (from2 < 0 || from2 >= newValue.length || to2 < 0 || to2 >= newValue.length) {
          return;
        }
        keyManager.keys = move$1(keyManager.keys, from2, to2);
        onChange(move$1(newValue, from2, to2));
      }
    };
    var listValue = value2 || [];
    if (!Array.isArray(listValue)) {
      listValue = [];
    }
    return children(listValue.map(function (__, index2) {
      var key = keyManager.keys[index2];
      if (key === void 0) {
        keyManager.keys[index2] = keyManager.id;
        key = keyManager.keys[index2];
        keyManager.id += 1;
      }
      return {
        name: index2,
        key,
        isListField: true
      };
    }), operations, meta);
  })));
}
function _iterableToArrayLimit(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e2, n2, i, u2, a = [], f2 = true, o = false;
    try {
      if (i = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o)
          throw n2;
      }
    }
    return a;
  }
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function allPromiseFinish$1(promiseList) {
  var hasError = false;
  var count = promiseList.length;
  var results = [];
  if (!promiseList.length) {
    return Promise.resolve([]);
  }
  return new Promise(function (resolve, reject) {
    promiseList.forEach(function (promise, index2) {
      promise.catch(function (e2) {
        hasError = true;
        return e2;
      }).then(function (result) {
        count -= 1;
        results[index2] = result;
        if (count > 0) {
          return;
        }
        if (hasError) {
          reject(results);
        }
        resolve(results);
      });
    });
  });
}
var SPLIT$2 = "__@field_split__";
function normalize$1(namePath) {
  return namePath.map(function (cell2) {
    return "".concat(_typeof(cell2), ":").concat(cell2);
  }).join(SPLIT$2);
}
var NameMap$1 = /* @__PURE__ */ function () {
  function NameMap2() {
    _classCallCheck(this, NameMap2);
    _defineProperty(this, "kvs", /* @__PURE__ */ new Map());
  }
  _createClass(NameMap2, [{
    key: "set",
    value: function set2(key, value2) {
      this.kvs.set(normalize$1(key), value2);
    }
  }, {
    key: "get",
    value: function get2(key) {
      return this.kvs.get(normalize$1(key));
    }
  }, {
    key: "update",
    value: function update(key, updater) {
      var origin = this.get(key);
      var next2 = updater(origin);
      if (!next2) {
        this.delete(key);
      } else {
        this.set(key, next2);
      }
    }
  }, {
    key: "delete",
    value: function _delete(key) {
      this.kvs.delete(normalize$1(key));
    }
    // Since we only use this in test, let simply realize this
  }, {
    key: "map",
    value: function map(callback) {
      return _toConsumableArray(this.kvs.entries()).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value2 = _ref2[1];
        var cells = key.split(SPLIT$2);
        return callback({
          key: cells.map(function (cell2) {
            var _cell$match = cell2.match(/^([^:]*):(.*)$/), _cell$match2 = _slicedToArray(_cell$match, 3), type4 = _cell$match2[1], unit2 = _cell$match2[2];
            return type4 === "number" ? Number(unit2) : unit2;
          }),
          value: value2
        });
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = {};
      this.map(function (_ref3) {
        var key = _ref3.key, value2 = _ref3.value;
        json[key.join(".")] = value2;
        return null;
      });
      return json;
    }
  }]);
  return NameMap2;
}();
var _excluded$g = ["name"];
var FormStore$1 = /* @__PURE__ */ _createClass(function FormStore2(forceRootUpdate) {
  var _this = this;
  _classCallCheck(this, FormStore2);
  _defineProperty(this, "formHooked", false);
  _defineProperty(this, "forceRootUpdate", void 0);
  _defineProperty(this, "subscribable", true);
  _defineProperty(this, "store", {});
  _defineProperty(this, "fieldEntities", []);
  _defineProperty(this, "initialValues", {});
  _defineProperty(this, "callbacks", {});
  _defineProperty(this, "validateMessages", null);
  _defineProperty(this, "preserve", null);
  _defineProperty(this, "lastValidatePromise", null);
  _defineProperty(this, "getForm", function () {
    return {
      getFieldValue: _this.getFieldValue,
      getFieldsValue: _this.getFieldsValue,
      getFieldError: _this.getFieldError,
      getFieldWarning: _this.getFieldWarning,
      getFieldsError: _this.getFieldsError,
      isFieldsTouched: _this.isFieldsTouched,
      isFieldTouched: _this.isFieldTouched,
      isFieldValidating: _this.isFieldValidating,
      isFieldsValidating: _this.isFieldsValidating,
      resetFields: _this.resetFields,
      setFields: _this.setFields,
      setFieldValue: _this.setFieldValue,
      setFieldsValue: _this.setFieldsValue,
      validateFields: _this.validateFields,
      submit: _this.submit,
      _init: true,
      getInternalHooks: _this.getInternalHooks
    };
  });
  _defineProperty(this, "getInternalHooks", function (key) {
    if (key === HOOK_MARK$1) {
      _this.formHooked = true;
      return {
        dispatch: _this.dispatch,
        initEntityValue: _this.initEntityValue,
        registerField: _this.registerField,
        useSubscribe: _this.useSubscribe,
        setInitialValues: _this.setInitialValues,
        destroyForm: _this.destroyForm,
        setCallbacks: _this.setCallbacks,
        setValidateMessages: _this.setValidateMessages,
        getFields: _this.getFields,
        setPreserve: _this.setPreserve,
        getInitialValue: _this.getInitialValue,
        registerWatch: _this.registerWatch
      };
    }
    warningOnce(false, "`getInternalHooks` is internal usage. Should not call directly.");
    return null;
  });
  _defineProperty(this, "useSubscribe", function (subscribable) {
    _this.subscribable = subscribable;
  });
  _defineProperty(this, "prevWithoutPreserves", null);
  _defineProperty(this, "setInitialValues", function (initialValues, init) {
    _this.initialValues = initialValues || {};
    if (init) {
      var _this$prevWithoutPres;
      var nextStore = merge$1(initialValues, _this.store);
      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 || _this$prevWithoutPres.map(function (_ref) {
        var namePath = _ref.key;
        nextStore = set(nextStore, namePath, get(initialValues, namePath));
      });
      _this.prevWithoutPreserves = null;
      _this.updateStore(nextStore);
    }
  });
  _defineProperty(this, "destroyForm", function () {
    var prevWithoutPreserves = new NameMap$1();
    _this.getFieldEntities(true).forEach(function (entity) {
      if (!_this.isMergedPreserve(entity.isPreserve())) {
        prevWithoutPreserves.set(entity.getNamePath(), true);
      }
    });
    _this.prevWithoutPreserves = prevWithoutPreserves;
  });
  _defineProperty(this, "getInitialValue", function (namePath) {
    var initValue = get(_this.initialValues, namePath);
    return namePath.length ? merge$1(initValue) : initValue;
  });
  _defineProperty(this, "setCallbacks", function (callbacks) {
    _this.callbacks = callbacks;
  });
  _defineProperty(this, "setValidateMessages", function (validateMessages) {
    _this.validateMessages = validateMessages;
  });
  _defineProperty(this, "setPreserve", function (preserve2) {
    _this.preserve = preserve2;
  });
  _defineProperty(this, "watchList", []);
  _defineProperty(this, "registerWatch", function (callback) {
    _this.watchList.push(callback);
    return function () {
      _this.watchList = _this.watchList.filter(function (fn) {
        return fn !== callback;
      });
    };
  });
  _defineProperty(this, "notifyWatch", function () {
    var namePath = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    if (_this.watchList.length) {
      var values2 = _this.getFieldsValue();
      var allValues = _this.getFieldsValue(true);
      _this.watchList.forEach(function (callback) {
        callback(values2, allValues, namePath);
      });
    }
  });
  _defineProperty(this, "timeoutId", null);
  _defineProperty(this, "warningUnhooked", function () {
  });
  _defineProperty(this, "updateStore", function (nextStore) {
    _this.store = nextStore;
  });
  _defineProperty(this, "getFieldEntities", function () {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    if (!pure) {
      return _this.fieldEntities;
    }
    return _this.fieldEntities.filter(function (field) {
      return field.getNamePath().length;
    });
  });
  _defineProperty(this, "getFieldsMap", function () {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var cache2 = new NameMap$1();
    _this.getFieldEntities(pure).forEach(function (field) {
      var namePath = field.getNamePath();
      cache2.set(namePath, field);
    });
    return cache2;
  });
  _defineProperty(this, "getFieldEntitiesForNamePathList", function (nameList) {
    if (!nameList) {
      return _this.getFieldEntities(true);
    }
    var cache2 = _this.getFieldsMap(true);
    return nameList.map(function (name2) {
      var namePath = getNamePath$1(name2);
      return cache2.get(namePath) || {
        INVALIDATE_NAME_PATH: getNamePath$1(name2)
      };
    });
  });
  _defineProperty(this, "getFieldsValue", function (nameList, filterFunc) {
    _this.warningUnhooked();
    var mergedNameList;
    var mergedFilterFunc;
    var mergedStrict;
    if (nameList === true || Array.isArray(nameList)) {
      mergedNameList = nameList;
      mergedFilterFunc = filterFunc;
    } else if (nameList && _typeof(nameList) === "object") {
      mergedStrict = nameList.strict;
      mergedFilterFunc = nameList.filter;
    }
    if (mergedNameList === true && !mergedFilterFunc) {
      return _this.store;
    }
    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(mergedNameList) ? mergedNameList : null);
    var filteredNameList = [];
    fieldEntities.forEach(function (entity) {
      var _isListField, _ref3;
      var namePath = "INVALIDATE_NAME_PATH" in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();
      if (mergedStrict) {
        var _isList, _ref2;
        if ((_isList = (_ref2 = entity).isList) !== null && _isList !== void 0 && _isList.call(_ref2)) {
          return;
        }
      } else if (!mergedNameList && (_isListField = (_ref3 = entity).isListField) !== null && _isListField !== void 0 && _isListField.call(_ref3)) {
        return;
      }
      if (!mergedFilterFunc) {
        filteredNameList.push(namePath);
      } else {
        var meta = "getMeta" in entity ? entity.getMeta() : null;
        if (mergedFilterFunc(meta)) {
          filteredNameList.push(namePath);
        }
      }
    });
    return cloneByNamePathList$1(_this.store, filteredNameList.map(getNamePath$1));
  });
  _defineProperty(this, "getFieldValue", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath$1(name2);
    return get(_this.store, namePath);
  });
  _defineProperty(this, "getFieldsError", function (nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);
    return fieldEntities.map(function (entity, index2) {
      if (entity && !("INVALIDATE_NAME_PATH" in entity)) {
        return {
          name: entity.getNamePath(),
          errors: entity.getErrors(),
          warnings: entity.getWarnings()
        };
      }
      return {
        name: getNamePath$1(nameList[index2]),
        errors: [],
        warnings: []
      };
    });
  });
  _defineProperty(this, "getFieldError", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath$1(name2);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.errors;
  });
  _defineProperty(this, "getFieldWarning", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath$1(name2);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.warnings;
  });
  _defineProperty(this, "isFieldsTouched", function () {
    _this.warningUnhooked();
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var arg0 = args[0], arg1 = args[1];
    var namePathList;
    var isAllFieldsTouched = false;
    if (args.length === 0) {
      namePathList = null;
    } else if (args.length === 1) {
      if (Array.isArray(arg0)) {
        namePathList = arg0.map(getNamePath$1);
        isAllFieldsTouched = false;
      } else {
        namePathList = null;
        isAllFieldsTouched = arg0;
      }
    } else {
      namePathList = arg0.map(getNamePath$1);
      isAllFieldsTouched = arg1;
    }
    var fieldEntities = _this.getFieldEntities(true);
    var isFieldTouched = function isFieldTouched2(field) {
      return field.isFieldTouched();
    };
    if (!namePathList) {
      return isAllFieldsTouched ? fieldEntities.every(function (entity) {
        return isFieldTouched(entity) || entity.isList();
      }) : fieldEntities.some(isFieldTouched);
    }
    var map = new NameMap$1();
    namePathList.forEach(function (shortNamePath) {
      map.set(shortNamePath, []);
    });
    fieldEntities.forEach(function (field) {
      var fieldNamePath = field.getNamePath();
      namePathList.forEach(function (shortNamePath) {
        if (shortNamePath.every(function (nameUnit, i) {
          return fieldNamePath[i] === nameUnit;
        })) {
          map.update(shortNamePath, function (list) {
            return [].concat(_toConsumableArray(list), [field]);
          });
        }
      });
    });
    var isNamePathListTouched = function isNamePathListTouched2(entities) {
      return entities.some(isFieldTouched);
    };
    var namePathListEntities = map.map(function (_ref4) {
      var value2 = _ref4.value;
      return value2;
    });
    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);
  });
  _defineProperty(this, "isFieldTouched", function (name2) {
    _this.warningUnhooked();
    return _this.isFieldsTouched([name2]);
  });
  _defineProperty(this, "isFieldsValidating", function (nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntities();
    if (!nameList) {
      return fieldEntities.some(function (testField) {
        return testField.isFieldValidating();
      });
    }
    var namePathList = nameList.map(getNamePath$1);
    return fieldEntities.some(function (testField) {
      var fieldNamePath = testField.getNamePath();
      return containsNamePath$1(namePathList, fieldNamePath) && testField.isFieldValidating();
    });
  });
  _defineProperty(this, "isFieldValidating", function (name2) {
    _this.warningUnhooked();
    return _this.isFieldsValidating([name2]);
  });
  _defineProperty(this, "resetWithFieldInitialValue", function () {
    var info2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var cache2 = new NameMap$1();
    var fieldEntities = _this.getFieldEntities(true);
    fieldEntities.forEach(function (field) {
      var initialValue = field.props.initialValue;
      var namePath = field.getNamePath();
      if (initialValue !== void 0) {
        var records2 = cache2.get(namePath) || /* @__PURE__ */ new Set();
        records2.add({
          entity: field,
          value: initialValue
        });
        cache2.set(namePath, records2);
      }
    });
    var resetWithFields = function resetWithFields2(entities) {
      entities.forEach(function (field) {
        var initialValue = field.props.initialValue;
        if (initialValue !== void 0) {
          var namePath = field.getNamePath();
          var formInitialValue = _this.getInitialValue(namePath);
          if (formInitialValue !== void 0) {
            warningOnce(false, "Form already set 'initialValues' with path '".concat(namePath.join("."), "'. Field can not overwrite it."));
          } else {
            var records2 = cache2.get(namePath);
            if (records2 && records2.size > 1) {
              warningOnce(false, "Multiple Field with path '".concat(namePath.join("."), "' set 'initialValue'. Can not decide which one to pick."));
            } else if (records2) {
              var originValue = _this.getFieldValue(namePath);
              var isListField = field.isListField();
              if (!isListField && (!info2.skipExist || originValue === void 0)) {
                _this.updateStore(set(_this.store, namePath, _toConsumableArray(records2)[0].value));
              }
            }
          }
        }
      });
    };
    var requiredFieldEntities;
    if (info2.entities) {
      requiredFieldEntities = info2.entities;
    } else if (info2.namePathList) {
      requiredFieldEntities = [];
      info2.namePathList.forEach(function (namePath) {
        var records2 = cache2.get(namePath);
        if (records2) {
          var _requiredFieldEntitie;
          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records2).map(function (r2) {
            return r2.entity;
          })));
        }
      });
    } else {
      requiredFieldEntities = fieldEntities;
    }
    resetWithFields(requiredFieldEntities);
  });
  _defineProperty(this, "resetFields", function (nameList) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (!nameList) {
      _this.updateStore(merge$1(_this.initialValues));
      _this.resetWithFieldInitialValue();
      _this.notifyObservers(prevStore, null, {
        type: "reset"
      });
      _this.notifyWatch();
      return;
    }
    var namePathList = nameList.map(getNamePath$1);
    namePathList.forEach(function (namePath) {
      var initialValue = _this.getInitialValue(namePath);
      _this.updateStore(set(_this.store, namePath, initialValue));
    });
    _this.resetWithFieldInitialValue({
      namePathList
    });
    _this.notifyObservers(prevStore, namePathList, {
      type: "reset"
    });
    _this.notifyWatch(namePathList);
  });
  _defineProperty(this, "setFields", function (fields) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    var namePathList = [];
    fields.forEach(function (fieldData) {
      var name2 = fieldData.name, data = _objectWithoutProperties(fieldData, _excluded$g);
      var namePath = getNamePath$1(name2);
      namePathList.push(namePath);
      if ("value" in data) {
        _this.updateStore(set(_this.store, namePath, data.value));
      }
      _this.notifyObservers(prevStore, [namePath], {
        type: "setField",
        data: fieldData
      });
    });
    _this.notifyWatch(namePathList);
  });
  _defineProperty(this, "getFields", function () {
    var entities = _this.getFieldEntities(true);
    var fields = entities.map(function (field) {
      var namePath = field.getNamePath();
      var meta = field.getMeta();
      var fieldData = _objectSpread2(_objectSpread2({}, meta), {}, {
        name: namePath,
        value: _this.getFieldValue(namePath)
      });
      Object.defineProperty(fieldData, "originRCField", {
        value: true
      });
      return fieldData;
    });
    return fields;
  });
  _defineProperty(this, "initEntityValue", function (entity) {
    var initialValue = entity.props.initialValue;
    if (initialValue !== void 0) {
      var namePath = entity.getNamePath();
      var prevValue = get(_this.store, namePath);
      if (prevValue === void 0) {
        _this.updateStore(set(_this.store, namePath, initialValue));
      }
    }
  });
  _defineProperty(this, "isMergedPreserve", function (fieldPreserve) {
    var mergedPreserve = fieldPreserve !== void 0 ? fieldPreserve : _this.preserve;
    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;
  });
  _defineProperty(this, "registerField", function (entity) {
    _this.fieldEntities.push(entity);
    var namePath = entity.getNamePath();
    _this.notifyWatch([namePath]);
    if (entity.props.initialValue !== void 0) {
      var prevStore = _this.store;
      _this.resetWithFieldInitialValue({
        entities: [entity],
        skipExist: true
      });
      _this.notifyObservers(prevStore, [entity.getNamePath()], {
        type: "valueUpdate",
        source: "internal"
      });
    }
    return function (isListField, preserve2) {
      var subNamePath = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      _this.fieldEntities = _this.fieldEntities.filter(function (item2) {
        return item2 !== entity;
      });
      if (!_this.isMergedPreserve(preserve2) && (!isListField || subNamePath.length > 1)) {
        var defaultValue = isListField ? void 0 : _this.getInitialValue(namePath);
        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {
          return (
            // Only reset when no namePath exist
            !matchNamePath$1(field.getNamePath(), namePath)
          );
        })) {
          var _prevStore = _this.store;
          _this.updateStore(set(_prevStore, namePath, defaultValue, true));
          _this.notifyObservers(_prevStore, [namePath], {
            type: "remove"
          });
          _this.triggerDependenciesUpdate(_prevStore, namePath);
        }
      }
      _this.notifyWatch([namePath]);
    };
  });
  _defineProperty(this, "dispatch", function (action) {
    switch (action.type) {
      case "updateValue": {
        var namePath = action.namePath, value2 = action.value;
        _this.updateValue(namePath, value2);
        break;
      }
      case "validateField": {
        var _namePath = action.namePath, triggerName = action.triggerName;
        _this.validateFields([_namePath], {
          triggerName
        });
        break;
      }
    }
  });
  _defineProperty(this, "notifyObservers", function (prevStore, namePathList, info2) {
    if (_this.subscribable) {
      var mergedInfo = _objectSpread2(_objectSpread2({}, info2), {}, {
        store: _this.getFieldsValue(true)
      });
      _this.getFieldEntities().forEach(function (_ref5) {
        var onStoreChange = _ref5.onStoreChange;
        onStoreChange(prevStore, namePathList, mergedInfo);
      });
    } else {
      _this.forceRootUpdate();
    }
  });
  _defineProperty(this, "triggerDependenciesUpdate", function (prevStore, namePath) {
    var childrenFields = _this.getDependencyChildrenFields(namePath);
    if (childrenFields.length) {
      _this.validateFields(childrenFields);
    }
    _this.notifyObservers(prevStore, childrenFields, {
      type: "dependenciesUpdate",
      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))
    });
    return childrenFields;
  });
  _defineProperty(this, "updateValue", function (name2, value2) {
    var namePath = getNamePath$1(name2);
    var prevStore = _this.store;
    _this.updateStore(set(_this.store, namePath, value2));
    _this.notifyObservers(prevStore, [namePath], {
      type: "valueUpdate",
      source: "internal"
    });
    _this.notifyWatch([namePath]);
    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath);
    var onValuesChange = _this.callbacks.onValuesChange;
    if (onValuesChange) {
      var changedValues = cloneByNamePathList$1(_this.store, [namePath]);
      onValuesChange(changedValues, _this.getFieldsValue());
    }
    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));
  });
  _defineProperty(this, "setFieldsValue", function (store) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (store) {
      var nextStore = merge$1(_this.store, store);
      _this.updateStore(nextStore);
    }
    _this.notifyObservers(prevStore, null, {
      type: "valueUpdate",
      source: "external"
    });
    _this.notifyWatch();
  });
  _defineProperty(this, "setFieldValue", function (name2, value2) {
    _this.setFields([{
      name: name2,
      value: value2
    }]);
  });
  _defineProperty(this, "getDependencyChildrenFields", function (rootNamePath) {
    var children = /* @__PURE__ */ new Set();
    var childrenFields = [];
    var dependencies2fields = new NameMap$1();
    _this.getFieldEntities().forEach(function (field) {
      var dependencies = field.props.dependencies;
      (dependencies || []).forEach(function (dependency) {
        var dependencyNamePath = getNamePath$1(dependency);
        dependencies2fields.update(dependencyNamePath, function () {
          var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Set();
          fields.add(field);
          return fields;
        });
      });
    });
    var fillChildren = function fillChildren2(namePath) {
      var fields = dependencies2fields.get(namePath) || /* @__PURE__ */ new Set();
      fields.forEach(function (field) {
        if (!children.has(field)) {
          children.add(field);
          var fieldNamePath = field.getNamePath();
          if (field.isFieldDirty() && fieldNamePath.length) {
            childrenFields.push(fieldNamePath);
            fillChildren2(fieldNamePath);
          }
        }
      });
    };
    fillChildren(rootNamePath);
    return childrenFields;
  });
  _defineProperty(this, "triggerOnFieldsChange", function (namePathList, filedErrors) {
    var onFieldsChange = _this.callbacks.onFieldsChange;
    if (onFieldsChange) {
      var fields = _this.getFields();
      if (filedErrors) {
        var cache2 = new NameMap$1();
        filedErrors.forEach(function (_ref6) {
          var name2 = _ref6.name, errors = _ref6.errors;
          cache2.set(name2, errors);
        });
        fields.forEach(function (field) {
          field.errors = cache2.get(field.name) || field.errors;
        });
      }
      var changedFields = fields.filter(function (_ref7) {
        var fieldName = _ref7.name;
        return containsNamePath$1(namePathList, fieldName);
      });
      if (changedFields.length) {
        onFieldsChange(changedFields, fields);
      }
    }
  });
  _defineProperty(this, "validateFields", function (arg1, arg2) {
    _this.warningUnhooked();
    var nameList;
    var options2;
    if (Array.isArray(arg1) || typeof arg1 === "string" || typeof arg2 === "string") {
      nameList = arg1;
      options2 = arg2;
    } else {
      options2 = arg1;
    }
    var provideNameList = !!nameList;
    var namePathList = provideNameList ? nameList.map(getNamePath$1) : [];
    var promiseList = [];
    var TMP_SPLIT = String(Date.now());
    var validateNamePathList = /* @__PURE__ */ new Set();
    var _ref8 = options2 || {}, recursive = _ref8.recursive, dirty = _ref8.dirty;
    _this.getFieldEntities(true).forEach(function (field) {
      if (!provideNameList) {
        namePathList.push(field.getNamePath());
      }
      if (!field.props.rules || !field.props.rules.length) {
        return;
      }
      if (dirty && !field.isFieldDirty()) {
        return;
      }
      var fieldNamePath = field.getNamePath();
      validateNamePathList.add(fieldNamePath.join(TMP_SPLIT));
      if (!provideNameList || containsNamePath$1(namePathList, fieldNamePath, recursive)) {
        var promise = field.validateRules(_objectSpread2({
          validateMessages: _objectSpread2(_objectSpread2({}, defaultValidateMessages$1), _this.validateMessages)
        }, options2));
        promiseList.push(promise.then(function () {
          return {
            name: fieldNamePath,
            errors: [],
            warnings: []
          };
        }).catch(function (ruleErrors) {
          var _ruleErrors$forEach;
          var mergedErrors = [];
          var mergedWarnings = [];
          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref9) {
            var warningOnly = _ref9.rule.warningOnly, errors = _ref9.errors;
            if (warningOnly) {
              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));
            } else {
              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));
            }
          });
          if (mergedErrors.length) {
            return Promise.reject({
              name: fieldNamePath,
              errors: mergedErrors,
              warnings: mergedWarnings
            });
          }
          return {
            name: fieldNamePath,
            errors: mergedErrors,
            warnings: mergedWarnings
          };
        }));
      }
    });
    var summaryPromise = allPromiseFinish$1(promiseList);
    _this.lastValidatePromise = summaryPromise;
    summaryPromise.catch(function (results) {
      return results;
    }).then(function (results) {
      var resultNamePathList = results.map(function (_ref10) {
        var name2 = _ref10.name;
        return name2;
      });
      _this.notifyObservers(_this.store, resultNamePathList, {
        type: "validateFinish"
      });
      _this.triggerOnFieldsChange(resultNamePathList, results);
    });
    var returnPromise = summaryPromise.then(function () {
      if (_this.lastValidatePromise === summaryPromise) {
        return Promise.resolve(_this.getFieldsValue(namePathList));
      }
      return Promise.reject([]);
    }).catch(function (results) {
      var errorList = results.filter(function (result) {
        return result && result.errors.length;
      });
      return Promise.reject({
        values: _this.getFieldsValue(namePathList),
        errorFields: errorList,
        outOfDate: _this.lastValidatePromise !== summaryPromise
      });
    });
    returnPromise.catch(function (e2) {
      return e2;
    });
    var triggerNamePathList = namePathList.filter(function (namePath) {
      return validateNamePathList.has(namePath.join(TMP_SPLIT));
    });
    _this.triggerOnFieldsChange(triggerNamePathList);
    return returnPromise;
  });
  _defineProperty(this, "submit", function () {
    _this.warningUnhooked();
    _this.validateFields().then(function (values2) {
      var onFinish = _this.callbacks.onFinish;
      if (onFinish) {
        try {
          onFinish(values2);
        } catch (err) {
          console.error(err);
        }
      }
    }).catch(function (e2) {
      var onFinishFailed = _this.callbacks.onFinishFailed;
      if (onFinishFailed) {
        onFinishFailed(e2);
      }
    });
  });
  this.forceRootUpdate = forceRootUpdate;
});
function useForm$1(form) {
  var formRef = reactExports.useRef();
  var _React$useState = reactExports.useState({}), _React$useState2 = _slicedToArray(_React$useState, 2), forceUpdate = _React$useState2[1];
  if (!formRef.current) {
    if (form) {
      formRef.current = form;
    } else {
      var forceReRender = function forceReRender2() {
        forceUpdate({});
      };
      var formStore = new FormStore$1(forceReRender);
      formRef.current = formStore.getForm();
    }
  }
  return [formRef.current];
}
var FormContext$2 = /* @__PURE__ */ reactExports.createContext({
  triggerFormChange: function triggerFormChange() {
  },
  triggerFormFinish: function triggerFormFinish() {
  },
  registerForm: function registerForm() {
  },
  unregisterForm: function unregisterForm() {
  }
});
var FormProvider$1 = function FormProvider(_ref) {
  var validateMessages = _ref.validateMessages, onFormChange = _ref.onFormChange, onFormFinish = _ref.onFormFinish, children = _ref.children;
  var formContext = reactExports.useContext(FormContext$2);
  var formsRef = reactExports.useRef({});
  return /* @__PURE__ */ reactExports.createElement(FormContext$2.Provider, {
    value: _objectSpread2(_objectSpread2({}, formContext), {}, {
      validateMessages: _objectSpread2(_objectSpread2({}, formContext.validateMessages), validateMessages),
      // =========================================================
      // =                  Global Form Control                  =
      // =========================================================
      triggerFormChange: function triggerFormChange3(name2, changedFields) {
        if (onFormChange) {
          onFormChange(name2, {
            changedFields,
            forms: formsRef.current
          });
        }
        formContext.triggerFormChange(name2, changedFields);
      },
      triggerFormFinish: function triggerFormFinish3(name2, values2) {
        if (onFormFinish) {
          onFormFinish(name2, {
            values: values2,
            forms: formsRef.current
          });
        }
        formContext.triggerFormFinish(name2, values2);
      },
      registerForm: function registerForm3(name2, form) {
        if (name2) {
          formsRef.current = _objectSpread2(_objectSpread2({}, formsRef.current), {}, _defineProperty({}, name2, form));
        }
        formContext.registerForm(name2, form);
      },
      unregisterForm: function unregisterForm3(name2) {
        var newForms = _objectSpread2({}, formsRef.current);
        delete newForms[name2];
        formsRef.current = newForms;
        formContext.unregisterForm(name2);
      }
    })
  }, children);
};
var _excluded$f = ["name", "initialValues", "fields", "form", "preserve", "children", "component", "validateMessages", "validateTrigger", "onValuesChange", "onFieldsChange", "onFinish", "onFinishFailed"];
var Form$2 = function Form(_ref, ref) {
  var name2 = _ref.name, initialValues = _ref.initialValues, fields = _ref.fields, form = _ref.form, preserve2 = _ref.preserve, children = _ref.children, _ref$component = _ref.component, Component = _ref$component === void 0 ? "form" : _ref$component, validateMessages = _ref.validateMessages, _ref$validateTrigger = _ref.validateTrigger, validateTrigger = _ref$validateTrigger === void 0 ? "onChange" : _ref$validateTrigger, onValuesChange = _ref.onValuesChange, _onFieldsChange = _ref.onFieldsChange, _onFinish = _ref.onFinish, onFinishFailed = _ref.onFinishFailed, restProps = _objectWithoutProperties(_ref, _excluded$f);
  var formContext = reactExports.useContext(FormContext$2);
  var _useForm = useForm$1(form), _useForm2 = _slicedToArray(_useForm, 1), formInstance = _useForm2[0];
  var _getInternalHooks = formInstance.getInternalHooks(HOOK_MARK$1), useSubscribe = _getInternalHooks.useSubscribe, setInitialValues = _getInternalHooks.setInitialValues, setCallbacks = _getInternalHooks.setCallbacks, setValidateMessages = _getInternalHooks.setValidateMessages, setPreserve = _getInternalHooks.setPreserve, destroyForm = _getInternalHooks.destroyForm;
  reactExports.useImperativeHandle(ref, function () {
    return formInstance;
  });
  reactExports.useEffect(function () {
    formContext.registerForm(name2, formInstance);
    return function () {
      formContext.unregisterForm(name2);
    };
  }, [formContext, formInstance, name2]);
  setValidateMessages(_objectSpread2(_objectSpread2({}, formContext.validateMessages), validateMessages));
  setCallbacks({
    onValuesChange,
    onFieldsChange: function onFieldsChange(changedFields) {
      formContext.triggerFormChange(name2, changedFields);
      if (_onFieldsChange) {
        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }
        _onFieldsChange.apply(void 0, [changedFields].concat(rest));
      }
    },
    onFinish: function onFinish(values2) {
      formContext.triggerFormFinish(name2, values2);
      if (_onFinish) {
        _onFinish(values2);
      }
    },
    onFinishFailed
  });
  setPreserve(preserve2);
  var mountRef = reactExports.useRef(null);
  setInitialValues(initialValues, !mountRef.current);
  if (!mountRef.current) {
    mountRef.current = true;
  }
  reactExports.useEffect(
    function () {
      return destroyForm;
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  var childrenNode;
  var childrenRenderProps = typeof children === "function";
  if (childrenRenderProps) {
    var _values = formInstance.getFieldsValue(true);
    childrenNode = children(_values, formInstance);
  } else {
    childrenNode = children;
  }
  useSubscribe(!childrenRenderProps);
  var prevFieldsRef = reactExports.useRef();
  reactExports.useEffect(function () {
    if (!isSimilar$1(prevFieldsRef.current || [], fields || [])) {
      formInstance.setFields(fields || []);
    }
    prevFieldsRef.current = fields;
  }, [fields, formInstance]);
  var formContextValue = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, formInstance), {}, {
      validateTrigger
    });
  }, [formInstance, validateTrigger]);
  var wrapperNode = /* @__PURE__ */ reactExports.createElement(ListContext$1.Provider, {
    value: null
  }, /* @__PURE__ */ reactExports.createElement(Context$2.Provider, {
    value: formContextValue
  }, childrenNode));
  if (Component === false) {
    return wrapperNode;
  }
  return /* @__PURE__ */ reactExports.createElement(Component, _extends$1({}, restProps, {
    onSubmit: function onSubmit(event) {
      event.preventDefault();
      event.stopPropagation();
      formInstance.submit();
    },
    onReset: function onReset(event) {
      var _restProps$onReset;
      event.preventDefault();
      formInstance.resetFields();
      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 || _restProps$onReset.call(restProps, event);
    }
  }), wrapperNode);
};
function stringify$2(value2) {
  try {
    return JSON.stringify(value2);
  } catch (err) {
    return Math.random();
  }
}
function useWatch$2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var dependencies = args[0], _args$ = args[1], _form = _args$ === void 0 ? {} : _args$;
  var options2 = isFormInstance$1(_form) ? {
    form: _form
  } : _form;
  var form = options2.form;
  var _useState = reactExports.useState(), _useState2 = _slicedToArray(_useState, 2), value2 = _useState2[0], setValue = _useState2[1];
  var valueStr = reactExports.useMemo(function () {
    return stringify$2(value2);
  }, [value2]);
  var valueStrRef = reactExports.useRef(valueStr);
  valueStrRef.current = valueStr;
  var fieldContext = reactExports.useContext(Context$2);
  var formInstance = form || fieldContext;
  var isValidForm = formInstance && formInstance._init;
  var namePath = getNamePath$1(dependencies);
  var namePathRef = reactExports.useRef(namePath);
  namePathRef.current = namePath;
  reactExports.useEffect(
    function () {
      if (!isValidForm) {
        return;
      }
      var getFieldsValue = formInstance.getFieldsValue, getInternalHooks3 = formInstance.getInternalHooks;
      var _getInternalHooks = getInternalHooks3(HOOK_MARK$1), registerWatch = _getInternalHooks.registerWatch;
      var getWatchValue = function getWatchValue2(values2, allValues) {
        var watchValue = options2.preserve ? allValues : values2;
        return typeof dependencies === "function" ? dependencies(watchValue) : get(watchValue, namePathRef.current);
      };
      var cancelRegister = registerWatch(function (values2, allValues) {
        var newValue = getWatchValue(values2, allValues);
        var nextValueStr = stringify$2(newValue);
        if (valueStrRef.current !== nextValueStr) {
          valueStrRef.current = nextValueStr;
          setValue(newValue);
        }
      });
      var initialValue = getWatchValue(getFieldsValue(), getFieldsValue(true));
      if (value2 !== initialValue) {
        setValue(initialValue);
      }
      return cancelRegister;
    },
    // We do not need re-register since namePath content is the same
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [isValidForm]
  );
  return value2;
}
var InternalForm$1 = /* @__PURE__ */ reactExports.forwardRef(Form$2);
var RefForm$1 = InternalForm$1;
RefForm$1.FormProvider = FormProvider$1;
RefForm$1.Field = WrapperField$1;
RefForm$1.List = List$1;
RefForm$1.useForm = useForm$1;
RefForm$1.useWatch = useWatch$2;
const RcForm = RefForm$1;
const svg_theme_fill_color$1z = "_svg_theme_fill_color_cmem4_3";
const h5DateContainer = "_h5DateContainer_cmem4_55";
const date$1 = "_date_cmem4_186";
const timer$5 = "_timer_cmem4_202";
const time$1 = "_time_cmem4_202";
const btn$3 = "_btn_cmem4_211";
const cancel$1 = "_cancel_cmem4_228";
const sure$1 = "_sure_cmem4_232";
const line$5 = "_line_cmem4_446";
const css$1v = {
  svg_theme_fill_color: svg_theme_fill_color$1z,
  h5DateContainer,
  date: date$1,
  timer: timer$5,
  time: time$1,
  btn: btn$3,
  cancel: cancel$1,
  sure: sure$1,
  line: line$5
};
const strToDateList = (str2) => {
  const list = str2.split(/[- :]/);
  return [list[0], list[1] - 1, list[2]];
};
function transformDateStr(startDateStr) {
  return dayjs(startDateStr).format("DD/MM/YYYY");
}
const H5DatePicker = (props) => {
  const [isOpen, setIsOpen] = reactExports.useState(false);
  const [minDate] = reactExports.useState(new Date(...strToDateList(props.minDateStr)));
  const [maxDate] = reactExports.useState(new Date(...strToDateList(props.maxDateStr)));
  const [startDate, setStartDate] = reactExports.useState(props.startDateStr);
  const [endDate, setEndDate] = reactExports.useState(props.endDateStr);
  const [startDate02, setStartDate02] = reactExports.useState(props.startDateStr);
  const [endDate02, setEndDate02] = reactExports.useState(props.endDateStr);
  const timePicker = reactExports.useRef(null);
  useClickAway(() => {
    setIsOpen(false);
  }, timePicker);
  reactExports.useEffect(() => {
    if (startDate > endDate) {
      setEndDate(startDate);
      return;
    }
  }, [startDate, endDate]);
  reactExports.useEffect(() => {
    props.onChange && props.onChange(
      dayjs(startDate).format("YYYY/MM/DD"),
      dayjs(endDate).format("YYYY/MM/DD")
    );
  }, []);
  const onConfimarClick = () => {
    setStartDate02(startDate);
    setEndDate02(endDate);
    props.onChange && props.onChange(
      dayjs(startDate).format("YYYY/MM/DD"),
      dayjs(endDate).format("YYYY/MM/DD")
    );
    setIsOpen(false);
  };
  reactExports.useEffect(() => {
    setStartDate(startDate02);
    setEndDate(endDate02);
  }, [isOpen]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      className: css$1v.h5DateContainer,
      ref: timePicker,
      onClick: (e2) => {
        e2.stopPropagation();
        setIsOpen(!isOpen);
      },
      children: [
        transformDateStr(startDate02),
        "-",
        transformDateStr(endDate02),
        isOpen && /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: css$1v.date,
            onClick: (e2) => {
              e2.stopPropagation();
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$1v.timer, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$1v.time, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  DateTimePicker,
                  {
                    type: "date",
                    title: trans("开始日期"),
                    cancelButtonText: " ",
                    confirmButtonText: " ",
                    minDate,
                    maxDate,
                    value: startDate,
                    onChange: setStartDate
                  }
                )
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$1v.btn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "button",
                  {
                    className: css$1v.cancel,
                    onClick: () => {
                      setIsOpen(false);
                    },
                    children: trans("取消")
                  }
                )
              })
              ]
            }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1v.line }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$1v.timer, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$1v.time, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  DateTimePicker,
                  {
                    type: "date",
                    title: trans("结束日期"),
                    cancelButtonText: " ",
                    confirmButtonText: " ",
                    minDate: startDate,
                    maxDate,
                    value: endDate,
                    onChange: setEndDate
                  }
                )
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1v.btn, children: /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: css$1v.sure, onClick: onConfimarClick, children: trans("确认") }) })
              ]
            })
            ]
          }
        )
      ]
    }
  );
};
var classnames = { exports: {} };
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
(function (module) {
  (function () {
    var hasOwn = {}.hasOwnProperty;
    function classNames2() {
      var classes = "";
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (arg) {
          classes = appendClass(classes, parseValue(arg));
        }
      }
      return classes;
    }
    function parseValue(arg) {
      if (typeof arg === "string" || typeof arg === "number") {
        return arg;
      }
      if (typeof arg !== "object") {
        return "";
      }
      if (Array.isArray(arg)) {
        return classNames2.apply(null, arg);
      }
      if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
        return arg.toString();
      }
      var classes = "";
      for (var key in arg) {
        if (hasOwn.call(arg, key) && arg[key]) {
          classes = appendClass(classes, key);
        }
      }
      return classes;
    }
    function appendClass(value2, newClass) {
      if (!newClass) {
        return value2;
      }
      if (value2) {
        return value2 + " " + newClass;
      }
      return value2 + newClass;
    }
    if (module.exports) {
      classNames2.default = classNames2;
      module.exports = classNames2;
    } else {
      window.classNames = classNames2;
    }
  })();
})(classnames);
var classnamesExports = classnames.exports;
const classNames = /* @__PURE__ */ getDefaultExportFromCjs(classnamesExports);
function isDOM(node2) {
  return node2 instanceof HTMLElement || node2 instanceof SVGElement;
}
function findDOMNode(node2) {
  if (isDOM(node2)) {
    return node2;
  }
  if (node2 instanceof React.Component) {
    return ReactDOM.findDOMNode(node2);
  }
  return null;
}
function useMemo(getValue2, condition, shouldUpdate) {
  var cacheRef = reactExports.useRef({});
  if (!("value" in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {
    cacheRef.current.value = getValue2();
    cacheRef.current.condition = condition;
  }
  return cacheRef.current.value;
}
function fillRef(ref, node2) {
  if (typeof ref === "function") {
    ref(node2);
  } else if (_typeof(ref) === "object" && ref && "current" in ref) {
    ref.current = node2;
  }
}
function composeRef() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  var refList = refs.filter(function (ref) {
    return ref;
  });
  if (refList.length <= 1) {
    return refList[0];
  }
  return function (node2) {
    refs.forEach(function (ref) {
      fillRef(ref, node2);
    });
  };
}
function useComposeRef() {
  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    refs[_key2] = arguments[_key2];
  }
  return useMemo(function () {
    return composeRef.apply(void 0, refs);
  }, refs, function (prev2, next2) {
    return prev2.length !== next2.length || prev2.every(function (ref, i) {
      return ref !== next2[i];
    });
  });
}
function supportRef(nodeOrComponent) {
  var _type$prototype, _nodeOrComponent$prot;
  var type4 = reactIsExports.isMemo(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;
  if (typeof type4 === "function" && !((_type$prototype = type4.prototype) !== null && _type$prototype !== void 0 && _type$prototype.render) && type4.$$typeof !== reactIsExports.ForwardRef) {
    return false;
  }
  if (typeof nodeOrComponent === "function" && !((_nodeOrComponent$prot = nodeOrComponent.prototype) !== null && _nodeOrComponent$prot !== void 0 && _nodeOrComponent$prot.render) && nodeOrComponent.$$typeof !== reactIsExports.ForwardRef) {
    return false;
  }
  return true;
}
var CollectionContext = /* @__PURE__ */ reactExports.createContext(null);
function Collection(_ref) {
  var children = _ref.children, onBatchResize = _ref.onBatchResize;
  var resizeIdRef = reactExports.useRef(0);
  var resizeInfosRef = reactExports.useRef([]);
  var onCollectionResize = reactExports.useContext(CollectionContext);
  var onResize2 = reactExports.useCallback(function (size2, element, data) {
    resizeIdRef.current += 1;
    var currentId = resizeIdRef.current;
    resizeInfosRef.current.push({
      size: size2,
      element,
      data
    });
    Promise.resolve().then(function () {
      if (currentId === resizeIdRef.current) {
        onBatchResize === null || onBatchResize === void 0 || onBatchResize(resizeInfosRef.current);
        resizeInfosRef.current = [];
      }
    });
    onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(size2, element, data);
  }, [onBatchResize, onCollectionResize]);
  return /* @__PURE__ */ reactExports.createElement(CollectionContext.Provider, {
    value: onResize2
  }, children);
}
var elementListeners = /* @__PURE__ */ new Map();
function onResize(entities) {
  entities.forEach(function (entity) {
    var _elementListeners$get;
    var target = entity.target;
    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 || _elementListeners$get.forEach(function (listener) {
      return listener(target);
    });
  });
}
var resizeObserver = new index$3(onResize);
function observe(element, callback) {
  if (!elementListeners.has(element)) {
    elementListeners.set(element, /* @__PURE__ */ new Set());
    resizeObserver.observe(element);
  }
  elementListeners.get(element).add(callback);
}
function unobserve(element, callback) {
  if (elementListeners.has(element)) {
    elementListeners.get(element).delete(callback);
    if (!elementListeners.get(element).size) {
      resizeObserver.unobserve(element);
      elementListeners.delete(element);
    }
  }
}
var DomWrapper$1 = /* @__PURE__ */ function (_React$Component) {
  _inherits(DomWrapper2, _React$Component);
  var _super = _createSuper(DomWrapper2);
  function DomWrapper2() {
    _classCallCheck(this, DomWrapper2);
    return _super.apply(this, arguments);
  }
  _createClass(DomWrapper2, [{
    key: "render",
    value: function render3() {
      return this.props.children;
    }
  }]);
  return DomWrapper2;
}(reactExports.Component);
function SingleObserver(props, ref) {
  var children = props.children, disabled2 = props.disabled;
  var elementRef = reactExports.useRef(null);
  var wrapperRef = reactExports.useRef(null);
  var onCollectionResize = reactExports.useContext(CollectionContext);
  var isRenderProps = typeof children === "function";
  var mergedChildren = isRenderProps ? children(elementRef) : children;
  var sizeRef = reactExports.useRef({
    width: -1,
    height: -1,
    offsetWidth: -1,
    offsetHeight: -1
  });
  var canRef = !isRenderProps && /* @__PURE__ */ reactExports.isValidElement(mergedChildren) && supportRef(mergedChildren);
  var originRef = canRef ? mergedChildren.ref : null;
  var mergedRef = useComposeRef(originRef, elementRef);
  var getDom = function getDom2() {
    var _elementRef$current;
    return findDOMNode(elementRef.current) || // Support `nativeElement` format
      (elementRef.current && _typeof(elementRef.current) === "object" ? findDOMNode((_elementRef$current = elementRef.current) === null || _elementRef$current === void 0 ? void 0 : _elementRef$current.nativeElement) : null) || findDOMNode(wrapperRef.current);
  };
  reactExports.useImperativeHandle(ref, function () {
    return getDom();
  });
  var propsRef = reactExports.useRef(props);
  propsRef.current = props;
  var onInternalResize = reactExports.useCallback(function (target) {
    var _propsRef$current = propsRef.current, onResize2 = _propsRef$current.onResize, data = _propsRef$current.data;
    var _target$getBoundingCl = target.getBoundingClientRect(), width = _target$getBoundingCl.width, height = _target$getBoundingCl.height;
    var offsetWidth = target.offsetWidth, offsetHeight = target.offsetHeight;
    var fixedWidth = Math.floor(width);
    var fixedHeight = Math.floor(height);
    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {
      var size2 = {
        width: fixedWidth,
        height: fixedHeight,
        offsetWidth,
        offsetHeight
      };
      sizeRef.current = size2;
      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;
      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;
      var sizeInfo = _objectSpread2(_objectSpread2({}, size2), {}, {
        offsetWidth: mergedOffsetWidth,
        offsetHeight: mergedOffsetHeight
      });
      onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(sizeInfo, target, data);
      if (onResize2) {
        Promise.resolve().then(function () {
          onResize2(sizeInfo, target);
        });
      }
    }
  }, []);
  reactExports.useEffect(function () {
    var currentElement = getDom();
    if (currentElement && !disabled2) {
      observe(currentElement, onInternalResize);
    }
    return function () {
      return unobserve(currentElement, onInternalResize);
    };
  }, [elementRef.current, disabled2]);
  return /* @__PURE__ */ reactExports.createElement(DomWrapper$1, {
    ref: wrapperRef
  }, canRef ? /* @__PURE__ */ reactExports.cloneElement(mergedChildren, {
    ref: mergedRef
  }) : mergedChildren);
}
var RefSingleObserver = /* @__PURE__ */ reactExports.forwardRef(SingleObserver);
var INTERNAL_PREFIX_KEY = "rc-observer-key";
function ResizeObserver$1(props, ref) {
  var children = props.children;
  var childNodes = typeof children === "function" ? [children] : toArray$4(children);
  return childNodes.map(function (child, index2) {
    var key = (child === null || child === void 0 ? void 0 : child.key) || "".concat(INTERNAL_PREFIX_KEY, "-").concat(index2);
    return /* @__PURE__ */ reactExports.createElement(RefSingleObserver, _extends$1({}, props, {
      key,
      ref: index2 === 0 ? ref : void 0
    }), child);
  });
}
var RefResizeObserver = /* @__PURE__ */ reactExports.forwardRef(ResizeObserver$1);
RefResizeObserver.Collection = Collection;
function omit(obj, fields) {
  var clone = _objectSpread2({}, obj);
  if (Array.isArray(fields)) {
    fields.forEach(function (key) {
      delete clone[key];
    });
  }
  return clone;
}
var raf = function raf2(callback) {
  return +setTimeout(callback, 16);
};
var caf = function caf2(num2) {
  return clearTimeout(num2);
};
if (typeof window !== "undefined" && "requestAnimationFrame" in window) {
  raf = function raf3(callback) {
    return window.requestAnimationFrame(callback);
  };
  caf = function caf3(handle) {
    return window.cancelAnimationFrame(handle);
  };
}
var rafUUID = 0;
var rafIds = /* @__PURE__ */ new Map();
function cleanup(id2) {
  rafIds.delete(id2);
}
var wrapperRaf = function wrapperRaf2(callback) {
  var times2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  rafUUID += 1;
  var id2 = rafUUID;
  function callRef(leftTimes) {
    if (leftTimes === 0) {
      cleanup(id2);
      callback();
    } else {
      var realId = raf(function () {
        callRef(leftTimes - 1);
      });
      rafIds.set(id2, realId);
    }
  }
  callRef(times2);
  return id2;
};
wrapperRaf.cancel = function (id2) {
  var realId = rafIds.get(id2);
  cleanup(id2);
  return caf(realId);
};
function murmur2(str2) {
  var h2 = 0;
  var k2, i = 0, len = str2.length;
  for (; len >= 4; ++i, len -= 4) {
    k2 = str2.charCodeAt(i) & 255 | (str2.charCodeAt(++i) & 255) << 8 | (str2.charCodeAt(++i) & 255) << 16 | (str2.charCodeAt(++i) & 255) << 24;
    k2 = /* Math.imul(k, m): */
      (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
    k2 ^= /* k >>> r: */
      k2 >>> 24;
    h2 = /* Math.imul(k, m): */
      (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
      (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h2 ^= (str2.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h2 ^= (str2.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h2 ^= str2.charCodeAt(i) & 255;
      h2 = /* Math.imul(h, m): */
        (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  h2 ^= h2 >>> 13;
  h2 = /* Math.imul(h, m): */
    (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
}
function canUseDom() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
function contains(root2, n2) {
  if (!root2) {
    return false;
  }
  if (root2.contains) {
    return root2.contains(n2);
  }
  var node2 = n2;
  while (node2) {
    if (node2 === root2) {
      return true;
    }
    node2 = node2.parentNode;
  }
  return false;
}
var APPEND_ORDER = "data-rc-order";
var APPEND_PRIORITY = "data-rc-priority";
var MARK_KEY = "rc-util-key";
var containerCache = /* @__PURE__ */ new Map();
function getMark() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, mark = _ref.mark;
  if (mark) {
    return mark.startsWith("data-") ? mark : "data-".concat(mark);
  }
  return MARK_KEY;
}
function getContainer(option2) {
  if (option2.attachTo) {
    return option2.attachTo;
  }
  var head2 = document.querySelector("head");
  return head2 || document.body;
}
function getOrder(prepend) {
  if (prepend === "queue") {
    return "prependQueue";
  }
  return prepend ? "prepend" : "append";
}
function findStyles(container2) {
  return Array.from((containerCache.get(container2) || container2).children).filter(function (node2) {
    return node2.tagName === "STYLE";
  });
}
function injectCSS(css2) {
  var option2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (!canUseDom()) {
    return null;
  }
  var csp = option2.csp, prepend = option2.prepend, _option$priority = option2.priority, priority = _option$priority === void 0 ? 0 : _option$priority;
  var mergedOrder = getOrder(prepend);
  var isPrependQueue = mergedOrder === "prependQueue";
  var styleNode = document.createElement("style");
  styleNode.setAttribute(APPEND_ORDER, mergedOrder);
  if (isPrependQueue && priority) {
    styleNode.setAttribute(APPEND_PRIORITY, "".concat(priority));
  }
  if (csp !== null && csp !== void 0 && csp.nonce) {
    styleNode.nonce = csp === null || csp === void 0 ? void 0 : csp.nonce;
  }
  styleNode.innerHTML = css2;
  var container2 = getContainer(option2);
  var firstChild = container2.firstChild;
  if (prepend) {
    if (isPrependQueue) {
      var existStyle = (option2.styles || findStyles(container2)).filter(function (node2) {
        if (!["prepend", "prependQueue"].includes(node2.getAttribute(APPEND_ORDER))) {
          return false;
        }
        var nodePriority = Number(node2.getAttribute(APPEND_PRIORITY) || 0);
        return priority >= nodePriority;
      });
      if (existStyle.length) {
        container2.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);
        return styleNode;
      }
    }
    container2.insertBefore(styleNode, firstChild);
  } else {
    container2.appendChild(styleNode);
  }
  return styleNode;
}
function findExistNode(key) {
  var option2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var container2 = getContainer(option2);
  return (option2.styles || findStyles(container2)).find(function (node2) {
    return node2.getAttribute(getMark(option2)) === key;
  });
}
function removeCSS(key) {
  var option2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var existNode = findExistNode(key, option2);
  if (existNode) {
    var container2 = getContainer(option2);
    container2.removeChild(existNode);
  }
}
function syncRealContainer(container2, option2) {
  var cachedRealContainer = containerCache.get(container2);
  if (!cachedRealContainer || !contains(document, cachedRealContainer)) {
    var placeholderStyle = injectCSS("", option2);
    var parentNode = placeholderStyle.parentNode;
    containerCache.set(container2, parentNode);
    container2.removeChild(placeholderStyle);
  }
}
function updateCSS(css2, key) {
  var originOption = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var container2 = getContainer(originOption);
  var styles = findStyles(container2);
  var option2 = _objectSpread2(_objectSpread2({}, originOption), {}, {
    styles
  });
  syncRealContainer(container2, option2);
  var existNode = findExistNode(key, option2);
  if (existNode) {
    var _option$csp, _option$csp2;
    if ((_option$csp = option2.csp) !== null && _option$csp !== void 0 && _option$csp.nonce && existNode.nonce !== ((_option$csp2 = option2.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce)) {
      var _option$csp3;
      existNode.nonce = (_option$csp3 = option2.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce;
    }
    if (existNode.innerHTML !== css2) {
      existNode.innerHTML = css2;
    }
    return existNode;
  }
  var newNode = injectCSS(css2, option2);
  newNode.setAttribute(getMark(option2), key);
  return newNode;
}
var SPLIT$1 = "%";
function pathKey(keys2) {
  return keys2.join(SPLIT$1);
}
var Entity = /* @__PURE__ */ function () {
  function Entity2(instanceId) {
    _classCallCheck(this, Entity2);
    _defineProperty(this, "instanceId", void 0);
    _defineProperty(this, "cache", /* @__PURE__ */ new Map());
    this.instanceId = instanceId;
  }
  _createClass(Entity2, [{
    key: "get",
    value: function get2(keys2) {
      return this.opGet(pathKey(keys2));
    }
    /** A fast get cache with `get` concat. */
  }, {
    key: "opGet",
    value: function opGet(keyPathStr) {
      return this.cache.get(keyPathStr) || null;
    }
  }, {
    key: "update",
    value: function update(keys2, valueFn) {
      return this.opUpdate(pathKey(keys2), valueFn);
    }
    /** A fast get cache with `get` concat. */
  }, {
    key: "opUpdate",
    value: function opUpdate(keyPathStr, valueFn) {
      var prevValue = this.cache.get(keyPathStr);
      var nextValue = valueFn(prevValue);
      if (nextValue === null) {
        this.cache.delete(keyPathStr);
      } else {
        this.cache.set(keyPathStr, nextValue);
      }
    }
  }]);
  return Entity2;
}();
var ATTR_TOKEN = "data-token-hash";
var ATTR_MARK = "data-css-hash";
var CSS_IN_JS_INSTANCE = "__cssinjs_instance__";
function createCache() {
  var cssinjsInstanceId = Math.random().toString(12).slice(2);
  if (typeof document !== "undefined" && document.head && document.body) {
    var styles = document.body.querySelectorAll("style[".concat(ATTR_MARK, "]")) || [];
    var firstChild = document.head.firstChild;
    Array.from(styles).forEach(function (style2) {
      style2[CSS_IN_JS_INSTANCE] = style2[CSS_IN_JS_INSTANCE] || cssinjsInstanceId;
      if (style2[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {
        document.head.insertBefore(style2, firstChild);
      }
    });
    var styleHash = {};
    Array.from(document.querySelectorAll("style[".concat(ATTR_MARK, "]"))).forEach(function (style2) {
      var hash = style2.getAttribute(ATTR_MARK);
      if (styleHash[hash]) {
        if (style2[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {
          var _style$parentNode;
          (_style$parentNode = style2.parentNode) === null || _style$parentNode === void 0 || _style$parentNode.removeChild(style2);
        }
      } else {
        styleHash[hash] = true;
      }
    });
  }
  return new Entity(cssinjsInstanceId);
}
var StyleContext = /* @__PURE__ */ reactExports.createContext({
  hashPriority: "low",
  cache: createCache(),
  defaultCache: true
});
function sameDerivativeOption(left2, right2) {
  if (left2.length !== right2.length) {
    return false;
  }
  for (var i = 0; i < left2.length; i++) {
    if (left2[i] !== right2[i]) {
      return false;
    }
  }
  return true;
}
var ThemeCache = /* @__PURE__ */ function () {
  function ThemeCache2() {
    _classCallCheck(this, ThemeCache2);
    _defineProperty(this, "cache", void 0);
    _defineProperty(this, "keys", void 0);
    _defineProperty(this, "cacheCallTimes", void 0);
    this.cache = /* @__PURE__ */ new Map();
    this.keys = [];
    this.cacheCallTimes = 0;
  }
  _createClass(ThemeCache2, [{
    key: "size",
    value: function size2() {
      return this.keys.length;
    }
  }, {
    key: "internalGet",
    value: function internalGet(derivativeOption) {
      var _cache2, _cache3;
      var updateCallTimes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var cache2 = {
        map: this.cache
      };
      derivativeOption.forEach(function (derivative2) {
        if (!cache2) {
          cache2 = void 0;
        } else {
          var _cache;
          cache2 = (_cache = cache2) === null || _cache === void 0 || (_cache = _cache.map) === null || _cache === void 0 ? void 0 : _cache.get(derivative2);
        }
      });
      if ((_cache2 = cache2) !== null && _cache2 !== void 0 && _cache2.value && updateCallTimes) {
        cache2.value[1] = this.cacheCallTimes++;
      }
      return (_cache3 = cache2) === null || _cache3 === void 0 ? void 0 : _cache3.value;
    }
  }, {
    key: "get",
    value: function get2(derivativeOption) {
      var _this$internalGet;
      return (_this$internalGet = this.internalGet(derivativeOption, true)) === null || _this$internalGet === void 0 ? void 0 : _this$internalGet[0];
    }
  }, {
    key: "has",
    value: function has(derivativeOption) {
      return !!this.internalGet(derivativeOption);
    }
  }, {
    key: "set",
    value: function set2(derivativeOption, value2) {
      var _this = this;
      if (!this.has(derivativeOption)) {
        if (this.size() + 1 > ThemeCache2.MAX_CACHE_SIZE + ThemeCache2.MAX_CACHE_OFFSET) {
          var _this$keys$reduce = this.keys.reduce(function (result, key) {
            var _result = _slicedToArray(result, 2), callTimes = _result[1];
            if (_this.internalGet(key)[1] < callTimes) {
              return [key, _this.internalGet(key)[1]];
            }
            return result;
          }, [this.keys[0], this.cacheCallTimes]), _this$keys$reduce2 = _slicedToArray(_this$keys$reduce, 1), targetKey = _this$keys$reduce2[0];
          this.delete(targetKey);
        }
        this.keys.push(derivativeOption);
      }
      var cache2 = this.cache;
      derivativeOption.forEach(function (derivative2, index2) {
        if (index2 === derivativeOption.length - 1) {
          cache2.set(derivative2, {
            value: [value2, _this.cacheCallTimes++]
          });
        } else {
          var cacheValue = cache2.get(derivative2);
          if (!cacheValue) {
            cache2.set(derivative2, {
              map: /* @__PURE__ */ new Map()
            });
          } else if (!cacheValue.map) {
            cacheValue.map = /* @__PURE__ */ new Map();
          }
          cache2 = cache2.get(derivative2).map;
        }
      });
    }
  }, {
    key: "deleteByPath",
    value: function deleteByPath(currentCache, derivatives) {
      var cache2 = currentCache.get(derivatives[0]);
      if (derivatives.length === 1) {
        var _cache$value;
        if (!cache2.map) {
          currentCache.delete(derivatives[0]);
        } else {
          currentCache.set(derivatives[0], {
            map: cache2.map
          });
        }
        return (_cache$value = cache2.value) === null || _cache$value === void 0 ? void 0 : _cache$value[0];
      }
      var result = this.deleteByPath(cache2.map, derivatives.slice(1));
      if ((!cache2.map || cache2.map.size === 0) && !cache2.value) {
        currentCache.delete(derivatives[0]);
      }
      return result;
    }
  }, {
    key: "delete",
    value: function _delete(derivativeOption) {
      if (this.has(derivativeOption)) {
        this.keys = this.keys.filter(function (item2) {
          return !sameDerivativeOption(item2, derivativeOption);
        });
        return this.deleteByPath(this.cache, derivativeOption);
      }
      return void 0;
    }
  }]);
  return ThemeCache2;
}();
_defineProperty(ThemeCache, "MAX_CACHE_SIZE", 20);
_defineProperty(ThemeCache, "MAX_CACHE_OFFSET", 5);
var uuid$2 = 0;
var Theme = /* @__PURE__ */ function () {
  function Theme2(derivatives) {
    _classCallCheck(this, Theme2);
    _defineProperty(this, "derivatives", void 0);
    _defineProperty(this, "id", void 0);
    this.derivatives = Array.isArray(derivatives) ? derivatives : [derivatives];
    this.id = uuid$2;
    if (derivatives.length === 0) {
      warning$2(derivatives.length > 0);
    }
    uuid$2 += 1;
  }
  _createClass(Theme2, [{
    key: "getDerivativeToken",
    value: function getDerivativeToken(token2) {
      return this.derivatives.reduce(function (result, derivative2) {
        return derivative2(token2, result);
      }, void 0);
    }
  }]);
  return Theme2;
}();
var cacheThemes = new ThemeCache();
function createTheme(derivatives) {
  var derivativeArr = Array.isArray(derivatives) ? derivatives : [derivatives];
  if (!cacheThemes.has(derivativeArr)) {
    cacheThemes.set(derivativeArr, new Theme(derivativeArr));
  }
  return cacheThemes.get(derivativeArr);
}
var resultCache = /* @__PURE__ */ new WeakMap();
var RESULT_VALUE = {};
function memoResult(callback, deps) {
  var current = resultCache;
  for (var i = 0; i < deps.length; i += 1) {
    var dep = deps[i];
    if (!current.has(dep)) {
      current.set(dep, /* @__PURE__ */ new WeakMap());
    }
    current = current.get(dep);
  }
  if (!current.has(RESULT_VALUE)) {
    current.set(RESULT_VALUE, callback());
  }
  return current.get(RESULT_VALUE);
}
var flattenTokenCache = /* @__PURE__ */ new WeakMap();
function flattenToken(token2) {
  var hashed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var str2 = flattenTokenCache.get(token2) || "";
  if (!str2) {
    Object.keys(token2).forEach(function (key) {
      var value2 = token2[key];
      str2 += key;
      if (value2 instanceof Theme) {
        str2 += value2.id;
      } else if (value2 && _typeof(value2) === "object") {
        str2 += flattenToken(value2, hashed);
      } else {
        str2 += value2;
      }
    });
    if (hashed) {
      str2 = murmur2(str2);
    }
    flattenTokenCache.set(token2, str2);
  }
  return str2;
}
function token2key(token2, salt) {
  return murmur2("".concat(salt, "_").concat(flattenToken(token2, true)));
}
var isClientSide = canUseDom();
function unit$1(num2) {
  if (typeof num2 === "number") {
    return "".concat(num2, "px");
  }
  return num2;
}
function toStyleStr(style2, tokenKey, styleId) {
  var _objectSpread2$1;
  var customizeAttrs = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var plain = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
  if (plain) {
    return style2;
  }
  var attrs = _objectSpread2(_objectSpread2({}, customizeAttrs), {}, (_objectSpread2$1 = {}, _defineProperty(_objectSpread2$1, ATTR_TOKEN, tokenKey), _defineProperty(_objectSpread2$1, ATTR_MARK, styleId), _objectSpread2$1));
  var attrStr = Object.keys(attrs).map(function (attr) {
    var val = attrs[attr];
    return val ? "".concat(attr, '="').concat(val, '"') : null;
  }).filter(function (v2) {
    return v2;
  }).join(" ");
  return "<style ".concat(attrStr, ">").concat(style2, "</style>");
}
var token2CSSVar = function token2CSSVar2(token2) {
  var prefix2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  return "--".concat(prefix2 ? "".concat(prefix2, "-") : "").concat(token2).replace(/([a-z0-9])([A-Z])/g, "$1-$2").replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, "$1-$2").replace(/([a-z])([A-Z0-9])/g, "$1-$2").toLowerCase();
};
var serializeCSSVar = function serializeCSSVar2(cssVars, hashId, options2) {
  if (!Object.keys(cssVars).length) {
    return "";
  }
  return ".".concat(hashId).concat(options2 !== null && options2 !== void 0 && options2.scope ? ".".concat(options2.scope) : "", "{").concat(Object.entries(cssVars).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value2 = _ref2[1];
    return "".concat(key, ":").concat(value2, ";");
  }).join(""), "}");
};
var transformToken = function transformToken2(token2, themeKey, config2) {
  var cssVars = {};
  var result = {};
  Object.entries(token2).forEach(function (_ref3) {
    var _config$preserve, _config$ignore;
    var _ref4 = _slicedToArray(_ref3, 2), key = _ref4[0], value2 = _ref4[1];
    if (config2 !== null && config2 !== void 0 && (_config$preserve = config2.preserve) !== null && _config$preserve !== void 0 && _config$preserve[key]) {
      result[key] = value2;
    } else if ((typeof value2 === "string" || typeof value2 === "number") && !(config2 !== null && config2 !== void 0 && (_config$ignore = config2.ignore) !== null && _config$ignore !== void 0 && _config$ignore[key])) {
      var _config$unitless;
      var cssVar = token2CSSVar(key, config2 === null || config2 === void 0 ? void 0 : config2.prefix);
      cssVars[cssVar] = typeof value2 === "number" && !(config2 !== null && config2 !== void 0 && (_config$unitless = config2.unitless) !== null && _config$unitless !== void 0 && _config$unitless[key]) ? "".concat(value2, "px") : String(value2);
      result[key] = "var(".concat(cssVar, ")");
    }
  });
  return [result, serializeCSSVar(cssVars, themeKey, {
    scope: config2 === null || config2 === void 0 ? void 0 : config2.scope
  })];
};
var useInternalLayoutEffect = canUseDom() ? reactExports.useLayoutEffect : reactExports.useEffect;
var useLayoutEffect = function useLayoutEffect2(callback, deps) {
  var firstMountRef = reactExports.useRef(true);
  useInternalLayoutEffect(function () {
    return callback(firstMountRef.current);
  }, deps);
  useInternalLayoutEffect(function () {
    firstMountRef.current = false;
    return function () {
      firstMountRef.current = true;
    };
  }, []);
};
var useLayoutUpdateEffect = function useLayoutUpdateEffect2(callback, deps) {
  useLayoutEffect(function (firstMount) {
    if (!firstMount) {
      return callback();
    }
  }, deps);
};
var fullClone$3 = _objectSpread2({}, React$1);
var useInsertionEffect$1 = fullClone$3.useInsertionEffect;
var useInsertionEffectPolyfill = function useInsertionEffectPolyfill2(renderEffect, effect, deps) {
  reactExports.useMemo(renderEffect, deps);
  useLayoutEffect(function () {
    return effect(true);
  }, deps);
};
var useCompatibleInsertionEffect = useInsertionEffect$1 ? function (renderEffect, effect, deps) {
  return useInsertionEffect$1(function () {
    renderEffect();
    return effect();
  }, deps);
} : useInsertionEffectPolyfill;
var fullClone$2 = _objectSpread2({}, React$1);
var useInsertionEffect = fullClone$2.useInsertionEffect;
var useCleanupRegister = function useCleanupRegister2(deps) {
  var effectCleanups = [];
  var cleanupFlag = false;
  function register3(fn) {
    if (cleanupFlag) {
      return;
    }
    effectCleanups.push(fn);
  }
  reactExports.useEffect(function () {
    cleanupFlag = false;
    return function () {
      cleanupFlag = true;
      if (effectCleanups.length) {
        effectCleanups.forEach(function (fn) {
          return fn();
        });
      }
    };
  }, deps);
  return register3;
};
var useRun = function useRun2() {
  return function (fn) {
    fn();
  };
};
var useEffectCleanupRegister = typeof useInsertionEffect !== "undefined" ? useCleanupRegister : useRun;
function useGlobalCache(prefix2, keyPath, cacheFn, onCacheRemove, onCacheEffect) {
  var _React$useContext = reactExports.useContext(StyleContext), globalCache = _React$useContext.cache;
  var fullPath = [prefix2].concat(_toConsumableArray(keyPath));
  var fullPathStr = pathKey(fullPath);
  var register3 = useEffectCleanupRegister([fullPathStr]);
  var buildCache = function buildCache2(updater) {
    globalCache.opUpdate(fullPathStr, function (prevCache) {
      var _ref = prevCache || [void 0, void 0], _ref2 = _slicedToArray(_ref, 2), _ref2$ = _ref2[0], times2 = _ref2$ === void 0 ? 0 : _ref2$, cache2 = _ref2[1];
      var tmpCache = cache2;
      var mergedCache = tmpCache || cacheFn();
      var data = [times2, mergedCache];
      return updater ? updater(data) : data;
    });
  };
  reactExports.useMemo(
    function () {
      buildCache();
    },
    /* eslint-disable react-hooks/exhaustive-deps */
    [fullPathStr]
    /* eslint-enable */
  );
  var cacheEntity = globalCache.opGet(fullPathStr);
  var cacheContent = cacheEntity[1];
  useCompatibleInsertionEffect(function () {
    onCacheEffect === null || onCacheEffect === void 0 || onCacheEffect(cacheContent);
  }, function (polyfill) {
    buildCache(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2), times2 = _ref4[0], cache2 = _ref4[1];
      if (polyfill && times2 === 0) {
        onCacheEffect === null || onCacheEffect === void 0 || onCacheEffect(cacheContent);
      }
      return [times2 + 1, cache2];
    });
    return function () {
      globalCache.opUpdate(fullPathStr, function (prevCache) {
        var _ref5 = prevCache || [], _ref6 = _slicedToArray(_ref5, 2), _ref6$ = _ref6[0], times2 = _ref6$ === void 0 ? 0 : _ref6$, cache2 = _ref6[1];
        var nextCount = times2 - 1;
        if (nextCount === 0) {
          register3(function () {
            if (polyfill || !globalCache.opGet(fullPathStr)) {
              onCacheRemove === null || onCacheRemove === void 0 || onCacheRemove(cache2, false);
            }
          });
          return null;
        }
        return [times2 - 1, cache2];
      });
    };
  }, [fullPathStr]);
  return cacheContent;
}
var EMPTY_OVERRIDE = {};
var hashPrefix = "css";
var tokenKeys = /* @__PURE__ */ new Map();
function recordCleanToken(tokenKey) {
  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);
}
function removeStyleTags(key, instanceId) {
  if (typeof document !== "undefined") {
    var styles = document.querySelectorAll("style[".concat(ATTR_TOKEN, '="').concat(key, '"]'));
    styles.forEach(function (style2) {
      if (style2[CSS_IN_JS_INSTANCE] === instanceId) {
        var _style$parentNode;
        (_style$parentNode = style2.parentNode) === null || _style$parentNode === void 0 || _style$parentNode.removeChild(style2);
      }
    });
  }
}
var TOKEN_THRESHOLD = 0;
function cleanTokenStyle(tokenKey, instanceId) {
  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);
  var tokenKeyList = Array.from(tokenKeys.keys());
  var cleanableKeyList = tokenKeyList.filter(function (key) {
    var count = tokenKeys.get(key) || 0;
    return count <= 0;
  });
  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {
    cleanableKeyList.forEach(function (key) {
      removeStyleTags(key, instanceId);
      tokenKeys.delete(key);
    });
  }
}
var getComputedToken$1 = function getComputedToken2(originToken, overrideToken, theme, format3) {
  var derivativeToken = theme.getDerivativeToken(originToken);
  var mergedDerivativeToken = _objectSpread2(_objectSpread2({}, derivativeToken), overrideToken);
  if (format3) {
    mergedDerivativeToken = format3(mergedDerivativeToken);
  }
  return mergedDerivativeToken;
};
var TOKEN_PREFIX = "token";
function useCacheToken(theme, tokens) {
  var option2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var _useContext = reactExports.useContext(StyleContext), instanceId = _useContext.cache.instanceId, container2 = _useContext.container;
  var _option$salt = option2.salt, salt = _option$salt === void 0 ? "" : _option$salt, _option$override = option2.override, override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override, formatToken2 = option2.formatToken, compute = option2.getComputedToken, cssVar = option2.cssVar;
  var mergedToken = memoResult(function () {
    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));
  }, tokens);
  var tokenStr = flattenToken(mergedToken);
  var overrideTokenStr = flattenToken(override);
  var cssVarStr = cssVar ? flattenToken(cssVar) : "";
  var cachedToken = useGlobalCache(TOKEN_PREFIX, [salt, theme.id, tokenStr, overrideTokenStr, cssVarStr], function () {
    var _cssVar$key;
    var mergedDerivativeToken = compute ? compute(mergedToken, override, theme) : getComputedToken$1(mergedToken, override, theme, formatToken2);
    var actualToken = _objectSpread2({}, mergedDerivativeToken);
    var cssVarsStr = "";
    if (!!cssVar) {
      var _transformToken = transformToken(mergedDerivativeToken, cssVar.key, {
        prefix: cssVar.prefix,
        ignore: cssVar.ignore,
        unitless: cssVar.unitless,
        preserve: cssVar.preserve
      });
      var _transformToken2 = _slicedToArray(_transformToken, 2);
      mergedDerivativeToken = _transformToken2[0];
      cssVarsStr = _transformToken2[1];
    }
    var tokenKey = token2key(mergedDerivativeToken, salt);
    mergedDerivativeToken._tokenKey = tokenKey;
    actualToken._tokenKey = token2key(actualToken, salt);
    var themeKey = (_cssVar$key = cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) !== null && _cssVar$key !== void 0 ? _cssVar$key : tokenKey;
    mergedDerivativeToken._themeKey = themeKey;
    recordCleanToken(themeKey);
    var hashId = "".concat(hashPrefix, "-").concat(murmur2(tokenKey));
    mergedDerivativeToken._hashId = hashId;
    return [mergedDerivativeToken, hashId, actualToken, cssVarsStr, (cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) || ""];
  }, function (cache2) {
    cleanTokenStyle(cache2[0]._themeKey, instanceId);
  }, function (_ref) {
    var _ref2 = _slicedToArray(_ref, 4), token2 = _ref2[0], cssVarsStr = _ref2[3];
    if (cssVar && cssVarsStr) {
      var style2 = updateCSS(cssVarsStr, murmur2("css-variables-".concat(token2._themeKey)), {
        mark: ATTR_MARK,
        prepend: "queue",
        attachTo: container2,
        priority: -999
      });
      style2[CSS_IN_JS_INSTANCE] = instanceId;
      style2.setAttribute(ATTR_TOKEN, token2._themeKey);
    }
  });
  return cachedToken;
}
var extract$2 = function extract2(cache2, effectStyles, options2) {
  var _cache = _slicedToArray(cache2, 5), realToken = _cache[2], styleStr = _cache[3], cssVarKey = _cache[4];
  var _ref3 = options2 || {}, plain = _ref3.plain;
  if (!styleStr) {
    return null;
  }
  var styleId = realToken._tokenKey;
  var order2 = -999;
  var sharedAttrs = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(order2)
  };
  var styleText = toStyleStr(styleStr, cssVarKey, styleId, sharedAttrs, plain);
  return [order2, styleId, styleText];
};
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var LAYER = "@layer";
var abs = Math.abs;
var from = String.fromCharCode;
function trim(value2) {
  return value2.trim();
}
function replace(value2, pattern4, replacement) {
  return value2.replace(pattern4, replacement);
}
function indexof(value2, search2, position2) {
  return value2.indexOf(search2, position2);
}
function charat(value2, index2) {
  return value2.charCodeAt(index2) | 0;
}
function substr(value2, begin, end) {
  return value2.slice(begin, end);
}
function strlen(value2) {
  return value2.length;
}
function sizeof(value2) {
  return value2.length;
}
function append(value2, array4) {
  return array4.push(value2), value2;
}
var line$4 = 1;
var column$2 = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value2, root2, parent, type4, props, children, length2, siblings) {
  return { value: value2, root: root2, parent, type: type4, props, children, line: line$4, column: column$2, length: length2, return: "", siblings };
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column$2--, character === 10)
    column$2 = 1, line$4--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column$2++, character === 10)
    column$2 = 1, line$4++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type4) {
  switch (type4) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value2) {
  return line$4 = column$2 = 1, length = strlen(characters = value2), position = 0, [];
}
function dealloc(value2) {
  return characters = "", value2;
}
function delimit(type4) {
  return trim(slice(position - 1, delimiter(type4 === 91 ? type4 + 2 : type4 === 40 ? type4 + 1 : type4)));
}
function whitespace(type4) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type4) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index2, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index2, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type4) {
  while (next())
    switch (character) {
      case type4:
        return position;
      case 34:
      case 39:
        if (type4 !== 34 && type4 !== 39)
          delimiter(character);
        break;
      case 40:
        if (type4 === 41)
          delimiter(type4);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type4, index2) {
  while (next())
    if (type4 + character === 47 + 10)
      break;
    else if (type4 + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index2, position - 1) + "*" + from(type4 === 47 ? type4 : next());
}
function identifier(index2) {
  while (!token(peek()))
    next();
  return slice(index2, position);
}
function compile(value2) {
  return dealloc(parse("", null, null, null, [""], value2 = alloc(value2), 0, [0], value2));
}
function parse(value2, root2, parent, rule, rules2, rulesets, pseudo, points, declarations) {
  var index2 = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type4 = "";
  var props = rules2;
  var children = rulesets;
  var reference = rule;
  var characters2 = type4;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f", abs(index2 ? points[index2 - 1] : 0)) != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root2, parent, declarations), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index2++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (ampersand == -1)
              characters2 = replace(characters2, /\f/g, "");
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1, declarations) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2, declarations), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference = ruleset(characters2, root2, parent, index2, offset, rules2, points, type4, props = [], children = [], length2, rulesets), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse(characters2, root2, reference, reference, props, rulesets, length2, points, children);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value2, reference, reference, rule && append(ruleset(value2, reference, reference, 0, 0, rules2, points, type4, rules2, props = [], length2, children), children), rules2, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference, reference, reference, [""], children, 0, points, children);
                }
        }
        index2 = offset = property = 0, variable = ampersand = 1, type4 = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index2++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = length2 = strlen(type4 = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value2, root2, parent, index2, offset, rules2, points, type4, props, children, length2, siblings) {
  var post = offset - 1;
  var rule = offset === 0 ? rules2 : [""];
  var size2 = sizeof(rule);
  for (var i = 0, j = 0, k2 = 0; i < index2; ++i)
    for (var x = 0, y = substr(value2, post + 1, post = abs(j = points[i])), z = value2; x < size2; ++x)
      if (z = trim(j > 0 ? rule[x] + " " + y : replace(y, /&\f/g, rule[x])))
        props[k2++] = z;
  return node(value2, root2, parent, offset === 0 ? RULESET : type4, props, children, length2, siblings);
}
function comment(value2, root2, parent, siblings) {
  return node(value2, root2, parent, COMMENT, from(char()), substr(value2, 2, -2), 0, siblings);
}
function declaration(value2, root2, parent, length2, siblings) {
  return node(value2, root2, parent, DECLARATION, substr(value2, 0, length2), substr(value2, length2 + 1, -1), length2, siblings);
}
function serialize(children, callback) {
  var output = "";
  for (var i = 0; i < children.length; i++)
    output += callback(children[i], i, children, callback) || "";
  return output;
}
function stringify$1(element, index2, children, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length)
        break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      if (!strlen(element.value = element.props.join(",")))
        return "";
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}
var ATTR_CACHE_MAP = "data-ant-cssinjs-cache-path";
var CSS_FILE_STYLE = "_FILE_STYLE__";
var cachePathMap;
var fromCSSFile = true;
function prepare() {
  if (!cachePathMap) {
    cachePathMap = {};
    if (canUseDom()) {
      var div = document.createElement("div");
      div.className = ATTR_CACHE_MAP;
      div.style.position = "fixed";
      div.style.visibility = "hidden";
      div.style.top = "-9999px";
      document.body.appendChild(div);
      var content2 = getComputedStyle(div).content || "";
      content2 = content2.replace(/^"/, "").replace(/"$/, "");
      content2.split(";").forEach(function (item2) {
        var _item$split = item2.split(":"), _item$split2 = _slicedToArray(_item$split, 2), path = _item$split2[0], hash = _item$split2[1];
        cachePathMap[path] = hash;
      });
      var inlineMapStyle = document.querySelector("style[".concat(ATTR_CACHE_MAP, "]"));
      if (inlineMapStyle) {
        var _inlineMapStyle$paren;
        fromCSSFile = false;
        (_inlineMapStyle$paren = inlineMapStyle.parentNode) === null || _inlineMapStyle$paren === void 0 || _inlineMapStyle$paren.removeChild(inlineMapStyle);
      }
      document.body.removeChild(div);
    }
  }
}
function existPath(path) {
  prepare();
  return !!cachePathMap[path];
}
function getStyleAndHash(path) {
  var hash = cachePathMap[path];
  var styleStr = null;
  if (hash && canUseDom()) {
    if (fromCSSFile) {
      styleStr = CSS_FILE_STYLE;
    } else {
      var _style = document.querySelector("style[".concat(ATTR_MARK, '="').concat(cachePathMap[path], '"]'));
      if (_style) {
        styleStr = _style.innerHTML;
      } else {
        delete cachePathMap[path];
      }
    }
  }
  return [styleStr, hash];
}
var SKIP_CHECK = "_skip_check_";
var MULTI_VALUE = "_multi_value_";
function normalizeStyle(styleStr) {
  var serialized = serialize(compile(styleStr), stringify$1);
  return serialized.replace(/\{%%%\:[^;];}/g, ";");
}
function isCompoundCSSProperty(value2) {
  return _typeof(value2) === "object" && value2 && (SKIP_CHECK in value2 || MULTI_VALUE in value2);
}
function injectSelectorHash(key, hashId, hashPriority) {
  if (!hashId) {
    return key;
  }
  var hashClassName = ".".concat(hashId);
  var hashSelector = hashPriority === "low" ? ":where(".concat(hashClassName, ")") : hashClassName;
  var keys2 = key.split(",").map(function (k2) {
    var _firstPath$match;
    var fullPath = k2.trim().split(/\s+/);
    var firstPath = fullPath[0] || "";
    var htmlElement = ((_firstPath$match = firstPath.match(/^\w+/)) === null || _firstPath$match === void 0 ? void 0 : _firstPath$match[0]) || "";
    firstPath = "".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));
    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(" ");
  });
  return keys2.join(",");
}
var parseStyle = function parseStyle2(interpolation) {
  var config2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
    root: true,
    parentSelectors: []
  }, root2 = _ref.root, injectHash = _ref.injectHash, parentSelectors = _ref.parentSelectors;
  var hashId = config2.hashId, layer = config2.layer;
  config2.path;
  var hashPriority = config2.hashPriority, _config$transformers = config2.transformers, transformers = _config$transformers === void 0 ? [] : _config$transformers;
  config2.linters;
  var styleStr = "";
  var effectStyle = {};
  function parseKeyframes(keyframes) {
    var animationName = keyframes.getName(hashId);
    if (!effectStyle[animationName]) {
      var _parseStyle = parseStyle2(keyframes.style, config2, {
        root: false,
        parentSelectors
      }), _parseStyle2 = _slicedToArray(_parseStyle, 1), _parsedStr = _parseStyle2[0];
      effectStyle[animationName] = "@keyframes ".concat(keyframes.getName(hashId)).concat(_parsedStr);
    }
  }
  function flattenList(list) {
    var fullList = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    list.forEach(function (item2) {
      if (Array.isArray(item2)) {
        flattenList(item2, fullList);
      } else if (item2) {
        fullList.push(item2);
      }
    });
    return fullList;
  }
  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);
  flattenStyleList.forEach(function (originStyle) {
    var style2 = typeof originStyle === "string" && !root2 ? {} : originStyle;
    if (typeof style2 === "string") {
      styleStr += "".concat(style2, "\n");
    } else if (style2._keyframe) {
      parseKeyframes(style2);
    } else {
      var mergedStyle = transformers.reduce(function (prev2, trans2) {
        var _trans$visit;
        return (trans2 === null || trans2 === void 0 || (_trans$visit = trans2.visit) === null || _trans$visit === void 0 ? void 0 : _trans$visit.call(trans2, prev2)) || prev2;
      }, style2);
      Object.keys(mergedStyle).forEach(function (key) {
        var value2 = mergedStyle[key];
        if (_typeof(value2) === "object" && value2 && (key !== "animationName" || !value2._keyframe) && !isCompoundCSSProperty(value2)) {
          var subInjectHash = false;
          var mergedKey = key.trim();
          var nextRoot = false;
          if ((root2 || injectHash) && hashId) {
            if (mergedKey.startsWith("@")) {
              subInjectHash = true;
            } else {
              mergedKey = injectSelectorHash(key, hashId, hashPriority);
            }
          } else if (root2 && !hashId && (mergedKey === "&" || mergedKey === "")) {
            mergedKey = "";
            nextRoot = true;
          }
          var _parseStyle3 = parseStyle2(value2, config2, {
            root: nextRoot,
            injectHash: subInjectHash,
            parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])
          }), _parseStyle4 = _slicedToArray(_parseStyle3, 2), _parsedStr2 = _parseStyle4[0], childEffectStyle = _parseStyle4[1];
          effectStyle = _objectSpread2(_objectSpread2({}, effectStyle), childEffectStyle);
          styleStr += "".concat(mergedKey).concat(_parsedStr2);
        } else {
          let appendStyle = function (cssKey, cssValue) {
            var styleName = cssKey.replace(/[A-Z]/g, function (match2) {
              return "-".concat(match2.toLowerCase());
            });
            var formatValue2 = cssValue;
            if (!unitlessKeys[cssKey] && typeof formatValue2 === "number" && formatValue2 !== 0) {
              formatValue2 = "".concat(formatValue2, "px");
            }
            if (cssKey === "animationName" && cssValue !== null && cssValue !== void 0 && cssValue._keyframe) {
              parseKeyframes(cssValue);
              formatValue2 = cssValue.getName(hashId);
            }
            styleStr += "".concat(styleName, ":").concat(formatValue2, ";");
          };
          var _value;
          var actualValue = (_value = value2 === null || value2 === void 0 ? void 0 : value2.value) !== null && _value !== void 0 ? _value : value2;
          if (_typeof(value2) === "object" && value2 !== null && value2 !== void 0 && value2[MULTI_VALUE] && Array.isArray(actualValue)) {
            actualValue.forEach(function (item2) {
              appendStyle(key, item2);
            });
          } else {
            appendStyle(key, actualValue);
          }
        }
      });
    }
  });
  if (!root2) {
    styleStr = "{".concat(styleStr, "}");
  } else if (layer) {
    styleStr = "@layer ".concat(layer.name, " {").concat(styleStr, "}");
    if (layer.dependencies) {
      effectStyle["@layer ".concat(layer.name)] = layer.dependencies.map(function (deps) {
        return "@layer ".concat(deps, ", ").concat(layer.name, ";");
      }).join("\n");
    }
  }
  return [styleStr, effectStyle];
};
function uniqueHash(path, styleStr) {
  return murmur2("".concat(path.join("%")).concat(styleStr));
}
function Empty$1() {
  return null;
}
var STYLE_PREFIX = "style";
function useStyleRegister(info2, styleFn) {
  var token2 = info2.token, path = info2.path, hashId = info2.hashId, layer = info2.layer, nonce = info2.nonce, clientOnly = info2.clientOnly, _info$order = info2.order, order2 = _info$order === void 0 ? 0 : _info$order;
  var _React$useContext = reactExports.useContext(StyleContext), autoClear = _React$useContext.autoClear;
  _React$useContext.mock;
  var defaultCache = _React$useContext.defaultCache, hashPriority = _React$useContext.hashPriority, container2 = _React$useContext.container, ssrInline = _React$useContext.ssrInline, transformers = _React$useContext.transformers, linters = _React$useContext.linters, cache2 = _React$useContext.cache, enableLayer = _React$useContext.layer;
  var tokenKey = token2._tokenKey;
  var fullPath = [tokenKey];
  if (enableLayer) {
    fullPath.push("layer");
  }
  fullPath.push.apply(fullPath, _toConsumableArray(path));
  var isMergedClientSide = isClientSide;
  var _useGlobalCache = useGlobalCache(
    STYLE_PREFIX,
    fullPath,
    // Create cache if needed
    function () {
      var cachePath = fullPath.join("|");
      if (existPath(cachePath)) {
        var _getStyleAndHash = getStyleAndHash(cachePath), _getStyleAndHash2 = _slicedToArray(_getStyleAndHash, 2), inlineCacheStyleStr = _getStyleAndHash2[0], styleHash = _getStyleAndHash2[1];
        if (inlineCacheStyleStr) {
          return [inlineCacheStyleStr, tokenKey, styleHash, {}, clientOnly, order2];
        }
      }
      var styleObj = styleFn();
      var _parseStyle5 = parseStyle(styleObj, {
        hashId,
        hashPriority,
        layer: enableLayer ? layer : void 0,
        path: path.join("-"),
        transformers,
        linters
      }), _parseStyle6 = _slicedToArray(_parseStyle5, 2), parsedStyle = _parseStyle6[0], effectStyle = _parseStyle6[1];
      var styleStr = normalizeStyle(parsedStyle);
      var styleId = uniqueHash(fullPath, styleStr);
      return [styleStr, tokenKey, styleId, effectStyle, clientOnly, order2];
    },
    // Remove cache if no need
    function (_ref2, fromHMR) {
      var _ref3 = _slicedToArray(_ref2, 3), styleId = _ref3[2];
      if ((fromHMR || autoClear) && isClientSide) {
        removeCSS(styleId, {
          mark: ATTR_MARK
        });
      }
    },
    // Effect: Inject style here
    function (_ref4) {
      var _ref5 = _slicedToArray(_ref4, 4), styleStr = _ref5[0];
      _ref5[1];
      var styleId = _ref5[2], effectStyle = _ref5[3];
      if (isMergedClientSide && styleStr !== CSS_FILE_STYLE) {
        var mergedCSSConfig = {
          mark: ATTR_MARK,
          prepend: enableLayer ? false : "queue",
          attachTo: container2,
          priority: order2
        };
        var nonceStr = typeof nonce === "function" ? nonce() : nonce;
        if (nonceStr) {
          mergedCSSConfig.csp = {
            nonce: nonceStr
          };
        }
        var effectLayerKeys = [];
        var effectRestKeys = [];
        Object.keys(effectStyle).forEach(function (key) {
          if (key.startsWith("@layer")) {
            effectLayerKeys.push(key);
          } else {
            effectRestKeys.push(key);
          }
        });
        effectLayerKeys.forEach(function (effectKey) {
          updateCSS(normalizeStyle(effectStyle[effectKey]), "_layer-".concat(effectKey), _objectSpread2(_objectSpread2({}, mergedCSSConfig), {}, {
            prepend: true
          }));
        });
        var style2 = updateCSS(styleStr, styleId, mergedCSSConfig);
        style2[CSS_IN_JS_INSTANCE] = cache2.instanceId;
        style2.setAttribute(ATTR_TOKEN, tokenKey);
        effectRestKeys.forEach(function (effectKey) {
          updateCSS(normalizeStyle(effectStyle[effectKey]), "_effect-".concat(effectKey), mergedCSSConfig);
        });
      }
    }
  ), _useGlobalCache2 = _slicedToArray(_useGlobalCache, 3), cachedStyleStr = _useGlobalCache2[0], cachedTokenKey = _useGlobalCache2[1], cachedStyleId = _useGlobalCache2[2];
  return function (node2) {
    var styleNode;
    if (!ssrInline || isMergedClientSide || !defaultCache) {
      styleNode = /* @__PURE__ */ reactExports.createElement(Empty$1, null);
    } else {
      var _ref6;
      styleNode = /* @__PURE__ */ reactExports.createElement("style", _extends$1({}, (_ref6 = {}, _defineProperty(_ref6, ATTR_TOKEN, cachedTokenKey), _defineProperty(_ref6, ATTR_MARK, cachedStyleId), _ref6), {
        dangerouslySetInnerHTML: {
          __html: cachedStyleStr
        }
      }));
    }
    return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, styleNode, node2);
  };
}
var extract$1 = function extract22(cache2, effectStyles, options2) {
  var _cache = _slicedToArray(cache2, 6), styleStr = _cache[0], tokenKey = _cache[1], styleId = _cache[2], effectStyle = _cache[3], clientOnly = _cache[4], order2 = _cache[5];
  var _ref7 = options2 || {}, plain = _ref7.plain;
  if (clientOnly) {
    return null;
  }
  var keyStyleText = styleStr;
  var sharedAttrs = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(order2)
  };
  keyStyleText = toStyleStr(styleStr, tokenKey, styleId, sharedAttrs, plain);
  if (effectStyle) {
    Object.keys(effectStyle).forEach(function (effectKey) {
      if (!effectStyles[effectKey]) {
        effectStyles[effectKey] = true;
        var effectStyleStr = normalizeStyle(effectStyle[effectKey]);
        var effectStyleHTML = toStyleStr(effectStyleStr, tokenKey, "_effect-".concat(effectKey), sharedAttrs, plain);
        if (effectKey.startsWith("@layer")) {
          keyStyleText = effectStyleHTML + keyStyleText;
        } else {
          keyStyleText += effectStyleHTML;
        }
      }
    });
  }
  return [order2, styleId, keyStyleText];
};
var CSS_VAR_PREFIX = "cssVar";
var useCSSVarRegister = function useCSSVarRegister2(config2, fn) {
  var key = config2.key, prefix2 = config2.prefix, unitless2 = config2.unitless, ignore2 = config2.ignore, token2 = config2.token, _config$scope = config2.scope, scope = _config$scope === void 0 ? "" : _config$scope;
  var _useContext = reactExports.useContext(StyleContext), instanceId = _useContext.cache.instanceId, container2 = _useContext.container;
  var tokenKey = token2._tokenKey;
  var stylePath = [].concat(_toConsumableArray(config2.path), [key, scope, tokenKey]);
  var cache2 = useGlobalCache(CSS_VAR_PREFIX, stylePath, function () {
    var originToken = fn();
    var _transformToken = transformToken(originToken, key, {
      prefix: prefix2,
      unitless: unitless2,
      ignore: ignore2,
      scope
    }), _transformToken2 = _slicedToArray(_transformToken, 2), mergedToken = _transformToken2[0], cssVarsStr = _transformToken2[1];
    var styleId = uniqueHash(stylePath, cssVarsStr);
    return [mergedToken, cssVarsStr, styleId, key];
  }, function (_ref) {
    var _ref2 = _slicedToArray(_ref, 3), styleId = _ref2[2];
    if (isClientSide) {
      removeCSS(styleId, {
        mark: ATTR_MARK
      });
    }
  }, function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 3), cssVarsStr = _ref4[1], styleId = _ref4[2];
    if (!cssVarsStr) {
      return;
    }
    var style2 = updateCSS(cssVarsStr, styleId, {
      mark: ATTR_MARK,
      prepend: "queue",
      attachTo: container2,
      priority: -999
    });
    style2[CSS_IN_JS_INSTANCE] = instanceId;
    style2.setAttribute(ATTR_TOKEN, key);
  });
  return cache2;
};
var extract = function extract3(cache2, effectStyles, options2) {
  var _cache = _slicedToArray(cache2, 4), styleStr = _cache[1], styleId = _cache[2], cssVarKey = _cache[3];
  var _ref5 = options2 || {}, plain = _ref5.plain;
  if (!styleStr) {
    return null;
  }
  var order2 = -999;
  var sharedAttrs = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(order2)
  };
  var styleText = toStyleStr(styleStr, cssVarKey, styleId, sharedAttrs, plain);
  return [order2, styleId, styleText];
};
var _ExtractStyleFns;
_ExtractStyleFns = {}, _defineProperty(_ExtractStyleFns, STYLE_PREFIX, extract$1), _defineProperty(_ExtractStyleFns, TOKEN_PREFIX, extract$2), _defineProperty(_ExtractStyleFns, CSS_VAR_PREFIX, extract), _ExtractStyleFns;
var Keyframe = /* @__PURE__ */ function () {
  function Keyframe2(name2, style2) {
    _classCallCheck(this, Keyframe2);
    _defineProperty(this, "name", void 0);
    _defineProperty(this, "style", void 0);
    _defineProperty(this, "_keyframe", true);
    this.name = name2;
    this.style = style2;
  }
  _createClass(Keyframe2, [{
    key: "getName",
    value: function getName() {
      var hashId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      return hashId ? "".concat(hashId, "-").concat(this.name) : this.name;
    }
  }]);
  return Keyframe2;
}();
function noSplit(list) {
  list.notSplit = true;
  return list;
}
({
  // Inset
  inset: ["top", "right", "bottom", "left"],
  insetBlock: ["top", "bottom"],
  insetBlockStart: ["top"],
  insetBlockEnd: ["bottom"],
  insetInline: ["left", "right"],
  insetInlineStart: ["left"],
  insetInlineEnd: ["right"],
  // Margin
  marginBlock: ["marginTop", "marginBottom"],
  marginBlockStart: ["marginTop"],
  marginBlockEnd: ["marginBottom"],
  marginInline: ["marginLeft", "marginRight"],
  marginInlineStart: ["marginLeft"],
  marginInlineEnd: ["marginRight"],
  // Padding
  paddingBlock: ["paddingTop", "paddingBottom"],
  paddingBlockStart: ["paddingTop"],
  paddingBlockEnd: ["paddingBottom"],
  paddingInline: ["paddingLeft", "paddingRight"],
  paddingInlineStart: ["paddingLeft"],
  paddingInlineEnd: ["paddingRight"],
  // Border
  borderBlock: noSplit(["borderTop", "borderBottom"]),
  borderBlockStart: noSplit(["borderTop"]),
  borderBlockEnd: noSplit(["borderBottom"]),
  borderInline: noSplit(["borderLeft", "borderRight"]),
  borderInlineStart: noSplit(["borderLeft"]),
  borderInlineEnd: noSplit(["borderRight"]),
  // Border width
  borderBlockWidth: ["borderTopWidth", "borderBottomWidth"],
  borderBlockStartWidth: ["borderTopWidth"],
  borderBlockEndWidth: ["borderBottomWidth"],
  borderInlineWidth: ["borderLeftWidth", "borderRightWidth"],
  borderInlineStartWidth: ["borderLeftWidth"],
  borderInlineEndWidth: ["borderRightWidth"],
  // Border style
  borderBlockStyle: ["borderTopStyle", "borderBottomStyle"],
  borderBlockStartStyle: ["borderTopStyle"],
  borderBlockEndStyle: ["borderBottomStyle"],
  borderInlineStyle: ["borderLeftStyle", "borderRightStyle"],
  borderInlineStartStyle: ["borderLeftStyle"],
  borderInlineEndStyle: ["borderRightStyle"],
  // Border color
  borderBlockColor: ["borderTopColor", "borderBottomColor"],
  borderBlockStartColor: ["borderTopColor"],
  borderBlockEndColor: ["borderBottomColor"],
  borderInlineColor: ["borderLeftColor", "borderRightColor"],
  borderInlineStartColor: ["borderLeftColor"],
  borderInlineEndColor: ["borderRightColor"],
  // Border radius
  borderStartStartRadius: ["borderTopLeftRadius"],
  borderStartEndRadius: ["borderTopRightRadius"],
  borderEndStartRadius: ["borderBottomLeftRadius"],
  borderEndEndRadius: ["borderBottomRightRadius"]
});
var IconContext = /* @__PURE__ */ reactExports.createContext({});
const WarningContext = /* @__PURE__ */ reactExports.createContext({});
const ValidateMessagesContext = /* @__PURE__ */ reactExports.createContext(void 0);
var locale$3 = {
  // Options
  items_per_page: "/ page",
  jump_to: "Go to",
  jump_to_confirm: "confirm",
  page: "Page",
  // Pagination
  prev_page: "Previous Page",
  next_page: "Next Page",
  prev_5: "Previous 5 Pages",
  next_5: "Next 5 Pages",
  prev_3: "Previous 3 Pages",
  next_3: "Next 3 Pages",
  page_size: "Page Size"
};
var locale$2 = {
  locale: "en_US",
  today: "Today",
  now: "Now",
  backToToday: "Back to today",
  ok: "OK",
  clear: "Clear",
  month: "Month",
  year: "Year",
  timeSelect: "select time",
  dateSelect: "select date",
  weekSelect: "Choose a week",
  monthSelect: "Choose a month",
  yearSelect: "Choose a year",
  decadeSelect: "Choose a decade",
  yearFormat: "YYYY",
  dateFormat: "M/D/YYYY",
  dayFormat: "D",
  dateTimeFormat: "M/D/YYYY HH:mm:ss",
  monthBeforeYear: true,
  previousMonth: "Previous month (PageUp)",
  nextMonth: "Next month (PageDown)",
  previousYear: "Last year (Control + left)",
  nextYear: "Next year (Control + right)",
  previousDecade: "Last decade",
  nextDecade: "Next decade",
  previousCentury: "Last century",
  nextCentury: "Next century"
};
const locale$1 = {
  placeholder: "Select time",
  rangePlaceholder: ["Start time", "End time"]
};
const locale = {
  lang: Object.assign({
    placeholder: "Select date",
    yearPlaceholder: "Select year",
    quarterPlaceholder: "Select quarter",
    monthPlaceholder: "Select month",
    weekPlaceholder: "Select week",
    rangePlaceholder: ["Start date", "End date"],
    rangeYearPlaceholder: ["Start year", "End year"],
    rangeQuarterPlaceholder: ["Start quarter", "End quarter"],
    rangeMonthPlaceholder: ["Start month", "End month"],
    rangeWeekPlaceholder: ["Start week", "End week"]
  }, locale$2),
  timePickerLocale: Object.assign({}, locale$1)
};
const typeTemplate$1 = "${label} is not a valid ${type}";
const localeValues = {
  locale: "en",
  Pagination: locale$3,
  DatePicker: locale,
  TimePicker: locale$1,
  Calendar: locale,
  global: {
    placeholder: "Please select"
  },
  Table: {
    filterTitle: "Filter menu",
    filterConfirm: "OK",
    filterReset: "Reset",
    filterEmptyText: "No filters",
    filterCheckall: "Select all items",
    filterSearchPlaceholder: "Search in filters",
    emptyText: "No data",
    selectAll: "Select current page",
    selectInvert: "Invert current page",
    selectNone: "Clear all data",
    selectionAll: "Select all data",
    sortTitle: "Sort",
    expand: "Expand row",
    collapse: "Collapse row",
    triggerDesc: "Click to sort descending",
    triggerAsc: "Click to sort ascending",
    cancelSort: "Click to cancel sorting"
  },
  Tour: {
    Next: "Next",
    Previous: "Previous",
    Finish: "Finish"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancel",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancel"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Search here",
    itemUnit: "item",
    itemsUnit: "items",
    remove: "Remove",
    selectCurrent: "Select current page",
    removeCurrent: "Remove current page",
    selectAll: "Select all data",
    removeAll: "Remove all data",
    selectInvert: "Invert current page"
  },
  Upload: {
    uploading: "Uploading...",
    removeFile: "Remove file",
    uploadError: "Upload error",
    previewFile: "Preview file",
    downloadFile: "Download file"
  },
  Empty: {
    description: "No data"
  },
  Icon: {
    icon: "icon"
  },
  Text: {
    edit: "Edit",
    copy: "Copy",
    copied: "Copied",
    expand: "Expand"
  },
  Form: {
    optional: "(optional)",
    defaultValidateMessages: {
      default: "Field validation error for ${label}",
      required: "Please enter ${label}",
      enum: "${label} must be one of [${enum}]",
      whitespace: "${label} cannot be a blank character",
      date: {
        format: "${label} date format is invalid",
        parse: "${label} cannot be converted to a date",
        invalid: "${label} is an invalid date"
      },
      types: {
        string: typeTemplate$1,
        method: typeTemplate$1,
        array: typeTemplate$1,
        object: typeTemplate$1,
        number: typeTemplate$1,
        date: typeTemplate$1,
        boolean: typeTemplate$1,
        integer: typeTemplate$1,
        float: typeTemplate$1,
        regexp: typeTemplate$1,
        email: typeTemplate$1,
        url: typeTemplate$1,
        hex: typeTemplate$1
      },
      string: {
        len: "${label} must be ${len} characters",
        min: "${label} must be at least ${min} characters",
        max: "${label} must be up to ${max} characters",
        range: "${label} must be between ${min}-${max} characters"
      },
      number: {
        len: "${label} must be equal to ${len}",
        min: "${label} must be minimum ${min}",
        max: "${label} must be maximum ${max}",
        range: "${label} must be between ${min}-${max}"
      },
      array: {
        len: "Must be ${len} ${label}",
        min: "At least ${min} ${label}",
        max: "At most ${max} ${label}",
        range: "The amount of ${label} must be between ${min}-${max}"
      },
      pattern: {
        mismatch: "${label} does not match the pattern ${pattern}"
      }
    }
  },
  Image: {
    preview: "Preview"
  },
  QRCode: {
    expired: "QR code expired",
    refresh: "Refresh",
    scanned: "Scanned"
  },
  ColorPicker: {
    presetEmpty: "Empty"
  }
};
Object.assign({}, localeValues.Modal);
let localeList = [];
const generateLocale = () => localeList.reduce((merged, locale2) => Object.assign(Object.assign({}, merged), locale2), localeValues.Modal);
function changeConfirmLocale(newLocale) {
  if (newLocale) {
    const cloneLocale = Object.assign({}, newLocale);
    localeList.push(cloneLocale);
    generateLocale();
    return () => {
      localeList = localeList.filter((locale2) => locale2 !== cloneLocale);
      generateLocale();
    };
  }
  Object.assign({}, localeValues.Modal);
}
const LocaleContext = /* @__PURE__ */ reactExports.createContext(void 0);
const useLocale$1 = (componentName, defaultLocale) => {
  const fullLocale = reactExports.useContext(LocaleContext);
  const getLocale = reactExports.useMemo(() => {
    var _a;
    const locale2 = defaultLocale || localeValues[componentName];
    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};
    return Object.assign(Object.assign({}, typeof locale2 === "function" ? locale2() : locale2), localeFromContext || {});
  }, [componentName, defaultLocale, fullLocale]);
  const getLocaleCode = reactExports.useMemo(() => {
    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;
    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {
      return localeValues.locale;
    }
    return localeCode;
  }, [fullLocale]);
  return [getLocale, getLocaleCode];
};
const ANT_MARK = "internalMark";
const LocaleProvider = (props) => {
  const {
    locale: locale2 = {},
    children,
    _ANT_MARK__
  } = props;
  reactExports.useEffect(() => {
    const clearLocale = changeConfirmLocale(locale2 && locale2.Modal);
    return clearLocale;
  }, [locale2]);
  const getMemoizedContextValue = reactExports.useMemo(() => Object.assign(Object.assign({}, locale2), {
    exist: true
  }), [locale2]);
  return /* @__PURE__ */ reactExports.createElement(LocaleContext.Provider, {
    value: getMemoizedContextValue
  }, children);
};
function bound01(n2, max) {
  if (isOnePointZero(n2)) {
    n2 = "100%";
  }
  var isPercent = isPercentage(n2);
  n2 = max === 360 ? n2 : Math.min(max, Math.max(0, parseFloat(n2)));
  if (isPercent) {
    n2 = parseInt(String(n2 * max), 10) / 100;
  }
  if (Math.abs(n2 - max) < 1e-6) {
    return 1;
  }
  if (max === 360) {
    n2 = (n2 < 0 ? n2 % max + max : n2 % max) / parseFloat(String(max));
  } else {
    n2 = n2 % max / parseFloat(String(max));
  }
  return n2;
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function isOnePointZero(n2) {
  return typeof n2 === "string" && n2.indexOf(".") !== -1 && parseFloat(n2) === 1;
}
function isPercentage(n2) {
  return typeof n2 === "string" && n2.indexOf("%") !== -1;
}
function boundAlpha(a) {
  a = parseFloat(a);
  if (isNaN(a) || a < 0 || a > 1) {
    a = 1;
  }
  return a;
}
function convertToPercentage(n2) {
  if (n2 <= 1) {
    return "".concat(Number(n2) * 100, "%");
  }
  return n2;
}
function pad2(c2) {
  return c2.length === 1 ? "0" + c2 : String(c2);
}
function rgbToRgb(r2, g2, b2) {
  return {
    r: bound01(r2, 255) * 255,
    g: bound01(g2, 255) * 255,
    b: bound01(b2, 255) * 255
  };
}
function rgbToHsl(r2, g2, b2) {
  r2 = bound01(r2, 255);
  g2 = bound01(g2, 255);
  b2 = bound01(b2, 255);
  var max = Math.max(r2, g2, b2);
  var min = Math.min(r2, g2, b2);
  var h2 = 0;
  var s = 0;
  var l2 = (max + min) / 2;
  if (max === min) {
    s = 0;
    h2 = 0;
  } else {
    var d2 = max - min;
    s = l2 > 0.5 ? d2 / (2 - max - min) : d2 / (max + min);
    switch (max) {
      case r2:
        h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
        break;
      case g2:
        h2 = (b2 - r2) / d2 + 2;
        break;
      case b2:
        h2 = (r2 - g2) / d2 + 4;
        break;
    }
    h2 /= 6;
  }
  return { h: h2, s, l: l2 };
}
function hue2rgb(p2, q2, t2) {
  if (t2 < 0) {
    t2 += 1;
  }
  if (t2 > 1) {
    t2 -= 1;
  }
  if (t2 < 1 / 6) {
    return p2 + (q2 - p2) * (6 * t2);
  }
  if (t2 < 1 / 2) {
    return q2;
  }
  if (t2 < 2 / 3) {
    return p2 + (q2 - p2) * (2 / 3 - t2) * 6;
  }
  return p2;
}
function hslToRgb(h2, s, l2) {
  var r2;
  var g2;
  var b2;
  h2 = bound01(h2, 360);
  s = bound01(s, 100);
  l2 = bound01(l2, 100);
  if (s === 0) {
    g2 = l2;
    b2 = l2;
    r2 = l2;
  } else {
    var q2 = l2 < 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;
    var p2 = 2 * l2 - q2;
    r2 = hue2rgb(p2, q2, h2 + 1 / 3);
    g2 = hue2rgb(p2, q2, h2);
    b2 = hue2rgb(p2, q2, h2 - 1 / 3);
  }
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHsv(r2, g2, b2) {
  r2 = bound01(r2, 255);
  g2 = bound01(g2, 255);
  b2 = bound01(b2, 255);
  var max = Math.max(r2, g2, b2);
  var min = Math.min(r2, g2, b2);
  var h2 = 0;
  var v2 = max;
  var d2 = max - min;
  var s = max === 0 ? 0 : d2 / max;
  if (max === min) {
    h2 = 0;
  } else {
    switch (max) {
      case r2:
        h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
        break;
      case g2:
        h2 = (b2 - r2) / d2 + 2;
        break;
      case b2:
        h2 = (r2 - g2) / d2 + 4;
        break;
    }
    h2 /= 6;
  }
  return { h: h2, s, v: v2 };
}
function hsvToRgb(h2, s, v2) {
  h2 = bound01(h2, 360) * 6;
  s = bound01(s, 100);
  v2 = bound01(v2, 100);
  var i = Math.floor(h2);
  var f2 = h2 - i;
  var p2 = v2 * (1 - s);
  var q2 = v2 * (1 - f2 * s);
  var t2 = v2 * (1 - (1 - f2) * s);
  var mod = i % 6;
  var r2 = [v2, q2, p2, p2, t2, v2][mod];
  var g2 = [t2, v2, v2, q2, p2, p2][mod];
  var b2 = [p2, p2, t2, v2, v2, q2][mod];
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHex(r2, g2, b2, allow3Char) {
  var hex2 = [
    pad2(Math.round(r2).toString(16)),
    pad2(Math.round(g2).toString(16)),
    pad2(Math.round(b2).toString(16))
  ];
  if (allow3Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);
  }
  return hex2.join("");
}
function rgbaToHex(r2, g2, b2, a, allow4Char) {
  var hex2 = [
    pad2(Math.round(r2).toString(16)),
    pad2(Math.round(g2).toString(16)),
    pad2(Math.round(b2).toString(16)),
    pad2(convertDecimalToHex(a))
  ];
  if (allow4Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1)) && hex2[3].startsWith(hex2[3].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);
  }
  return hex2.join("");
}
function convertDecimalToHex(d2) {
  return Math.round(parseFloat(d2) * 255).toString(16);
}
function convertHexToDecimal(h2) {
  return parseIntFromHex(h2) / 255;
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function numberInputToObject(color) {
  return {
    r: color >> 16,
    g: (color & 65280) >> 8,
    b: color & 255
  };
}
var names = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function inputToRGB(color) {
  var rgb = { r: 0, g: 0, b: 0 };
  var a = 1;
  var s = null;
  var v2 = null;
  var l2 = null;
  var ok = false;
  var format3 = false;
  if (typeof color === "string") {
    color = stringInputToObject(color);
  }
  if (typeof color === "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format3 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s = convertToPercentage(color.s);
      v2 = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s, v2);
      ok = true;
      format3 = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s = convertToPercentage(color.s);
      l2 = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s, l2);
      ok = true;
      format3 = "hsl";
    }
    if (Object.prototype.hasOwnProperty.call(color, "a")) {
      a = color.a;
    }
  }
  a = boundAlpha(a);
  return {
    ok,
    format: color.format || format3,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a
  };
}
var CSS_INTEGER = "[-\\+]?\\d+%?";
var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
var CSS_UNIT = "(?:".concat(CSS_NUMBER, ")|(?:").concat(CSS_INTEGER, ")");
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var matchers = {
  CSS_UNIT: new RegExp(CSS_UNIT),
  rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
  rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
  hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
  hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
  hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
  hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function stringInputToObject(color) {
  color = color.trim().toLowerCase();
  if (color.length === 0) {
    return false;
  }
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color === "transparent") {
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  }
  var match2 = matchers.rgb.exec(color);
  if (match2) {
    return { r: match2[1], g: match2[2], b: match2[3] };
  }
  match2 = matchers.rgba.exec(color);
  if (match2) {
    return { r: match2[1], g: match2[2], b: match2[3], a: match2[4] };
  }
  match2 = matchers.hsl.exec(color);
  if (match2) {
    return { h: match2[1], s: match2[2], l: match2[3] };
  }
  match2 = matchers.hsla.exec(color);
  if (match2) {
    return { h: match2[1], s: match2[2], l: match2[3], a: match2[4] };
  }
  match2 = matchers.hsv.exec(color);
  if (match2) {
    return { h: match2[1], s: match2[2], v: match2[3] };
  }
  match2 = matchers.hsva.exec(color);
  if (match2) {
    return { h: match2[1], s: match2[2], v: match2[3], a: match2[4] };
  }
  match2 = matchers.hex8.exec(color);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      a: convertHexToDecimal(match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  match2 = matchers.hex6.exec(color);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      format: named ? "name" : "hex"
    };
  }
  match2 = matchers.hex4.exec(color);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1] + match2[1]),
      g: parseIntFromHex(match2[2] + match2[2]),
      b: parseIntFromHex(match2[3] + match2[3]),
      a: convertHexToDecimal(match2[4] + match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  match2 = matchers.hex3.exec(color);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1] + match2[1]),
      g: parseIntFromHex(match2[2] + match2[2]),
      b: parseIntFromHex(match2[3] + match2[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function isValidCSSUnit(color) {
  return Boolean(matchers.CSS_UNIT.exec(String(color)));
}
var TinyColor = (
  /** @class */
  function () {
    function TinyColor2(color, opts) {
      if (color === void 0) {
        color = "";
      }
      if (opts === void 0) {
        opts = {};
      }
      var _a;
      if (color instanceof TinyColor2) {
        return color;
      }
      if (typeof color === "number") {
        color = numberInputToObject(color);
      }
      this.originalInput = color;
      var rgb = inputToRGB(color);
      this.originalInput = color;
      this.r = rgb.r;
      this.g = rgb.g;
      this.b = rgb.b;
      this.a = rgb.a;
      this.roundA = Math.round(100 * this.a) / 100;
      this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;
      this.gradientType = opts.gradientType;
      if (this.r < 1) {
        this.r = Math.round(this.r);
      }
      if (this.g < 1) {
        this.g = Math.round(this.g);
      }
      if (this.b < 1) {
        this.b = Math.round(this.b);
      }
      this.isValid = rgb.ok;
    }
    TinyColor2.prototype.isDark = function () {
      return this.getBrightness() < 128;
    };
    TinyColor2.prototype.isLight = function () {
      return !this.isDark();
    };
    TinyColor2.prototype.getBrightness = function () {
      var rgb = this.toRgb();
      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
    };
    TinyColor2.prototype.getLuminance = function () {
      var rgb = this.toRgb();
      var R;
      var G;
      var B;
      var RsRGB = rgb.r / 255;
      var GsRGB = rgb.g / 255;
      var BsRGB = rgb.b / 255;
      if (RsRGB <= 0.03928) {
        R = RsRGB / 12.92;
      } else {
        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
      }
      if (GsRGB <= 0.03928) {
        G = GsRGB / 12.92;
      } else {
        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
      }
      if (BsRGB <= 0.03928) {
        B = BsRGB / 12.92;
      } else {
        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
      }
      return 0.2126 * R + 0.7152 * G + 0.0722 * B;
    };
    TinyColor2.prototype.getAlpha = function () {
      return this.a;
    };
    TinyColor2.prototype.setAlpha = function (alpha) {
      this.a = boundAlpha(alpha);
      this.roundA = Math.round(100 * this.a) / 100;
      return this;
    };
    TinyColor2.prototype.isMonochrome = function () {
      var s = this.toHsl().s;
      return s === 0;
    };
    TinyColor2.prototype.toHsv = function () {
      var hsv = rgbToHsv(this.r, this.g, this.b);
      return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };
    };
    TinyColor2.prototype.toHsvString = function () {
      var hsv = rgbToHsv(this.r, this.g, this.b);
      var h2 = Math.round(hsv.h * 360);
      var s = Math.round(hsv.s * 100);
      var v2 = Math.round(hsv.v * 100);
      return this.a === 1 ? "hsv(".concat(h2, ", ").concat(s, "%, ").concat(v2, "%)") : "hsva(".concat(h2, ", ").concat(s, "%, ").concat(v2, "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toHsl = function () {
      var hsl = rgbToHsl(this.r, this.g, this.b);
      return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };
    };
    TinyColor2.prototype.toHslString = function () {
      var hsl = rgbToHsl(this.r, this.g, this.b);
      var h2 = Math.round(hsl.h * 360);
      var s = Math.round(hsl.s * 100);
      var l2 = Math.round(hsl.l * 100);
      return this.a === 1 ? "hsl(".concat(h2, ", ").concat(s, "%, ").concat(l2, "%)") : "hsla(".concat(h2, ", ").concat(s, "%, ").concat(l2, "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toHex = function (allow3Char) {
      if (allow3Char === void 0) {
        allow3Char = false;
      }
      return rgbToHex(this.r, this.g, this.b, allow3Char);
    };
    TinyColor2.prototype.toHexString = function (allow3Char) {
      if (allow3Char === void 0) {
        allow3Char = false;
      }
      return "#" + this.toHex(allow3Char);
    };
    TinyColor2.prototype.toHex8 = function (allow4Char) {
      if (allow4Char === void 0) {
        allow4Char = false;
      }
      return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);
    };
    TinyColor2.prototype.toHex8String = function (allow4Char) {
      if (allow4Char === void 0) {
        allow4Char = false;
      }
      return "#" + this.toHex8(allow4Char);
    };
    TinyColor2.prototype.toHexShortString = function (allowShortChar) {
      if (allowShortChar === void 0) {
        allowShortChar = false;
      }
      return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);
    };
    TinyColor2.prototype.toRgb = function () {
      return {
        r: Math.round(this.r),
        g: Math.round(this.g),
        b: Math.round(this.b),
        a: this.a
      };
    };
    TinyColor2.prototype.toRgbString = function () {
      var r2 = Math.round(this.r);
      var g2 = Math.round(this.g);
      var b2 = Math.round(this.b);
      return this.a === 1 ? "rgb(".concat(r2, ", ").concat(g2, ", ").concat(b2, ")") : "rgba(".concat(r2, ", ").concat(g2, ", ").concat(b2, ", ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toPercentageRgb = function () {
      var fmt = function (x) {
        return "".concat(Math.round(bound01(x, 255) * 100), "%");
      };
      return {
        r: fmt(this.r),
        g: fmt(this.g),
        b: fmt(this.b),
        a: this.a
      };
    };
    TinyColor2.prototype.toPercentageRgbString = function () {
      var rnd = function (x) {
        return Math.round(bound01(x, 255) * 100);
      };
      return this.a === 1 ? "rgb(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%)") : "rgba(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toName = function () {
      if (this.a === 0) {
        return "transparent";
      }
      if (this.a < 1) {
        return false;
      }
      var hex2 = "#" + rgbToHex(this.r, this.g, this.b, false);
      for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value2 = _b[1];
        if (hex2 === value2) {
          return key;
        }
      }
      return false;
    };
    TinyColor2.prototype.toString = function (format3) {
      var formatSet = Boolean(format3);
      format3 = format3 !== null && format3 !== void 0 ? format3 : this.format;
      var formattedString = false;
      var hasAlpha = this.a < 1 && this.a >= 0;
      var needsAlphaFormat = !formatSet && hasAlpha && (format3.startsWith("hex") || format3 === "name");
      if (needsAlphaFormat) {
        if (format3 === "name" && this.a === 0) {
          return this.toName();
        }
        return this.toRgbString();
      }
      if (format3 === "rgb") {
        formattedString = this.toRgbString();
      }
      if (format3 === "prgb") {
        formattedString = this.toPercentageRgbString();
      }
      if (format3 === "hex" || format3 === "hex6") {
        formattedString = this.toHexString();
      }
      if (format3 === "hex3") {
        formattedString = this.toHexString(true);
      }
      if (format3 === "hex4") {
        formattedString = this.toHex8String(true);
      }
      if (format3 === "hex8") {
        formattedString = this.toHex8String();
      }
      if (format3 === "name") {
        formattedString = this.toName();
      }
      if (format3 === "hsl") {
        formattedString = this.toHslString();
      }
      if (format3 === "hsv") {
        formattedString = this.toHsvString();
      }
      return formattedString || this.toHexString();
    };
    TinyColor2.prototype.toNumber = function () {
      return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    };
    TinyColor2.prototype.clone = function () {
      return new TinyColor2(this.toString());
    };
    TinyColor2.prototype.lighten = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      var hsl = this.toHsl();
      hsl.l += amount2 / 100;
      hsl.l = clamp01(hsl.l);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.brighten = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      var rgb = this.toRgb();
      rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount2 / 100))));
      rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount2 / 100))));
      rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount2 / 100))));
      return new TinyColor2(rgb);
    };
    TinyColor2.prototype.darken = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      var hsl = this.toHsl();
      hsl.l -= amount2 / 100;
      hsl.l = clamp01(hsl.l);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.tint = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      return this.mix("white", amount2);
    };
    TinyColor2.prototype.shade = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      return this.mix("black", amount2);
    };
    TinyColor2.prototype.desaturate = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      var hsl = this.toHsl();
      hsl.s -= amount2 / 100;
      hsl.s = clamp01(hsl.s);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.saturate = function (amount2) {
      if (amount2 === void 0) {
        amount2 = 10;
      }
      var hsl = this.toHsl();
      hsl.s += amount2 / 100;
      hsl.s = clamp01(hsl.s);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.greyscale = function () {
      return this.desaturate(100);
    };
    TinyColor2.prototype.spin = function (amount2) {
      var hsl = this.toHsl();
      var hue = (hsl.h + amount2) % 360;
      hsl.h = hue < 0 ? 360 + hue : hue;
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.mix = function (color, amount2) {
      if (amount2 === void 0) {
        amount2 = 50;
      }
      var rgb1 = this.toRgb();
      var rgb2 = new TinyColor2(color).toRgb();
      var p2 = amount2 / 100;
      var rgba = {
        r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
        g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
        b: (rgb2.b - rgb1.b) * p2 + rgb1.b,
        a: (rgb2.a - rgb1.a) * p2 + rgb1.a
      };
      return new TinyColor2(rgba);
    };
    TinyColor2.prototype.analogous = function (results, slices) {
      if (results === void 0) {
        results = 6;
      }
      if (slices === void 0) {
        slices = 30;
      }
      var hsl = this.toHsl();
      var part = 360 / slices;
      var ret = [this];
      for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(new TinyColor2(hsl));
      }
      return ret;
    };
    TinyColor2.prototype.complement = function () {
      var hsl = this.toHsl();
      hsl.h = (hsl.h + 180) % 360;
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.monochromatic = function (results) {
      if (results === void 0) {
        results = 6;
      }
      var hsv = this.toHsv();
      var h2 = hsv.h;
      var s = hsv.s;
      var v2 = hsv.v;
      var res = [];
      var modification = 1 / results;
      while (results--) {
        res.push(new TinyColor2({ h: h2, s, v: v2 }));
        v2 = (v2 + modification) % 1;
      }
      return res;
    };
    TinyColor2.prototype.splitcomplement = function () {
      var hsl = this.toHsl();
      var h2 = hsl.h;
      return [
        this,
        new TinyColor2({ h: (h2 + 72) % 360, s: hsl.s, l: hsl.l }),
        new TinyColor2({ h: (h2 + 216) % 360, s: hsl.s, l: hsl.l })
      ];
    };
    TinyColor2.prototype.onBackground = function (background) {
      var fg = this.toRgb();
      var bg = new TinyColor2(background).toRgb();
      var alpha = fg.a + bg.a * (1 - fg.a);
      return new TinyColor2({
        r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,
        g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,
        b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,
        a: alpha
      });
    };
    TinyColor2.prototype.triad = function () {
      return this.polyad(3);
    };
    TinyColor2.prototype.tetrad = function () {
      return this.polyad(4);
    };
    TinyColor2.prototype.polyad = function (n2) {
      var hsl = this.toHsl();
      var h2 = hsl.h;
      var result = [this];
      var increment = 360 / n2;
      for (var i = 1; i < n2; i++) {
        result.push(new TinyColor2({ h: (h2 + i * increment) % 360, s: hsl.s, l: hsl.l }));
      }
      return result;
    };
    TinyColor2.prototype.equals = function (color) {
      return this.toRgbString() === new TinyColor2(color).toRgbString();
    };
    return TinyColor2;
  }()
);
var hueStep = 2;
var saturationStep = 0.16;
var saturationStep2 = 0.05;
var brightnessStep1 = 0.05;
var brightnessStep2 = 0.15;
var lightColorCount = 5;
var darkColorCount = 4;
var darkColorMap = [{
  index: 7,
  opacity: 0.15
}, {
  index: 6,
  opacity: 0.25
}, {
  index: 5,
  opacity: 0.3
}, {
  index: 5,
  opacity: 0.45
}, {
  index: 5,
  opacity: 0.65
}, {
  index: 5,
  opacity: 0.85
}, {
  index: 4,
  opacity: 0.9
}, {
  index: 3,
  opacity: 0.95
}, {
  index: 2,
  opacity: 0.97
}, {
  index: 1,
  opacity: 0.98
}];
function toHsv(_ref) {
  var r2 = _ref.r, g2 = _ref.g, b2 = _ref.b;
  var hsv = rgbToHsv(r2, g2, b2);
  return {
    h: hsv.h * 360,
    s: hsv.s,
    v: hsv.v
  };
}
function toHex(_ref2) {
  var r2 = _ref2.r, g2 = _ref2.g, b2 = _ref2.b;
  return "#".concat(rgbToHex(r2, g2, b2, false));
}
function mix(rgb1, rgb2, amount2) {
  var p2 = amount2 / 100;
  var rgb = {
    r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
    g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
    b: (rgb2.b - rgb1.b) * p2 + rgb1.b
  };
  return rgb;
}
function getHue(hsv, i, light) {
  var hue;
  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
  }
  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }
  return hue;
}
function getSaturation(hsv, i, light) {
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }
  var saturation;
  if (light) {
    saturation = hsv.s - saturationStep * i;
  } else if (i === darkColorCount) {
    saturation = hsv.s + saturationStep;
  } else {
    saturation = hsv.s + saturationStep2 * i;
  }
  if (saturation > 1) {
    saturation = 1;
  }
  if (light && i === lightColorCount && saturation > 0.1) {
    saturation = 0.1;
  }
  if (saturation < 0.06) {
    saturation = 0.06;
  }
  return Number(saturation.toFixed(2));
}
function getValue(hsv, i, light) {
  var value2;
  if (light) {
    value2 = hsv.v + brightnessStep1 * i;
  } else {
    value2 = hsv.v - brightnessStep2 * i;
  }
  if (value2 > 1) {
    value2 = 1;
  }
  return Number(value2.toFixed(2));
}
function generate$1(color) {
  var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var patterns = [];
  var pColor = inputToRGB(color);
  for (var i = lightColorCount; i > 0; i -= 1) {
    var hsv = toHsv(pColor);
    var colorString = toHex(inputToRGB({
      h: getHue(hsv, i, true),
      s: getSaturation(hsv, i, true),
      v: getValue(hsv, i, true)
    }));
    patterns.push(colorString);
  }
  patterns.push(toHex(pColor));
  for (var _i = 1; _i <= darkColorCount; _i += 1) {
    var _hsv = toHsv(pColor);
    var _colorString = toHex(inputToRGB({
      h: getHue(_hsv, _i),
      s: getSaturation(_hsv, _i),
      v: getValue(_hsv, _i)
    }));
    patterns.push(_colorString);
  }
  if (opts.theme === "dark") {
    return darkColorMap.map(function (_ref3) {
      var index2 = _ref3.index, opacity = _ref3.opacity;
      var darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || "#141414"), inputToRGB(patterns[index2]), opacity * 100));
      return darkColorString;
    });
  }
  return patterns;
}
var presetPrimaryColors = {
  red: "#F5222D",
  volcano: "#FA541C",
  orange: "#FA8C16",
  gold: "#FAAD14",
  yellow: "#FADB14",
  lime: "#A0D911",
  green: "#52C41A",
  cyan: "#13C2C2",
  blue: "#1677FF",
  geekblue: "#2F54EB",
  purple: "#722ED1",
  magenta: "#EB2F96",
  grey: "#666666"
};
var presetPalettes = {};
var presetDarkPalettes = {};
Object.keys(presetPrimaryColors).forEach(function (key) {
  presetPalettes[key] = generate$1(presetPrimaryColors[key]);
  presetPalettes[key].primary = presetPalettes[key][5];
  presetDarkPalettes[key] = generate$1(presetPrimaryColors[key], {
    theme: "dark",
    backgroundColor: "#141414"
  });
  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];
});
var blue = presetPalettes.blue;
const genControlHeight = (token2) => {
  const {
    controlHeight
  } = token2;
  return {
    controlHeightSM: controlHeight * 0.75,
    controlHeightXS: controlHeight * 0.5,
    controlHeightLG: controlHeight * 1.25
  };
};
function genSizeMapToken(token2) {
  const {
    sizeUnit,
    sizeStep
  } = token2;
  return {
    sizeXXL: sizeUnit * (sizeStep + 8),
    // 48
    sizeXL: sizeUnit * (sizeStep + 4),
    // 32
    sizeLG: sizeUnit * (sizeStep + 2),
    // 24
    sizeMD: sizeUnit * (sizeStep + 1),
    // 20
    sizeMS: sizeUnit * sizeStep,
    // 16
    size: sizeUnit * sizeStep,
    // 16
    sizeSM: sizeUnit * (sizeStep - 1),
    // 12
    sizeXS: sizeUnit * (sizeStep - 2),
    // 8
    sizeXXS: sizeUnit * (sizeStep - 3)
    // 4
  };
}
const defaultPresetColors = {
  blue: "#1677ff",
  purple: "#722ED1",
  cyan: "#13C2C2",
  green: "#52C41A",
  magenta: "#EB2F96",
  pink: "#eb2f96",
  red: "#F5222D",
  orange: "#FA8C16",
  yellow: "#FADB14",
  volcano: "#FA541C",
  geekblue: "#2F54EB",
  gold: "#FAAD14",
  lime: "#A0D911"
};
const seedToken = Object.assign(Object.assign({}, defaultPresetColors), {
  // Color
  colorPrimary: "#1677ff",
  colorSuccess: "#52c41a",
  colorWarning: "#faad14",
  colorError: "#ff4d4f",
  colorInfo: "#1677ff",
  colorLink: "",
  colorTextBase: "",
  colorBgBase: "",
  // Font
  fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n'Noto Color Emoji'",
  fontFamilyCode: "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
  fontSize: 14,
  // Line
  lineWidth: 1,
  lineType: "solid",
  // Motion
  motionUnit: 0.1,
  motionBase: 0,
  motionEaseOutCirc: "cubic-bezier(0.08, 0.82, 0.17, 1)",
  motionEaseInOutCirc: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
  motionEaseOut: "cubic-bezier(0.215, 0.61, 0.355, 1)",
  motionEaseInOut: "cubic-bezier(0.645, 0.045, 0.355, 1)",
  motionEaseOutBack: "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
  motionEaseInBack: "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
  motionEaseInQuint: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
  motionEaseOutQuint: "cubic-bezier(0.23, 1, 0.32, 1)",
  // Radius
  borderRadius: 6,
  // Size
  sizeUnit: 4,
  sizeStep: 4,
  sizePopupArrow: 16,
  // Control Base
  controlHeight: 32,
  // zIndex
  zIndexBase: 0,
  zIndexPopupBase: 1e3,
  // Image
  opacityImage: 1,
  // Wireframe
  wireframe: false,
  // Motion
  motion: true
});
function genColorMapToken(seed, _ref) {
  let {
    generateColorPalettes: generateColorPalettes2,
    generateNeutralColorPalettes: generateNeutralColorPalettes2
  } = _ref;
  const {
    colorSuccess: colorSuccessBase,
    colorWarning: colorWarningBase,
    colorError: colorErrorBase,
    colorInfo: colorInfoBase,
    colorPrimary: colorPrimaryBase,
    colorBgBase,
    colorTextBase
  } = seed;
  const primaryColors = generateColorPalettes2(colorPrimaryBase);
  const successColors = generateColorPalettes2(colorSuccessBase);
  const warningColors = generateColorPalettes2(colorWarningBase);
  const errorColors = generateColorPalettes2(colorErrorBase);
  const infoColors = generateColorPalettes2(colorInfoBase);
  const neutralColors = generateNeutralColorPalettes2(colorBgBase, colorTextBase);
  const colorLink = seed.colorLink || seed.colorInfo;
  const linkColors = generateColorPalettes2(colorLink);
  return Object.assign(Object.assign({}, neutralColors), {
    colorPrimaryBg: primaryColors[1],
    colorPrimaryBgHover: primaryColors[2],
    colorPrimaryBorder: primaryColors[3],
    colorPrimaryBorderHover: primaryColors[4],
    colorPrimaryHover: primaryColors[5],
    colorPrimary: primaryColors[6],
    colorPrimaryActive: primaryColors[7],
    colorPrimaryTextHover: primaryColors[8],
    colorPrimaryText: primaryColors[9],
    colorPrimaryTextActive: primaryColors[10],
    colorSuccessBg: successColors[1],
    colorSuccessBgHover: successColors[2],
    colorSuccessBorder: successColors[3],
    colorSuccessBorderHover: successColors[4],
    colorSuccessHover: successColors[4],
    colorSuccess: successColors[6],
    colorSuccessActive: successColors[7],
    colorSuccessTextHover: successColors[8],
    colorSuccessText: successColors[9],
    colorSuccessTextActive: successColors[10],
    colorErrorBg: errorColors[1],
    colorErrorBgHover: errorColors[2],
    colorErrorBorder: errorColors[3],
    colorErrorBorderHover: errorColors[4],
    colorErrorHover: errorColors[5],
    colorError: errorColors[6],
    colorErrorActive: errorColors[7],
    colorErrorTextHover: errorColors[8],
    colorErrorText: errorColors[9],
    colorErrorTextActive: errorColors[10],
    colorWarningBg: warningColors[1],
    colorWarningBgHover: warningColors[2],
    colorWarningBorder: warningColors[3],
    colorWarningBorderHover: warningColors[4],
    colorWarningHover: warningColors[4],
    colorWarning: warningColors[6],
    colorWarningActive: warningColors[7],
    colorWarningTextHover: warningColors[8],
    colorWarningText: warningColors[9],
    colorWarningTextActive: warningColors[10],
    colorInfoBg: infoColors[1],
    colorInfoBgHover: infoColors[2],
    colorInfoBorder: infoColors[3],
    colorInfoBorderHover: infoColors[4],
    colorInfoHover: infoColors[4],
    colorInfo: infoColors[6],
    colorInfoActive: infoColors[7],
    colorInfoTextHover: infoColors[8],
    colorInfoText: infoColors[9],
    colorInfoTextActive: infoColors[10],
    colorLinkHover: linkColors[4],
    colorLink: linkColors[6],
    colorLinkActive: linkColors[7],
    colorBgMask: new TinyColor("#000").setAlpha(0.45).toRgbString(),
    colorWhite: "#fff"
  });
}
const genRadius = (radiusBase) => {
  let radiusLG = radiusBase;
  let radiusSM = radiusBase;
  let radiusXS = radiusBase;
  let radiusOuter = radiusBase;
  if (radiusBase < 6 && radiusBase >= 5) {
    radiusLG = radiusBase + 1;
  } else if (radiusBase < 16 && radiusBase >= 6) {
    radiusLG = radiusBase + 2;
  } else if (radiusBase >= 16) {
    radiusLG = 16;
  }
  if (radiusBase < 7 && radiusBase >= 5) {
    radiusSM = 4;
  } else if (radiusBase < 8 && radiusBase >= 7) {
    radiusSM = 5;
  } else if (radiusBase < 14 && radiusBase >= 8) {
    radiusSM = 6;
  } else if (radiusBase < 16 && radiusBase >= 14) {
    radiusSM = 7;
  } else if (radiusBase >= 16) {
    radiusSM = 8;
  }
  if (radiusBase < 6 && radiusBase >= 2) {
    radiusXS = 1;
  } else if (radiusBase >= 6) {
    radiusXS = 2;
  }
  if (radiusBase > 4 && radiusBase < 8) {
    radiusOuter = 4;
  } else if (radiusBase >= 8) {
    radiusOuter = 6;
  }
  return {
    borderRadius: radiusBase,
    borderRadiusXS: radiusXS,
    borderRadiusSM: radiusSM,
    borderRadiusLG: radiusLG,
    borderRadiusOuter: radiusOuter
  };
};
function genCommonMapToken(token2) {
  const {
    motionUnit,
    motionBase,
    borderRadius,
    lineWidth
  } = token2;
  return Object.assign({
    // motion
    motionDurationFast: "".concat((motionBase + motionUnit).toFixed(1), "s"),
    motionDurationMid: "".concat((motionBase + motionUnit * 2).toFixed(1), "s"),
    motionDurationSlow: "".concat((motionBase + motionUnit * 3).toFixed(1), "s"),
    // line
    lineWidthBold: lineWidth + 1
  }, genRadius(borderRadius));
}
const getAlphaColor$1 = (baseColor, alpha) => new TinyColor(baseColor).setAlpha(alpha).toRgbString();
const getSolidColor = (baseColor, brightness) => {
  const instance2 = new TinyColor(baseColor);
  return instance2.darken(brightness).toHexString();
};
const generateColorPalettes = (baseColor) => {
  const colors = generate$1(baseColor);
  return {
    1: colors[0],
    2: colors[1],
    3: colors[2],
    4: colors[3],
    5: colors[4],
    6: colors[5],
    7: colors[6],
    8: colors[4],
    9: colors[5],
    10: colors[6]
    // 8: colors[7],
    // 9: colors[8],
    // 10: colors[9],
  };
};
const generateNeutralColorPalettes = (bgBaseColor, textBaseColor) => {
  const colorBgBase = bgBaseColor || "#fff";
  const colorTextBase = textBaseColor || "#000";
  return {
    colorBgBase,
    colorTextBase,
    colorText: getAlphaColor$1(colorTextBase, 0.88),
    colorTextSecondary: getAlphaColor$1(colorTextBase, 0.65),
    colorTextTertiary: getAlphaColor$1(colorTextBase, 0.45),
    colorTextQuaternary: getAlphaColor$1(colorTextBase, 0.25),
    colorFill: getAlphaColor$1(colorTextBase, 0.15),
    colorFillSecondary: getAlphaColor$1(colorTextBase, 0.06),
    colorFillTertiary: getAlphaColor$1(colorTextBase, 0.04),
    colorFillQuaternary: getAlphaColor$1(colorTextBase, 0.02),
    colorBgLayout: getSolidColor(colorBgBase, 4),
    colorBgContainer: getSolidColor(colorBgBase, 0),
    colorBgElevated: getSolidColor(colorBgBase, 0),
    colorBgSpotlight: getAlphaColor$1(colorTextBase, 0.85),
    colorBgBlur: "transparent",
    colorBorder: getSolidColor(colorBgBase, 15),
    colorBorderSecondary: getSolidColor(colorBgBase, 6)
  };
};
function getLineHeight(fontSize) {
  return (fontSize + 8) / fontSize;
}
function getFontSizes(base2) {
  const fontSizes = new Array(10).fill(null).map((_, index2) => {
    const i = index2 - 1;
    const baseSize = base2 * Math.pow(2.71828, i / 5);
    const intSize = index2 > 1 ? Math.floor(baseSize) : Math.ceil(baseSize);
    return Math.floor(intSize / 2) * 2;
  });
  fontSizes[1] = base2;
  return fontSizes.map((size2) => ({
    size: size2,
    lineHeight: getLineHeight(size2)
  }));
}
const genFontMapToken = (fontSize) => {
  const fontSizePairs = getFontSizes(fontSize);
  const fontSizes = fontSizePairs.map((pair) => pair.size);
  const lineHeights = fontSizePairs.map((pair) => pair.lineHeight);
  const fontSizeMD = fontSizes[1];
  const fontSizeSM = fontSizes[0];
  const fontSizeLG = fontSizes[2];
  const lineHeight2 = lineHeights[1];
  const lineHeightSM = lineHeights[0];
  const lineHeightLG = lineHeights[2];
  return {
    fontSizeSM,
    fontSize: fontSizeMD,
    fontSizeLG,
    fontSizeXL: fontSizes[3],
    fontSizeHeading1: fontSizes[6],
    fontSizeHeading2: fontSizes[5],
    fontSizeHeading3: fontSizes[4],
    fontSizeHeading4: fontSizes[3],
    fontSizeHeading5: fontSizes[2],
    lineHeight: lineHeight2,
    lineHeightLG,
    lineHeightSM,
    fontHeight: Math.round(lineHeight2 * fontSizeMD),
    fontHeightLG: Math.round(lineHeightLG * fontSizeLG),
    fontHeightSM: Math.round(lineHeightSM * fontSizeSM),
    lineHeightHeading1: lineHeights[6],
    lineHeightHeading2: lineHeights[5],
    lineHeightHeading3: lineHeights[4],
    lineHeightHeading4: lineHeights[3],
    lineHeightHeading5: lineHeights[2]
  };
};
function derivative(token2) {
  const colorPalettes = Object.keys(defaultPresetColors).map((colorKey) => {
    const colors = generate$1(token2[colorKey]);
    return new Array(10).fill(1).reduce((prev2, _, i) => {
      prev2["".concat(colorKey, "-").concat(i + 1)] = colors[i];
      prev2["".concat(colorKey).concat(i + 1)] = colors[i];
      return prev2;
    }, {});
  }).reduce((prev2, cur) => {
    prev2 = Object.assign(Object.assign({}, prev2), cur);
    return prev2;
  }, {});
  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token2), colorPalettes), genColorMapToken(token2, {
    generateColorPalettes,
    generateNeutralColorPalettes
  })), genFontMapToken(token2.fontSize)), genSizeMapToken(token2)), genControlHeight(token2)), genCommonMapToken(token2));
}
const defaultTheme = createTheme(derivative);
const defaultConfig$1 = {
  token: seedToken,
  override: {
    override: seedToken
  },
  hashed: true
};
const DesignTokenContext = /* @__PURE__ */ React.createContext(defaultConfig$1);
const defaultIconPrefixCls = "anticon";
const defaultGetPrefixCls = (suffixCls, customizePrefixCls) => {
  if (customizePrefixCls) {
    return customizePrefixCls;
  }
  return suffixCls ? "ant-".concat(suffixCls) : "ant";
};
const ConfigContext = /* @__PURE__ */ reactExports.createContext({
  // We provide a default function for Context without provider
  getPrefixCls: defaultGetPrefixCls,
  iconPrefixCls: defaultIconPrefixCls
});
const dynamicStyleMark = "-ant-".concat(Date.now(), "-").concat(Math.random());
function getStyle(globalPrefixCls2, theme) {
  const variables = {};
  const formatColor = (color, updater) => {
    let clone = color.clone();
    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;
    return clone.toRgbString();
  };
  const fillColor = (colorVal, type4) => {
    const baseColor = new TinyColor(colorVal);
    const colorPalettes = generate$1(baseColor.toRgbString());
    variables["".concat(type4, "-color")] = formatColor(baseColor);
    variables["".concat(type4, "-color-disabled")] = colorPalettes[1];
    variables["".concat(type4, "-color-hover")] = colorPalettes[4];
    variables["".concat(type4, "-color-active")] = colorPalettes[6];
    variables["".concat(type4, "-color-outline")] = baseColor.clone().setAlpha(0.2).toRgbString();
    variables["".concat(type4, "-color-deprecated-bg")] = colorPalettes[0];
    variables["".concat(type4, "-color-deprecated-border")] = colorPalettes[2];
  };
  if (theme.primaryColor) {
    fillColor(theme.primaryColor, "primary");
    const primaryColor = new TinyColor(theme.primaryColor);
    const primaryColors = generate$1(primaryColor.toRgbString());
    primaryColors.forEach((color, index2) => {
      variables["primary-".concat(index2 + 1)] = color;
    });
    variables["primary-color-deprecated-l-35"] = formatColor(primaryColor, (c2) => c2.lighten(35));
    variables["primary-color-deprecated-l-20"] = formatColor(primaryColor, (c2) => c2.lighten(20));
    variables["primary-color-deprecated-t-20"] = formatColor(primaryColor, (c2) => c2.tint(20));
    variables["primary-color-deprecated-t-50"] = formatColor(primaryColor, (c2) => c2.tint(50));
    variables["primary-color-deprecated-f-12"] = formatColor(primaryColor, (c2) => c2.setAlpha(c2.getAlpha() * 0.12));
    const primaryActiveColor = new TinyColor(primaryColors[0]);
    variables["primary-color-active-deprecated-f-30"] = formatColor(primaryActiveColor, (c2) => c2.setAlpha(c2.getAlpha() * 0.3));
    variables["primary-color-active-deprecated-d-02"] = formatColor(primaryActiveColor, (c2) => c2.darken(2));
  }
  if (theme.successColor) {
    fillColor(theme.successColor, "success");
  }
  if (theme.warningColor) {
    fillColor(theme.warningColor, "warning");
  }
  if (theme.errorColor) {
    fillColor(theme.errorColor, "error");
  }
  if (theme.infoColor) {
    fillColor(theme.infoColor, "info");
  }
  const cssList = Object.keys(variables).map((key) => "--".concat(globalPrefixCls2, "-").concat(key, ": ").concat(variables[key], ";"));
  return "\n  :root {\n    ".concat(cssList.join("\n"), "\n  }\n  ").trim();
}
function registerTheme(globalPrefixCls2, theme) {
  const style2 = getStyle(globalPrefixCls2, theme);
  if (canUseDom()) {
    updateCSS(style2, "".concat(dynamicStyleMark, "-dynamic-theme"));
  }
}
const DisabledContext = /* @__PURE__ */ reactExports.createContext(false);
const DisabledContextProvider = (_ref) => {
  let {
    children,
    disabled: disabled2
  } = _ref;
  const originDisabled = reactExports.useContext(DisabledContext);
  return /* @__PURE__ */ reactExports.createElement(DisabledContext.Provider, {
    value: disabled2 !== null && disabled2 !== void 0 ? disabled2 : originDisabled
  }, children);
};
const SizeContext = /* @__PURE__ */ reactExports.createContext(void 0);
const SizeContextProvider = (_ref) => {
  let {
    children,
    size: size2
  } = _ref;
  const originSize = reactExports.useContext(SizeContext);
  return /* @__PURE__ */ reactExports.createElement(SizeContext.Provider, {
    value: size2 || originSize
  }, children);
};
function useConfig() {
  const componentDisabled = reactExports.useContext(DisabledContext);
  const componentSize = reactExports.useContext(SizeContext);
  return {
    componentDisabled,
    componentSize
  };
}
const version$2 = "5.15.3";
function isStableColor(color) {
  return color >= 0 && color <= 255;
}
function getAlphaColor(frontColor, backgroundColor) {
  const {
    r: fR,
    g: fG,
    b: fB,
    a: originAlpha
  } = new TinyColor(frontColor).toRgb();
  if (originAlpha < 1) {
    return frontColor;
  }
  const {
    r: bR,
    g: bG,
    b: bB
  } = new TinyColor(backgroundColor).toRgb();
  for (let fA = 0.01; fA <= 1; fA += 0.01) {
    const r2 = Math.round((fR - bR * (1 - fA)) / fA);
    const g2 = Math.round((fG - bG * (1 - fA)) / fA);
    const b2 = Math.round((fB - bB * (1 - fA)) / fA);
    if (isStableColor(r2) && isStableColor(g2) && isStableColor(b2)) {
      return new TinyColor({
        r: r2,
        g: g2,
        b: b2,
        a: Math.round(fA * 100) / 100
      }).toRgbString();
    }
  }
  return new TinyColor({
    r: fR,
    g: fG,
    b: fB,
    a: 1
  }).toRgbString();
}
var __rest$6 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
function formatToken(derivativeToken) {
  const {
    override
  } = derivativeToken, restToken = __rest$6(derivativeToken, ["override"]);
  const overrideTokens = Object.assign({}, override);
  Object.keys(seedToken).forEach((token2) => {
    delete overrideTokens[token2];
  });
  const mergedToken = Object.assign(Object.assign({}, restToken), overrideTokens);
  const screenXS = 480;
  const screenSM = 576;
  const screenMD = 768;
  const screenLG = 992;
  const screenXL = 1200;
  const screenXXL = 1600;
  if (mergedToken.motion === false) {
    const fastDuration = "0s";
    mergedToken.motionDurationFast = fastDuration;
    mergedToken.motionDurationMid = fastDuration;
    mergedToken.motionDurationSlow = fastDuration;
  }
  const aliasToken = Object.assign(Object.assign(Object.assign({}, mergedToken), {
    // ============== Background ============== //
    colorFillContent: mergedToken.colorFillSecondary,
    colorFillContentHover: mergedToken.colorFill,
    colorFillAlter: mergedToken.colorFillQuaternary,
    colorBgContainerDisabled: mergedToken.colorFillTertiary,
    // ============== Split ============== //
    colorBorderBg: mergedToken.colorBgContainer,
    colorSplit: getAlphaColor(mergedToken.colorBorderSecondary, mergedToken.colorBgContainer),
    // ============== Text ============== //
    colorTextPlaceholder: mergedToken.colorTextQuaternary,
    colorTextDisabled: mergedToken.colorTextQuaternary,
    colorTextHeading: mergedToken.colorText,
    colorTextLabel: mergedToken.colorTextSecondary,
    colorTextDescription: mergedToken.colorTextTertiary,
    colorTextLightSolid: mergedToken.colorWhite,
    colorHighlight: mergedToken.colorError,
    colorBgTextHover: mergedToken.colorFillSecondary,
    colorBgTextActive: mergedToken.colorFill,
    colorIcon: mergedToken.colorTextTertiary,
    colorIconHover: mergedToken.colorText,
    colorErrorOutline: getAlphaColor(mergedToken.colorErrorBg, mergedToken.colorBgContainer),
    colorWarningOutline: getAlphaColor(mergedToken.colorWarningBg, mergedToken.colorBgContainer),
    // Font
    fontSizeIcon: mergedToken.fontSizeSM,
    // Line
    lineWidthFocus: mergedToken.lineWidth * 4,
    // Control
    lineWidth: mergedToken.lineWidth,
    controlOutlineWidth: mergedToken.lineWidth * 2,
    // Checkbox size and expand icon size
    controlInteractiveSize: mergedToken.controlHeight / 2,
    controlItemBgHover: mergedToken.colorFillTertiary,
    controlItemBgActive: mergedToken.colorPrimaryBg,
    controlItemBgActiveHover: mergedToken.colorPrimaryBgHover,
    controlItemBgActiveDisabled: mergedToken.colorFill,
    controlTmpOutline: mergedToken.colorFillQuaternary,
    controlOutline: getAlphaColor(mergedToken.colorPrimaryBg, mergedToken.colorBgContainer),
    lineType: mergedToken.lineType,
    borderRadius: mergedToken.borderRadius,
    borderRadiusXS: mergedToken.borderRadiusXS,
    borderRadiusSM: mergedToken.borderRadiusSM,
    borderRadiusLG: mergedToken.borderRadiusLG,
    fontWeightStrong: 600,
    opacityLoading: 0.65,
    linkDecoration: "none",
    linkHoverDecoration: "none",
    linkFocusDecoration: "none",
    controlPaddingHorizontal: 12,
    controlPaddingHorizontalSM: 8,
    paddingXXS: mergedToken.sizeXXS,
    paddingXS: mergedToken.sizeXS,
    paddingSM: mergedToken.sizeSM,
    padding: mergedToken.size,
    paddingMD: mergedToken.sizeMD,
    paddingLG: mergedToken.sizeLG,
    paddingXL: mergedToken.sizeXL,
    paddingContentHorizontalLG: mergedToken.sizeLG,
    paddingContentVerticalLG: mergedToken.sizeMS,
    paddingContentHorizontal: mergedToken.sizeMS,
    paddingContentVertical: mergedToken.sizeSM,
    paddingContentHorizontalSM: mergedToken.size,
    paddingContentVerticalSM: mergedToken.sizeXS,
    marginXXS: mergedToken.sizeXXS,
    marginXS: mergedToken.sizeXS,
    marginSM: mergedToken.sizeSM,
    margin: mergedToken.size,
    marginMD: mergedToken.sizeMD,
    marginLG: mergedToken.sizeLG,
    marginXL: mergedToken.sizeXL,
    marginXXL: mergedToken.sizeXXL,
    boxShadow: "\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowSecondary: "\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowTertiary: "\n      0 1px 2px 0 rgba(0, 0, 0, 0.03),\n      0 1px 6px -1px rgba(0, 0, 0, 0.02),\n      0 2px 4px 0 rgba(0, 0, 0, 0.02)\n    ",
    screenXS,
    screenXSMin: screenXS,
    screenXSMax: screenSM - 1,
    screenSM,
    screenSMMin: screenSM,
    screenSMMax: screenMD - 1,
    screenMD,
    screenMDMin: screenMD,
    screenMDMax: screenLG - 1,
    screenLG,
    screenLGMin: screenLG,
    screenLGMax: screenXL - 1,
    screenXL,
    screenXLMin: screenXL,
    screenXLMax: screenXXL - 1,
    screenXXL,
    screenXXLMin: screenXXL,
    boxShadowPopoverArrow: "2px 2px 5px rgba(0, 0, 0, 0.05)",
    boxShadowCard: "\n      0 1px 2px -2px ".concat(new TinyColor("rgba(0, 0, 0, 0.16)").toRgbString(), ",\n      0 3px 6px 0 ").concat(new TinyColor("rgba(0, 0, 0, 0.12)").toRgbString(), ",\n      0 5px 12px 4px ").concat(new TinyColor("rgba(0, 0, 0, 0.09)").toRgbString(), "\n    "),
    boxShadowDrawerRight: "\n      -6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      -3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      -9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowDrawerLeft: "\n      6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowDrawerUp: "\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowDrawerDown: "\n      0 -6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 -3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 -9px 28px 8px rgba(0, 0, 0, 0.05)\n    ",
    boxShadowTabsOverflowLeft: "inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowRight: "inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowTop: "inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowBottom: "inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)"
  }), overrideTokens);
  return aliasToken;
}
var __rest$5 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
const unitless = {
  lineHeight: true,
  lineHeightSM: true,
  lineHeightLG: true,
  lineHeightHeading1: true,
  lineHeightHeading2: true,
  lineHeightHeading3: true,
  lineHeightHeading4: true,
  lineHeightHeading5: true,
  opacityLoading: true,
  fontWeightStrong: true,
  zIndexPopupBase: true,
  zIndexBase: true
};
const ignore = {
  size: true,
  sizeSM: true,
  sizeLG: true,
  sizeMD: true,
  sizeXS: true,
  sizeXXS: true,
  sizeMS: true,
  sizeXL: true,
  sizeXXL: true,
  sizeUnit: true,
  sizeStep: true,
  motionBase: true,
  motionUnit: true
};
const preserve = {
  screenXS: true,
  screenXSMin: true,
  screenXSMax: true,
  screenSM: true,
  screenSMMin: true,
  screenSMMax: true,
  screenMD: true,
  screenMDMin: true,
  screenMDMax: true,
  screenLG: true,
  screenLGMin: true,
  screenLGMax: true,
  screenXL: true,
  screenXLMin: true,
  screenXLMax: true,
  screenXXL: true,
  screenXXLMin: true
};
const getComputedToken = (originToken, overrideToken, theme) => {
  const derivativeToken = theme.getDerivativeToken(originToken);
  const {
    override
  } = overrideToken, components = __rest$5(overrideToken, ["override"]);
  let mergedDerivativeToken = Object.assign(Object.assign({}, derivativeToken), {
    override
  });
  mergedDerivativeToken = formatToken(mergedDerivativeToken);
  if (components) {
    Object.entries(components).forEach((_ref) => {
      let [key, value2] = _ref;
      const {
        theme: componentTheme
      } = value2, componentTokens = __rest$5(value2, ["theme"]);
      let mergedComponentToken = componentTokens;
      if (componentTheme) {
        mergedComponentToken = getComputedToken(Object.assign(Object.assign({}, mergedDerivativeToken), componentTokens), {
          override: componentTokens
        }, componentTheme);
      }
      mergedDerivativeToken[key] = mergedComponentToken;
    });
  }
  return mergedDerivativeToken;
};
function useToken() {
  const {
    token: rootDesignToken,
    hashed,
    theme,
    override,
    cssVar
  } = React.useContext(DesignTokenContext);
  const salt = "".concat(version$2, "-").concat(hashed || "");
  const mergedTheme = theme || defaultTheme;
  const [token2, hashId, realToken] = useCacheToken(mergedTheme, [seedToken, rootDesignToken], {
    salt,
    override,
    getComputedToken,
    // formatToken will not be consumed after 1.15.0 with getComputedToken.
    // But token will break if @ant-design/cssinjs is under 1.15.0 without it
    formatToken,
    cssVar: cssVar && {
      prefix: cssVar.prefix,
      key: cssVar.key,
      unitless,
      ignore,
      preserve
    }
  });
  return [mergedTheme, realToken, hashed ? hashId : "", token2, cssVar];
}
function useEvent(callback) {
  var fnRef = reactExports.useRef();
  fnRef.current = callback;
  var memoFn = reactExports.useCallback(function () {
    var _fnRef$current;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));
  }, []);
  return memoFn;
}
function useSafeState(defaultValue) {
  var destroyRef = reactExports.useRef(false);
  var _React$useState = reactExports.useState(defaultValue), _React$useState2 = _slicedToArray(_React$useState, 2), value2 = _React$useState2[0], setValue = _React$useState2[1];
  reactExports.useEffect(function () {
    destroyRef.current = false;
    return function () {
      destroyRef.current = true;
    };
  }, []);
  function safeSetState(updater, ignoreDestroy) {
    if (ignoreDestroy && destroyRef.current) {
      return;
    }
    setValue(updater);
  }
  return [value2, safeSetState];
}
function hasValue(value2) {
  return value2 !== void 0;
}
function useMergedState(defaultStateValue, option2) {
  var _ref = option2 || {}, defaultValue = _ref.defaultValue, value2 = _ref.value, onChange = _ref.onChange, postState = _ref.postState;
  var _useState = useSafeState(function () {
    if (hasValue(value2)) {
      return value2;
    } else if (hasValue(defaultValue)) {
      return typeof defaultValue === "function" ? defaultValue() : defaultValue;
    } else {
      return typeof defaultStateValue === "function" ? defaultStateValue() : defaultStateValue;
    }
  }), _useState2 = _slicedToArray(_useState, 2), innerValue = _useState2[0], setInnerValue = _useState2[1];
  var mergedValue = value2 !== void 0 ? value2 : innerValue;
  var postMergedValue = postState ? postState(mergedValue) : mergedValue;
  var onChangeFn = useEvent(onChange);
  var _useState3 = useSafeState([mergedValue]), _useState4 = _slicedToArray(_useState3, 2), prevValue = _useState4[0], setPrevValue = _useState4[1];
  useLayoutUpdateEffect(function () {
    var prev2 = prevValue[0];
    if (innerValue !== prev2) {
      onChangeFn(innerValue, prev2);
    }
  }, [prevValue]);
  useLayoutUpdateEffect(function () {
    if (!hasValue(value2)) {
      setInnerValue(value2);
    }
  }, [value2]);
  var triggerChange = useEvent(function (updater, ignoreDestroy) {
    setInnerValue(updater, ignoreDestroy);
    setPrevValue([mergedValue], ignoreDestroy);
  });
  return [postMergedValue, triggerChange];
}
const textEllipsis = {
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis"
};
const resetComponent = function (token2) {
  let needInheritFontFamily = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  return {
    boxSizing: "border-box",
    margin: 0,
    padding: 0,
    color: token2.colorText,
    fontSize: token2.fontSize,
    // font-variant: @font-variant-base;
    lineHeight: token2.lineHeight,
    listStyle: "none",
    // font-feature-settings: @font-feature-settings-base;
    fontFamily: needInheritFontFamily ? "inherit" : token2.fontFamily
  };
};
const resetIcon = () => ({
  display: "inline-flex",
  alignItems: "center",
  color: "inherit",
  fontStyle: "normal",
  lineHeight: 0,
  textAlign: "center",
  textTransform: "none",
  // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4
  verticalAlign: "-0.125em",
  textRendering: "optimizeLegibility",
  "-webkit-font-smoothing": "antialiased",
  "-moz-osx-font-smoothing": "grayscale",
  "> *": {
    lineHeight: 1
  },
  svg: {
    display: "inline-block"
  }
});
const clearFix = () => ({
  // https://github.com/ant-design/ant-design/issues/21301#issuecomment-583955229
  "&::before": {
    display: "table",
    content: '""'
  },
  "&::after": {
    // https://github.com/ant-design/ant-design/issues/21864
    display: "table",
    clear: "both",
    content: '""'
  }
});
const genLinkStyle = (token2) => ({
  a: {
    color: token2.colorLink,
    textDecoration: token2.linkDecoration,
    backgroundColor: "transparent",
    // remove the gray background on active links in IE 10.
    outline: "none",
    cursor: "pointer",
    transition: "color ".concat(token2.motionDurationSlow),
    "-webkit-text-decoration-skip": "objects",
    // remove gaps in links underline in iOS 8+ and Safari 8+.
    "&:hover": {
      color: token2.colorLinkHover
    },
    "&:active": {
      color: token2.colorLinkActive
    },
    ["&:active,\n  &:hover"]: {
      textDecoration: token2.linkHoverDecoration,
      outline: 0
    },
    // https://github.com/ant-design/ant-design/issues/22503
    "&:focus": {
      textDecoration: token2.linkFocusDecoration,
      outline: 0
    },
    "&[disabled]": {
      color: token2.colorTextDisabled,
      cursor: "not-allowed"
    }
  }
});
const genCommonStyle = (token2, componentPrefixCls, rootCls) => {
  const {
    fontFamily,
    fontSize
  } = token2;
  const prefixSelector = '[class^="'.concat(componentPrefixCls, '"], [class*=" ').concat(componentPrefixCls, '"]');
  const rootPrefixSelector = rootCls ? ".".concat(rootCls) : prefixSelector;
  return {
    [rootPrefixSelector]: {
      fontFamily,
      fontSize,
      boxSizing: "border-box",
      "&::before, &::after": {
        boxSizing: "border-box"
      },
      [prefixSelector]: {
        boxSizing: "border-box",
        "&::before, &::after": {
          boxSizing: "border-box"
        }
      }
    }
  };
};
const genFocusOutline = (token2) => ({
  outline: "".concat(unit$1(token2.lineWidthFocus), " solid ").concat(token2.colorPrimaryBorder),
  outlineOffset: 1,
  transition: "outline-offset 0s, outline 0s"
});
const genFocusStyle = (token2) => ({
  "&:focus-visible": Object.assign({}, genFocusOutline(token2))
});
function _callSuper(t2, o, e2) {
  return o = _getPrototypeOf$1(o), _possibleConstructorReturn(t2, _isNativeReflectConstruct$1() ? Reflect.construct(o, [], _getPrototypeOf$1(t2).constructor) : o.apply(t2, e2));
}
let AbstractCalculator = /* @__PURE__ */ _createClass(function AbstractCalculator2() {
  _classCallCheck(this, AbstractCalculator2);
});
let NumCalculator = /* @__PURE__ */ function (_AbstractCalculator) {
  _inherits(NumCalculator2, _AbstractCalculator);
  function NumCalculator2(num2) {
    var _this;
    _classCallCheck(this, NumCalculator2);
    _this = _callSuper(this, NumCalculator2);
    _this.result = 0;
    if (num2 instanceof NumCalculator2) {
      _this.result = num2.result;
    } else if (typeof num2 === "number") {
      _this.result = num2;
    }
    return _this;
  }
  _createClass(NumCalculator2, [{
    key: "add",
    value: function add(num2) {
      if (num2 instanceof NumCalculator2) {
        this.result += num2.result;
      } else if (typeof num2 === "number") {
        this.result += num2;
      }
      return this;
    }
  }, {
    key: "sub",
    value: function sub(num2) {
      if (num2 instanceof NumCalculator2) {
        this.result -= num2.result;
      } else if (typeof num2 === "number") {
        this.result -= num2;
      }
      return this;
    }
  }, {
    key: "mul",
    value: function mul2(num2) {
      if (num2 instanceof NumCalculator2) {
        this.result *= num2.result;
      } else if (typeof num2 === "number") {
        this.result *= num2;
      }
      return this;
    }
  }, {
    key: "div",
    value: function div(num2) {
      if (num2 instanceof NumCalculator2) {
        this.result /= num2.result;
      } else if (typeof num2 === "number") {
        this.result /= num2;
      }
      return this;
    }
  }, {
    key: "equal",
    value: function equal() {
      return this.result;
    }
  }]);
  return NumCalculator2;
}(AbstractCalculator);
const CALC_UNIT = "CALC_UNIT";
function unit(value2) {
  if (typeof value2 === "number") {
    return "".concat(value2).concat(CALC_UNIT);
  }
  return value2;
}
let CSSCalculator = /* @__PURE__ */ function (_AbstractCalculator) {
  _inherits(CSSCalculator2, _AbstractCalculator);
  function CSSCalculator2(num2) {
    var _this;
    _classCallCheck(this, CSSCalculator2);
    _this = _callSuper(this, CSSCalculator2);
    _this.result = "";
    if (num2 instanceof CSSCalculator2) {
      _this.result = "(".concat(num2.result, ")");
    } else if (typeof num2 === "number") {
      _this.result = unit(num2);
    } else if (typeof num2 === "string") {
      _this.result = num2;
    }
    return _this;
  }
  _createClass(CSSCalculator2, [{
    key: "add",
    value: function add(num2) {
      if (num2 instanceof CSSCalculator2) {
        this.result = "".concat(this.result, " + ").concat(num2.getResult());
      } else if (typeof num2 === "number" || typeof num2 === "string") {
        this.result = "".concat(this.result, " + ").concat(unit(num2));
      }
      this.lowPriority = true;
      return this;
    }
  }, {
    key: "sub",
    value: function sub(num2) {
      if (num2 instanceof CSSCalculator2) {
        this.result = "".concat(this.result, " - ").concat(num2.getResult());
      } else if (typeof num2 === "number" || typeof num2 === "string") {
        this.result = "".concat(this.result, " - ").concat(unit(num2));
      }
      this.lowPriority = true;
      return this;
    }
  }, {
    key: "mul",
    value: function mul2(num2) {
      if (this.lowPriority) {
        this.result = "(".concat(this.result, ")");
      }
      if (num2 instanceof CSSCalculator2) {
        this.result = "".concat(this.result, " * ").concat(num2.getResult(true));
      } else if (typeof num2 === "number" || typeof num2 === "string") {
        this.result = "".concat(this.result, " * ").concat(num2);
      }
      this.lowPriority = false;
      return this;
    }
  }, {
    key: "div",
    value: function div(num2) {
      if (this.lowPriority) {
        this.result = "(".concat(this.result, ")");
      }
      if (num2 instanceof CSSCalculator2) {
        this.result = "".concat(this.result, " / ").concat(num2.getResult(true));
      } else if (typeof num2 === "number" || typeof num2 === "string") {
        this.result = "".concat(this.result, " / ").concat(num2);
      }
      this.lowPriority = false;
      return this;
    }
  }, {
    key: "getResult",
    value: function getResult(force) {
      return this.lowPriority || force ? "(".concat(this.result, ")") : this.result;
    }
  }, {
    key: "equal",
    value: function equal(options2) {
      const {
        unit: cssUnit = true
      } = options2 || {};
      const regexp4 = new RegExp("".concat(CALC_UNIT), "g");
      this.result = this.result.replace(regexp4, cssUnit ? "px" : "");
      if (typeof this.lowPriority !== "undefined") {
        return "calc(".concat(this.result, ")");
      }
      return this.result;
    }
  }]);
  return CSSCalculator2;
}(AbstractCalculator);
const genCalc = (type4) => {
  const Calculator = type4 === "css" ? CSSCalculator : NumCalculator;
  return (num2) => new Calculator(num2);
};
function genMaxMin(type4) {
  if (type4 === "js") {
    return {
      max: Math.max,
      min: Math.min
    };
  }
  return {
    max: function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return "max(".concat(args.map((value2) => unit$1(value2)).join(","), ")");
    },
    min: function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return "min(".concat(args.map((value2) => unit$1(value2)).join(","), ")");
    }
  };
}
const enableStatistic = typeof CSSINJS_STATISTIC !== "undefined";
let recording = true;
function merge() {
  for (var _len = arguments.length, objs = new Array(_len), _key = 0; _key < _len; _key++) {
    objs[_key] = arguments[_key];
  }
  if (!enableStatistic) {
    return Object.assign.apply(Object, [{}].concat(objs));
  }
  recording = false;
  const ret = {};
  objs.forEach((obj) => {
    const keys2 = Object.keys(obj);
    keys2.forEach((key) => {
      Object.defineProperty(ret, key, {
        configurable: true,
        enumerable: true,
        get: () => obj[key]
      });
    });
  });
  recording = true;
  return ret;
}
const statistic = {};
function noop() {
}
const statisticToken = (token2) => {
  let tokenKeys2;
  let proxy = token2;
  let flush = noop;
  if (enableStatistic && typeof Proxy !== "undefined") {
    tokenKeys2 = /* @__PURE__ */ new Set();
    proxy = new Proxy(token2, {
      get(obj, prop) {
        if (recording) {
          tokenKeys2.add(prop);
        }
        return obj[prop];
      }
    });
    flush = (componentName, componentToken) => {
      var _a;
      statistic[componentName] = {
        global: Array.from(tokenKeys2),
        component: Object.assign(Object.assign({}, (_a = statistic[componentName]) === null || _a === void 0 ? void 0 : _a.component), componentToken)
      };
    };
  }
  return {
    token: proxy,
    keys: tokenKeys2,
    flush
  };
};
const useResetIconStyle = (iconPrefixCls, csp) => {
  const [theme, token2] = useToken();
  return useStyleRegister({
    theme,
    token: token2,
    hashId: "",
    path: ["ant-design-icons", iconPrefixCls],
    nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce
  }, () => [{
    [".".concat(iconPrefixCls)]: Object.assign(Object.assign({}, resetIcon()), {
      [".".concat(iconPrefixCls, " .").concat(iconPrefixCls, "-icon")]: {
        display: "block"
      }
    })
  }]);
};
const getDefaultComponentToken = (component, token2, getDefaultToken) => {
  var _a;
  if (typeof getDefaultToken === "function") {
    return getDefaultToken(merge(token2, (_a = token2[component]) !== null && _a !== void 0 ? _a : {}));
  }
  return getDefaultToken !== null && getDefaultToken !== void 0 ? getDefaultToken : {};
};
const getComponentToken = (component, token2, defaultToken, options2) => {
  const customToken = Object.assign({}, token2[component]);
  if (options2 === null || options2 === void 0 ? void 0 : options2.deprecatedTokens) {
    const {
      deprecatedTokens
    } = options2;
    deprecatedTokens.forEach((_ref) => {
      let [oldTokenKey, newTokenKey] = _ref;
      var _a;
      if ((customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey]) || (customToken === null || customToken === void 0 ? void 0 : customToken[newTokenKey])) {
        (_a = customToken[newTokenKey]) !== null && _a !== void 0 ? _a : customToken[newTokenKey] = customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey];
      }
    });
  }
  const mergedToken = Object.assign(Object.assign({}, defaultToken), customToken);
  Object.keys(mergedToken).forEach((key) => {
    if (mergedToken[key] === token2[key]) {
      delete mergedToken[key];
    }
  });
  return mergedToken;
};
const getCompVarPrefix = (component, prefix2) => "".concat([prefix2, component.replace(/([A-Z]+)([A-Z][a-z]+)/g, "$1-$2").replace(/([a-z])([A-Z])/g, "$1-$2")].filter(Boolean).join("-"));
function genComponentStyleHook(componentName, styleFn, getDefaultToken) {
  let options2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  const cells = Array.isArray(componentName) ? componentName : [componentName, componentName];
  const [component] = cells;
  const concatComponent = cells.join("-");
  return function (prefixCls) {
    let rootCls = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : prefixCls;
    const [theme, realToken, hashId, token2, cssVar] = useToken();
    const {
      getPrefixCls,
      iconPrefixCls,
      csp
    } = reactExports.useContext(ConfigContext);
    const rootPrefixCls = getPrefixCls();
    const type4 = cssVar ? "css" : "js";
    const calc = genCalc(type4);
    const {
      max,
      min
    } = genMaxMin(type4);
    const sharedConfig = {
      theme,
      token: token2,
      hashId,
      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce,
      clientOnly: options2.clientOnly,
      // antd is always at top of styles
      order: options2.order || -999
    };
    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {
      clientOnly: false,
      path: ["Shared", rootPrefixCls]
    }), () => [{
      // Link
      "&": genLinkStyle(token2)
    }]);
    useResetIconStyle(iconPrefixCls, csp);
    const wrapSSR = useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {
      path: [concatComponent, prefixCls, iconPrefixCls]
    }), () => {
      if (options2.injectStyle === false) {
        return [];
      }
      const {
        token: proxyToken,
        flush
      } = statisticToken(token2);
      const defaultComponentToken = getDefaultComponentToken(component, realToken, getDefaultToken);
      const componentCls = ".".concat(prefixCls);
      const componentToken = getComponentToken(component, realToken, defaultComponentToken, {
        deprecatedTokens: options2.deprecatedTokens
      });
      if (cssVar) {
        Object.keys(defaultComponentToken).forEach((key) => {
          defaultComponentToken[key] = "var(".concat(token2CSSVar(key, getCompVarPrefix(component, cssVar.prefix)), ")");
        });
      }
      const mergedToken = merge(proxyToken, {
        componentCls,
        prefixCls,
        iconCls: ".".concat(iconPrefixCls),
        antCls: ".".concat(rootPrefixCls),
        calc,
        max,
        min
      }, cssVar ? defaultComponentToken : componentToken);
      const styleInterpolation = styleFn(mergedToken, {
        hashId,
        prefixCls,
        rootPrefixCls,
        iconPrefixCls
      });
      flush(component, componentToken);
      return [options2.resetStyle === false ? null : genCommonStyle(mergedToken, prefixCls, rootCls), styleInterpolation];
    });
    return [wrapSSR, hashId];
  };
}
const genSubStyleComponent = (componentName, styleFn, getDefaultToken, options2) => {
  const useStyle2 = genComponentStyleHook(componentName, styleFn, getDefaultToken, Object.assign({
    resetStyle: false,
    // Sub Style should default after root one
    order: -998
  }, options2));
  const StyledComponent = (_ref2) => {
    let {
      prefixCls,
      rootCls = prefixCls
    } = _ref2;
    useStyle2(prefixCls, rootCls);
    return null;
  };
  return StyledComponent;
};
const genCSSVarRegister = (component, getDefaultToken, options2) => {
  function prefixToken(key) {
    return "".concat(component).concat(key.slice(0, 1).toUpperCase()).concat(key.slice(1));
  }
  const {
    unitless: originUnitless = {},
    injectStyle = true
  } = options2 !== null && options2 !== void 0 ? options2 : {};
  const compUnitless = {
    [prefixToken("zIndexPopup")]: true
  };
  Object.keys(originUnitless).forEach((key) => {
    compUnitless[prefixToken(key)] = originUnitless[key];
  });
  const CSSVarRegister = (_ref3) => {
    let {
      rootCls,
      cssVar
    } = _ref3;
    const [, realToken] = useToken();
    useCSSVarRegister({
      path: [component],
      prefix: cssVar.prefix,
      key: cssVar === null || cssVar === void 0 ? void 0 : cssVar.key,
      unitless: Object.assign(Object.assign({}, unitless), compUnitless),
      ignore,
      token: realToken,
      scope: rootCls
    }, () => {
      const defaultToken = getDefaultComponentToken(component, realToken, getDefaultToken);
      const componentToken = getComponentToken(component, realToken, defaultToken, {
        deprecatedTokens: options2 === null || options2 === void 0 ? void 0 : options2.deprecatedTokens
      });
      Object.keys(defaultToken).forEach((key) => {
        componentToken[prefixToken(key)] = componentToken[key];
        delete componentToken[key];
      });
      return componentToken;
    });
    return null;
  };
  const useCSSVar = (rootCls) => {
    const [, , , , cssVar] = useToken();
    return [(node2) => injectStyle && cssVar ? /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(CSSVarRegister, {
      rootCls,
      cssVar,
      component
    }), node2) : node2, cssVar === null || cssVar === void 0 ? void 0 : cssVar.key];
  };
  return useCSSVar;
};
const genStyleHooks = (component, styleFn, getDefaultToken, options2) => {
  const useStyle2 = genComponentStyleHook(component, styleFn, getDefaultToken, options2);
  const useCSSVar = genCSSVarRegister(Array.isArray(component) ? component[0] : component, getDefaultToken, options2);
  return function (prefixCls) {
    let rootCls = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : prefixCls;
    const [, hashId] = useStyle2(prefixCls, rootCls);
    const [wrapCSSVar, cssVarCls] = useCSSVar(rootCls);
    return [wrapCSSVar, hashId, cssVarCls];
  };
};
const fullClone$1 = Object.assign({}, React$1);
const {
  useId: useId$1
} = fullClone$1;
const useEmptyId = () => "";
const useThemeKey = typeof useId$1 === "undefined" ? useEmptyId : useId$1;
function useTheme(theme, parentTheme, config2) {
  var _a;
  const themeConfig = theme || {};
  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? Object.assign(Object.assign({}, defaultConfig$1), {
    hashed: (_a = parentTheme === null || parentTheme === void 0 ? void 0 : parentTheme.hashed) !== null && _a !== void 0 ? _a : defaultConfig$1.hashed,
    cssVar: parentTheme === null || parentTheme === void 0 ? void 0 : parentTheme.cssVar
  }) : parentTheme;
  const themeKey = useThemeKey();
  return useMemo(() => {
    var _a2, _b2;
    if (!theme) {
      return parentTheme;
    }
    const mergedComponents = Object.assign({}, parentThemeConfig.components);
    Object.keys(theme.components || {}).forEach((componentName) => {
      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);
    });
    const cssVarKey = "css-var-".concat(themeKey.replace(/:/g, ""));
    const mergedCssVar = ((_a2 = themeConfig.cssVar) !== null && _a2 !== void 0 ? _a2 : parentThemeConfig.cssVar) && Object.assign(Object.assign(Object.assign({
      prefix: config2 === null || config2 === void 0 ? void 0 : config2.prefixCls
    }, typeof parentThemeConfig.cssVar === "object" ? parentThemeConfig.cssVar : {}), typeof themeConfig.cssVar === "object" ? themeConfig.cssVar : {}), {
      key: typeof themeConfig.cssVar === "object" && ((_b2 = themeConfig.cssVar) === null || _b2 === void 0 ? void 0 : _b2.key) || cssVarKey
    });
    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {
      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),
      components: mergedComponents,
      cssVar: mergedCssVar
    });
  }, [themeConfig, parentThemeConfig], (prev2, next2) => prev2.some((prevTheme, index2) => {
    const nextTheme = next2[index2];
    return !isEqual(prevTheme, nextTheme, true);
  }));
}
var _excluded$e = ["children"];
var Context$1 = /* @__PURE__ */ reactExports.createContext({});
function MotionProvider(_ref) {
  var children = _ref.children, props = _objectWithoutProperties(_ref, _excluded$e);
  return /* @__PURE__ */ reactExports.createElement(Context$1.Provider, {
    value: props
  }, children);
}
var DomWrapper = /* @__PURE__ */ function (_React$Component) {
  _inherits(DomWrapper2, _React$Component);
  var _super = _createSuper(DomWrapper2);
  function DomWrapper2() {
    _classCallCheck(this, DomWrapper2);
    return _super.apply(this, arguments);
  }
  _createClass(DomWrapper2, [{
    key: "render",
    value: function render3() {
      return this.props.children;
    }
  }]);
  return DomWrapper2;
}(reactExports.Component);
var STATUS_NONE = "none";
var STATUS_APPEAR = "appear";
var STATUS_ENTER = "enter";
var STATUS_LEAVE = "leave";
var STEP_NONE = "none";
var STEP_PREPARE = "prepare";
var STEP_START = "start";
var STEP_ACTIVE = "active";
var STEP_ACTIVATED = "end";
var STEP_PREPARED = "prepared";
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes["Webkit".concat(styleProp)] = "webkit".concat(eventName);
  prefixes["Moz".concat(styleProp)] = "moz".concat(eventName);
  prefixes["ms".concat(styleProp)] = "MS".concat(eventName);
  prefixes["O".concat(styleProp)] = "o".concat(eventName.toLowerCase());
  return prefixes;
}
function getVendorPrefixes(domSupport, win) {
  var prefixes = {
    animationend: makePrefixMap("Animation", "AnimationEnd"),
    transitionend: makePrefixMap("Transition", "TransitionEnd")
  };
  if (domSupport) {
    if (!("AnimationEvent" in win)) {
      delete prefixes.animationend.animation;
    }
    if (!("TransitionEvent" in win)) {
      delete prefixes.transitionend.transition;
    }
  }
  return prefixes;
}
var vendorPrefixes = getVendorPrefixes(canUseDom(), typeof window !== "undefined" ? window : {});
var style = {};
if (canUseDom()) {
  var _document$createEleme = document.createElement("div");
  style = _document$createEleme.style;
}
var prefixedEventNames = {};
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  }
  var prefixMap = vendorPrefixes[eventName];
  if (prefixMap) {
    var stylePropList = Object.keys(prefixMap);
    var len = stylePropList.length;
    for (var i = 0; i < len; i += 1) {
      var styleProp = stylePropList[i];
      if (Object.prototype.hasOwnProperty.call(prefixMap, styleProp) && styleProp in style) {
        prefixedEventNames[eventName] = prefixMap[styleProp];
        return prefixedEventNames[eventName];
      }
    }
  }
  return "";
}
var internalAnimationEndName = getVendorPrefixedEventName("animationend");
var internalTransitionEndName = getVendorPrefixedEventName("transitionend");
var supportTransition = !!(internalAnimationEndName && internalTransitionEndName);
var animationEndName = internalAnimationEndName || "animationend";
var transitionEndName = internalTransitionEndName || "transitionend";
function getTransitionName(transitionName, transitionType) {
  if (!transitionName)
    return null;
  if (_typeof(transitionName) === "object") {
    var type4 = transitionType.replace(/-\w/g, function (match2) {
      return match2[1].toUpperCase();
    });
    return transitionName[type4];
  }
  return "".concat(transitionName, "-").concat(transitionType);
}
const useDomMotionEvents = function (callback) {
  var cacheElementRef = reactExports.useRef();
  var callbackRef = reactExports.useRef(callback);
  callbackRef.current = callback;
  var onInternalMotionEnd = reactExports.useCallback(function (event) {
    callbackRef.current(event);
  }, []);
  function removeMotionEvents(element) {
    if (element) {
      element.removeEventListener(transitionEndName, onInternalMotionEnd);
      element.removeEventListener(animationEndName, onInternalMotionEnd);
    }
  }
  function patchMotionEvents(element) {
    if (cacheElementRef.current && cacheElementRef.current !== element) {
      removeMotionEvents(cacheElementRef.current);
    }
    if (element && element !== cacheElementRef.current) {
      element.addEventListener(transitionEndName, onInternalMotionEnd);
      element.addEventListener(animationEndName, onInternalMotionEnd);
      cacheElementRef.current = element;
    }
  }
  reactExports.useEffect(function () {
    return function () {
      removeMotionEvents(cacheElementRef.current);
    };
  }, []);
  return [patchMotionEvents, removeMotionEvents];
};
var useIsomorphicLayoutEffect = canUseDom() ? reactExports.useLayoutEffect : reactExports.useEffect;
const useNextFrame = function () {
  var nextFrameRef = reactExports.useRef(null);
  function cancelNextFrame() {
    wrapperRaf.cancel(nextFrameRef.current);
  }
  function nextFrame(callback) {
    var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
    cancelNextFrame();
    var nextFrameId = wrapperRaf(function () {
      if (delay <= 1) {
        callback({
          isCanceled: function isCanceled() {
            return nextFrameId !== nextFrameRef.current;
          }
        });
      } else {
        nextFrame(callback, delay - 1);
      }
    });
    nextFrameRef.current = nextFrameId;
  }
  reactExports.useEffect(function () {
    return function () {
      cancelNextFrame();
    };
  }, []);
  return [nextFrame, cancelNextFrame];
};
var FULL_STEP_QUEUE = [STEP_PREPARE, STEP_START, STEP_ACTIVE, STEP_ACTIVATED];
var SIMPLE_STEP_QUEUE = [STEP_PREPARE, STEP_PREPARED];
var SkipStep = false;
var DoStep = true;
function isActive(step) {
  return step === STEP_ACTIVE || step === STEP_ACTIVATED;
}
const useStepQueue = function (status, prepareOnly, callback) {
  var _useState = useSafeState(STEP_NONE), _useState2 = _slicedToArray(_useState, 2), step = _useState2[0], setStep = _useState2[1];
  var _useNextFrame = useNextFrame(), _useNextFrame2 = _slicedToArray(_useNextFrame, 2), nextFrame = _useNextFrame2[0], cancelNextFrame = _useNextFrame2[1];
  function startQueue() {
    setStep(STEP_PREPARE, true);
  }
  var STEP_QUEUE = prepareOnly ? SIMPLE_STEP_QUEUE : FULL_STEP_QUEUE;
  useIsomorphicLayoutEffect(function () {
    if (step !== STEP_NONE && step !== STEP_ACTIVATED) {
      var index2 = STEP_QUEUE.indexOf(step);
      var nextStep = STEP_QUEUE[index2 + 1];
      var result = callback(step);
      if (result === SkipStep) {
        setStep(nextStep, true);
      } else if (nextStep) {
        nextFrame(function (info2) {
          function doNext() {
            if (info2.isCanceled())
              return;
            setStep(nextStep, true);
          }
          if (result === true) {
            doNext();
          } else {
            Promise.resolve(result).then(doNext);
          }
        });
      }
    }
  }, [status, step]);
  reactExports.useEffect(function () {
    return function () {
      cancelNextFrame();
    };
  }, []);
  return [startQueue, step];
};
function useStatus(supportMotion, visible, getElement, _ref) {
  var _ref$motionEnter = _ref.motionEnter, motionEnter = _ref$motionEnter === void 0 ? true : _ref$motionEnter, _ref$motionAppear = _ref.motionAppear, motionAppear = _ref$motionAppear === void 0 ? true : _ref$motionAppear, _ref$motionLeave = _ref.motionLeave, motionLeave = _ref$motionLeave === void 0 ? true : _ref$motionLeave, motionDeadline = _ref.motionDeadline, motionLeaveImmediately = _ref.motionLeaveImmediately, onAppearPrepare = _ref.onAppearPrepare, onEnterPrepare = _ref.onEnterPrepare, onLeavePrepare = _ref.onLeavePrepare, onAppearStart = _ref.onAppearStart, onEnterStart = _ref.onEnterStart, onLeaveStart = _ref.onLeaveStart, onAppearActive = _ref.onAppearActive, onEnterActive = _ref.onEnterActive, onLeaveActive = _ref.onLeaveActive, onAppearEnd = _ref.onAppearEnd, onEnterEnd = _ref.onEnterEnd, onLeaveEnd = _ref.onLeaveEnd, onVisibleChanged = _ref.onVisibleChanged;
  var _useState = useSafeState(), _useState2 = _slicedToArray(_useState, 2), asyncVisible = _useState2[0], setAsyncVisible = _useState2[1];
  var _useState3 = useSafeState(STATUS_NONE), _useState4 = _slicedToArray(_useState3, 2), status = _useState4[0], setStatus = _useState4[1];
  var _useState5 = useSafeState(null), _useState6 = _slicedToArray(_useState5, 2), style2 = _useState6[0], setStyle = _useState6[1];
  var mountedRef = reactExports.useRef(false);
  var deadlineRef = reactExports.useRef(null);
  function getDomElement() {
    return getElement();
  }
  var activeRef = reactExports.useRef(false);
  function updateMotionEndStatus() {
    setStatus(STATUS_NONE, true);
    setStyle(null, true);
  }
  function onInternalMotionEnd(event) {
    var element = getDomElement();
    if (event && !event.deadline && event.target !== element) {
      return;
    }
    var currentActive = activeRef.current;
    var canEnd;
    if (status === STATUS_APPEAR && currentActive) {
      canEnd = onAppearEnd === null || onAppearEnd === void 0 ? void 0 : onAppearEnd(element, event);
    } else if (status === STATUS_ENTER && currentActive) {
      canEnd = onEnterEnd === null || onEnterEnd === void 0 ? void 0 : onEnterEnd(element, event);
    } else if (status === STATUS_LEAVE && currentActive) {
      canEnd = onLeaveEnd === null || onLeaveEnd === void 0 ? void 0 : onLeaveEnd(element, event);
    }
    if (status !== STATUS_NONE && currentActive && canEnd !== false) {
      updateMotionEndStatus();
    }
  }
  var _useDomMotionEvents = useDomMotionEvents(onInternalMotionEnd), _useDomMotionEvents2 = _slicedToArray(_useDomMotionEvents, 1), patchMotionEvents = _useDomMotionEvents2[0];
  var getEventHandlers = function getEventHandlers2(targetStatus) {
    var _ref2, _ref3, _ref4;
    switch (targetStatus) {
      case STATUS_APPEAR:
        return _ref2 = {}, _defineProperty(_ref2, STEP_PREPARE, onAppearPrepare), _defineProperty(_ref2, STEP_START, onAppearStart), _defineProperty(_ref2, STEP_ACTIVE, onAppearActive), _ref2;
      case STATUS_ENTER:
        return _ref3 = {}, _defineProperty(_ref3, STEP_PREPARE, onEnterPrepare), _defineProperty(_ref3, STEP_START, onEnterStart), _defineProperty(_ref3, STEP_ACTIVE, onEnterActive), _ref3;
      case STATUS_LEAVE:
        return _ref4 = {}, _defineProperty(_ref4, STEP_PREPARE, onLeavePrepare), _defineProperty(_ref4, STEP_START, onLeaveStart), _defineProperty(_ref4, STEP_ACTIVE, onLeaveActive), _ref4;
      default:
        return {};
    }
  };
  var eventHandlers = reactExports.useMemo(function () {
    return getEventHandlers(status);
  }, [status]);
  var _useStepQueue = useStepQueue(status, !supportMotion, function (newStep) {
    if (newStep === STEP_PREPARE) {
      var onPrepare = eventHandlers[STEP_PREPARE];
      if (!onPrepare) {
        return SkipStep;
      }
      return onPrepare(getDomElement());
    }
    if (step in eventHandlers) {
      var _eventHandlers$step;
      setStyle(((_eventHandlers$step = eventHandlers[step]) === null || _eventHandlers$step === void 0 ? void 0 : _eventHandlers$step.call(eventHandlers, getDomElement(), null)) || null);
    }
    if (step === STEP_ACTIVE) {
      patchMotionEvents(getDomElement());
      if (motionDeadline > 0) {
        clearTimeout(deadlineRef.current);
        deadlineRef.current = setTimeout(function () {
          onInternalMotionEnd({
            deadline: true
          });
        }, motionDeadline);
      }
    }
    if (step === STEP_PREPARED) {
      updateMotionEndStatus();
    }
    return DoStep;
  }), _useStepQueue2 = _slicedToArray(_useStepQueue, 2), startStep = _useStepQueue2[0], step = _useStepQueue2[1];
  var active2 = isActive(step);
  activeRef.current = active2;
  useIsomorphicLayoutEffect(function () {
    setAsyncVisible(visible);
    var isMounted = mountedRef.current;
    mountedRef.current = true;
    var nextStatus;
    if (!isMounted && visible && motionAppear) {
      nextStatus = STATUS_APPEAR;
    }
    if (isMounted && visible && motionEnter) {
      nextStatus = STATUS_ENTER;
    }
    if (isMounted && !visible && motionLeave || !isMounted && motionLeaveImmediately && !visible && motionLeave) {
      nextStatus = STATUS_LEAVE;
    }
    var nextEventHandlers = getEventHandlers(nextStatus);
    if (nextStatus && (supportMotion || nextEventHandlers[STEP_PREPARE])) {
      setStatus(nextStatus);
      startStep();
    } else {
      setStatus(STATUS_NONE);
    }
  }, [visible]);
  reactExports.useEffect(function () {
    if (
      // Cancel appear
      status === STATUS_APPEAR && !motionAppear || // Cancel enter
      status === STATUS_ENTER && !motionEnter || // Cancel leave
      status === STATUS_LEAVE && !motionLeave
    ) {
      setStatus(STATUS_NONE);
    }
  }, [motionAppear, motionEnter, motionLeave]);
  reactExports.useEffect(function () {
    return function () {
      mountedRef.current = false;
      clearTimeout(deadlineRef.current);
    };
  }, []);
  var firstMountChangeRef = reactExports.useRef(false);
  reactExports.useEffect(function () {
    if (asyncVisible) {
      firstMountChangeRef.current = true;
    }
    if (asyncVisible !== void 0 && status === STATUS_NONE) {
      if (firstMountChangeRef.current || asyncVisible) {
        onVisibleChanged === null || onVisibleChanged === void 0 ? void 0 : onVisibleChanged(asyncVisible);
      }
      firstMountChangeRef.current = true;
    }
  }, [asyncVisible, status]);
  var mergedStyle = style2;
  if (eventHandlers[STEP_PREPARE] && step === STEP_START) {
    mergedStyle = _objectSpread2({
      transition: "none"
    }, mergedStyle);
  }
  return [status, step, mergedStyle, asyncVisible !== null && asyncVisible !== void 0 ? asyncVisible : visible];
}
function genCSSMotion(config2) {
  var transitionSupport = config2;
  if (_typeof(config2) === "object") {
    transitionSupport = config2.transitionSupport;
  }
  function isSupportTransition(props, contextMotion) {
    return !!(props.motionName && transitionSupport && contextMotion !== false);
  }
  var CSSMotion2 = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
    var _props$visible = props.visible, visible = _props$visible === void 0 ? true : _props$visible, _props$removeOnLeave = props.removeOnLeave, removeOnLeave = _props$removeOnLeave === void 0 ? true : _props$removeOnLeave, forceRender = props.forceRender, children = props.children, motionName = props.motionName, leavedClassName = props.leavedClassName, eventProps = props.eventProps;
    var _React$useContext = reactExports.useContext(Context$1), contextMotion = _React$useContext.motion;
    var supportMotion = isSupportTransition(props, contextMotion);
    var nodeRef = reactExports.useRef();
    var wrapperNodeRef = reactExports.useRef();
    function getDomElement() {
      try {
        return nodeRef.current instanceof HTMLElement ? nodeRef.current : findDOMNode(wrapperNodeRef.current);
      } catch (e2) {
        return null;
      }
    }
    var _useStatus = useStatus(supportMotion, visible, getDomElement, props), _useStatus2 = _slicedToArray(_useStatus, 4), status = _useStatus2[0], statusStep = _useStatus2[1], statusStyle = _useStatus2[2], mergedVisible = _useStatus2[3];
    var renderedRef = reactExports.useRef(mergedVisible);
    if (mergedVisible) {
      renderedRef.current = true;
    }
    var setNodeRef = reactExports.useCallback(function (node2) {
      nodeRef.current = node2;
      fillRef(ref, node2);
    }, [ref]);
    var motionChildren;
    var mergedProps = _objectSpread2(_objectSpread2({}, eventProps), {}, {
      visible
    });
    if (!children) {
      motionChildren = null;
    } else if (status === STATUS_NONE) {
      if (mergedVisible) {
        motionChildren = children(_objectSpread2({}, mergedProps), setNodeRef);
      } else if (!removeOnLeave && renderedRef.current && leavedClassName) {
        motionChildren = children(_objectSpread2(_objectSpread2({}, mergedProps), {}, {
          className: leavedClassName
        }), setNodeRef);
      } else if (forceRender || !removeOnLeave && !leavedClassName) {
        motionChildren = children(_objectSpread2(_objectSpread2({}, mergedProps), {}, {
          style: {
            display: "none"
          }
        }), setNodeRef);
      } else {
        motionChildren = null;
      }
    } else {
      var _classNames;
      var statusSuffix;
      if (statusStep === STEP_PREPARE) {
        statusSuffix = "prepare";
      } else if (isActive(statusStep)) {
        statusSuffix = "active";
      } else if (statusStep === STEP_START) {
        statusSuffix = "start";
      }
      var motionCls = getTransitionName(motionName, "".concat(status, "-").concat(statusSuffix));
      motionChildren = children(_objectSpread2(_objectSpread2({}, mergedProps), {}, {
        className: classNames(getTransitionName(motionName, status), (_classNames = {}, _defineProperty(_classNames, motionCls, motionCls && statusSuffix), _defineProperty(_classNames, motionName, typeof motionName === "string"), _classNames)),
        style: statusStyle
      }), setNodeRef);
    }
    if (/* @__PURE__ */ reactExports.isValidElement(motionChildren) && supportRef(motionChildren)) {
      var _ref = motionChildren, originNodeRef = _ref.ref;
      if (!originNodeRef) {
        motionChildren = /* @__PURE__ */ reactExports.cloneElement(motionChildren, {
          ref: setNodeRef
        });
      }
    }
    return /* @__PURE__ */ reactExports.createElement(DomWrapper, {
      ref: wrapperNodeRef
    }, motionChildren);
  });
  CSSMotion2.displayName = "CSSMotion";
  return CSSMotion2;
}
const CSSMotion = genCSSMotion(supportTransition);
var STATUS_ADD = "add";
var STATUS_KEEP = "keep";
var STATUS_REMOVE = "remove";
var STATUS_REMOVED = "removed";
function wrapKeyToObject(key) {
  var keyObj;
  if (key && _typeof(key) === "object" && "key" in key) {
    keyObj = key;
  } else {
    keyObj = {
      key
    };
  }
  return _objectSpread2(_objectSpread2({}, keyObj), {}, {
    key: String(keyObj.key)
  });
}
function parseKeys() {
  var keys2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return keys2.map(wrapKeyToObject);
}
function diffKeys() {
  var prevKeys = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var currentKeys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var list = [];
  var currentIndex = 0;
  var currentLen = currentKeys.length;
  var prevKeyObjects = parseKeys(prevKeys);
  var currentKeyObjects = parseKeys(currentKeys);
  prevKeyObjects.forEach(function (keyObj) {
    var hit = false;
    for (var i = currentIndex; i < currentLen; i += 1) {
      var currentKeyObj = currentKeyObjects[i];
      if (currentKeyObj.key === keyObj.key) {
        if (currentIndex < i) {
          list = list.concat(currentKeyObjects.slice(currentIndex, i).map(function (obj) {
            return _objectSpread2(_objectSpread2({}, obj), {}, {
              status: STATUS_ADD
            });
          }));
          currentIndex = i;
        }
        list.push(_objectSpread2(_objectSpread2({}, currentKeyObj), {}, {
          status: STATUS_KEEP
        }));
        currentIndex += 1;
        hit = true;
        break;
      }
    }
    if (!hit) {
      list.push(_objectSpread2(_objectSpread2({}, keyObj), {}, {
        status: STATUS_REMOVE
      }));
    }
  });
  if (currentIndex < currentLen) {
    list = list.concat(currentKeyObjects.slice(currentIndex).map(function (obj) {
      return _objectSpread2(_objectSpread2({}, obj), {}, {
        status: STATUS_ADD
      });
    }));
  }
  var keys2 = {};
  list.forEach(function (_ref) {
    var key = _ref.key;
    keys2[key] = (keys2[key] || 0) + 1;
  });
  var duplicatedKeys = Object.keys(keys2).filter(function (key) {
    return keys2[key] > 1;
  });
  duplicatedKeys.forEach(function (matchKey) {
    list = list.filter(function (_ref2) {
      var key = _ref2.key, status = _ref2.status;
      return key !== matchKey || status !== STATUS_REMOVE;
    });
    list.forEach(function (node2) {
      if (node2.key === matchKey) {
        node2.status = STATUS_KEEP;
      }
    });
  });
  return list;
}
var _excluded$d = ["component", "children", "onVisibleChanged", "onAllRemoved"], _excluded2$3 = ["status"];
var MOTION_PROP_NAMES = ["eventProps", "visible", "children", "motionName", "motionAppear", "motionEnter", "motionLeave", "motionLeaveImmediately", "motionDeadline", "removeOnLeave", "leavedClassName", "onAppearPrepare", "onAppearStart", "onAppearActive", "onAppearEnd", "onEnterStart", "onEnterActive", "onEnterEnd", "onLeaveStart", "onLeaveActive", "onLeaveEnd"];
function genCSSMotionList(transitionSupport) {
  var CSSMotion$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CSSMotion;
  var CSSMotionList2 = /* @__PURE__ */ function (_React$Component) {
    _inherits(CSSMotionList3, _React$Component);
    var _super = _createSuper(CSSMotionList3);
    function CSSMotionList3() {
      var _this;
      _classCallCheck(this, CSSMotionList3);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "state", {
        keyEntities: []
      });
      _defineProperty(_assertThisInitialized(_this), "removeKey", function (removeKey) {
        var keyEntities = _this.state.keyEntities;
        var nextKeyEntities = keyEntities.map(function (entity) {
          if (entity.key !== removeKey)
            return entity;
          return _objectSpread2(_objectSpread2({}, entity), {}, {
            status: STATUS_REMOVED
          });
        });
        _this.setState({
          keyEntities: nextKeyEntities
        });
        return nextKeyEntities.filter(function (_ref) {
          var status = _ref.status;
          return status !== STATUS_REMOVED;
        }).length;
      });
      return _this;
    }
    _createClass(CSSMotionList3, [{
      key: "render",
      value: function render3() {
        var _this2 = this;
        var keyEntities = this.state.keyEntities;
        var _this$props = this.props, component = _this$props.component, children = _this$props.children, _onVisibleChanged = _this$props.onVisibleChanged, onAllRemoved = _this$props.onAllRemoved, restProps = _objectWithoutProperties(_this$props, _excluded$d);
        var Component = component || reactExports.Fragment;
        var motionProps = {};
        MOTION_PROP_NAMES.forEach(function (prop) {
          motionProps[prop] = restProps[prop];
          delete restProps[prop];
        });
        delete restProps.keys;
        return /* @__PURE__ */ reactExports.createElement(Component, restProps, keyEntities.map(function (_ref2, index2) {
          var status = _ref2.status, eventProps = _objectWithoutProperties(_ref2, _excluded2$3);
          var visible = status === STATUS_ADD || status === STATUS_KEEP;
          return /* @__PURE__ */ reactExports.createElement(CSSMotion$1, _extends$1({}, motionProps, {
            key: eventProps.key,
            visible,
            eventProps,
            onVisibleChanged: function onVisibleChanged(changedVisible) {
              _onVisibleChanged === null || _onVisibleChanged === void 0 ? void 0 : _onVisibleChanged(changedVisible, {
                key: eventProps.key
              });
              if (!changedVisible) {
                var restKeysCount = _this2.removeKey(eventProps.key);
                if (restKeysCount === 0 && onAllRemoved) {
                  onAllRemoved();
                }
              }
            }
          }), function (props, ref) {
            return children(_objectSpread2(_objectSpread2({}, props), {}, {
              index: index2
            }), ref);
          });
        }));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(_ref3, _ref4) {
        var keys2 = _ref3.keys;
        var keyEntities = _ref4.keyEntities;
        var parsedKeyObjects = parseKeys(keys2);
        var mixedKeyEntities = diffKeys(keyEntities, parsedKeyObjects);
        return {
          keyEntities: mixedKeyEntities.filter(function (entity) {
            var prevEntity = keyEntities.find(function (_ref5) {
              var key = _ref5.key;
              return entity.key === key;
            });
            if (prevEntity && prevEntity.status === STATUS_REMOVED && entity.status === STATUS_REMOVE) {
              return false;
            }
            return true;
          })
        };
      }
    }]);
    return CSSMotionList3;
  }(reactExports.Component);
  _defineProperty(CSSMotionList2, "defaultProps", {
    component: "div"
  });
  return CSSMotionList2;
}
const CSSMotionList = genCSSMotionList(supportTransition);
function MotionWrapper(props) {
  const {
    children
  } = props;
  const [, token2] = useToken();
  const {
    motion
  } = token2;
  const needWrapMotionProviderRef = reactExports.useRef(false);
  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;
  if (needWrapMotionProviderRef.current) {
    return /* @__PURE__ */ reactExports.createElement(MotionProvider, {
      motion
    }, children);
  }
  return children;
}
const PropWarning = () => null;
var __rest$4 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
const PASSED_PROPS = ["getTargetContainer", "getPopupContainer", "renderEmpty", "input", "pagination", "form", "select", "button"];
const defaultPrefixCls = "ant";
let globalPrefixCls;
let globalIconPrefixCls;
let globalTheme;
let globalHolderRender;
function getGlobalPrefixCls() {
  return globalPrefixCls || defaultPrefixCls;
}
function getGlobalIconPrefixCls() {
  return globalIconPrefixCls || defaultIconPrefixCls;
}
function isLegacyTheme(theme) {
  return Object.keys(theme).some((key) => key.endsWith("Color"));
}
const setGlobalConfig = (props) => {
  const {
    prefixCls,
    iconPrefixCls,
    theme,
    holderRender
  } = props;
  if (prefixCls !== void 0) {
    globalPrefixCls = prefixCls;
  }
  if (iconPrefixCls !== void 0) {
    globalIconPrefixCls = iconPrefixCls;
  }
  if ("holderRender" in props) {
    globalHolderRender = holderRender;
  }
  if (theme) {
    if (isLegacyTheme(theme)) {
      registerTheme(getGlobalPrefixCls(), theme);
    } else {
      globalTheme = theme;
    }
  }
};
const globalConfig = () => ({
  getPrefixCls: (suffixCls, customizePrefixCls) => {
    if (customizePrefixCls) {
      return customizePrefixCls;
    }
    return suffixCls ? "".concat(getGlobalPrefixCls(), "-").concat(suffixCls) : getGlobalPrefixCls();
  },
  getIconPrefixCls: getGlobalIconPrefixCls,
  getRootPrefixCls: () => {
    if (globalPrefixCls) {
      return globalPrefixCls;
    }
    return getGlobalPrefixCls();
  },
  getTheme: () => globalTheme,
  holderRender: globalHolderRender
});
const ProviderChildren = (props) => {
  const {
    children,
    csp: customCsp,
    autoInsertSpaceInButton,
    alert,
    anchor,
    form,
    locale: locale2,
    componentSize,
    direction,
    space,
    virtual,
    dropdownMatchSelectWidth,
    popupMatchSelectWidth,
    popupOverflow,
    legacyLocale,
    parentContext,
    iconPrefixCls: customIconPrefixCls,
    theme,
    componentDisabled,
    segmented,
    statistic: statistic2,
    spin,
    calendar,
    carousel,
    cascader,
    collapse,
    typography,
    checkbox,
    descriptions,
    divider,
    drawer,
    skeleton,
    steps,
    image,
    layout,
    list,
    mentions,
    modal,
    progress: progress2,
    result,
    slider,
    breadcrumb,
    menu,
    pagination,
    input: input2,
    textArea,
    empty: empty2,
    badge,
    radio,
    rate,
    switch: SWITCH,
    transfer,
    avatar: avatar2,
    message: message2,
    tag: tag2,
    table: table2,
    card: card2,
    tabs,
    timeline,
    timePicker,
    upload,
    notification,
    tree,
    colorPicker,
    datePicker,
    rangePicker,
    flex: flex2,
    wave,
    dropdown,
    warning: warningConfig,
    tour
  } = props;
  const getPrefixCls = reactExports.useCallback((suffixCls, customizePrefixCls) => {
    const {
      prefixCls
    } = props;
    if (customizePrefixCls) {
      return customizePrefixCls;
    }
    const mergedPrefixCls = prefixCls || parentContext.getPrefixCls("");
    return suffixCls ? "".concat(mergedPrefixCls, "-").concat(suffixCls) : mergedPrefixCls;
  }, [parentContext.getPrefixCls, props.prefixCls]);
  const iconPrefixCls = customIconPrefixCls || parentContext.iconPrefixCls || defaultIconPrefixCls;
  const csp = customCsp || parentContext.csp;
  useResetIconStyle(iconPrefixCls, csp);
  const mergedTheme = useTheme(theme, parentContext.theme, {
    prefixCls: getPrefixCls("")
  });
  const baseConfig = {
    csp,
    autoInsertSpaceInButton,
    alert,
    anchor,
    locale: locale2 || legacyLocale,
    direction,
    space,
    virtual,
    popupMatchSelectWidth: popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth,
    popupOverflow,
    getPrefixCls,
    iconPrefixCls,
    theme: mergedTheme,
    segmented,
    statistic: statistic2,
    spin,
    calendar,
    carousel,
    cascader,
    collapse,
    typography,
    checkbox,
    descriptions,
    divider,
    drawer,
    skeleton,
    steps,
    image,
    input: input2,
    textArea,
    layout,
    list,
    mentions,
    modal,
    progress: progress2,
    result,
    slider,
    breadcrumb,
    menu,
    pagination,
    empty: empty2,
    badge,
    radio,
    rate,
    switch: SWITCH,
    transfer,
    avatar: avatar2,
    message: message2,
    tag: tag2,
    table: table2,
    card: card2,
    tabs,
    timeline,
    timePicker,
    upload,
    notification,
    tree,
    colorPicker,
    datePicker,
    rangePicker,
    flex: flex2,
    wave,
    dropdown,
    warning: warningConfig,
    tour
  };
  const config2 = Object.assign({}, parentContext);
  Object.keys(baseConfig).forEach((key) => {
    if (baseConfig[key] !== void 0) {
      config2[key] = baseConfig[key];
    }
  });
  PASSED_PROPS.forEach((propName) => {
    const propValue = props[propName];
    if (propValue) {
      config2[propName] = propValue;
    }
  });
  const memoedConfig = useMemo(() => config2, config2, (prevConfig, currentConfig) => {
    const prevKeys = Object.keys(prevConfig);
    const currentKeys = Object.keys(currentConfig);
    return prevKeys.length !== currentKeys.length || prevKeys.some((key) => prevConfig[key] !== currentConfig[key]);
  });
  const memoIconContextValue = reactExports.useMemo(() => ({
    prefixCls: iconPrefixCls,
    csp
  }), [iconPrefixCls, csp]);
  let childNode = /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement(PropWarning, {
    dropdownMatchSelectWidth
  }), children);
  const validateMessages = reactExports.useMemo(() => {
    var _a, _b, _c, _d;
    return merge$1(((_a = localeValues.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || {}, ((_c = (_b = memoedConfig.locale) === null || _b === void 0 ? void 0 : _b.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {}, ((_d = memoedConfig.form) === null || _d === void 0 ? void 0 : _d.validateMessages) || {}, (form === null || form === void 0 ? void 0 : form.validateMessages) || {});
  }, [memoedConfig, form === null || form === void 0 ? void 0 : form.validateMessages]);
  if (Object.keys(validateMessages).length > 0) {
    childNode = /* @__PURE__ */ reactExports.createElement(ValidateMessagesContext.Provider, {
      value: validateMessages
    }, childNode);
  }
  if (locale2) {
    childNode = /* @__PURE__ */ reactExports.createElement(LocaleProvider, {
      locale: locale2,
      _ANT_MARK__: ANT_MARK
    }, childNode);
  }
  if (iconPrefixCls || csp) {
    childNode = /* @__PURE__ */ reactExports.createElement(IconContext.Provider, {
      value: memoIconContextValue
    }, childNode);
  }
  if (componentSize) {
    childNode = /* @__PURE__ */ reactExports.createElement(SizeContextProvider, {
      size: componentSize
    }, childNode);
  }
  childNode = /* @__PURE__ */ reactExports.createElement(MotionWrapper, null, childNode);
  const memoTheme = reactExports.useMemo(() => {
    const _a = mergedTheme || {}, {
      algorithm,
      token: token2,
      components,
      cssVar
    } = _a, rest = __rest$4(_a, ["algorithm", "token", "components", "cssVar"]);
    const themeObj = algorithm && (!Array.isArray(algorithm) || algorithm.length > 0) ? createTheme(algorithm) : defaultTheme;
    const parsedComponents = {};
    Object.entries(components || {}).forEach((_ref) => {
      let [componentName, componentToken] = _ref;
      const parsedToken = Object.assign({}, componentToken);
      if ("algorithm" in parsedToken) {
        if (parsedToken.algorithm === true) {
          parsedToken.theme = themeObj;
        } else if (Array.isArray(parsedToken.algorithm) || typeof parsedToken.algorithm === "function") {
          parsedToken.theme = createTheme(parsedToken.algorithm);
        }
        delete parsedToken.algorithm;
      }
      parsedComponents[componentName] = parsedToken;
    });
    const mergedToken = Object.assign(Object.assign({}, seedToken), token2);
    return Object.assign(Object.assign({}, rest), {
      theme: themeObj,
      token: mergedToken,
      components: parsedComponents,
      override: Object.assign({
        override: mergedToken
      }, parsedComponents),
      cssVar
    });
  }, [mergedTheme]);
  if (theme) {
    childNode = /* @__PURE__ */ reactExports.createElement(DesignTokenContext.Provider, {
      value: memoTheme
    }, childNode);
  }
  if (memoedConfig.warning) {
    childNode = /* @__PURE__ */ reactExports.createElement(WarningContext.Provider, {
      value: memoedConfig.warning
    }, childNode);
  }
  if (componentDisabled !== void 0) {
    childNode = /* @__PURE__ */ reactExports.createElement(DisabledContextProvider, {
      disabled: componentDisabled
    }, childNode);
  }
  return /* @__PURE__ */ reactExports.createElement(ConfigContext.Provider, {
    value: memoedConfig
  }, childNode);
};
const ConfigProvider = (props) => {
  const context2 = reactExports.useContext(ConfigContext);
  const antLocale = reactExports.useContext(LocaleContext);
  return /* @__PURE__ */ reactExports.createElement(ProviderChildren, Object.assign({
    parentContext: context2,
    legacyLocale: antLocale
  }, props));
};
ConfigProvider.ConfigContext = ConfigContext;
ConfigProvider.SizeContext = SizeContext;
ConfigProvider.config = setGlobalConfig;
ConfigProvider.useConfig = useConfig;
Object.defineProperty(ConfigProvider, "SizeContext", {
  get: () => {
    return SizeContext;
  }
});
function getRoot(ele) {
  var _ele$getRootNode;
  return ele === null || ele === void 0 || (_ele$getRootNode = ele.getRootNode) === null || _ele$getRootNode === void 0 ? void 0 : _ele$getRootNode.call(ele);
}
function inShadow(ele) {
  return getRoot(ele) instanceof ShadowRoot;
}
function getShadowRoot(ele) {
  return inShadow(ele) ? getRoot(ele) : null;
}
function camelCase(input2) {
  return input2.replace(/-(.)/g, function (match2, g2) {
    return g2.toUpperCase();
  });
}
function warning(valid, message2) {
  warningOnce(valid, "[@ant-design/icons] ".concat(message2));
}
function isIconDefinition(target) {
  return _typeof(target) === "object" && typeof target.name === "string" && typeof target.theme === "string" && (_typeof(target.icon) === "object" || typeof target.icon === "function");
}
function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.keys(attrs).reduce(function (acc, key) {
    var val = attrs[key];
    switch (key) {
      case "class":
        acc.className = val;
        delete acc.class;
        break;
      default:
        delete acc[key];
        acc[camelCase(key)] = val;
    }
    return acc;
  }, {});
}
function generate(node2, key, rootProps) {
  if (!rootProps) {
    return /* @__PURE__ */ React.createElement(node2.tag, _objectSpread2({
      key
    }, normalizeAttrs(node2.attrs)), (node2.children || []).map(function (child, index2) {
      return generate(child, "".concat(key, "-").concat(node2.tag, "-").concat(index2));
    }));
  }
  return /* @__PURE__ */ React.createElement(node2.tag, _objectSpread2(_objectSpread2({
    key
  }, normalizeAttrs(node2.attrs)), rootProps), (node2.children || []).map(function (child, index2) {
    return generate(child, "".concat(key, "-").concat(node2.tag, "-").concat(index2));
  }));
}
function getSecondaryColor(primaryColor) {
  return generate$1(primaryColor)[0];
}
function normalizeTwoToneColors(twoToneColor) {
  if (!twoToneColor) {
    return [];
  }
  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];
}
var iconStyles = "\n.anticon {\n  display: inline-flex;\n  alignItems: center;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
var useInsertStyles = function useInsertStyles2(eleRef) {
  var _useContext = reactExports.useContext(IconContext), csp = _useContext.csp, prefixCls = _useContext.prefixCls;
  var mergedStyleStr = iconStyles;
  if (prefixCls) {
    mergedStyleStr = mergedStyleStr.replace(/anticon/g, prefixCls);
  }
  reactExports.useEffect(function () {
    var ele = eleRef.current;
    var shadowRoot = getShadowRoot(ele);
    updateCSS(mergedStyleStr, "@ant-design-icons", {
      prepend: true,
      csp,
      attachTo: shadowRoot
    });
  }, []);
};
var _excluded$c = ["icon", "className", "onClick", "style", "primaryColor", "secondaryColor"];
var twoToneColorPalette = {
  primaryColor: "#333",
  secondaryColor: "#E6E6E6",
  calculated: false
};
function setTwoToneColors(_ref) {
  var primaryColor = _ref.primaryColor, secondaryColor = _ref.secondaryColor;
  twoToneColorPalette.primaryColor = primaryColor;
  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);
  twoToneColorPalette.calculated = !!secondaryColor;
}
function getTwoToneColors() {
  return _objectSpread2({}, twoToneColorPalette);
}
var IconBase = function IconBase2(props) {
  var icon3 = props.icon, className = props.className, onClick = props.onClick, style2 = props.style, primaryColor = props.primaryColor, secondaryColor = props.secondaryColor, restProps = _objectWithoutProperties(props, _excluded$c);
  var svgRef = reactExports.useRef();
  var colors = twoToneColorPalette;
  if (primaryColor) {
    colors = {
      primaryColor,
      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)
    };
  }
  useInsertStyles(svgRef);
  warning(isIconDefinition(icon3), "icon should be icon definiton, but got ".concat(icon3));
  if (!isIconDefinition(icon3)) {
    return null;
  }
  var target = icon3;
  if (target && typeof target.icon === "function") {
    target = _objectSpread2(_objectSpread2({}, target), {}, {
      icon: target.icon(colors.primaryColor, colors.secondaryColor)
    });
  }
  return generate(target.icon, "svg-".concat(target.name), _objectSpread2(_objectSpread2({
    className,
    onClick,
    style: style2,
    "data-icon": target.name,
    width: "1em",
    height: "1em",
    fill: "currentColor",
    "aria-hidden": "true"
  }, restProps), {}, {
    ref: svgRef
  }));
};
IconBase.displayName = "IconReact";
IconBase.getTwoToneColors = getTwoToneColors;
IconBase.setTwoToneColors = setTwoToneColors;
function setTwoToneColor(twoToneColor) {
  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];
  return IconBase.setTwoToneColors({
    primaryColor,
    secondaryColor
  });
}
function getTwoToneColor() {
  var colors = IconBase.getTwoToneColors();
  if (!colors.calculated) {
    return colors.primaryColor;
  }
  return [colors.primaryColor, colors.secondaryColor];
}
var _excluded$b = ["className", "icon", "spin", "rotate", "tabIndex", "onClick", "twoToneColor"];
setTwoToneColor(blue.primary);
var Icon$1 = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
  var className = props.className, icon3 = props.icon, spin = props.spin, rotate = props.rotate, tabIndex = props.tabIndex, onClick = props.onClick, twoToneColor = props.twoToneColor, restProps = _objectWithoutProperties(props, _excluded$b);
  var _React$useContext = reactExports.useContext(IconContext), _React$useContext$pre = _React$useContext.prefixCls, prefixCls = _React$useContext$pre === void 0 ? "anticon" : _React$useContext$pre, rootClassName = _React$useContext.rootClassName;
  var classString = classNames(rootClassName, prefixCls, _defineProperty(_defineProperty({}, "".concat(prefixCls, "-").concat(icon3.name), !!icon3.name), "".concat(prefixCls, "-spin"), !!spin || icon3.name === "loading"), className);
  var iconTabIndex = tabIndex;
  if (iconTabIndex === void 0 && onClick) {
    iconTabIndex = -1;
  }
  var svgStyle = rotate ? {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  } : void 0;
  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];
  return /* @__PURE__ */ reactExports.createElement("span", _extends$1({
    role: "img",
    "aria-label": icon3.name
  }, restProps, {
    ref,
    tabIndex: iconTabIndex,
    onClick,
    className: classString
  }), /* @__PURE__ */ reactExports.createElement(IconBase, {
    icon: icon3,
    primaryColor,
    secondaryColor,
    style: svgStyle
  }));
});
Icon$1.displayName = "AntdIcon";
Icon$1.getTwoToneColor = getTwoToneColor;
Icon$1.setTwoToneColor = setTwoToneColor;
var CloseCircleFilled$1 = { "icon": { "tag": "svg", "attrs": { "fill-rule": "evenodd", "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z" } }] }, "name": "close-circle", "theme": "filled" };
var CloseCircleFilled = function CloseCircleFilled2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: CloseCircleFilled$1
  }));
};
var RefIcon$8 = /* @__PURE__ */ reactExports.forwardRef(CloseCircleFilled);
var CloseOutlined$1 = { "icon": { "tag": "svg", "attrs": { "fill-rule": "evenodd", "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M799.86 166.31c.02 0 .04.02.08.06l57.69 57.7c.04.03.05.05.06.08a.12.12 0 010 .06c0 .03-.02.05-.06.09L569.93 512l287.7 287.7c.04.04.05.06.06.09a.12.12 0 010 .07c0 .02-.02.04-.06.08l-57.7 57.69c-.03.04-.05.05-.07.06a.12.12 0 01-.07 0c-.03 0-.05-.02-.09-.06L512 569.93l-287.7 287.7c-.04.04-.06.05-.09.06a.12.12 0 01-.07 0c-.02 0-.04-.02-.08-.06l-57.69-57.7c-.04-.03-.05-.05-.06-.07a.12.12 0 010-.07c0-.03.02-.05.06-.09L454.07 512l-287.7-287.7c-.04-.04-.05-.06-.06-.09a.12.12 0 010-.07c0-.02.02-.04.06-.08l57.7-57.69c.03-.04.05-.05.07-.06a.12.12 0 01.07 0c.03 0 .05.02.09.06L512 454.07l287.7-287.7c.04-.04.06-.05.09-.06a.12.12 0 01.07 0z" } }] }, "name": "close", "theme": "outlined" };
var CloseOutlined = function CloseOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: CloseOutlined$1
  }));
};
var RefIcon$7 = /* @__PURE__ */ reactExports.forwardRef(CloseOutlined);
var attributes = "accept acceptCharset accessKey action allowFullScreen allowTransparency\n    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\n    charSet checked classID className colSpan cols content contentEditable contextMenu\n    controls coords crossOrigin data dateTime default defer dir disabled download draggable\n    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder\n    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\n    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\n    mediaGroup method min minLength multiple muted name noValidate nonce open\n    optimum pattern placeholder poster preload radioGroup readOnly rel required\n    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected\n    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style\n    summary tabIndex target title type useMap value width wmode wrap";
var eventsName = "onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError";
var propList = "".concat(attributes, " ").concat(eventsName).split(/[\s\n]+/);
var ariaPrefix = "aria-";
var dataPrefix = "data-";
function match(key, prefix2) {
  return key.indexOf(prefix2) === 0;
}
function pickAttrs(props) {
  var ariaOnly = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var mergedConfig;
  if (ariaOnly === false) {
    mergedConfig = {
      aria: true,
      data: true,
      attr: true
    };
  } else if (ariaOnly === true) {
    mergedConfig = {
      aria: true
    };
  } else {
    mergedConfig = _objectSpread2({}, ariaOnly);
  }
  var attrs = {};
  Object.keys(props).forEach(function (key) {
    if (
      // Aria
      mergedConfig.aria && (key === "role" || match(key, ariaPrefix)) || // Data
      mergedConfig.data && match(key, dataPrefix) || // Attr
      mergedConfig.attr && propList.includes(key)
    ) {
      attrs[key] = props[key];
    }
  });
  return attrs;
}
function isFragment(child) {
  return child && /* @__PURE__ */ React.isValidElement(child) && child.type === React.Fragment;
}
const replaceElement = (element, replacement, props) => {
  if (!/* @__PURE__ */ React.isValidElement(element)) {
    return replacement;
  }
  return /* @__PURE__ */ React.cloneElement(element, typeof props === "function" ? props(element.props || {}) : props);
};
function cloneElement(element, props) {
  return replaceElement(element, element, props);
}
const useCSSVarCls = (prefixCls) => {
  const [, , , , cssVar] = useToken();
  return cssVar ? "".concat(prefixCls, "-css-var") : "";
};
var LoadingOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z" } }] }, "name": "loading", "theme": "outlined" };
var LoadingOutlined = function LoadingOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: LoadingOutlined$1
  }));
};
var RefIcon$6 = /* @__PURE__ */ reactExports.forwardRef(LoadingOutlined);
const zIndexContext = /* @__PURE__ */ React.createContext(void 0);
const CONTAINER_OFFSET = 100;
const CONTAINER_OFFSET_MAX_COUNT = 10;
const CONTAINER_MAX_OFFSET = CONTAINER_OFFSET * CONTAINER_OFFSET_MAX_COUNT;
const containerBaseZIndexOffset = {
  Modal: CONTAINER_OFFSET,
  Drawer: CONTAINER_OFFSET,
  Popover: CONTAINER_OFFSET,
  Popconfirm: CONTAINER_OFFSET,
  Tooltip: CONTAINER_OFFSET,
  Tour: CONTAINER_OFFSET
};
const consumerBaseZIndexOffset = {
  SelectLike: 50,
  Dropdown: 50,
  DatePicker: 50,
  Menu: 50,
  ImagePreview: 1
};
function isContainerType(type4) {
  return type4 in containerBaseZIndexOffset;
}
function useZIndex(componentType, customZIndex) {
  const [, token2] = useToken();
  const parentZIndex = React.useContext(zIndexContext);
  const isContainer = isContainerType(componentType);
  if (customZIndex !== void 0) {
    return [customZIndex, customZIndex];
  }
  let zIndex = parentZIndex !== null && parentZIndex !== void 0 ? parentZIndex : 0;
  if (isContainer) {
    zIndex += // Use preset token zIndex by default but not stack when has parent container
      (parentZIndex ? 0 : token2.zIndexPopupBase) + // Container offset
      containerBaseZIndexOffset[componentType];
    zIndex = Math.min(zIndex, token2.zIndexPopupBase + CONTAINER_MAX_OFFSET);
  } else {
    zIndex += consumerBaseZIndexOffset[componentType];
  }
  return [parentZIndex === void 0 ? customZIndex : zIndex, zIndex];
}
var fullClone = _objectSpread2({}, ReactDOM$1);
var version$1 = fullClone.version, reactRender = fullClone.render, unmountComponentAtNode = fullClone.unmountComponentAtNode;
var createRoot;
try {
  var mainVersion = Number((version$1 || "").split(".")[0]);
  if (mainVersion >= 18) {
    createRoot = fullClone.createRoot;
  }
} catch (e2) {
}
function toggleWarning(skip) {
  var __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = fullClone.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  if (__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED && _typeof(__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === "object") {
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;
  }
}
var MARK = "__rc_react_root__";
function modernRender(node2, container2) {
  toggleWarning(true);
  var root2 = container2[MARK] || createRoot(container2);
  toggleWarning(false);
  root2.render(node2);
  container2[MARK] = root2;
}
function legacyRender(node2, container2) {
  reactRender(node2, container2);
}
function render(node2, container2) {
  if (createRoot) {
    modernRender(node2, container2);
    return;
  }
  legacyRender(node2, container2);
}
function modernUnmount(_x) {
  return _modernUnmount.apply(this, arguments);
}
function _modernUnmount() {
  _modernUnmount = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee(container2) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1)
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", Promise.resolve().then(function () {
              var _container$MARK;
              (_container$MARK = container2[MARK]) === null || _container$MARK === void 0 || _container$MARK.unmount();
              delete container2[MARK];
            }));
          case 1:
          case "end":
            return _context.stop();
        }
    }, _callee);
  }));
  return _modernUnmount.apply(this, arguments);
}
function legacyUnmount(container2) {
  unmountComponentAtNode(container2);
}
function unmount(_x2) {
  return _unmount.apply(this, arguments);
}
function _unmount() {
  _unmount = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee2(container2) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1)
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!(createRoot !== void 0)) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return", modernUnmount(container2));
          case 2:
            legacyUnmount(container2);
          case 3:
          case "end":
            return _context2.stop();
        }
    }, _callee2);
  }));
  return _unmount.apply(this, arguments);
}
const isVisible = function (element) {
  if (!element) {
    return false;
  }
  if (element instanceof Element) {
    if (element.offsetParent) {
      return true;
    }
    if (element.getBBox) {
      var _getBBox = element.getBBox(), width = _getBBox.width, height = _getBBox.height;
      if (width || height) {
        return true;
      }
    }
    if (element.getBoundingClientRect) {
      var _element$getBoundingC = element.getBoundingClientRect(), _width = _element$getBoundingC.width, _height = _element$getBoundingC.height;
      if (_width || _height) {
        return true;
      }
    }
  }
  return false;
};
const genWaveStyle = (token2) => {
  const {
    componentCls,
    colorPrimary
  } = token2;
  return {
    [componentCls]: {
      position: "absolute",
      background: "transparent",
      pointerEvents: "none",
      boxSizing: "border-box",
      color: "var(--wave-color, ".concat(colorPrimary, ")"),
      boxShadow: "0 0 0 0 currentcolor",
      opacity: 0.2,
      // =================== Motion ===================
      "&.wave-motion-appear": {
        transition: ["box-shadow 0.4s ".concat(token2.motionEaseOutCirc), "opacity 2s ".concat(token2.motionEaseOutCirc)].join(","),
        "&-active": {
          boxShadow: "0 0 0 6px currentcolor",
          opacity: 0
        },
        "&.wave-quick": {
          transition: ["box-shadow 0.3s ".concat(token2.motionEaseInOut), "opacity 0.35s ".concat(token2.motionEaseInOut)].join(",")
        }
      }
    }
  };
};
const useStyle$2 = genComponentStyleHook("Wave", (token2) => [genWaveStyle(token2)]);
function isNotGrey(color) {
  const match2 = (color || "").match(/rgba?\((\d*), (\d*), (\d*)(, [\d.]*)?\)/);
  if (match2 && match2[1] && match2[2] && match2[3]) {
    return !(match2[1] === match2[2] && match2[2] === match2[3]);
  }
  return true;
}
function isValidWaveColor(color) {
  return color && color !== "#fff" && color !== "#ffffff" && color !== "rgb(255, 255, 255)" && color !== "rgba(255, 255, 255, 1)" && isNotGrey(color) && !/rgba\((?:\d*, ){3}0\)/.test(color) && // any transparent rgba color
    color !== "transparent";
}
function getTargetWaveColor(node2) {
  const {
    borderTopColor,
    borderColor,
    backgroundColor
  } = getComputedStyle(node2);
  if (isValidWaveColor(borderTopColor)) {
    return borderTopColor;
  }
  if (isValidWaveColor(borderColor)) {
    return borderColor;
  }
  if (isValidWaveColor(backgroundColor)) {
    return backgroundColor;
  }
  return null;
}
const TARGET_CLS = "ant-wave-target";
function validateNum(value2) {
  return Number.isNaN(value2) ? 0 : value2;
}
const WaveEffect = (props) => {
  const {
    className,
    target,
    component
  } = props;
  const divRef = reactExports.useRef(null);
  const [color, setWaveColor] = reactExports.useState(null);
  const [borderRadius, setBorderRadius] = reactExports.useState([]);
  const [left2, setLeft] = reactExports.useState(0);
  const [top2, setTop] = reactExports.useState(0);
  const [width, setWidth] = reactExports.useState(0);
  const [height, setHeight] = reactExports.useState(0);
  const [enabled, setEnabled] = reactExports.useState(false);
  const waveStyle = {
    left: left2,
    top: top2,
    width,
    height,
    borderRadius: borderRadius.map((radius2) => "".concat(radius2, "px")).join(" ")
  };
  if (color) {
    waveStyle["--wave-color"] = color;
  }
  function syncPos() {
    const nodeStyle = getComputedStyle(target);
    setWaveColor(getTargetWaveColor(target));
    const isStatic = nodeStyle.position === "static";
    const {
      borderLeftWidth,
      borderTopWidth
    } = nodeStyle;
    setLeft(isStatic ? target.offsetLeft : validateNum(-parseFloat(borderLeftWidth)));
    setTop(isStatic ? target.offsetTop : validateNum(-parseFloat(borderTopWidth)));
    setWidth(target.offsetWidth);
    setHeight(target.offsetHeight);
    const {
      borderTopLeftRadius,
      borderTopRightRadius,
      borderBottomLeftRadius,
      borderBottomRightRadius
    } = nodeStyle;
    setBorderRadius([borderTopLeftRadius, borderTopRightRadius, borderBottomRightRadius, borderBottomLeftRadius].map((radius2) => validateNum(parseFloat(radius2))));
  }
  reactExports.useEffect(() => {
    if (target) {
      const id2 = wrapperRaf(() => {
        syncPos();
        setEnabled(true);
      });
      let resizeObserver2;
      if (typeof ResizeObserver !== "undefined") {
        resizeObserver2 = new ResizeObserver(syncPos);
        resizeObserver2.observe(target);
      }
      return () => {
        wrapperRaf.cancel(id2);
        resizeObserver2 === null || resizeObserver2 === void 0 ? void 0 : resizeObserver2.disconnect();
      };
    }
  }, []);
  if (!enabled) {
    return null;
  }
  const isSmallComponent = (component === "Checkbox" || component === "Radio") && (target === null || target === void 0 ? void 0 : target.classList.contains(TARGET_CLS));
  return /* @__PURE__ */ reactExports.createElement(CSSMotion, {
    visible: true,
    motionAppear: true,
    motionName: "wave-motion",
    motionDeadline: 5e3,
    onAppearEnd: (_, event) => {
      var _a;
      if (event.deadline || event.propertyName === "opacity") {
        const holder = (_a = divRef.current) === null || _a === void 0 ? void 0 : _a.parentElement;
        unmount(holder).then(() => {
          holder === null || holder === void 0 ? void 0 : holder.remove();
        });
      }
      return false;
    }
  }, (_ref) => {
    let {
      className: motionClassName
    } = _ref;
    return /* @__PURE__ */ reactExports.createElement("div", {
      ref: divRef,
      className: classNames(className, {
        "wave-quick": isSmallComponent
      }, motionClassName),
      style: waveStyle
    });
  });
};
const showWaveEffect = (target, info2) => {
  var _a;
  const {
    component
  } = info2;
  if (component === "Checkbox" && !((_a = target.querySelector("input")) === null || _a === void 0 ? void 0 : _a.checked)) {
    return;
  }
  const holder = document.createElement("div");
  holder.style.position = "absolute";
  holder.style.left = "0px";
  holder.style.top = "0px";
  target === null || target === void 0 ? void 0 : target.insertBefore(holder, target === null || target === void 0 ? void 0 : target.firstChild);
  render(/* @__PURE__ */ reactExports.createElement(WaveEffect, Object.assign({}, info2, {
    target
  })), holder);
};
function useWave(nodeRef, className, component) {
  const {
    wave
  } = reactExports.useContext(ConfigContext);
  const [, token2, hashId] = useToken();
  const showWave = useEvent((event) => {
    const node2 = nodeRef.current;
    if ((wave === null || wave === void 0 ? void 0 : wave.disabled) || !node2) {
      return;
    }
    const targetNode = node2.querySelector(".".concat(TARGET_CLS)) || node2;
    const {
      showEffect
    } = wave || {};
    (showEffect || showWaveEffect)(targetNode, {
      className,
      token: token2,
      component,
      event,
      hashId
    });
  });
  const rafId = reactExports.useRef();
  const showDebounceWave = (event) => {
    wrapperRaf.cancel(rafId.current);
    rafId.current = wrapperRaf(() => {
      showWave(event);
    });
  };
  return showDebounceWave;
}
const Wave = (props) => {
  const {
    children,
    disabled: disabled2,
    component
  } = props;
  const {
    getPrefixCls
  } = reactExports.useContext(ConfigContext);
  const containerRef = reactExports.useRef(null);
  const prefixCls = getPrefixCls("wave");
  const [, hashId] = useStyle$2(prefixCls);
  const showWave = useWave(containerRef, classNames(prefixCls, hashId), component);
  React.useEffect(() => {
    const node2 = containerRef.current;
    if (!node2 || node2.nodeType !== 1 || disabled2) {
      return;
    }
    const onClick = (e2) => {
      if (!isVisible(e2.target) || // No need wave
        !node2.getAttribute || node2.getAttribute("disabled") || node2.disabled || node2.className.includes("disabled") || node2.className.includes("-leave")) {
        return;
      }
      showWave(e2);
    };
    node2.addEventListener("click", onClick, true);
    return () => {
      node2.removeEventListener("click", onClick, true);
    };
  }, [disabled2]);
  if (!/* @__PURE__ */ React.isValidElement(children)) {
    return children !== null && children !== void 0 ? children : null;
  }
  const ref = supportRef(children) ? composeRef(children.ref, containerRef) : containerRef;
  return cloneElement(children, {
    ref
  });
};
const useSize = (customSize) => {
  const size2 = React.useContext(SizeContext);
  const mergedSize = React.useMemo(() => {
    if (!customSize) {
      return size2;
    }
    if (typeof customSize === "string") {
      return customSize !== null && customSize !== void 0 ? customSize : size2;
    }
    if (customSize instanceof Function) {
      return customSize(size2);
    }
    return size2;
  }, [customSize, size2]);
  return mergedSize;
};
(function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
});
const SpaceCompactItemContext = /* @__PURE__ */ reactExports.createContext(null);
const useCompactItemContext = (prefixCls, direction) => {
  const compactItemContext = reactExports.useContext(SpaceCompactItemContext);
  const compactItemClassnames = reactExports.useMemo(() => {
    if (!compactItemContext) {
      return "";
    }
    const {
      compactDirection,
      isFirstItem,
      isLastItem
    } = compactItemContext;
    const separator = compactDirection === "vertical" ? "-vertical-" : "-";
    return classNames("".concat(prefixCls, "-compact").concat(separator, "item"), {
      ["".concat(prefixCls, "-compact").concat(separator, "first-item")]: isFirstItem,
      ["".concat(prefixCls, "-compact").concat(separator, "last-item")]: isLastItem,
      ["".concat(prefixCls, "-compact").concat(separator, "item-rtl")]: direction === "rtl"
    });
  }, [prefixCls, direction, compactItemContext]);
  return {
    compactSize: compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.compactSize,
    compactDirection: compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.compactDirection,
    compactItemClassnames
  };
};
const NoCompactStyle = (_ref) => {
  let {
    children
  } = _ref;
  return /* @__PURE__ */ reactExports.createElement(SpaceCompactItemContext.Provider, {
    value: null
  }, children);
};
var __rest$3 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
const GroupSizeContext = /* @__PURE__ */ reactExports.createContext(void 0);
const ButtonGroup = (props) => {
  const {
    getPrefixCls,
    direction
  } = reactExports.useContext(ConfigContext);
  const {
    prefixCls: customizePrefixCls,
    size: size2,
    className
  } = props, others = __rest$3(props, ["prefixCls", "size", "className"]);
  const prefixCls = getPrefixCls("btn-group", customizePrefixCls);
  const [, , hashId] = useToken();
  let sizeCls = "";
  switch (size2) {
    case "large":
      sizeCls = "lg";
      break;
    case "small":
      sizeCls = "sm";
      break;
  }
  const classes = classNames(prefixCls, {
    ["".concat(prefixCls, "-").concat(sizeCls)]: sizeCls,
    ["".concat(prefixCls, "-rtl")]: direction === "rtl"
  }, className, hashId);
  return /* @__PURE__ */ reactExports.createElement(GroupSizeContext.Provider, {
    value: size2
  }, /* @__PURE__ */ reactExports.createElement("div", Object.assign({}, others, {
    className: classes
  })));
};
const rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
const isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);
function isString(str2) {
  return typeof str2 === "string";
}
function isUnBorderedButtonType(type4) {
  return type4 === "text" || type4 === "link";
}
function splitCNCharsBySpace(child, needInserted) {
  if (child === null || child === void 0) {
    return;
  }
  const SPACE = needInserted ? " " : "";
  if (typeof child !== "string" && typeof child !== "number" && isString(child.type) && isTwoCNChar(child.props.children)) {
    return cloneElement(child, {
      children: child.props.children.split("").join(SPACE)
    });
  }
  if (isString(child)) {
    return isTwoCNChar(child) ? /* @__PURE__ */ React.createElement("span", null, child.split("").join(SPACE)) : /* @__PURE__ */ React.createElement("span", null, child);
  }
  if (isFragment(child)) {
    return /* @__PURE__ */ React.createElement("span", null, child);
  }
  return child;
}
function spaceChildren(children, needInserted) {
  let isPrevChildPure = false;
  const childList = [];
  React.Children.forEach(children, (child) => {
    const type4 = typeof child;
    const isCurrentChildPure = type4 === "string" || type4 === "number";
    if (isPrevChildPure && isCurrentChildPure) {
      const lastIndex = childList.length - 1;
      const lastChild = childList[lastIndex];
      childList[lastIndex] = "".concat(lastChild).concat(child);
    } else {
      childList.push(child);
    }
    isPrevChildPure = isCurrentChildPure;
  });
  return React.Children.map(childList, (child) => splitCNCharsBySpace(child, needInserted));
}
const IconWrapper = /* @__PURE__ */ reactExports.forwardRef((props, ref) => {
  const {
    className,
    style: style2,
    children,
    prefixCls
  } = props;
  const iconWrapperCls = classNames("".concat(prefixCls, "-icon"), className);
  return /* @__PURE__ */ React.createElement("span", {
    ref,
    className: iconWrapperCls,
    style: style2
  }, children);
});
const InnerLoadingIcon = /* @__PURE__ */ reactExports.forwardRef((_ref, ref) => {
  let {
    prefixCls,
    className,
    style: style2,
    iconClassName
  } = _ref;
  const mergedIconCls = classNames("".concat(prefixCls, "-loading-icon"), className);
  return /* @__PURE__ */ React.createElement(IconWrapper, {
    prefixCls,
    className: mergedIconCls,
    style: style2,
    ref
  }, /* @__PURE__ */ React.createElement(RefIcon$6, {
    className: iconClassName
  }));
});
const getCollapsedWidth = () => ({
  width: 0,
  opacity: 0,
  transform: "scale(0)"
});
const getRealWidth = (node2) => ({
  width: node2.scrollWidth,
  opacity: 1,
  transform: "scale(1)"
});
const LoadingIcon = (props) => {
  const {
    prefixCls,
    loading: loading2,
    existIcon,
    className,
    style: style2
  } = props;
  const visible = !!loading2;
  if (existIcon) {
    return /* @__PURE__ */ React.createElement(InnerLoadingIcon, {
      prefixCls,
      className,
      style: style2
    });
  }
  return /* @__PURE__ */ React.createElement(CSSMotion, {
    visible,
    // We do not really use this motionName
    motionName: "".concat(prefixCls, "-loading-icon-motion"),
    motionLeave: visible,
    removeOnLeave: true,
    onAppearStart: getCollapsedWidth,
    onAppearActive: getRealWidth,
    onEnterStart: getCollapsedWidth,
    onEnterActive: getRealWidth,
    onLeaveStart: getRealWidth,
    onLeaveActive: getCollapsedWidth
  }, (_ref2, ref) => {
    let {
      className: motionCls,
      style: motionStyle
    } = _ref2;
    return /* @__PURE__ */ React.createElement(InnerLoadingIcon, {
      prefixCls,
      className,
      style: Object.assign(Object.assign({}, style2), motionStyle),
      ref,
      iconClassName: motionCls
    });
  });
};
const genButtonBorderStyle = (buttonTypeCls, borderColor) => ({
  // Border
  ["> span, > ".concat(buttonTypeCls)]: {
    "&:not(:last-child)": {
      ["&, & > ".concat(buttonTypeCls)]: {
        "&:not(:disabled)": {
          borderInlineEndColor: borderColor
        }
      }
    },
    "&:not(:first-child)": {
      ["&, & > ".concat(buttonTypeCls)]: {
        "&:not(:disabled)": {
          borderInlineStartColor: borderColor
        }
      }
    }
  }
});
const genGroupStyle$1 = (token2) => {
  const {
    componentCls,
    fontSize,
    lineWidth,
    groupBorderColor,
    colorErrorHover
  } = token2;
  return {
    ["".concat(componentCls, "-group")]: [
      {
        position: "relative",
        display: "inline-flex",
        // Border
        ["> span, > ".concat(componentCls)]: {
          "&:not(:last-child)": {
            ["&, & > ".concat(componentCls)]: {
              borderStartEndRadius: 0,
              borderEndEndRadius: 0
            }
          },
          "&:not(:first-child)": {
            marginInlineStart: token2.calc(lineWidth).mul(-1).equal(),
            ["&, & > ".concat(componentCls)]: {
              borderStartStartRadius: 0,
              borderEndStartRadius: 0
            }
          }
        },
        [componentCls]: {
          position: "relative",
          zIndex: 1,
          ["&:hover,\n          &:focus,\n          &:active"]: {
            zIndex: 2
          },
          "&[disabled]": {
            zIndex: 0
          }
        },
        ["".concat(componentCls, "-icon-only")]: {
          fontSize
        }
      },
      // Border Color
      genButtonBorderStyle("".concat(componentCls, "-primary"), groupBorderColor),
      genButtonBorderStyle("".concat(componentCls, "-danger"), colorErrorHover)
    ]
  };
};
const prepareToken = (token2) => {
  const {
    paddingInline,
    onlyIconSize,
    paddingBlock
  } = token2;
  const buttonToken = merge(token2, {
    buttonPaddingHorizontal: paddingInline,
    buttonPaddingVertical: paddingBlock,
    buttonIconOnlyFontSize: onlyIconSize
  });
  return buttonToken;
};
const prepareComponentToken$1 = (token2) => {
  var _a, _b, _c, _d, _e, _f;
  const contentFontSize = (_a = token2.contentFontSize) !== null && _a !== void 0 ? _a : token2.fontSize;
  const contentFontSizeSM = (_b = token2.contentFontSizeSM) !== null && _b !== void 0 ? _b : token2.fontSize;
  const contentFontSizeLG = (_c = token2.contentFontSizeLG) !== null && _c !== void 0 ? _c : token2.fontSizeLG;
  const contentLineHeight = (_d = token2.contentLineHeight) !== null && _d !== void 0 ? _d : getLineHeight(contentFontSize);
  const contentLineHeightSM = (_e = token2.contentLineHeightSM) !== null && _e !== void 0 ? _e : getLineHeight(contentFontSizeSM);
  const contentLineHeightLG = (_f = token2.contentLineHeightLG) !== null && _f !== void 0 ? _f : getLineHeight(contentFontSizeLG);
  return {
    fontWeight: 400,
    defaultShadow: "0 ".concat(token2.controlOutlineWidth, "px 0 ").concat(token2.controlTmpOutline),
    primaryShadow: "0 ".concat(token2.controlOutlineWidth, "px 0 ").concat(token2.controlOutline),
    dangerShadow: "0 ".concat(token2.controlOutlineWidth, "px 0 ").concat(token2.colorErrorOutline),
    primaryColor: token2.colorTextLightSolid,
    dangerColor: token2.colorTextLightSolid,
    borderColorDisabled: token2.colorBorder,
    defaultGhostColor: token2.colorBgContainer,
    ghostBg: "transparent",
    defaultGhostBorderColor: token2.colorBgContainer,
    paddingInline: token2.paddingContentHorizontal - token2.lineWidth,
    paddingInlineLG: token2.paddingContentHorizontal - token2.lineWidth,
    paddingInlineSM: 8 - token2.lineWidth,
    onlyIconSize: token2.fontSizeLG,
    onlyIconSizeSM: token2.fontSizeLG - 2,
    onlyIconSizeLG: token2.fontSizeLG + 2,
    groupBorderColor: token2.colorPrimaryHover,
    linkHoverBg: "transparent",
    textHoverBg: token2.colorBgTextHover,
    defaultColor: token2.colorText,
    defaultBg: token2.colorBgContainer,
    defaultBorderColor: token2.colorBorder,
    defaultBorderColorDisabled: token2.colorBorder,
    defaultHoverBg: token2.colorBgContainer,
    defaultHoverColor: token2.colorPrimaryHover,
    defaultHoverBorderColor: token2.colorPrimaryHover,
    defaultActiveBg: token2.colorBgContainer,
    defaultActiveColor: token2.colorPrimaryActive,
    defaultActiveBorderColor: token2.colorPrimaryActive,
    contentFontSize,
    contentFontSizeSM,
    contentFontSizeLG,
    contentLineHeight,
    contentLineHeightSM,
    contentLineHeightLG,
    paddingBlock: Math.max((token2.controlHeight - contentFontSize * contentLineHeight) / 2 - token2.lineWidth, 0),
    paddingBlockSM: Math.max((token2.controlHeightSM - contentFontSizeSM * contentLineHeightSM) / 2 - token2.lineWidth, 0),
    paddingBlockLG: Math.max((token2.controlHeightLG - contentFontSizeLG * contentLineHeightLG) / 2 - token2.lineWidth, 0)
  };
};
const genSharedButtonStyle = (token2) => {
  const {
    componentCls,
    iconCls,
    fontWeight
  } = token2;
  return {
    [componentCls]: {
      outline: "none",
      position: "relative",
      display: "inline-block",
      fontWeight,
      whiteSpace: "nowrap",
      textAlign: "center",
      backgroundImage: "none",
      background: "transparent",
      border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " transparent"),
      cursor: "pointer",
      transition: "all ".concat(token2.motionDurationMid, " ").concat(token2.motionEaseInOut),
      userSelect: "none",
      touchAction: "manipulation",
      color: token2.colorText,
      "&:disabled > *": {
        pointerEvents: "none"
      },
      "> span": {
        display: "inline-block"
      },
      ["".concat(componentCls, "-icon")]: {
        lineHeight: 0
      },
      // Leave a space between icon and text.
      ["> ".concat(iconCls, " + span, > span + ").concat(iconCls)]: {
        marginInlineStart: token2.marginXS
      },
      ["&:not(".concat(componentCls, "-icon-only) > ").concat(componentCls, "-icon")]: {
        ["&".concat(componentCls, "-loading-icon, &:not(:last-child)")]: {
          marginInlineEnd: token2.marginXS
        }
      },
      "> a": {
        color: "currentColor"
      },
      "&:not(:disabled)": Object.assign({}, genFocusStyle(token2)),
      ["&".concat(componentCls, "-two-chinese-chars::first-letter")]: {
        letterSpacing: "0.34em"
      },
      ["&".concat(componentCls, "-two-chinese-chars > *:not(").concat(iconCls, ")")]: {
        marginInlineEnd: "-0.34em",
        letterSpacing: "0.34em"
      },
      // make `btn-icon-only` not too narrow
      ["&-icon-only".concat(componentCls, "-compact-item")]: {
        flex: "none"
      }
    }
  };
};
const genHoverActiveButtonStyle = (btnCls, hoverStyle, activeStyle) => ({
  ["&:not(:disabled):not(".concat(btnCls, "-disabled)")]: {
    "&:hover": hoverStyle,
    "&:active": activeStyle
  }
});
const genCircleButtonStyle = (token2) => ({
  minWidth: token2.controlHeight,
  paddingInlineStart: 0,
  paddingInlineEnd: 0,
  borderRadius: "50%"
});
const genRoundButtonStyle = (token2) => ({
  borderRadius: token2.controlHeight,
  paddingInlineStart: token2.calc(token2.controlHeight).div(2).equal(),
  paddingInlineEnd: token2.calc(token2.controlHeight).div(2).equal()
});
const genDisabledStyle$1 = (token2) => ({
  cursor: "not-allowed",
  borderColor: token2.borderColorDisabled,
  color: token2.colorTextDisabled,
  background: token2.colorBgContainerDisabled,
  boxShadow: "none"
});
const genGhostButtonStyle = (btnCls, background, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) => ({
  ["&".concat(btnCls, "-background-ghost")]: Object.assign(Object.assign({
    color: textColor || void 0,
    background,
    borderColor: borderColor || void 0,
    boxShadow: "none"
  }, genHoverActiveButtonStyle(btnCls, Object.assign({
    background
  }, hoverStyle), Object.assign({
    background
  }, activeStyle))), {
    "&:disabled": {
      cursor: "not-allowed",
      color: textColorDisabled || void 0,
      borderColor: borderColorDisabled || void 0
    }
  })
});
const genSolidDisabledButtonStyle = (token2) => ({
  ["&:disabled, &".concat(token2.componentCls, "-disabled")]: Object.assign({}, genDisabledStyle$1(token2))
});
const genSolidButtonStyle = (token2) => Object.assign({}, genSolidDisabledButtonStyle(token2));
const genPureDisabledButtonStyle = (token2) => ({
  ["&:disabled, &".concat(token2.componentCls, "-disabled")]: {
    cursor: "not-allowed",
    color: token2.colorTextDisabled
  }
});
const genDefaultButtonStyle = (token2) => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token2)), {
  background: token2.defaultBg,
  borderColor: token2.defaultBorderColor,
  color: token2.defaultColor,
  boxShadow: token2.defaultShadow
}), genHoverActiveButtonStyle(token2.componentCls, {
  color: token2.defaultHoverColor,
  borderColor: token2.defaultHoverBorderColor,
  background: token2.defaultHoverBg
}, {
  color: token2.defaultActiveColor,
  borderColor: token2.defaultActiveBorderColor,
  background: token2.defaultActiveBg
})), genGhostButtonStyle(token2.componentCls, token2.ghostBg, token2.defaultGhostColor, token2.defaultGhostBorderColor, token2.colorTextDisabled, token2.colorBorder)), {
  ["&".concat(token2.componentCls, "-dangerous")]: Object.assign(Object.assign(Object.assign({
    color: token2.colorError,
    borderColor: token2.colorError
  }, genHoverActiveButtonStyle(token2.componentCls, {
    color: token2.colorErrorHover,
    borderColor: token2.colorErrorBorderHover
  }, {
    color: token2.colorErrorActive,
    borderColor: token2.colorErrorActive
  })), genGhostButtonStyle(token2.componentCls, token2.ghostBg, token2.colorError, token2.colorError, token2.colorTextDisabled, token2.colorBorder)), genSolidDisabledButtonStyle(token2))
});
const genPrimaryButtonStyle = (token2) => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token2)), {
  color: token2.primaryColor,
  background: token2.colorPrimary,
  boxShadow: token2.primaryShadow
}), genHoverActiveButtonStyle(token2.componentCls, {
  color: token2.colorTextLightSolid,
  background: token2.colorPrimaryHover
}, {
  color: token2.colorTextLightSolid,
  background: token2.colorPrimaryActive
})), genGhostButtonStyle(token2.componentCls, token2.ghostBg, token2.colorPrimary, token2.colorPrimary, token2.colorTextDisabled, token2.colorBorder, {
  color: token2.colorPrimaryHover,
  borderColor: token2.colorPrimaryHover
}, {
  color: token2.colorPrimaryActive,
  borderColor: token2.colorPrimaryActive
})), {
  ["&".concat(token2.componentCls, "-dangerous")]: Object.assign(Object.assign(Object.assign({
    background: token2.colorError,
    boxShadow: token2.dangerShadow,
    color: token2.dangerColor
  }, genHoverActiveButtonStyle(token2.componentCls, {
    background: token2.colorErrorHover
  }, {
    background: token2.colorErrorActive
  })), genGhostButtonStyle(token2.componentCls, token2.ghostBg, token2.colorError, token2.colorError, token2.colorTextDisabled, token2.colorBorder, {
    color: token2.colorErrorHover,
    borderColor: token2.colorErrorHover
  }, {
    color: token2.colorErrorActive,
    borderColor: token2.colorErrorActive
  })), genSolidDisabledButtonStyle(token2))
});
const genDashedButtonStyle = (token2) => Object.assign(Object.assign({}, genDefaultButtonStyle(token2)), {
  borderStyle: "dashed"
});
const genLinkButtonStyle = (token2) => Object.assign(Object.assign(Object.assign({
  color: token2.colorLink
}, genHoverActiveButtonStyle(token2.componentCls, {
  color: token2.colorLinkHover,
  background: token2.linkHoverBg
}, {
  color: token2.colorLinkActive
})), genPureDisabledButtonStyle(token2)), {
  ["&".concat(token2.componentCls, "-dangerous")]: Object.assign(Object.assign({
    color: token2.colorError
  }, genHoverActiveButtonStyle(token2.componentCls, {
    color: token2.colorErrorHover
  }, {
    color: token2.colorErrorActive
  })), genPureDisabledButtonStyle(token2))
});
const genTextButtonStyle = (token2) => Object.assign(Object.assign(Object.assign({}, genHoverActiveButtonStyle(token2.componentCls, {
  color: token2.colorText,
  background: token2.textHoverBg
}, {
  color: token2.colorText,
  background: token2.colorBgTextActive
})), genPureDisabledButtonStyle(token2)), {
  ["&".concat(token2.componentCls, "-dangerous")]: Object.assign(Object.assign({
    color: token2.colorError
  }, genPureDisabledButtonStyle(token2)), genHoverActiveButtonStyle(token2.componentCls, {
    color: token2.colorErrorHover,
    background: token2.colorErrorBg
  }, {
    color: token2.colorErrorHover,
    background: token2.colorErrorBg
  }))
});
const genTypeButtonStyle = (token2) => {
  const {
    componentCls
  } = token2;
  return {
    ["".concat(componentCls, "-default")]: genDefaultButtonStyle(token2),
    ["".concat(componentCls, "-primary")]: genPrimaryButtonStyle(token2),
    ["".concat(componentCls, "-dashed")]: genDashedButtonStyle(token2),
    ["".concat(componentCls, "-link")]: genLinkButtonStyle(token2),
    ["".concat(componentCls, "-text")]: genTextButtonStyle(token2),
    ["".concat(componentCls, "-ghost")]: genGhostButtonStyle(token2.componentCls, token2.ghostBg, token2.colorBgContainer, token2.colorBgContainer, token2.colorTextDisabled, token2.colorBorder)
  };
};
const genButtonStyle = function (token2) {
  let prefixCls = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  const {
    componentCls,
    controlHeight,
    fontSize,
    lineHeight: lineHeight2,
    borderRadius,
    buttonPaddingHorizontal,
    iconCls,
    buttonPaddingVertical
  } = token2;
  const iconOnlyCls = "".concat(componentCls, "-icon-only");
  return [
    {
      ["".concat(prefixCls)]: {
        fontSize,
        lineHeight: lineHeight2,
        height: controlHeight,
        padding: "".concat(unit$1(buttonPaddingVertical), " ").concat(unit$1(buttonPaddingHorizontal)),
        borderRadius,
        ["&".concat(iconOnlyCls)]: {
          width: controlHeight,
          paddingInlineStart: 0,
          paddingInlineEnd: 0,
          ["&".concat(componentCls, "-round")]: {
            width: "auto"
          },
          [iconCls]: {
            fontSize: token2.buttonIconOnlyFontSize
          }
        },
        // Loading
        ["&".concat(componentCls, "-loading")]: {
          opacity: token2.opacityLoading,
          cursor: "default"
        },
        ["".concat(componentCls, "-loading-icon")]: {
          transition: "width ".concat(token2.motionDurationSlow, " ").concat(token2.motionEaseInOut, ", opacity ").concat(token2.motionDurationSlow, " ").concat(token2.motionEaseInOut)
        }
      }
    },
    // Shape - patch prefixCls again to override solid border radius style
    {
      ["".concat(componentCls).concat(componentCls, "-circle").concat(prefixCls)]: genCircleButtonStyle(token2)
    },
    {
      ["".concat(componentCls).concat(componentCls, "-round").concat(prefixCls)]: genRoundButtonStyle(token2)
    }
  ];
};
const genSizeBaseButtonStyle = (token2) => {
  const baseToken = merge(token2, {
    fontSize: token2.contentFontSize,
    lineHeight: token2.contentLineHeight
  });
  return genButtonStyle(baseToken, token2.componentCls);
};
const genSizeSmallButtonStyle = (token2) => {
  const smallToken = merge(token2, {
    controlHeight: token2.controlHeightSM,
    fontSize: token2.contentFontSizeSM,
    lineHeight: token2.contentLineHeightSM,
    padding: token2.paddingXS,
    buttonPaddingHorizontal: token2.paddingInlineSM,
    buttonPaddingVertical: token2.paddingBlockSM,
    borderRadius: token2.borderRadiusSM,
    buttonIconOnlyFontSize: token2.onlyIconSizeSM
  });
  return genButtonStyle(smallToken, "".concat(token2.componentCls, "-sm"));
};
const genSizeLargeButtonStyle = (token2) => {
  const largeToken = merge(token2, {
    controlHeight: token2.controlHeightLG,
    fontSize: token2.contentFontSizeLG,
    lineHeight: token2.contentLineHeightLG,
    buttonPaddingHorizontal: token2.paddingInlineLG,
    buttonPaddingVertical: token2.paddingBlockLG,
    borderRadius: token2.borderRadiusLG,
    buttonIconOnlyFontSize: token2.onlyIconSizeLG
  });
  return genButtonStyle(largeToken, "".concat(token2.componentCls, "-lg"));
};
const genBlockButtonStyle = (token2) => {
  const {
    componentCls
  } = token2;
  return {
    [componentCls]: {
      ["&".concat(componentCls, "-block")]: {
        width: "100%"
      }
    }
  };
};
const useStyle$1 = genStyleHooks("Button", (token2) => {
  const buttonToken = prepareToken(token2);
  return [
    // Shared
    genSharedButtonStyle(buttonToken),
    // Size
    genSizeBaseButtonStyle(buttonToken),
    genSizeSmallButtonStyle(buttonToken),
    genSizeLargeButtonStyle(buttonToken),
    // Block
    genBlockButtonStyle(buttonToken),
    // Group (type, ghost, danger, loading)
    genTypeButtonStyle(buttonToken),
    // Button Group
    genGroupStyle$1(buttonToken)
  ];
}, prepareComponentToken$1, {
  unitless: {
    fontWeight: true,
    contentLineHeight: true,
    contentLineHeightSM: true,
    contentLineHeightLG: true
  }
});
function compactItemBorder(token2, parentCls, options2) {
  const {
    focusElCls,
    focus,
    borderElCls
  } = options2;
  const childCombinator = borderElCls ? "> *" : "";
  const hoverEffects = ["hover", focus ? "focus" : null, "active"].filter(Boolean).map((n2) => "&:".concat(n2, " ").concat(childCombinator)).join(",");
  return {
    ["&-item:not(".concat(parentCls, "-last-item)")]: {
      marginInlineEnd: token2.calc(token2.lineWidth).mul(-1).equal()
    },
    "&-item": Object.assign(Object.assign({
      [hoverEffects]: {
        zIndex: 2
      }
    }, focusElCls ? {
      ["&".concat(focusElCls)]: {
        zIndex: 2
      }
    } : {}), {
      ["&[disabled] ".concat(childCombinator)]: {
        zIndex: 0
      }
    })
  };
}
function compactItemBorderRadius(prefixCls, parentCls, options2) {
  const {
    borderElCls
  } = options2;
  const childCombinator = borderElCls ? "> ".concat(borderElCls) : "";
  return {
    ["&-item:not(".concat(parentCls, "-first-item):not(").concat(parentCls, "-last-item) ").concat(childCombinator)]: {
      borderRadius: 0
    },
    ["&-item:not(".concat(parentCls, "-last-item)").concat(parentCls, "-first-item")]: {
      ["& ".concat(childCombinator, ", &").concat(prefixCls, "-sm ").concat(childCombinator, ", &").concat(prefixCls, "-lg ").concat(childCombinator)]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0
      }
    },
    ["&-item:not(".concat(parentCls, "-first-item)").concat(parentCls, "-last-item")]: {
      ["& ".concat(childCombinator, ", &").concat(prefixCls, "-sm ").concat(childCombinator, ", &").concat(prefixCls, "-lg ").concat(childCombinator)]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0
      }
    }
  };
}
function genCompactItemStyle(token2) {
  let options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    focus: true
  };
  const {
    componentCls
  } = token2;
  const compactCls = "".concat(componentCls, "-compact");
  return {
    [compactCls]: Object.assign(Object.assign({}, compactItemBorder(token2, compactCls, options2)), compactItemBorderRadius(componentCls, compactCls, options2))
  };
}
function compactItemVerticalBorder(token2, parentCls) {
  return {
    // border collapse
    ["&-item:not(".concat(parentCls, "-last-item)")]: {
      marginBottom: token2.calc(token2.lineWidth).mul(-1).equal()
    },
    "&-item": {
      "&:hover,&:focus,&:active": {
        zIndex: 2
      },
      "&[disabled]": {
        zIndex: 0
      }
    }
  };
}
function compactItemBorderVerticalRadius(prefixCls, parentCls) {
  return {
    ["&-item:not(".concat(parentCls, "-first-item):not(").concat(parentCls, "-last-item)")]: {
      borderRadius: 0
    },
    ["&-item".concat(parentCls, "-first-item:not(").concat(parentCls, "-last-item)")]: {
      ["&, &".concat(prefixCls, "-sm, &").concat(prefixCls, "-lg")]: {
        borderEndEndRadius: 0,
        borderEndStartRadius: 0
      }
    },
    ["&-item".concat(parentCls, "-last-item:not(").concat(parentCls, "-first-item)")]: {
      ["&, &".concat(prefixCls, "-sm, &").concat(prefixCls, "-lg")]: {
        borderStartStartRadius: 0,
        borderStartEndRadius: 0
      }
    }
  };
}
function genCompactItemVerticalStyle(token2) {
  const compactCls = "".concat(token2.componentCls, "-compact-vertical");
  return {
    [compactCls]: Object.assign(Object.assign({}, compactItemVerticalBorder(token2, compactCls)), compactItemBorderVerticalRadius(token2.componentCls, compactCls))
  };
}
const genButtonCompactStyle = (token2) => {
  const {
    componentCls,
    calc
  } = token2;
  return {
    [componentCls]: {
      // Special styles for Primary Button
      ["&-compact-item".concat(componentCls, "-primary")]: {
        ["&:not([disabled]) + ".concat(componentCls, "-compact-item").concat(componentCls, "-primary:not([disabled])")]: {
          position: "relative",
          "&:before": {
            position: "absolute",
            top: calc(token2.lineWidth).mul(-1).equal(),
            insetInlineStart: calc(token2.lineWidth).mul(-1).equal(),
            display: "inline-block",
            width: token2.lineWidth,
            height: "calc(100% + ".concat(unit$1(token2.lineWidth), " * 2)"),
            backgroundColor: token2.colorPrimaryHover,
            content: '""'
          }
        }
      },
      // Special styles for Primary Button
      "&-compact-vertical-item": {
        ["&".concat(componentCls, "-primary")]: {
          ["&:not([disabled]) + ".concat(componentCls, "-compact-vertical-item").concat(componentCls, "-primary:not([disabled])")]: {
            position: "relative",
            "&:before": {
              position: "absolute",
              top: calc(token2.lineWidth).mul(-1).equal(),
              insetInlineStart: calc(token2.lineWidth).mul(-1).equal(),
              display: "inline-block",
              width: "calc(100% + ".concat(unit$1(token2.lineWidth), " * 2)"),
              height: token2.lineWidth,
              backgroundColor: token2.colorPrimaryHover,
              content: '""'
            }
          }
        }
      }
    }
  };
};
const CompactCmp = genSubStyleComponent(["Button", "compact"], (token2) => {
  const buttonToken = prepareToken(token2);
  return [
    // Space Compact
    genCompactItemStyle(buttonToken),
    genCompactItemVerticalStyle(buttonToken),
    genButtonCompactStyle(buttonToken)
  ];
}, prepareComponentToken$1);
var __rest$2 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
function getLoadingConfig(loading2) {
  if (typeof loading2 === "object" && loading2) {
    let delay = loading2 === null || loading2 === void 0 ? void 0 : loading2.delay;
    delay = !Number.isNaN(delay) && typeof delay === "number" ? delay : 0;
    return {
      loading: delay <= 0,
      delay
    };
  }
  return {
    loading: !!loading2,
    delay: 0
  };
}
const InternalButton = (props, ref) => {
  var _a, _b;
  const {
    loading: loading2 = false,
    prefixCls: customizePrefixCls,
    type: type4,
    danger,
    shape = "default",
    size: customizeSize,
    styles,
    disabled: customDisabled,
    className,
    rootClassName,
    children,
    icon: icon3,
    ghost = false,
    block: block2 = false,
    // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.
    htmlType = "button",
    classNames: customClassNames,
    style: customStyle = {}
  } = props, rest = __rest$2(props, ["loading", "prefixCls", "type", "danger", "shape", "size", "styles", "disabled", "className", "rootClassName", "children", "icon", "ghost", "block", "htmlType", "classNames", "style"]);
  const mergedType = type4 || "default";
  const {
    getPrefixCls,
    autoInsertSpaceInButton,
    direction,
    button: button2
  } = reactExports.useContext(ConfigContext);
  const prefixCls = getPrefixCls("btn", customizePrefixCls);
  const [wrapCSSVar, hashId, cssVarCls] = useStyle$1(prefixCls);
  const disabled2 = reactExports.useContext(DisabledContext);
  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled2;
  const groupSize = reactExports.useContext(GroupSizeContext);
  const loadingOrDelay = reactExports.useMemo(() => getLoadingConfig(loading2), [loading2]);
  const [innerLoading, setLoading] = reactExports.useState(loadingOrDelay.loading);
  const [hasTwoCNChar, setHasTwoCNChar] = reactExports.useState(false);
  const internalRef = /* @__PURE__ */ reactExports.createRef();
  const buttonRef = composeRef(ref, internalRef);
  const needInserted = reactExports.Children.count(children) === 1 && !icon3 && !isUnBorderedButtonType(mergedType);
  reactExports.useEffect(() => {
    let delayTimer = null;
    if (loadingOrDelay.delay > 0) {
      delayTimer = setTimeout(() => {
        delayTimer = null;
        setLoading(true);
      }, loadingOrDelay.delay);
    } else {
      setLoading(loadingOrDelay.loading);
    }
    function cleanupTimer() {
      if (delayTimer) {
        clearTimeout(delayTimer);
        delayTimer = null;
      }
    }
    return cleanupTimer;
  }, [loadingOrDelay]);
  reactExports.useEffect(() => {
    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {
      return;
    }
    const buttonText = buttonRef.current.textContent;
    if (needInserted && isTwoCNChar(buttonText)) {
      if (!hasTwoCNChar) {
        setHasTwoCNChar(true);
      }
    } else if (hasTwoCNChar) {
      setHasTwoCNChar(false);
    }
  }, [buttonRef]);
  const handleClick = (e2) => {
    const {
      onClick
    } = props;
    if (innerLoading || mergedDisabled) {
      e2.preventDefault();
      return;
    }
    onClick === null || onClick === void 0 ? void 0 : onClick(e2);
  };
  const autoInsertSpace = autoInsertSpaceInButton !== false;
  const {
    compactSize,
    compactItemClassnames
  } = useCompactItemContext(prefixCls, direction);
  const sizeClassNameMap = {
    large: "lg",
    small: "sm",
    middle: void 0
  };
  const sizeFullName = useSize((ctxSize) => {
    var _a2, _b2;
    return (_b2 = (_a2 = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a2 !== void 0 ? _a2 : groupSize) !== null && _b2 !== void 0 ? _b2 : ctxSize;
  });
  const sizeCls = sizeFullName ? sizeClassNameMap[sizeFullName] || "" : "";
  const iconType = innerLoading ? "loading" : icon3;
  const linkButtonRestProps = omit(rest, ["navigate"]);
  const classes = classNames(prefixCls, hashId, cssVarCls, {
    ["".concat(prefixCls, "-").concat(shape)]: shape !== "default" && shape,
    ["".concat(prefixCls, "-").concat(mergedType)]: mergedType,
    ["".concat(prefixCls, "-").concat(sizeCls)]: sizeCls,
    ["".concat(prefixCls, "-icon-only")]: !children && children !== 0 && !!iconType,
    ["".concat(prefixCls, "-background-ghost")]: ghost && !isUnBorderedButtonType(mergedType),
    ["".concat(prefixCls, "-loading")]: innerLoading,
    ["".concat(prefixCls, "-two-chinese-chars")]: hasTwoCNChar && autoInsertSpace && !innerLoading,
    ["".concat(prefixCls, "-block")]: block2,
    ["".concat(prefixCls, "-dangerous")]: !!danger,
    ["".concat(prefixCls, "-rtl")]: direction === "rtl"
  }, compactItemClassnames, className, rootClassName, button2 === null || button2 === void 0 ? void 0 : button2.className);
  const fullStyle = Object.assign(Object.assign({}, button2 === null || button2 === void 0 ? void 0 : button2.style), customStyle);
  const iconClasses = classNames(customClassNames === null || customClassNames === void 0 ? void 0 : customClassNames.icon, (_a = button2 === null || button2 === void 0 ? void 0 : button2.classNames) === null || _a === void 0 ? void 0 : _a.icon);
  const iconStyle = Object.assign(Object.assign({}, (styles === null || styles === void 0 ? void 0 : styles.icon) || {}), ((_b = button2 === null || button2 === void 0 ? void 0 : button2.styles) === null || _b === void 0 ? void 0 : _b.icon) || {});
  const iconNode = icon3 && !innerLoading ? /* @__PURE__ */ React.createElement(IconWrapper, {
    prefixCls,
    className: iconClasses,
    style: iconStyle
  }, icon3) : /* @__PURE__ */ React.createElement(LoadingIcon, {
    existIcon: !!icon3,
    prefixCls,
    loading: !!innerLoading
  });
  const kids = children || children === 0 ? spaceChildren(children, needInserted && autoInsertSpace) : null;
  if (linkButtonRestProps.href !== void 0) {
    return wrapCSSVar(/* @__PURE__ */ React.createElement("a", Object.assign({}, linkButtonRestProps, {
      className: classNames(classes, {
        ["".concat(prefixCls, "-disabled")]: mergedDisabled
      }),
      href: mergedDisabled ? void 0 : linkButtonRestProps.href,
      style: fullStyle,
      onClick: handleClick,
      ref: buttonRef,
      tabIndex: mergedDisabled ? -1 : 0
    }), iconNode, kids));
  }
  let buttonNode = /* @__PURE__ */ React.createElement("button", Object.assign({}, rest, {
    type: htmlType,
    className: classes,
    style: fullStyle,
    onClick: handleClick,
    disabled: mergedDisabled,
    ref: buttonRef
  }), iconNode, kids, !!compactItemClassnames && /* @__PURE__ */ React.createElement(CompactCmp, {
    key: "compact",
    prefixCls
  }));
  if (!isUnBorderedButtonType(mergedType)) {
    buttonNode = /* @__PURE__ */ React.createElement(Wave, {
      component: "Button",
      disabled: !!innerLoading
    }, buttonNode);
  }
  return wrapCSSVar(buttonNode);
};
const Button$2 = /* @__PURE__ */ reactExports.forwardRef(InternalButton);
Button$2.Group = ButtonGroup;
Button$2.__ANT_BUTTON = true;
var OrderContext = /* @__PURE__ */ reactExports.createContext(null);
var EMPTY_LIST$1 = [];
function useDom(render3, debug) {
  var _React$useState = reactExports.useState(function () {
    if (!canUseDom()) {
      return null;
    }
    var defaultEle = document.createElement("div");
    return defaultEle;
  }), _React$useState2 = _slicedToArray(_React$useState, 1), ele = _React$useState2[0];
  var appendedRef = reactExports.useRef(false);
  var queueCreate = reactExports.useContext(OrderContext);
  var _React$useState3 = reactExports.useState(EMPTY_LIST$1), _React$useState4 = _slicedToArray(_React$useState3, 2), queue = _React$useState4[0], setQueue = _React$useState4[1];
  var mergedQueueCreate = queueCreate || (appendedRef.current ? void 0 : function (appendFn) {
    setQueue(function (origin) {
      var newQueue = [appendFn].concat(_toConsumableArray(origin));
      return newQueue;
    });
  });
  function append2() {
    if (!ele.parentElement) {
      document.body.appendChild(ele);
    }
    appendedRef.current = true;
  }
  function cleanup2() {
    var _ele$parentElement;
    (_ele$parentElement = ele.parentElement) === null || _ele$parentElement === void 0 ? void 0 : _ele$parentElement.removeChild(ele);
    appendedRef.current = false;
  }
  useLayoutEffect(function () {
    if (render3) {
      if (queueCreate) {
        queueCreate(append2);
      } else {
        append2();
      }
    } else {
      cleanup2();
    }
    return cleanup2;
  }, [render3]);
  useLayoutEffect(function () {
    if (queue.length) {
      queue.forEach(function (appendFn) {
        return appendFn();
      });
      setQueue(EMPTY_LIST$1);
    }
  }, [queue]);
  return [ele, mergedQueueCreate];
}
function measureScrollbarSize(ele) {
  var randomId = "rc-scrollbar-measure-".concat(Math.random().toString(36).substring(7));
  var measureEle = document.createElement("div");
  measureEle.id = randomId;
  var measureStyle = measureEle.style;
  measureStyle.position = "absolute";
  measureStyle.left = "0";
  measureStyle.top = "0";
  measureStyle.width = "100px";
  measureStyle.height = "100px";
  measureStyle.overflow = "scroll";
  var fallbackWidth;
  var fallbackHeight;
  if (ele) {
    var targetStyle = getComputedStyle(ele);
    measureStyle.scrollbarColor = targetStyle.scrollbarColor;
    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;
    var webkitScrollbarStyle = getComputedStyle(ele, "::-webkit-scrollbar");
    var width = parseInt(webkitScrollbarStyle.width, 10);
    var height = parseInt(webkitScrollbarStyle.height, 10);
    try {
      var widthStyle = width ? "width: ".concat(webkitScrollbarStyle.width, ";") : "";
      var heightStyle = height ? "height: ".concat(webkitScrollbarStyle.height, ";") : "";
      updateCSS("\n#".concat(randomId, "::-webkit-scrollbar {\n").concat(widthStyle, "\n").concat(heightStyle, "\n}"), randomId);
    } catch (e2) {
      console.error(e2);
      fallbackWidth = width;
      fallbackHeight = height;
    }
  }
  document.body.appendChild(measureEle);
  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;
  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;
  document.body.removeChild(measureEle);
  removeCSS(randomId);
  return {
    width: scrollWidth,
    height: scrollHeight
  };
}
function getTargetScrollBarSize(target) {
  if (typeof document === "undefined" || !target || !(target instanceof Element)) {
    return {
      width: 0,
      height: 0
    };
  }
  return measureScrollbarSize(target);
}
function isBodyOverflowing() {
  return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;
}
var UNIQUE_ID = "rc-util-locker-".concat(Date.now());
var uuid$1 = 0;
function useScrollLocker(lock) {
  var mergedLock = !!lock;
  var _React$useState = reactExports.useState(function () {
    uuid$1 += 1;
    return "".concat(UNIQUE_ID, "_").concat(uuid$1);
  }), _React$useState2 = _slicedToArray(_React$useState, 1), id2 = _React$useState2[0];
  useLayoutEffect(function () {
    if (mergedLock) {
      var scrollbarSize = getTargetScrollBarSize(document.body).width;
      var isOverflow = isBodyOverflowing();
      updateCSS("\nhtml body {\n  overflow-y: hidden;\n  ".concat(isOverflow ? "width: calc(100% - ".concat(scrollbarSize, "px);") : "", "\n}"), id2);
    } else {
      removeCSS(id2);
    }
    return function () {
      removeCSS(id2);
    };
  }, [mergedLock, id2]);
}
var inline$2 = false;
function inlineMock(nextInline) {
  return inline$2;
}
var getPortalContainer = function getPortalContainer2(getContainer2) {
  if (getContainer2 === false) {
    return false;
  }
  if (!canUseDom() || !getContainer2) {
    return null;
  }
  if (typeof getContainer2 === "string") {
    return document.querySelector(getContainer2);
  }
  if (typeof getContainer2 === "function") {
    return getContainer2();
  }
  return getContainer2;
};
var Portal = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
  var open2 = props.open, autoLock = props.autoLock, getContainer2 = props.getContainer;
  props.debug;
  var _props$autoDestroy = props.autoDestroy, autoDestroy = _props$autoDestroy === void 0 ? true : _props$autoDestroy, children = props.children;
  var _React$useState = reactExports.useState(open2), _React$useState2 = _slicedToArray(_React$useState, 2), shouldRender = _React$useState2[0], setShouldRender = _React$useState2[1];
  var mergedRender = shouldRender || open2;
  reactExports.useEffect(function () {
    if (autoDestroy || open2) {
      setShouldRender(open2);
    }
  }, [open2, autoDestroy]);
  var _React$useState3 = reactExports.useState(function () {
    return getPortalContainer(getContainer2);
  }), _React$useState4 = _slicedToArray(_React$useState3, 2), innerContainer = _React$useState4[0], setInnerContainer = _React$useState4[1];
  reactExports.useEffect(function () {
    var customizeContainer = getPortalContainer(getContainer2);
    setInnerContainer(customizeContainer !== null && customizeContainer !== void 0 ? customizeContainer : null);
  });
  var _useDom = useDom(mergedRender && !innerContainer), _useDom2 = _slicedToArray(_useDom, 2), defaultContainer = _useDom2[0], queueCreate = _useDom2[1];
  var mergedContainer = innerContainer !== null && innerContainer !== void 0 ? innerContainer : defaultContainer;
  useScrollLocker(autoLock && open2 && canUseDom() && (mergedContainer === defaultContainer || mergedContainer === document.body));
  var childRef = null;
  if (children && supportRef(children) && ref) {
    var _ref = children;
    childRef = _ref.ref;
  }
  var mergedRef = useComposeRef(childRef, ref);
  if (!mergedRender || !canUseDom() || innerContainer === void 0) {
    return null;
  }
  var renderInline = mergedContainer === false || inlineMock();
  var reffedChildren = children;
  if (ref) {
    reffedChildren = /* @__PURE__ */ reactExports.cloneElement(children, {
      ref: mergedRef
    });
  }
  return /* @__PURE__ */ reactExports.createElement(OrderContext.Provider, {
    value: queueCreate
  }, renderInline ? reffedChildren : /* @__PURE__ */ reactDomExports.createPortal(reffedChildren, mergedContainer));
});
function getUseId() {
  var fullClone2 = _objectSpread2({}, React$1);
  return fullClone2.useId;
}
var uuid = 0;
var useOriginId = getUseId();
const useId = useOriginId ? (
  // Use React `useId`
  function useId2(id2) {
    var reactId = useOriginId();
    if (id2) {
      return id2;
    }
    return reactId;
  }
) : (
  // Use compatible of `useId`
  function useCompatId(id2) {
    var _React$useState = reactExports.useState("ssr-id"), _React$useState2 = _slicedToArray(_React$useState, 2), innerId = _React$useState2[0], setInnerId = _React$useState2[1];
    reactExports.useEffect(function () {
      var nextId = uuid;
      uuid += 1;
      setInnerId("rc_unique_".concat(nextId));
    }, []);
    if (id2) {
      return id2;
    }
    return innerId;
  }
);
var HOOK_MARK = "RC_FORM_INTERNAL_HOOKS";
var warningFunc2 = function warningFunc3() {
  warningOnce(false, "Can not find FormContext. Please make sure you wrap Field under Form.");
};
var Context = /* @__PURE__ */ reactExports.createContext({
  getFieldValue: warningFunc2,
  getFieldsValue: warningFunc2,
  getFieldError: warningFunc2,
  getFieldWarning: warningFunc2,
  getFieldsError: warningFunc2,
  isFieldsTouched: warningFunc2,
  isFieldTouched: warningFunc2,
  isFieldValidating: warningFunc2,
  isFieldsValidating: warningFunc2,
  resetFields: warningFunc2,
  setFields: warningFunc2,
  setFieldValue: warningFunc2,
  setFieldsValue: warningFunc2,
  validateFields: warningFunc2,
  submit: warningFunc2,
  getInternalHooks: function getInternalHooks2() {
    warningFunc2();
    return {
      dispatch: warningFunc2,
      initEntityValue: warningFunc2,
      registerField: warningFunc2,
      useSubscribe: warningFunc2,
      setInitialValues: warningFunc2,
      destroyForm: warningFunc2,
      setCallbacks: warningFunc2,
      registerWatch: warningFunc2,
      getFields: warningFunc2,
      setValidateMessages: warningFunc2,
      setPreserve: warningFunc2,
      getInitialValue: warningFunc2
    };
  }
});
var ListContext = /* @__PURE__ */ reactExports.createContext(null);
function toArray$2(value2) {
  if (value2 === void 0 || value2 === null) {
    return [];
  }
  return Array.isArray(value2) ? value2 : [value2];
}
function isFormInstance(form) {
  return form && !!form._init;
}
var typeTemplate = "'${name}' is not a valid ${type}";
var defaultValidateMessages = {
  default: "Validation error on field '${name}'",
  required: "'${name}' is required",
  enum: "'${name}' must be one of [${enum}]",
  whitespace: "'${name}' cannot be empty",
  date: {
    format: "'${name}' is invalid for format date",
    parse: "'${name}' could not be parsed as date",
    invalid: "'${name}' is invalid date"
  },
  types: {
    string: typeTemplate,
    method: typeTemplate,
    array: typeTemplate,
    object: typeTemplate,
    number: typeTemplate,
    date: typeTemplate,
    boolean: typeTemplate,
    integer: typeTemplate,
    float: typeTemplate,
    regexp: typeTemplate,
    email: typeTemplate,
    url: typeTemplate,
    hex: typeTemplate
  },
  string: {
    len: "'${name}' must be exactly ${len} characters",
    min: "'${name}' must be at least ${min} characters",
    max: "'${name}' cannot be longer than ${max} characters",
    range: "'${name}' must be between ${min} and ${max} characters"
  },
  number: {
    len: "'${name}' must equal ${len}",
    min: "'${name}' cannot be less than ${min}",
    max: "'${name}' cannot be greater than ${max}",
    range: "'${name}' must be between ${min} and ${max}"
  },
  array: {
    len: "'${name}' must be exactly ${len} in length",
    min: "'${name}' cannot be less than ${min} in length",
    max: "'${name}' cannot be greater than ${max} in length",
    range: "'${name}' must be between ${min} and ${max} in length"
  },
  pattern: {
    mismatch: "'${name}' does not match pattern ${pattern}"
  }
};
var AsyncValidator = Schema;
function replaceMessage(template, kv) {
  return template.replace(/\$\{\w+\}/g, function (str2) {
    var key = str2.slice(2, -1);
    return kv[key];
  });
}
var CODE_LOGIC_ERROR = "CODE_LOGIC_ERROR";
function validateRule(_x, _x2, _x3, _x4, _x5) {
  return _validateRule.apply(this, arguments);
}
function _validateRule() {
  _validateRule = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee2(name2, value2, rule, options2, messageVariables) {
    var cloneRule, originValidator, subRuleField, validator, messages2, result, subResults, kv, fillVariableResult;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1)
        switch (_context2.prev = _context2.next) {
          case 0:
            cloneRule = _objectSpread2({}, rule);
            delete cloneRule.ruleIndex;
            AsyncValidator.warning = function () {
              return void 0;
            };
            if (cloneRule.validator) {
              originValidator = cloneRule.validator;
              cloneRule.validator = function () {
                try {
                  return originValidator.apply(void 0, arguments);
                } catch (error2) {
                  console.error(error2);
                  return Promise.reject(CODE_LOGIC_ERROR);
                }
              };
            }
            subRuleField = null;
            if (cloneRule && cloneRule.type === "array" && cloneRule.defaultField) {
              subRuleField = cloneRule.defaultField;
              delete cloneRule.defaultField;
            }
            validator = new AsyncValidator(_defineProperty({}, name2, [cloneRule]));
            messages2 = merge$1(defaultValidateMessages, options2.validateMessages);
            validator.messages(messages2);
            result = [];
            _context2.prev = 10;
            _context2.next = 13;
            return Promise.resolve(validator.validate(_defineProperty({}, name2, value2), _objectSpread2({}, options2)));
          case 13:
            _context2.next = 18;
            break;
          case 15:
            _context2.prev = 15;
            _context2.t0 = _context2["catch"](10);
            if (_context2.t0.errors) {
              result = _context2.t0.errors.map(function (_ref4, index2) {
                var message2 = _ref4.message;
                var mergedMessage = message2 === CODE_LOGIC_ERROR ? messages2.default : message2;
                return /* @__PURE__ */ reactExports.isValidElement(mergedMessage) ? (
                  // Wrap ReactNode with `key`
                  /* @__PURE__ */ reactExports.cloneElement(mergedMessage, {
                  key: "error_".concat(index2)
                })
                ) : mergedMessage;
              });
            }
          case 18:
            if (!(!result.length && subRuleField)) {
              _context2.next = 23;
              break;
            }
            _context2.next = 21;
            return Promise.all(value2.map(function (subValue, i) {
              return validateRule("".concat(name2, ".").concat(i), subValue, subRuleField, options2, messageVariables);
            }));
          case 21:
            subResults = _context2.sent;
            return _context2.abrupt("return", subResults.reduce(function (prev2, errors) {
              return [].concat(_toConsumableArray(prev2), _toConsumableArray(errors));
            }, []));
          case 23:
            kv = _objectSpread2(_objectSpread2({}, rule), {}, {
              name: name2,
              enum: (rule.enum || []).join(", ")
            }, messageVariables);
            fillVariableResult = result.map(function (error2) {
              if (typeof error2 === "string") {
                return replaceMessage(error2, kv);
              }
              return error2;
            });
            return _context2.abrupt("return", fillVariableResult);
          case 26:
          case "end":
            return _context2.stop();
        }
    }, _callee2, null, [[10, 15]]);
  }));
  return _validateRule.apply(this, arguments);
}
function validateRules(namePath, value2, rules2, options2, validateFirst, messageVariables) {
  var name2 = namePath.join(".");
  var filledRules = rules2.map(function (currentRule, ruleIndex) {
    var originValidatorFunc = currentRule.validator;
    var cloneRule = _objectSpread2(_objectSpread2({}, currentRule), {}, {
      ruleIndex
    });
    if (originValidatorFunc) {
      cloneRule.validator = function (rule, val, callback) {
        var hasPromise = false;
        var wrappedCallback = function wrappedCallback2() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          Promise.resolve().then(function () {
            warningOnce(!hasPromise, "Your validator function has already return a promise. `callback` will be ignored.");
            if (!hasPromise) {
              callback.apply(void 0, args);
            }
          });
        };
        var promise = originValidatorFunc(rule, val, wrappedCallback);
        hasPromise = promise && typeof promise.then === "function" && typeof promise.catch === "function";
        warningOnce(hasPromise, "`callback` is deprecated. Please return a promise instead.");
        if (hasPromise) {
          promise.then(function () {
            callback();
          }).catch(function (err) {
            callback(err || " ");
          });
        }
      };
    }
    return cloneRule;
  }).sort(function (_ref, _ref2) {
    var w1 = _ref.warningOnly, i1 = _ref.ruleIndex;
    var w2 = _ref2.warningOnly, i2 = _ref2.ruleIndex;
    if (!!w1 === !!w2) {
      return i1 - i2;
    }
    if (w1) {
      return 1;
    }
    return -1;
  });
  var summaryPromise;
  if (validateFirst === true) {
    summaryPromise = new Promise(/* @__PURE__ */ function () {
      var _ref3 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee(resolve, reject) {
        var i, rule, errors;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                i = 0;
              case 1:
                if (!(i < filledRules.length)) {
                  _context.next = 12;
                  break;
                }
                rule = filledRules[i];
                _context.next = 5;
                return validateRule(name2, value2, rule, options2, messageVariables);
              case 5:
                errors = _context.sent;
                if (!errors.length) {
                  _context.next = 9;
                  break;
                }
                reject([{
                  errors,
                  rule
                }]);
                return _context.abrupt("return");
              case 9:
                i += 1;
                _context.next = 1;
                break;
              case 12:
                resolve([]);
              case 13:
              case "end":
                return _context.stop();
            }
        }, _callee);
      }));
      return function (_x6, _x7) {
        return _ref3.apply(this, arguments);
      };
    }());
  } else {
    var rulePromises = filledRules.map(function (rule) {
      return validateRule(name2, value2, rule, options2, messageVariables).then(function (errors) {
        return {
          errors,
          rule
        };
      });
    });
    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {
      return Promise.reject(errors);
    });
  }
  summaryPromise.catch(function (e2) {
    return e2;
  });
  return summaryPromise;
}
function finishOnAllFailed(_x8) {
  return _finishOnAllFailed.apply(this, arguments);
}
function _finishOnAllFailed() {
  _finishOnAllFailed = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee3(rulePromises) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1)
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", Promise.all(rulePromises).then(function (errorsList) {
              var _ref5;
              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));
              return errors;
            }));
          case 1:
          case "end":
            return _context3.stop();
        }
    }, _callee3);
  }));
  return _finishOnAllFailed.apply(this, arguments);
}
function finishOnFirstFailed(_x9) {
  return _finishOnFirstFailed.apply(this, arguments);
}
function _finishOnFirstFailed() {
  _finishOnFirstFailed = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee4(rulePromises) {
    var count;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1)
        switch (_context4.prev = _context4.next) {
          case 0:
            count = 0;
            return _context4.abrupt("return", new Promise(function (resolve) {
              rulePromises.forEach(function (promise) {
                promise.then(function (ruleError) {
                  if (ruleError.errors.length) {
                    resolve([ruleError]);
                  }
                  count += 1;
                  if (count === rulePromises.length) {
                    resolve([]);
                  }
                });
              });
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
    }, _callee4);
  }));
  return _finishOnFirstFailed.apply(this, arguments);
}
function getNamePath(path) {
  return toArray$2(path);
}
function cloneByNamePathList(store, namePathList) {
  var newStore = {};
  namePathList.forEach(function (namePath) {
    var value2 = get(store, namePath);
    newStore = set(newStore, namePath, value2);
  });
  return newStore;
}
function containsNamePath(namePathList, namePath) {
  var partialMatch = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  return namePathList && namePathList.some(function (path) {
    return matchNamePath(namePath, path, partialMatch);
  });
}
function matchNamePath(namePath, subNamePath) {
  var partialMatch = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!namePath || !subNamePath) {
    return false;
  }
  if (!partialMatch && namePath.length !== subNamePath.length) {
    return false;
  }
  return subNamePath.every(function (nameUnit, i) {
    return namePath[i] === nameUnit;
  });
}
function isSimilar(source, target) {
  if (source === target) {
    return true;
  }
  if (!source && target || source && !target) {
    return false;
  }
  if (!source || !target || _typeof(source) !== "object" || _typeof(target) !== "object") {
    return false;
  }
  var sourceKeys = Object.keys(source);
  var targetKeys = Object.keys(target);
  var keys2 = new Set([].concat(sourceKeys, targetKeys));
  return _toConsumableArray(keys2).every(function (key) {
    var sourceValue = source[key];
    var targetValue = target[key];
    if (typeof sourceValue === "function" && typeof targetValue === "function") {
      return true;
    }
    return sourceValue === targetValue;
  });
}
function defaultGetValueFromEvent(valuePropName) {
  var event = arguments.length <= 1 ? void 0 : arguments[1];
  if (event && event.target && _typeof(event.target) === "object" && valuePropName in event.target) {
    return event.target[valuePropName];
  }
  return event;
}
function move(array4, moveIndex, toIndex) {
  var length2 = array4.length;
  if (moveIndex < 0 || moveIndex >= length2 || toIndex < 0 || toIndex >= length2) {
    return array4;
  }
  var item2 = array4[moveIndex];
  var diff = moveIndex - toIndex;
  if (diff > 0) {
    return [].concat(_toConsumableArray(array4.slice(0, toIndex)), [item2], _toConsumableArray(array4.slice(toIndex, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, length2)));
  }
  if (diff < 0) {
    return [].concat(_toConsumableArray(array4.slice(0, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, toIndex + 1)), [item2], _toConsumableArray(array4.slice(toIndex + 1, length2)));
  }
  return array4;
}
var _excluded$a = ["name"];
var EMPTY_ERRORS = [];
function requireUpdate(shouldUpdate, prev2, next2, prevValue, nextValue, info2) {
  if (typeof shouldUpdate === "function") {
    return shouldUpdate(prev2, next2, "source" in info2 ? {
      source: info2.source
    } : {});
  }
  return prevValue !== nextValue;
}
var Field = /* @__PURE__ */ function (_React$Component) {
  _inherits(Field2, _React$Component);
  var _super = _createSuper(Field2);
  function Field2(props) {
    var _this;
    _classCallCheck(this, Field2);
    _this = _super.call(this, props);
    _defineProperty(_assertThisInitialized(_this), "state", {
      resetCount: 0
    });
    _defineProperty(_assertThisInitialized(_this), "cancelRegisterFunc", null);
    _defineProperty(_assertThisInitialized(_this), "mounted", false);
    _defineProperty(_assertThisInitialized(_this), "touched", false);
    _defineProperty(_assertThisInitialized(_this), "dirty", false);
    _defineProperty(_assertThisInitialized(_this), "validatePromise", void 0);
    _defineProperty(_assertThisInitialized(_this), "prevValidating", void 0);
    _defineProperty(_assertThisInitialized(_this), "errors", EMPTY_ERRORS);
    _defineProperty(_assertThisInitialized(_this), "warnings", EMPTY_ERRORS);
    _defineProperty(_assertThisInitialized(_this), "cancelRegister", function () {
      var _this$props = _this.props, preserve2 = _this$props.preserve, isListField = _this$props.isListField, name2 = _this$props.name;
      if (_this.cancelRegisterFunc) {
        _this.cancelRegisterFunc(isListField, preserve2, getNamePath(name2));
      }
      _this.cancelRegisterFunc = null;
    });
    _defineProperty(_assertThisInitialized(_this), "getNamePath", function () {
      var _this$props2 = _this.props, name2 = _this$props2.name, fieldContext = _this$props2.fieldContext;
      var _fieldContext$prefixN = fieldContext.prefixName, prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;
      return name2 !== void 0 ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name2)) : [];
    });
    _defineProperty(_assertThisInitialized(_this), "getRules", function () {
      var _this$props3 = _this.props, _this$props3$rules = _this$props3.rules, rules2 = _this$props3$rules === void 0 ? [] : _this$props3$rules, fieldContext = _this$props3.fieldContext;
      return rules2.map(function (rule) {
        if (typeof rule === "function") {
          return rule(fieldContext);
        }
        return rule;
      });
    });
    _defineProperty(_assertThisInitialized(_this), "refresh", function () {
      if (!_this.mounted)
        return;
      _this.setState(function (_ref) {
        var resetCount = _ref.resetCount;
        return {
          resetCount: resetCount + 1
        };
      });
    });
    _defineProperty(_assertThisInitialized(_this), "metaCache", null);
    _defineProperty(_assertThisInitialized(_this), "triggerMetaEvent", function (destroy) {
      var onMetaChange = _this.props.onMetaChange;
      if (onMetaChange) {
        var _meta = _objectSpread2(_objectSpread2({}, _this.getMeta()), {}, {
          destroy
        });
        if (!isEqual(_this.metaCache, _meta)) {
          onMetaChange(_meta);
        }
        _this.metaCache = _meta;
      } else {
        _this.metaCache = null;
      }
    });
    _defineProperty(_assertThisInitialized(_this), "onStoreChange", function (prevStore, namePathList, info2) {
      var _this$props4 = _this.props, shouldUpdate = _this$props4.shouldUpdate, _this$props4$dependen = _this$props4.dependencies, dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen, onReset = _this$props4.onReset;
      var store = info2.store;
      var namePath = _this.getNamePath();
      var prevValue = _this.getValue(prevStore);
      var curValue = _this.getValue(store);
      var namePathMatch = namePathList && containsNamePath(namePathList, namePath);
      if (info2.type === "valueUpdate" && info2.source === "external" && prevValue !== curValue) {
        _this.touched = true;
        _this.dirty = true;
        _this.validatePromise = null;
        _this.errors = EMPTY_ERRORS;
        _this.warnings = EMPTY_ERRORS;
        _this.triggerMetaEvent();
      }
      switch (info2.type) {
        case "reset":
          if (!namePathList || namePathMatch) {
            _this.touched = false;
            _this.dirty = false;
            _this.validatePromise = void 0;
            _this.errors = EMPTY_ERRORS;
            _this.warnings = EMPTY_ERRORS;
            _this.triggerMetaEvent();
            onReset === null || onReset === void 0 || onReset();
            _this.refresh();
            return;
          }
          break;
        case "remove": {
          if (shouldUpdate) {
            _this.reRender();
            return;
          }
          break;
        }
        case "setField": {
          var data = info2.data;
          if (namePathMatch) {
            if ("touched" in data) {
              _this.touched = data.touched;
            }
            if ("validating" in data && !("originRCField" in data)) {
              _this.validatePromise = data.validating ? Promise.resolve([]) : null;
            }
            if ("errors" in data) {
              _this.errors = data.errors || EMPTY_ERRORS;
            }
            if ("warnings" in data) {
              _this.warnings = data.warnings || EMPTY_ERRORS;
            }
            _this.dirty = true;
            _this.triggerMetaEvent();
            _this.reRender();
            return;
          } else if ("value" in data && containsNamePath(namePathList, namePath, true)) {
            _this.reRender();
            return;
          }
          if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info2)) {
            _this.reRender();
            return;
          }
          break;
        }
        case "dependenciesUpdate": {
          var dependencyList = dependencies.map(getNamePath);
          if (dependencyList.some(function (dependency) {
            return containsNamePath(info2.relatedFields, dependency);
          })) {
            _this.reRender();
            return;
          }
          break;
        }
        default:
          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info2)) {
            _this.reRender();
            return;
          }
          break;
      }
      if (shouldUpdate === true) {
        _this.reRender();
      }
    });
    _defineProperty(_assertThisInitialized(_this), "validateRules", function (options2) {
      var namePath = _this.getNamePath();
      var currentValue = _this.getValue();
      var _ref2 = options2 || {}, triggerName = _ref2.triggerName, _ref2$validateOnly = _ref2.validateOnly, validateOnly = _ref2$validateOnly === void 0 ? false : _ref2$validateOnly;
      var rootPromise = Promise.resolve().then(/* @__PURE__ */ _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
        var _this$props5, _this$props5$validate, validateFirst, messageVariables, validateDebounce, filteredRules, promise;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.mounted) {
                  _context.next = 2;
                  break;
                }
                return _context.abrupt("return", []);
              case 2:
                _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables, validateDebounce = _this$props5.validateDebounce;
                filteredRules = _this.getRules();
                if (triggerName) {
                  filteredRules = filteredRules.filter(function (rule) {
                    return rule;
                  }).filter(function (rule) {
                    var validateTrigger = rule.validateTrigger;
                    if (!validateTrigger) {
                      return true;
                    }
                    var triggerList = toArray$2(validateTrigger);
                    return triggerList.includes(triggerName);
                  });
                }
                if (!(validateDebounce && triggerName)) {
                  _context.next = 10;
                  break;
                }
                _context.next = 8;
                return new Promise(function (resolve) {
                  setTimeout(resolve, validateDebounce);
                });
              case 8:
                if (!(_this.validatePromise !== rootPromise)) {
                  _context.next = 10;
                  break;
                }
                return _context.abrupt("return", []);
              case 10:
                promise = validateRules(namePath, currentValue, filteredRules, options2, validateFirst, messageVariables);
                promise.catch(function (e2) {
                  return e2;
                }).then(function () {
                  var ruleErrors = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : EMPTY_ERRORS;
                  if (_this.validatePromise === rootPromise) {
                    var _ruleErrors$forEach;
                    _this.validatePromise = null;
                    var nextErrors = [];
                    var nextWarnings = [];
                    (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref4) {
                      var warningOnly = _ref4.rule.warningOnly, _ref4$errors = _ref4.errors, errors = _ref4$errors === void 0 ? EMPTY_ERRORS : _ref4$errors;
                      if (warningOnly) {
                        nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));
                      } else {
                        nextErrors.push.apply(nextErrors, _toConsumableArray(errors));
                      }
                    });
                    _this.errors = nextErrors;
                    _this.warnings = nextWarnings;
                    _this.triggerMetaEvent();
                    _this.reRender();
                  }
                });
                return _context.abrupt("return", promise);
              case 13:
              case "end":
                return _context.stop();
            }
        }, _callee);
      })));
      if (validateOnly) {
        return rootPromise;
      }
      _this.validatePromise = rootPromise;
      _this.dirty = true;
      _this.errors = EMPTY_ERRORS;
      _this.warnings = EMPTY_ERRORS;
      _this.triggerMetaEvent();
      _this.reRender();
      return rootPromise;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldValidating", function () {
      return !!_this.validatePromise;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldTouched", function () {
      return _this.touched;
    });
    _defineProperty(_assertThisInitialized(_this), "isFieldDirty", function () {
      if (_this.dirty || _this.props.initialValue !== void 0) {
        return true;
      }
      var fieldContext = _this.props.fieldContext;
      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK), getInitialValue = _fieldContext$getInte.getInitialValue;
      if (getInitialValue(_this.getNamePath()) !== void 0) {
        return true;
      }
      return false;
    });
    _defineProperty(_assertThisInitialized(_this), "getErrors", function () {
      return _this.errors;
    });
    _defineProperty(_assertThisInitialized(_this), "getWarnings", function () {
      return _this.warnings;
    });
    _defineProperty(_assertThisInitialized(_this), "isListField", function () {
      return _this.props.isListField;
    });
    _defineProperty(_assertThisInitialized(_this), "isList", function () {
      return _this.props.isList;
    });
    _defineProperty(_assertThisInitialized(_this), "isPreserve", function () {
      return _this.props.preserve;
    });
    _defineProperty(_assertThisInitialized(_this), "getMeta", function () {
      _this.prevValidating = _this.isFieldValidating();
      var meta = {
        touched: _this.isFieldTouched(),
        validating: _this.prevValidating,
        errors: _this.errors,
        warnings: _this.warnings,
        name: _this.getNamePath(),
        validated: _this.validatePromise === null
      };
      return meta;
    });
    _defineProperty(_assertThisInitialized(_this), "getOnlyChild", function (children) {
      if (typeof children === "function") {
        var _meta2 = _this.getMeta();
        return _objectSpread2(_objectSpread2({}, _this.getOnlyChild(children(_this.getControlled(), _meta2, _this.props.fieldContext))), {}, {
          isFunction: true
        });
      }
      var childList = toArray$4(children);
      if (childList.length !== 1 || !/* @__PURE__ */ reactExports.isValidElement(childList[0])) {
        return {
          child: childList,
          isFunction: false
        };
      }
      return {
        child: childList[0],
        isFunction: false
      };
    });
    _defineProperty(_assertThisInitialized(_this), "getValue", function (store) {
      var getFieldsValue = _this.props.fieldContext.getFieldsValue;
      var namePath = _this.getNamePath();
      return get(store || getFieldsValue(true), namePath);
    });
    _defineProperty(_assertThisInitialized(_this), "getControlled", function () {
      var childProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _this$props6 = _this.props, trigger2 = _this$props6.trigger, validateTrigger = _this$props6.validateTrigger, getValueFromEvent = _this$props6.getValueFromEvent, normalize2 = _this$props6.normalize, valuePropName = _this$props6.valuePropName, getValueProps = _this$props6.getValueProps, fieldContext = _this$props6.fieldContext;
      var mergedValidateTrigger = validateTrigger !== void 0 ? validateTrigger : fieldContext.validateTrigger;
      var namePath = _this.getNamePath();
      var getInternalHooks22 = fieldContext.getInternalHooks, getFieldsValue = fieldContext.getFieldsValue;
      var _getInternalHooks = getInternalHooks22(HOOK_MARK), dispatch = _getInternalHooks.dispatch;
      var value2 = _this.getValue();
      var mergedGetValueProps = getValueProps || function (val) {
        return _defineProperty({}, valuePropName, val);
      };
      var originTriggerFunc = childProps[trigger2];
      var valueProps = mergedGetValueProps(value2);
      var control = _objectSpread2(_objectSpread2({}, childProps), valueProps);
      control[trigger2] = function () {
        _this.touched = true;
        _this.dirty = true;
        _this.triggerMetaEvent();
        var newValue;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (getValueFromEvent) {
          newValue = getValueFromEvent.apply(void 0, args);
        } else {
          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));
        }
        if (normalize2) {
          newValue = normalize2(newValue, value2, getFieldsValue(true));
        }
        dispatch({
          type: "updateValue",
          namePath,
          value: newValue
        });
        if (originTriggerFunc) {
          originTriggerFunc.apply(void 0, args);
        }
      };
      var validateTriggerList = toArray$2(mergedValidateTrigger || []);
      validateTriggerList.forEach(function (triggerName) {
        var originTrigger = control[triggerName];
        control[triggerName] = function () {
          if (originTrigger) {
            originTrigger.apply(void 0, arguments);
          }
          var rules2 = _this.props.rules;
          if (rules2 && rules2.length) {
            dispatch({
              type: "validateField",
              namePath,
              triggerName
            });
          }
        };
      });
      return control;
    });
    if (props.fieldContext) {
      var getInternalHooks3 = props.fieldContext.getInternalHooks;
      var _getInternalHooks2 = getInternalHooks3(HOOK_MARK), initEntityValue = _getInternalHooks2.initEntityValue;
      initEntityValue(_assertThisInitialized(_this));
    }
    return _this;
  }
  _createClass(Field2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props7 = this.props, shouldUpdate = _this$props7.shouldUpdate, fieldContext = _this$props7.fieldContext;
      this.mounted = true;
      if (fieldContext) {
        var getInternalHooks3 = fieldContext.getInternalHooks;
        var _getInternalHooks3 = getInternalHooks3(HOOK_MARK), registerField = _getInternalHooks3.registerField;
        this.cancelRegisterFunc = registerField(this);
      }
      if (shouldUpdate === true) {
        this.reRender();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelRegister();
      this.triggerMetaEvent(true);
      this.mounted = false;
    }
  }, {
    key: "reRender",
    value: function reRender() {
      if (!this.mounted)
        return;
      this.forceUpdate();
    }
  }, {
    key: "render",
    value: function render3() {
      var resetCount = this.state.resetCount;
      var children = this.props.children;
      var _this$getOnlyChild = this.getOnlyChild(children), child = _this$getOnlyChild.child, isFunction2 = _this$getOnlyChild.isFunction;
      var returnChildNode;
      if (isFunction2) {
        returnChildNode = child;
      } else if (/* @__PURE__ */ reactExports.isValidElement(child)) {
        returnChildNode = /* @__PURE__ */ reactExports.cloneElement(child, this.getControlled(child.props));
      } else {
        warningOnce(!child, "`children` of Field is not validate ReactElement.");
        returnChildNode = child;
      }
      return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, {
        key: resetCount
      }, returnChildNode);
    }
  }]);
  return Field2;
}(reactExports.Component);
_defineProperty(Field, "contextType", Context);
_defineProperty(Field, "defaultProps", {
  trigger: "onChange",
  valuePropName: "value"
});
function WrapperField(_ref6) {
  var name2 = _ref6.name, restProps = _objectWithoutProperties(_ref6, _excluded$a);
  var fieldContext = reactExports.useContext(Context);
  var listContext = reactExports.useContext(ListContext);
  var namePath = name2 !== void 0 ? getNamePath(name2) : void 0;
  var key = "keep";
  if (!restProps.isListField) {
    key = "_".concat((namePath || []).join("_"));
  }
  return /* @__PURE__ */ reactExports.createElement(Field, _extends$1({
    key,
    name: namePath,
    isListField: !!listContext
  }, restProps, {
    fieldContext
  }));
}
function List(_ref) {
  var name2 = _ref.name, initialValue = _ref.initialValue, children = _ref.children, rules2 = _ref.rules, validateTrigger = _ref.validateTrigger, isListField = _ref.isListField;
  var context2 = reactExports.useContext(Context);
  var wrapperListContext = reactExports.useContext(ListContext);
  var keyRef = reactExports.useRef({
    keys: [],
    id: 0
  });
  var keyManager = keyRef.current;
  var prefixName = reactExports.useMemo(function () {
    var parentPrefixName = getNamePath(context2.prefixName) || [];
    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath(name2)));
  }, [context2.prefixName, name2]);
  var fieldContext = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, context2), {}, {
      prefixName
    });
  }, [context2, prefixName]);
  var listContext = reactExports.useMemo(function () {
    return {
      getKey: function getKey(namePath) {
        var len = prefixName.length;
        var pathName = namePath[len];
        return [keyManager.keys[pathName], namePath.slice(len + 1)];
      }
    };
  }, [prefixName]);
  if (typeof children !== "function") {
    warningOnce(false, "Form.List only accepts function as children.");
    return null;
  }
  var shouldUpdate = function shouldUpdate2(prevValue, nextValue, _ref2) {
    var source = _ref2.source;
    if (source === "internal") {
      return false;
    }
    return prevValue !== nextValue;
  };
  return /* @__PURE__ */ reactExports.createElement(ListContext.Provider, {
    value: listContext
  }, /* @__PURE__ */ reactExports.createElement(Context.Provider, {
    value: fieldContext
  }, /* @__PURE__ */ reactExports.createElement(WrapperField, {
    name: [],
    shouldUpdate,
    rules: rules2,
    validateTrigger,
    initialValue,
    isList: true,
    isListField: isListField !== null && isListField !== void 0 ? isListField : !!wrapperListContext
  }, function (_ref3, meta) {
    var _ref3$value = _ref3.value, value2 = _ref3$value === void 0 ? [] : _ref3$value, onChange = _ref3.onChange;
    var getFieldValue = context2.getFieldValue;
    var getNewValue = function getNewValue2() {
      var values2 = getFieldValue(prefixName || []);
      return values2 || [];
    };
    var operations = {
      add: function add(defaultValue, index2) {
        var newValue = getNewValue();
        if (index2 >= 0 && index2 <= newValue.length) {
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index2)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index2)));
          onChange([].concat(_toConsumableArray(newValue.slice(0, index2)), [defaultValue], _toConsumableArray(newValue.slice(index2))));
        } else {
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);
          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));
        }
        keyManager.id += 1;
      },
      remove: function remove(index2) {
        var newValue = getNewValue();
        var indexSet = new Set(Array.isArray(index2) ? index2 : [index2]);
        if (indexSet.size <= 0) {
          return;
        }
        keyManager.keys = keyManager.keys.filter(function (_, keysIndex) {
          return !indexSet.has(keysIndex);
        });
        onChange(newValue.filter(function (_, valueIndex) {
          return !indexSet.has(valueIndex);
        }));
      },
      move: function move$12(from2, to2) {
        if (from2 === to2) {
          return;
        }
        var newValue = getNewValue();
        if (from2 < 0 || from2 >= newValue.length || to2 < 0 || to2 >= newValue.length) {
          return;
        }
        keyManager.keys = move(keyManager.keys, from2, to2);
        onChange(move(newValue, from2, to2));
      }
    };
    var listValue = value2 || [];
    if (!Array.isArray(listValue)) {
      listValue = [];
    }
    return children(listValue.map(function (__, index2) {
      var key = keyManager.keys[index2];
      if (key === void 0) {
        keyManager.keys[index2] = keyManager.id;
        key = keyManager.keys[index2];
        keyManager.id += 1;
      }
      return {
        name: index2,
        key,
        isListField: true
      };
    }), operations, meta);
  })));
}
function allPromiseFinish(promiseList) {
  var hasError = false;
  var count = promiseList.length;
  var results = [];
  if (!promiseList.length) {
    return Promise.resolve([]);
  }
  return new Promise(function (resolve, reject) {
    promiseList.forEach(function (promise, index2) {
      promise.catch(function (e2) {
        hasError = true;
        return e2;
      }).then(function (result) {
        count -= 1;
        results[index2] = result;
        if (count > 0) {
          return;
        }
        if (hasError) {
          reject(results);
        }
        resolve(results);
      });
    });
  });
}
var SPLIT = "__@field_split__";
function normalize(namePath) {
  return namePath.map(function (cell2) {
    return "".concat(_typeof(cell2), ":").concat(cell2);
  }).join(SPLIT);
}
var NameMap = /* @__PURE__ */ function () {
  function NameMap2() {
    _classCallCheck(this, NameMap2);
    _defineProperty(this, "kvs", /* @__PURE__ */ new Map());
  }
  _createClass(NameMap2, [{
    key: "set",
    value: function set2(key, value2) {
      this.kvs.set(normalize(key), value2);
    }
  }, {
    key: "get",
    value: function get2(key) {
      return this.kvs.get(normalize(key));
    }
  }, {
    key: "update",
    value: function update(key, updater) {
      var origin = this.get(key);
      var next2 = updater(origin);
      if (!next2) {
        this.delete(key);
      } else {
        this.set(key, next2);
      }
    }
  }, {
    key: "delete",
    value: function _delete(key) {
      this.kvs.delete(normalize(key));
    }
    // Since we only use this in test, let simply realize this
  }, {
    key: "map",
    value: function map(callback) {
      return _toConsumableArray(this.kvs.entries()).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value2 = _ref2[1];
        var cells = key.split(SPLIT);
        return callback({
          key: cells.map(function (cell2) {
            var _cell$match = cell2.match(/^([^:]*):(.*)$/), _cell$match2 = _slicedToArray(_cell$match, 3), type4 = _cell$match2[1], unit2 = _cell$match2[2];
            return type4 === "number" ? Number(unit2) : unit2;
          }),
          value: value2
        });
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = {};
      this.map(function (_ref3) {
        var key = _ref3.key, value2 = _ref3.value;
        json[key.join(".")] = value2;
        return null;
      });
      return json;
    }
  }]);
  return NameMap2;
}();
var _excluded$9 = ["name"];
var FormStore = /* @__PURE__ */ _createClass(function FormStore22(forceRootUpdate) {
  var _this = this;
  _classCallCheck(this, FormStore22);
  _defineProperty(this, "formHooked", false);
  _defineProperty(this, "forceRootUpdate", void 0);
  _defineProperty(this, "subscribable", true);
  _defineProperty(this, "store", {});
  _defineProperty(this, "fieldEntities", []);
  _defineProperty(this, "initialValues", {});
  _defineProperty(this, "callbacks", {});
  _defineProperty(this, "validateMessages", null);
  _defineProperty(this, "preserve", null);
  _defineProperty(this, "lastValidatePromise", null);
  _defineProperty(this, "getForm", function () {
    return {
      getFieldValue: _this.getFieldValue,
      getFieldsValue: _this.getFieldsValue,
      getFieldError: _this.getFieldError,
      getFieldWarning: _this.getFieldWarning,
      getFieldsError: _this.getFieldsError,
      isFieldsTouched: _this.isFieldsTouched,
      isFieldTouched: _this.isFieldTouched,
      isFieldValidating: _this.isFieldValidating,
      isFieldsValidating: _this.isFieldsValidating,
      resetFields: _this.resetFields,
      setFields: _this.setFields,
      setFieldValue: _this.setFieldValue,
      setFieldsValue: _this.setFieldsValue,
      validateFields: _this.validateFields,
      submit: _this.submit,
      _init: true,
      getInternalHooks: _this.getInternalHooks
    };
  });
  _defineProperty(this, "getInternalHooks", function (key) {
    if (key === HOOK_MARK) {
      _this.formHooked = true;
      return {
        dispatch: _this.dispatch,
        initEntityValue: _this.initEntityValue,
        registerField: _this.registerField,
        useSubscribe: _this.useSubscribe,
        setInitialValues: _this.setInitialValues,
        destroyForm: _this.destroyForm,
        setCallbacks: _this.setCallbacks,
        setValidateMessages: _this.setValidateMessages,
        getFields: _this.getFields,
        setPreserve: _this.setPreserve,
        getInitialValue: _this.getInitialValue,
        registerWatch: _this.registerWatch
      };
    }
    warningOnce(false, "`getInternalHooks` is internal usage. Should not call directly.");
    return null;
  });
  _defineProperty(this, "useSubscribe", function (subscribable) {
    _this.subscribable = subscribable;
  });
  _defineProperty(this, "prevWithoutPreserves", null);
  _defineProperty(this, "setInitialValues", function (initialValues, init) {
    _this.initialValues = initialValues || {};
    if (init) {
      var _this$prevWithoutPres;
      var nextStore = merge$1(initialValues, _this.store);
      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 || _this$prevWithoutPres.map(function (_ref) {
        var namePath = _ref.key;
        nextStore = set(nextStore, namePath, get(initialValues, namePath));
      });
      _this.prevWithoutPreserves = null;
      _this.updateStore(nextStore);
    }
  });
  _defineProperty(this, "destroyForm", function () {
    var prevWithoutPreserves = new NameMap();
    _this.getFieldEntities(true).forEach(function (entity) {
      if (!_this.isMergedPreserve(entity.isPreserve())) {
        prevWithoutPreserves.set(entity.getNamePath(), true);
      }
    });
    _this.prevWithoutPreserves = prevWithoutPreserves;
  });
  _defineProperty(this, "getInitialValue", function (namePath) {
    var initValue = get(_this.initialValues, namePath);
    return namePath.length ? merge$1(initValue) : initValue;
  });
  _defineProperty(this, "setCallbacks", function (callbacks) {
    _this.callbacks = callbacks;
  });
  _defineProperty(this, "setValidateMessages", function (validateMessages) {
    _this.validateMessages = validateMessages;
  });
  _defineProperty(this, "setPreserve", function (preserve2) {
    _this.preserve = preserve2;
  });
  _defineProperty(this, "watchList", []);
  _defineProperty(this, "registerWatch", function (callback) {
    _this.watchList.push(callback);
    return function () {
      _this.watchList = _this.watchList.filter(function (fn) {
        return fn !== callback;
      });
    };
  });
  _defineProperty(this, "notifyWatch", function () {
    var namePath = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    if (_this.watchList.length) {
      var values2 = _this.getFieldsValue();
      var allValues = _this.getFieldsValue(true);
      _this.watchList.forEach(function (callback) {
        callback(values2, allValues, namePath);
      });
    }
  });
  _defineProperty(this, "timeoutId", null);
  _defineProperty(this, "warningUnhooked", function () {
  });
  _defineProperty(this, "updateStore", function (nextStore) {
    _this.store = nextStore;
  });
  _defineProperty(this, "getFieldEntities", function () {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    if (!pure) {
      return _this.fieldEntities;
    }
    return _this.fieldEntities.filter(function (field) {
      return field.getNamePath().length;
    });
  });
  _defineProperty(this, "getFieldsMap", function () {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var cache2 = new NameMap();
    _this.getFieldEntities(pure).forEach(function (field) {
      var namePath = field.getNamePath();
      cache2.set(namePath, field);
    });
    return cache2;
  });
  _defineProperty(this, "getFieldEntitiesForNamePathList", function (nameList) {
    if (!nameList) {
      return _this.getFieldEntities(true);
    }
    var cache2 = _this.getFieldsMap(true);
    return nameList.map(function (name2) {
      var namePath = getNamePath(name2);
      return cache2.get(namePath) || {
        INVALIDATE_NAME_PATH: getNamePath(name2)
      };
    });
  });
  _defineProperty(this, "getFieldsValue", function (nameList, filterFunc) {
    _this.warningUnhooked();
    var mergedNameList;
    var mergedFilterFunc;
    var mergedStrict;
    if (nameList === true || Array.isArray(nameList)) {
      mergedNameList = nameList;
      mergedFilterFunc = filterFunc;
    } else if (nameList && _typeof(nameList) === "object") {
      mergedStrict = nameList.strict;
      mergedFilterFunc = nameList.filter;
    }
    if (mergedNameList === true && !mergedFilterFunc) {
      return _this.store;
    }
    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(mergedNameList) ? mergedNameList : null);
    var filteredNameList = [];
    fieldEntities.forEach(function (entity) {
      var _isListField, _ref3;
      var namePath = "INVALIDATE_NAME_PATH" in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();
      if (mergedStrict) {
        var _isList, _ref2;
        if ((_isList = (_ref2 = entity).isList) !== null && _isList !== void 0 && _isList.call(_ref2)) {
          return;
        }
      } else if (!mergedNameList && (_isListField = (_ref3 = entity).isListField) !== null && _isListField !== void 0 && _isListField.call(_ref3)) {
        return;
      }
      if (!mergedFilterFunc) {
        filteredNameList.push(namePath);
      } else {
        var meta = "getMeta" in entity ? entity.getMeta() : null;
        if (mergedFilterFunc(meta)) {
          filteredNameList.push(namePath);
        }
      }
    });
    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));
  });
  _defineProperty(this, "getFieldValue", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath(name2);
    return get(_this.store, namePath);
  });
  _defineProperty(this, "getFieldsError", function (nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);
    return fieldEntities.map(function (entity, index2) {
      if (entity && !("INVALIDATE_NAME_PATH" in entity)) {
        return {
          name: entity.getNamePath(),
          errors: entity.getErrors(),
          warnings: entity.getWarnings()
        };
      }
      return {
        name: getNamePath(nameList[index2]),
        errors: [],
        warnings: []
      };
    });
  });
  _defineProperty(this, "getFieldError", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath(name2);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.errors;
  });
  _defineProperty(this, "getFieldWarning", function (name2) {
    _this.warningUnhooked();
    var namePath = getNamePath(name2);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.warnings;
  });
  _defineProperty(this, "isFieldsTouched", function () {
    _this.warningUnhooked();
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var arg0 = args[0], arg1 = args[1];
    var namePathList;
    var isAllFieldsTouched = false;
    if (args.length === 0) {
      namePathList = null;
    } else if (args.length === 1) {
      if (Array.isArray(arg0)) {
        namePathList = arg0.map(getNamePath);
        isAllFieldsTouched = false;
      } else {
        namePathList = null;
        isAllFieldsTouched = arg0;
      }
    } else {
      namePathList = arg0.map(getNamePath);
      isAllFieldsTouched = arg1;
    }
    var fieldEntities = _this.getFieldEntities(true);
    var isFieldTouched = function isFieldTouched2(field) {
      return field.isFieldTouched();
    };
    if (!namePathList) {
      return isAllFieldsTouched ? fieldEntities.every(function (entity) {
        return isFieldTouched(entity) || entity.isList();
      }) : fieldEntities.some(isFieldTouched);
    }
    var map = new NameMap();
    namePathList.forEach(function (shortNamePath) {
      map.set(shortNamePath, []);
    });
    fieldEntities.forEach(function (field) {
      var fieldNamePath = field.getNamePath();
      namePathList.forEach(function (shortNamePath) {
        if (shortNamePath.every(function (nameUnit, i) {
          return fieldNamePath[i] === nameUnit;
        })) {
          map.update(shortNamePath, function (list) {
            return [].concat(_toConsumableArray(list), [field]);
          });
        }
      });
    });
    var isNamePathListTouched = function isNamePathListTouched2(entities) {
      return entities.some(isFieldTouched);
    };
    var namePathListEntities = map.map(function (_ref4) {
      var value2 = _ref4.value;
      return value2;
    });
    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);
  });
  _defineProperty(this, "isFieldTouched", function (name2) {
    _this.warningUnhooked();
    return _this.isFieldsTouched([name2]);
  });
  _defineProperty(this, "isFieldsValidating", function (nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntities();
    if (!nameList) {
      return fieldEntities.some(function (testField) {
        return testField.isFieldValidating();
      });
    }
    var namePathList = nameList.map(getNamePath);
    return fieldEntities.some(function (testField) {
      var fieldNamePath = testField.getNamePath();
      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();
    });
  });
  _defineProperty(this, "isFieldValidating", function (name2) {
    _this.warningUnhooked();
    return _this.isFieldsValidating([name2]);
  });
  _defineProperty(this, "resetWithFieldInitialValue", function () {
    var info2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var cache2 = new NameMap();
    var fieldEntities = _this.getFieldEntities(true);
    fieldEntities.forEach(function (field) {
      var initialValue = field.props.initialValue;
      var namePath = field.getNamePath();
      if (initialValue !== void 0) {
        var records2 = cache2.get(namePath) || /* @__PURE__ */ new Set();
        records2.add({
          entity: field,
          value: initialValue
        });
        cache2.set(namePath, records2);
      }
    });
    var resetWithFields = function resetWithFields2(entities) {
      entities.forEach(function (field) {
        var initialValue = field.props.initialValue;
        if (initialValue !== void 0) {
          var namePath = field.getNamePath();
          var formInitialValue = _this.getInitialValue(namePath);
          if (formInitialValue !== void 0) {
            warningOnce(false, "Form already set 'initialValues' with path '".concat(namePath.join("."), "'. Field can not overwrite it."));
          } else {
            var records2 = cache2.get(namePath);
            if (records2 && records2.size > 1) {
              warningOnce(false, "Multiple Field with path '".concat(namePath.join("."), "' set 'initialValue'. Can not decide which one to pick."));
            } else if (records2) {
              var originValue = _this.getFieldValue(namePath);
              var isListField = field.isListField();
              if (!isListField && (!info2.skipExist || originValue === void 0)) {
                _this.updateStore(set(_this.store, namePath, _toConsumableArray(records2)[0].value));
              }
            }
          }
        }
      });
    };
    var requiredFieldEntities;
    if (info2.entities) {
      requiredFieldEntities = info2.entities;
    } else if (info2.namePathList) {
      requiredFieldEntities = [];
      info2.namePathList.forEach(function (namePath) {
        var records2 = cache2.get(namePath);
        if (records2) {
          var _requiredFieldEntitie;
          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records2).map(function (r2) {
            return r2.entity;
          })));
        }
      });
    } else {
      requiredFieldEntities = fieldEntities;
    }
    resetWithFields(requiredFieldEntities);
  });
  _defineProperty(this, "resetFields", function (nameList) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (!nameList) {
      _this.updateStore(merge$1(_this.initialValues));
      _this.resetWithFieldInitialValue();
      _this.notifyObservers(prevStore, null, {
        type: "reset"
      });
      _this.notifyWatch();
      return;
    }
    var namePathList = nameList.map(getNamePath);
    namePathList.forEach(function (namePath) {
      var initialValue = _this.getInitialValue(namePath);
      _this.updateStore(set(_this.store, namePath, initialValue));
    });
    _this.resetWithFieldInitialValue({
      namePathList
    });
    _this.notifyObservers(prevStore, namePathList, {
      type: "reset"
    });
    _this.notifyWatch(namePathList);
  });
  _defineProperty(this, "setFields", function (fields) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    var namePathList = [];
    fields.forEach(function (fieldData) {
      var name2 = fieldData.name, data = _objectWithoutProperties(fieldData, _excluded$9);
      var namePath = getNamePath(name2);
      namePathList.push(namePath);
      if ("value" in data) {
        _this.updateStore(set(_this.store, namePath, data.value));
      }
      _this.notifyObservers(prevStore, [namePath], {
        type: "setField",
        data: fieldData
      });
    });
    _this.notifyWatch(namePathList);
  });
  _defineProperty(this, "getFields", function () {
    var entities = _this.getFieldEntities(true);
    var fields = entities.map(function (field) {
      var namePath = field.getNamePath();
      var meta = field.getMeta();
      var fieldData = _objectSpread2(_objectSpread2({}, meta), {}, {
        name: namePath,
        value: _this.getFieldValue(namePath)
      });
      Object.defineProperty(fieldData, "originRCField", {
        value: true
      });
      return fieldData;
    });
    return fields;
  });
  _defineProperty(this, "initEntityValue", function (entity) {
    var initialValue = entity.props.initialValue;
    if (initialValue !== void 0) {
      var namePath = entity.getNamePath();
      var prevValue = get(_this.store, namePath);
      if (prevValue === void 0) {
        _this.updateStore(set(_this.store, namePath, initialValue));
      }
    }
  });
  _defineProperty(this, "isMergedPreserve", function (fieldPreserve) {
    var mergedPreserve = fieldPreserve !== void 0 ? fieldPreserve : _this.preserve;
    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;
  });
  _defineProperty(this, "registerField", function (entity) {
    _this.fieldEntities.push(entity);
    var namePath = entity.getNamePath();
    _this.notifyWatch([namePath]);
    if (entity.props.initialValue !== void 0) {
      var prevStore = _this.store;
      _this.resetWithFieldInitialValue({
        entities: [entity],
        skipExist: true
      });
      _this.notifyObservers(prevStore, [entity.getNamePath()], {
        type: "valueUpdate",
        source: "internal"
      });
    }
    return function (isListField, preserve2) {
      var subNamePath = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      _this.fieldEntities = _this.fieldEntities.filter(function (item2) {
        return item2 !== entity;
      });
      if (!_this.isMergedPreserve(preserve2) && (!isListField || subNamePath.length > 1)) {
        var defaultValue = isListField ? void 0 : _this.getInitialValue(namePath);
        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {
          return (
            // Only reset when no namePath exist
            !matchNamePath(field.getNamePath(), namePath)
          );
        })) {
          var _prevStore = _this.store;
          _this.updateStore(set(_prevStore, namePath, defaultValue, true));
          _this.notifyObservers(_prevStore, [namePath], {
            type: "remove"
          });
          _this.triggerDependenciesUpdate(_prevStore, namePath);
        }
      }
      _this.notifyWatch([namePath]);
    };
  });
  _defineProperty(this, "dispatch", function (action) {
    switch (action.type) {
      case "updateValue": {
        var namePath = action.namePath, value2 = action.value;
        _this.updateValue(namePath, value2);
        break;
      }
      case "validateField": {
        var _namePath = action.namePath, triggerName = action.triggerName;
        _this.validateFields([_namePath], {
          triggerName
        });
        break;
      }
    }
  });
  _defineProperty(this, "notifyObservers", function (prevStore, namePathList, info2) {
    if (_this.subscribable) {
      var mergedInfo = _objectSpread2(_objectSpread2({}, info2), {}, {
        store: _this.getFieldsValue(true)
      });
      _this.getFieldEntities().forEach(function (_ref5) {
        var onStoreChange = _ref5.onStoreChange;
        onStoreChange(prevStore, namePathList, mergedInfo);
      });
    } else {
      _this.forceRootUpdate();
    }
  });
  _defineProperty(this, "triggerDependenciesUpdate", function (prevStore, namePath) {
    var childrenFields = _this.getDependencyChildrenFields(namePath);
    if (childrenFields.length) {
      _this.validateFields(childrenFields);
    }
    _this.notifyObservers(prevStore, childrenFields, {
      type: "dependenciesUpdate",
      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))
    });
    return childrenFields;
  });
  _defineProperty(this, "updateValue", function (name2, value2) {
    var namePath = getNamePath(name2);
    var prevStore = _this.store;
    _this.updateStore(set(_this.store, namePath, value2));
    _this.notifyObservers(prevStore, [namePath], {
      type: "valueUpdate",
      source: "internal"
    });
    _this.notifyWatch([namePath]);
    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath);
    var onValuesChange = _this.callbacks.onValuesChange;
    if (onValuesChange) {
      var changedValues = cloneByNamePathList(_this.store, [namePath]);
      onValuesChange(changedValues, _this.getFieldsValue());
    }
    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));
  });
  _defineProperty(this, "setFieldsValue", function (store) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (store) {
      var nextStore = merge$1(_this.store, store);
      _this.updateStore(nextStore);
    }
    _this.notifyObservers(prevStore, null, {
      type: "valueUpdate",
      source: "external"
    });
    _this.notifyWatch();
  });
  _defineProperty(this, "setFieldValue", function (name2, value2) {
    _this.setFields([{
      name: name2,
      value: value2
    }]);
  });
  _defineProperty(this, "getDependencyChildrenFields", function (rootNamePath) {
    var children = /* @__PURE__ */ new Set();
    var childrenFields = [];
    var dependencies2fields = new NameMap();
    _this.getFieldEntities().forEach(function (field) {
      var dependencies = field.props.dependencies;
      (dependencies || []).forEach(function (dependency) {
        var dependencyNamePath = getNamePath(dependency);
        dependencies2fields.update(dependencyNamePath, function () {
          var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Set();
          fields.add(field);
          return fields;
        });
      });
    });
    var fillChildren = function fillChildren2(namePath) {
      var fields = dependencies2fields.get(namePath) || /* @__PURE__ */ new Set();
      fields.forEach(function (field) {
        if (!children.has(field)) {
          children.add(field);
          var fieldNamePath = field.getNamePath();
          if (field.isFieldDirty() && fieldNamePath.length) {
            childrenFields.push(fieldNamePath);
            fillChildren2(fieldNamePath);
          }
        }
      });
    };
    fillChildren(rootNamePath);
    return childrenFields;
  });
  _defineProperty(this, "triggerOnFieldsChange", function (namePathList, filedErrors) {
    var onFieldsChange = _this.callbacks.onFieldsChange;
    if (onFieldsChange) {
      var fields = _this.getFields();
      if (filedErrors) {
        var cache2 = new NameMap();
        filedErrors.forEach(function (_ref6) {
          var name2 = _ref6.name, errors = _ref6.errors;
          cache2.set(name2, errors);
        });
        fields.forEach(function (field) {
          field.errors = cache2.get(field.name) || field.errors;
        });
      }
      var changedFields = fields.filter(function (_ref7) {
        var fieldName = _ref7.name;
        return containsNamePath(namePathList, fieldName);
      });
      if (changedFields.length) {
        onFieldsChange(changedFields, fields);
      }
    }
  });
  _defineProperty(this, "validateFields", function (arg1, arg2) {
    _this.warningUnhooked();
    var nameList;
    var options2;
    if (Array.isArray(arg1) || typeof arg1 === "string" || typeof arg2 === "string") {
      nameList = arg1;
      options2 = arg2;
    } else {
      options2 = arg1;
    }
    var provideNameList = !!nameList;
    var namePathList = provideNameList ? nameList.map(getNamePath) : [];
    var promiseList = [];
    var TMP_SPLIT = String(Date.now());
    var validateNamePathList = /* @__PURE__ */ new Set();
    var _ref8 = options2 || {}, recursive = _ref8.recursive, dirty = _ref8.dirty;
    _this.getFieldEntities(true).forEach(function (field) {
      if (!provideNameList) {
        namePathList.push(field.getNamePath());
      }
      if (!field.props.rules || !field.props.rules.length) {
        return;
      }
      if (dirty && !field.isFieldDirty()) {
        return;
      }
      var fieldNamePath = field.getNamePath();
      validateNamePathList.add(fieldNamePath.join(TMP_SPLIT));
      if (!provideNameList || containsNamePath(namePathList, fieldNamePath, recursive)) {
        var promise = field.validateRules(_objectSpread2({
          validateMessages: _objectSpread2(_objectSpread2({}, defaultValidateMessages), _this.validateMessages)
        }, options2));
        promiseList.push(promise.then(function () {
          return {
            name: fieldNamePath,
            errors: [],
            warnings: []
          };
        }).catch(function (ruleErrors) {
          var _ruleErrors$forEach;
          var mergedErrors = [];
          var mergedWarnings = [];
          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref9) {
            var warningOnly = _ref9.rule.warningOnly, errors = _ref9.errors;
            if (warningOnly) {
              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));
            } else {
              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));
            }
          });
          if (mergedErrors.length) {
            return Promise.reject({
              name: fieldNamePath,
              errors: mergedErrors,
              warnings: mergedWarnings
            });
          }
          return {
            name: fieldNamePath,
            errors: mergedErrors,
            warnings: mergedWarnings
          };
        }));
      }
    });
    var summaryPromise = allPromiseFinish(promiseList);
    _this.lastValidatePromise = summaryPromise;
    summaryPromise.catch(function (results) {
      return results;
    }).then(function (results) {
      var resultNamePathList = results.map(function (_ref10) {
        var name2 = _ref10.name;
        return name2;
      });
      _this.notifyObservers(_this.store, resultNamePathList, {
        type: "validateFinish"
      });
      _this.triggerOnFieldsChange(resultNamePathList, results);
    });
    var returnPromise = summaryPromise.then(function () {
      if (_this.lastValidatePromise === summaryPromise) {
        return Promise.resolve(_this.getFieldsValue(namePathList));
      }
      return Promise.reject([]);
    }).catch(function (results) {
      var errorList = results.filter(function (result) {
        return result && result.errors.length;
      });
      return Promise.reject({
        values: _this.getFieldsValue(namePathList),
        errorFields: errorList,
        outOfDate: _this.lastValidatePromise !== summaryPromise
      });
    });
    returnPromise.catch(function (e2) {
      return e2;
    });
    var triggerNamePathList = namePathList.filter(function (namePath) {
      return validateNamePathList.has(namePath.join(TMP_SPLIT));
    });
    _this.triggerOnFieldsChange(triggerNamePathList);
    return returnPromise;
  });
  _defineProperty(this, "submit", function () {
    _this.warningUnhooked();
    _this.validateFields().then(function (values2) {
      var onFinish = _this.callbacks.onFinish;
      if (onFinish) {
        try {
          onFinish(values2);
        } catch (err) {
          console.error(err);
        }
      }
    }).catch(function (e2) {
      var onFinishFailed = _this.callbacks.onFinishFailed;
      if (onFinishFailed) {
        onFinishFailed(e2);
      }
    });
  });
  this.forceRootUpdate = forceRootUpdate;
});
function useForm(form) {
  var formRef = reactExports.useRef();
  var _React$useState = reactExports.useState({}), _React$useState2 = _slicedToArray(_React$useState, 2), forceUpdate = _React$useState2[1];
  if (!formRef.current) {
    if (form) {
      formRef.current = form;
    } else {
      var forceReRender = function forceReRender2() {
        forceUpdate({});
      };
      var formStore = new FormStore(forceReRender);
      formRef.current = formStore.getForm();
    }
  }
  return [formRef.current];
}
var FormContext$1 = /* @__PURE__ */ reactExports.createContext({
  triggerFormChange: function triggerFormChange2() {
  },
  triggerFormFinish: function triggerFormFinish2() {
  },
  registerForm: function registerForm2() {
  },
  unregisterForm: function unregisterForm2() {
  }
});
var FormProvider2 = function FormProvider3(_ref) {
  var validateMessages = _ref.validateMessages, onFormChange = _ref.onFormChange, onFormFinish = _ref.onFormFinish, children = _ref.children;
  var formContext = reactExports.useContext(FormContext$1);
  var formsRef = reactExports.useRef({});
  return /* @__PURE__ */ reactExports.createElement(FormContext$1.Provider, {
    value: _objectSpread2(_objectSpread2({}, formContext), {}, {
      validateMessages: _objectSpread2(_objectSpread2({}, formContext.validateMessages), validateMessages),
      // =========================================================
      // =                  Global Form Control                  =
      // =========================================================
      triggerFormChange: function triggerFormChange3(name2, changedFields) {
        if (onFormChange) {
          onFormChange(name2, {
            changedFields,
            forms: formsRef.current
          });
        }
        formContext.triggerFormChange(name2, changedFields);
      },
      triggerFormFinish: function triggerFormFinish3(name2, values2) {
        if (onFormFinish) {
          onFormFinish(name2, {
            values: values2,
            forms: formsRef.current
          });
        }
        formContext.triggerFormFinish(name2, values2);
      },
      registerForm: function registerForm3(name2, form) {
        if (name2) {
          formsRef.current = _objectSpread2(_objectSpread2({}, formsRef.current), {}, _defineProperty({}, name2, form));
        }
        formContext.registerForm(name2, form);
      },
      unregisterForm: function unregisterForm3(name2) {
        var newForms = _objectSpread2({}, formsRef.current);
        delete newForms[name2];
        formsRef.current = newForms;
        formContext.unregisterForm(name2);
      }
    })
  }, children);
};
var _excluded$8 = ["name", "initialValues", "fields", "form", "preserve", "children", "component", "validateMessages", "validateTrigger", "onValuesChange", "onFieldsChange", "onFinish", "onFinishFailed"];
var Form$1 = function Form2(_ref, ref) {
  var name2 = _ref.name, initialValues = _ref.initialValues, fields = _ref.fields, form = _ref.form, preserve2 = _ref.preserve, children = _ref.children, _ref$component = _ref.component, Component = _ref$component === void 0 ? "form" : _ref$component, validateMessages = _ref.validateMessages, _ref$validateTrigger = _ref.validateTrigger, validateTrigger = _ref$validateTrigger === void 0 ? "onChange" : _ref$validateTrigger, onValuesChange = _ref.onValuesChange, _onFieldsChange = _ref.onFieldsChange, _onFinish = _ref.onFinish, onFinishFailed = _ref.onFinishFailed, restProps = _objectWithoutProperties(_ref, _excluded$8);
  var formContext = reactExports.useContext(FormContext$1);
  var _useForm = useForm(form), _useForm2 = _slicedToArray(_useForm, 1), formInstance = _useForm2[0];
  var _getInternalHooks = formInstance.getInternalHooks(HOOK_MARK), useSubscribe = _getInternalHooks.useSubscribe, setInitialValues = _getInternalHooks.setInitialValues, setCallbacks = _getInternalHooks.setCallbacks, setValidateMessages = _getInternalHooks.setValidateMessages, setPreserve = _getInternalHooks.setPreserve, destroyForm = _getInternalHooks.destroyForm;
  reactExports.useImperativeHandle(ref, function () {
    return formInstance;
  });
  reactExports.useEffect(function () {
    formContext.registerForm(name2, formInstance);
    return function () {
      formContext.unregisterForm(name2);
    };
  }, [formContext, formInstance, name2]);
  setValidateMessages(_objectSpread2(_objectSpread2({}, formContext.validateMessages), validateMessages));
  setCallbacks({
    onValuesChange,
    onFieldsChange: function onFieldsChange(changedFields) {
      formContext.triggerFormChange(name2, changedFields);
      if (_onFieldsChange) {
        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }
        _onFieldsChange.apply(void 0, [changedFields].concat(rest));
      }
    },
    onFinish: function onFinish(values2) {
      formContext.triggerFormFinish(name2, values2);
      if (_onFinish) {
        _onFinish(values2);
      }
    },
    onFinishFailed
  });
  setPreserve(preserve2);
  var mountRef = reactExports.useRef(null);
  setInitialValues(initialValues, !mountRef.current);
  if (!mountRef.current) {
    mountRef.current = true;
  }
  reactExports.useEffect(
    function () {
      return destroyForm;
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  var childrenNode;
  var childrenRenderProps = typeof children === "function";
  if (childrenRenderProps) {
    var _values = formInstance.getFieldsValue(true);
    childrenNode = children(_values, formInstance);
  } else {
    childrenNode = children;
  }
  useSubscribe(!childrenRenderProps);
  var prevFieldsRef = reactExports.useRef();
  reactExports.useEffect(function () {
    if (!isSimilar(prevFieldsRef.current || [], fields || [])) {
      formInstance.setFields(fields || []);
    }
    prevFieldsRef.current = fields;
  }, [fields, formInstance]);
  var formContextValue = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, formInstance), {}, {
      validateTrigger
    });
  }, [formInstance, validateTrigger]);
  var wrapperNode = /* @__PURE__ */ reactExports.createElement(ListContext.Provider, {
    value: null
  }, /* @__PURE__ */ reactExports.createElement(Context.Provider, {
    value: formContextValue
  }, childrenNode));
  if (Component === false) {
    return wrapperNode;
  }
  return /* @__PURE__ */ reactExports.createElement(Component, _extends$1({}, restProps, {
    onSubmit: function onSubmit(event) {
      event.preventDefault();
      event.stopPropagation();
      formInstance.submit();
    },
    onReset: function onReset(event) {
      var _restProps$onReset;
      event.preventDefault();
      formInstance.resetFields();
      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 || _restProps$onReset.call(restProps, event);
    }
  }), wrapperNode);
};
function stringify(value2) {
  try {
    return JSON.stringify(value2);
  } catch (err) {
    return Math.random();
  }
}
function useWatch$1() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var dependencies = args[0], _args$ = args[1], _form = _args$ === void 0 ? {} : _args$;
  var options2 = isFormInstance(_form) ? {
    form: _form
  } : _form;
  var form = options2.form;
  var _useState = reactExports.useState(), _useState2 = _slicedToArray(_useState, 2), value2 = _useState2[0], setValue = _useState2[1];
  var valueStr = reactExports.useMemo(function () {
    return stringify(value2);
  }, [value2]);
  var valueStrRef = reactExports.useRef(valueStr);
  valueStrRef.current = valueStr;
  var fieldContext = reactExports.useContext(Context);
  var formInstance = form || fieldContext;
  var isValidForm = formInstance && formInstance._init;
  var namePath = getNamePath(dependencies);
  var namePathRef = reactExports.useRef(namePath);
  namePathRef.current = namePath;
  reactExports.useEffect(
    function () {
      if (!isValidForm) {
        return;
      }
      var getFieldsValue = formInstance.getFieldsValue, getInternalHooks3 = formInstance.getInternalHooks;
      var _getInternalHooks = getInternalHooks3(HOOK_MARK), registerWatch = _getInternalHooks.registerWatch;
      var getWatchValue = function getWatchValue2(values2, allValues) {
        var watchValue = options2.preserve ? allValues : values2;
        return typeof dependencies === "function" ? dependencies(watchValue) : get(watchValue, namePathRef.current);
      };
      var cancelRegister = registerWatch(function (values2, allValues) {
        var newValue = getWatchValue(values2, allValues);
        var nextValueStr = stringify(newValue);
        if (valueStrRef.current !== nextValueStr) {
          valueStrRef.current = nextValueStr;
          setValue(newValue);
        }
      });
      var initialValue = getWatchValue(getFieldsValue(), getFieldsValue(true));
      if (value2 !== initialValue) {
        setValue(initialValue);
      }
      return cancelRegister;
    },
    // We do not need re-register since namePath content is the same
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [isValidForm]
  );
  return value2;
}
var InternalForm = /* @__PURE__ */ reactExports.forwardRef(Form$1);
var RefForm = InternalForm;
RefForm.FormProvider = FormProvider2;
RefForm.Field = WrapperField;
RefForm.List = List;
RefForm.useForm = useForm;
RefForm.useWatch = useWatch$1;
const FormItemInputContext = /* @__PURE__ */ reactExports.createContext({});
const VariantContext = /* @__PURE__ */ reactExports.createContext(void 0);
const initMotionCommon = (duration) => ({
  animationDuration: duration,
  animationFillMode: "both"
});
const initMotionCommonLeave = (duration) => ({
  animationDuration: duration,
  animationFillMode: "both"
});
const initMotion = function (motionCls, inKeyframes, outKeyframes, duration) {
  let sameLevel = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
  const sameLevelPrefix = sameLevel ? "&" : "";
  return {
    ["\n      ".concat(sameLevelPrefix).concat(motionCls, "-enter,\n      ").concat(sameLevelPrefix).concat(motionCls, "-appear\n    ")]: Object.assign(Object.assign({}, initMotionCommon(duration)), {
      animationPlayState: "paused"
    }),
    ["".concat(sameLevelPrefix).concat(motionCls, "-leave")]: Object.assign(Object.assign({}, initMotionCommonLeave(duration)), {
      animationPlayState: "paused"
    }),
    ["\n      ".concat(sameLevelPrefix).concat(motionCls, "-enter").concat(motionCls, "-enter-active,\n      ").concat(sameLevelPrefix).concat(motionCls, "-appear").concat(motionCls, "-appear-active\n    ")]: {
      animationName: inKeyframes,
      animationPlayState: "running"
    },
    ["".concat(sameLevelPrefix).concat(motionCls, "-leave").concat(motionCls, "-leave-active")]: {
      animationName: outKeyframes,
      animationPlayState: "running",
      pointerEvents: "none"
    }
  };
};
const moveDownIn = new Keyframe("antMoveDownIn", {
  "0%": {
    transform: "translate3d(0, 100%, 0)",
    transformOrigin: "0 0",
    opacity: 0
  },
  "100%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  }
});
const moveDownOut = new Keyframe("antMoveDownOut", {
  "0%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  },
  "100%": {
    transform: "translate3d(0, 100%, 0)",
    transformOrigin: "0 0",
    opacity: 0
  }
});
const moveLeftIn = new Keyframe("antMoveLeftIn", {
  "0%": {
    transform: "translate3d(-100%, 0, 0)",
    transformOrigin: "0 0",
    opacity: 0
  },
  "100%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  }
});
const moveLeftOut = new Keyframe("antMoveLeftOut", {
  "0%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  },
  "100%": {
    transform: "translate3d(-100%, 0, 0)",
    transformOrigin: "0 0",
    opacity: 0
  }
});
const moveRightIn = new Keyframe("antMoveRightIn", {
  "0%": {
    transform: "translate3d(100%, 0, 0)",
    transformOrigin: "0 0",
    opacity: 0
  },
  "100%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  }
});
const moveRightOut = new Keyframe("antMoveRightOut", {
  "0%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  },
  "100%": {
    transform: "translate3d(100%, 0, 0)",
    transformOrigin: "0 0",
    opacity: 0
  }
});
const moveUpIn = new Keyframe("antMoveUpIn", {
  "0%": {
    transform: "translate3d(0, -100%, 0)",
    transformOrigin: "0 0",
    opacity: 0
  },
  "100%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  }
});
const moveUpOut = new Keyframe("antMoveUpOut", {
  "0%": {
    transform: "translate3d(0, 0, 0)",
    transformOrigin: "0 0",
    opacity: 1
  },
  "100%": {
    transform: "translate3d(0, -100%, 0)",
    transformOrigin: "0 0",
    opacity: 0
  }
});
const moveMotion = {
  "move-up": {
    inKeyframes: moveUpIn,
    outKeyframes: moveUpOut
  },
  "move-down": {
    inKeyframes: moveDownIn,
    outKeyframes: moveDownOut
  },
  "move-left": {
    inKeyframes: moveLeftIn,
    outKeyframes: moveLeftOut
  },
  "move-right": {
    inKeyframes: moveRightIn,
    outKeyframes: moveRightOut
  }
};
const initMoveMotion = (token2, motionName) => {
  const {
    antCls
  } = token2;
  const motionCls = "".concat(antCls, "-").concat(motionName);
  const {
    inKeyframes,
    outKeyframes
  } = moveMotion[motionName];
  return [initMotion(motionCls, inKeyframes, outKeyframes, token2.motionDurationMid), {
    ["\n        ".concat(motionCls, "-enter,\n        ").concat(motionCls, "-appear\n      ")]: {
      opacity: 0,
      animationTimingFunction: token2.motionEaseOutCirc
    },
    ["".concat(motionCls, "-leave")]: {
      animationTimingFunction: token2.motionEaseInOutCirc
    }
  }];
};
const slideUpIn = new Keyframe("antSlideUpIn", {
  "0%": {
    transform: "scaleY(0.8)",
    transformOrigin: "0% 0%",
    opacity: 0
  },
  "100%": {
    transform: "scaleY(1)",
    transformOrigin: "0% 0%",
    opacity: 1
  }
});
const slideUpOut = new Keyframe("antSlideUpOut", {
  "0%": {
    transform: "scaleY(1)",
    transformOrigin: "0% 0%",
    opacity: 1
  },
  "100%": {
    transform: "scaleY(0.8)",
    transformOrigin: "0% 0%",
    opacity: 0
  }
});
const slideDownIn = new Keyframe("antSlideDownIn", {
  "0%": {
    transform: "scaleY(0.8)",
    transformOrigin: "100% 100%",
    opacity: 0
  },
  "100%": {
    transform: "scaleY(1)",
    transformOrigin: "100% 100%",
    opacity: 1
  }
});
const slideDownOut = new Keyframe("antSlideDownOut", {
  "0%": {
    transform: "scaleY(1)",
    transformOrigin: "100% 100%",
    opacity: 1
  },
  "100%": {
    transform: "scaleY(0.8)",
    transformOrigin: "100% 100%",
    opacity: 0
  }
});
const slideLeftIn = new Keyframe("antSlideLeftIn", {
  "0%": {
    transform: "scaleX(0.8)",
    transformOrigin: "0% 0%",
    opacity: 0
  },
  "100%": {
    transform: "scaleX(1)",
    transformOrigin: "0% 0%",
    opacity: 1
  }
});
const slideLeftOut = new Keyframe("antSlideLeftOut", {
  "0%": {
    transform: "scaleX(1)",
    transformOrigin: "0% 0%",
    opacity: 1
  },
  "100%": {
    transform: "scaleX(0.8)",
    transformOrigin: "0% 0%",
    opacity: 0
  }
});
const slideRightIn = new Keyframe("antSlideRightIn", {
  "0%": {
    transform: "scaleX(0.8)",
    transformOrigin: "100% 0%",
    opacity: 0
  },
  "100%": {
    transform: "scaleX(1)",
    transformOrigin: "100% 0%",
    opacity: 1
  }
});
const slideRightOut = new Keyframe("antSlideRightOut", {
  "0%": {
    transform: "scaleX(1)",
    transformOrigin: "100% 0%",
    opacity: 1
  },
  "100%": {
    transform: "scaleX(0.8)",
    transformOrigin: "100% 0%",
    opacity: 0
  }
});
const slideMotion = {
  "slide-up": {
    inKeyframes: slideUpIn,
    outKeyframes: slideUpOut
  },
  "slide-down": {
    inKeyframes: slideDownIn,
    outKeyframes: slideDownOut
  },
  "slide-left": {
    inKeyframes: slideLeftIn,
    outKeyframes: slideLeftOut
  },
  "slide-right": {
    inKeyframes: slideRightIn,
    outKeyframes: slideRightOut
  }
};
const initSlideMotion = (token2, motionName) => {
  const {
    antCls
  } = token2;
  const motionCls = "".concat(antCls, "-").concat(motionName);
  const {
    inKeyframes,
    outKeyframes
  } = slideMotion[motionName];
  return [initMotion(motionCls, inKeyframes, outKeyframes, token2.motionDurationMid), {
    ["\n      ".concat(motionCls, "-enter,\n      ").concat(motionCls, "-appear\n    ")]: {
      transform: "scale(0)",
      transformOrigin: "0% 0%",
      opacity: 0,
      animationTimingFunction: token2.motionEaseOutQuint,
      ["&-prepare"]: {
        transform: "scale(1)"
      }
    },
    ["".concat(motionCls, "-leave")]: {
      animationTimingFunction: token2.motionEaseInQuint
    }
  }];
};
function withPureRenderTheme(Component) {
  return (props) => /* @__PURE__ */ reactExports.createElement(ConfigProvider, {
    theme: {
      token: {
        motion: false,
        zIndexPopupBase: 0
      }
    }
  }, /* @__PURE__ */ reactExports.createElement(Component, Object.assign({}, props)));
}
const genPurePanel = (Component, defaultPrefixCls2, getDropdownCls, postProps) => {
  const PurePanel2 = (props) => {
    const {
      prefixCls: customizePrefixCls,
      style: style2
    } = props;
    const holderRef = reactExports.useRef(null);
    const [popupHeight, setPopupHeight] = reactExports.useState(0);
    const [popupWidth, setPopupWidth] = reactExports.useState(0);
    const [open2, setOpen] = useMergedState(false, {
      value: props.open
    });
    const {
      getPrefixCls
    } = reactExports.useContext(ConfigContext);
    const prefixCls = getPrefixCls(defaultPrefixCls2, customizePrefixCls);
    reactExports.useEffect(() => {
      setOpen(true);
      if (typeof ResizeObserver !== "undefined") {
        const resizeObserver2 = new ResizeObserver((entries) => {
          const element = entries[0].target;
          setPopupHeight(element.offsetHeight + 8);
          setPopupWidth(element.offsetWidth);
        });
        const interval = setInterval(() => {
          var _a;
          const dropdownCls = ".".concat(prefixCls, "-dropdown");
          const popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);
          if (popup) {
            clearInterval(interval);
            resizeObserver2.observe(popup);
          }
        }, 10);
        return () => {
          clearInterval(interval);
          resizeObserver2.disconnect();
        };
      }
    }, []);
    let mergedProps = Object.assign(Object.assign({}, props), {
      style: Object.assign(Object.assign({}, style2), {
        margin: 0
      }),
      open: open2,
      visible: open2,
      getPopupContainer: () => holderRef.current
    });
    if (postProps) {
      mergedProps = postProps(mergedProps);
    }
    const mergedStyle = {
      paddingBottom: popupHeight,
      position: "relative",
      minWidth: popupWidth
    };
    return /* @__PURE__ */ reactExports.createElement("div", {
      ref: holderRef,
      style: mergedStyle
    }, /* @__PURE__ */ reactExports.createElement(Component, Object.assign({}, mergedProps)));
  };
  return withPureRenderTheme(PurePanel2);
};
const isMobile = function () {
  if (typeof navigator === "undefined" || typeof window === "undefined") {
    return false;
  }
  var agent2 = navigator.userAgent || navigator.vendor || window.opera;
  return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(agent2) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(agent2 === null || agent2 === void 0 ? void 0 : agent2.substr(0, 4));
};
var _excluded$7 = ["prefixCls", "invalidate", "item", "renderItem", "responsive", "responsiveDisabled", "registerSize", "itemKey", "className", "style", "children", "display", "order", "component"];
var UNDEFINED = void 0;
function InternalItem(props, ref) {
  var prefixCls = props.prefixCls, invalidate = props.invalidate, item2 = props.item, renderItem = props.renderItem, responsive = props.responsive, responsiveDisabled = props.responsiveDisabled, registerSize = props.registerSize, itemKey = props.itemKey, className = props.className, style2 = props.style, children = props.children, display = props.display, order2 = props.order, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, restProps = _objectWithoutProperties(props, _excluded$7);
  var mergedHidden = responsive && !display;
  function internalRegisterSize(width) {
    registerSize(itemKey, width);
  }
  reactExports.useEffect(function () {
    return function () {
      internalRegisterSize(null);
    };
  }, []);
  var childNode = renderItem && item2 !== UNDEFINED ? renderItem(item2) : children;
  var overflowStyle;
  if (!invalidate) {
    overflowStyle = {
      opacity: mergedHidden ? 0 : 1,
      height: mergedHidden ? 0 : UNDEFINED,
      overflowY: mergedHidden ? "hidden" : UNDEFINED,
      order: responsive ? order2 : UNDEFINED,
      pointerEvents: mergedHidden ? "none" : UNDEFINED,
      position: mergedHidden ? "absolute" : UNDEFINED
    };
  }
  var overflowProps = {};
  if (mergedHidden) {
    overflowProps["aria-hidden"] = true;
  }
  var itemNode = /* @__PURE__ */ reactExports.createElement(Component, _extends$1({
    className: classNames(!invalidate && prefixCls, className),
    style: _objectSpread2(_objectSpread2({}, overflowStyle), style2)
  }, overflowProps, restProps, {
    ref
  }), childNode);
  if (responsive) {
    itemNode = /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
      onResize: function onResize2(_ref) {
        var offsetWidth = _ref.offsetWidth;
        internalRegisterSize(offsetWidth);
      },
      disabled: responsiveDisabled
    }, itemNode);
  }
  return itemNode;
}
var Item$1 = /* @__PURE__ */ reactExports.forwardRef(InternalItem);
Item$1.displayName = "Item";
function channelUpdate(callback) {
  if (typeof MessageChannel === "undefined") {
    wrapperRaf(callback);
  } else {
    var channel = new MessageChannel();
    channel.port1.onmessage = function () {
      return callback();
    };
    channel.port2.postMessage(void 0);
  }
}
function useBatcher() {
  var updateFuncRef = reactExports.useRef(null);
  var notifyEffectUpdate = function notifyEffectUpdate2(callback) {
    if (!updateFuncRef.current) {
      updateFuncRef.current = [];
      channelUpdate(function () {
        reactDomExports.unstable_batchedUpdates(function () {
          updateFuncRef.current.forEach(function (fn) {
            fn();
          });
          updateFuncRef.current = null;
        });
      });
    }
    updateFuncRef.current.push(callback);
  };
  return notifyEffectUpdate;
}
function useEffectState(notifyEffectUpdate, defaultValue) {
  var _React$useState = reactExports.useState(defaultValue), _React$useState2 = _slicedToArray(_React$useState, 2), stateValue = _React$useState2[0], setStateValue = _React$useState2[1];
  var setEffectVal = useEvent(function (nextValue) {
    notifyEffectUpdate(function () {
      setStateValue(nextValue);
    });
  });
  return [stateValue, setEffectVal];
}
var OverflowContext = /* @__PURE__ */ React.createContext(null);
var _excluded$6 = ["component"], _excluded2$2 = ["className"], _excluded3 = ["className"];
var InternalRawItem = function InternalRawItem2(props, ref) {
  var context2 = reactExports.useContext(OverflowContext);
  if (!context2) {
    var _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _restProps = _objectWithoutProperties(props, _excluded$6);
    return /* @__PURE__ */ reactExports.createElement(Component, _extends$1({}, _restProps, {
      ref
    }));
  }
  var contextClassName = context2.className, restContext = _objectWithoutProperties(context2, _excluded2$2);
  var className = props.className, restProps = _objectWithoutProperties(props, _excluded3);
  return /* @__PURE__ */ reactExports.createElement(OverflowContext.Provider, {
    value: null
  }, /* @__PURE__ */ reactExports.createElement(Item$1, _extends$1({
    ref,
    className: classNames(contextClassName, className)
  }, restContext, restProps)));
};
var RawItem = /* @__PURE__ */ reactExports.forwardRef(InternalRawItem);
RawItem.displayName = "RawItem";
var _excluded$5 = ["prefixCls", "data", "renderItem", "renderRawItem", "itemKey", "itemWidth", "ssr", "style", "className", "maxCount", "renderRest", "renderRawRest", "suffix", "component", "itemComponent", "onVisibleChange"];
var RESPONSIVE = "responsive";
var INVALIDATE = "invalidate";
function defaultRenderRest(omittedItems) {
  return "+ ".concat(omittedItems.length, " ...");
}
function Overflow(props, ref) {
  var _props$prefixCls = props.prefixCls, prefixCls = _props$prefixCls === void 0 ? "rc-overflow" : _props$prefixCls, _props$data = props.data, data = _props$data === void 0 ? [] : _props$data, renderItem = props.renderItem, renderRawItem = props.renderRawItem, itemKey = props.itemKey, _props$itemWidth = props.itemWidth, itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth, ssr = props.ssr, style2 = props.style, className = props.className, maxCount = props.maxCount, renderRest = props.renderRest, renderRawRest = props.renderRawRest, suffix2 = props.suffix, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, itemComponent = props.itemComponent, onVisibleChange = props.onVisibleChange, restProps = _objectWithoutProperties(props, _excluded$5);
  var fullySSR = ssr === "full";
  var notifyEffectUpdate = useBatcher();
  var _useEffectState = useEffectState(notifyEffectUpdate, null), _useEffectState2 = _slicedToArray(_useEffectState, 2), containerWidth = _useEffectState2[0], setContainerWidth = _useEffectState2[1];
  var mergedContainerWidth = containerWidth || 0;
  var _useEffectState3 = useEffectState(notifyEffectUpdate, /* @__PURE__ */ new Map()), _useEffectState4 = _slicedToArray(_useEffectState3, 2), itemWidths = _useEffectState4[0], setItemWidths = _useEffectState4[1];
  var _useEffectState5 = useEffectState(notifyEffectUpdate, 0), _useEffectState6 = _slicedToArray(_useEffectState5, 2), prevRestWidth = _useEffectState6[0], setPrevRestWidth = _useEffectState6[1];
  var _useEffectState7 = useEffectState(notifyEffectUpdate, 0), _useEffectState8 = _slicedToArray(_useEffectState7, 2), restWidth = _useEffectState8[0], setRestWidth = _useEffectState8[1];
  var _useEffectState9 = useEffectState(notifyEffectUpdate, 0), _useEffectState10 = _slicedToArray(_useEffectState9, 2), suffixWidth = _useEffectState10[0], setSuffixWidth = _useEffectState10[1];
  var _useState = reactExports.useState(null), _useState2 = _slicedToArray(_useState, 2), suffixFixedStart = _useState2[0], setSuffixFixedStart = _useState2[1];
  var _useState3 = reactExports.useState(null), _useState4 = _slicedToArray(_useState3, 2), displayCount = _useState4[0], setDisplayCount = _useState4[1];
  var mergedDisplayCount = reactExports.useMemo(function () {
    if (displayCount === null && fullySSR) {
      return Number.MAX_SAFE_INTEGER;
    }
    return displayCount || 0;
  }, [displayCount, containerWidth]);
  var _useState5 = reactExports.useState(false), _useState6 = _slicedToArray(_useState5, 2), restReady = _useState6[0], setRestReady = _useState6[1];
  var itemPrefixCls = "".concat(prefixCls, "-item");
  var mergedRestWidth = Math.max(prevRestWidth, restWidth);
  var isResponsive = maxCount === RESPONSIVE;
  var shouldResponsive = data.length && isResponsive;
  var invalidate = maxCount === INVALIDATE;
  var showRest = shouldResponsive || typeof maxCount === "number" && data.length > maxCount;
  var mergedData = reactExports.useMemo(function () {
    var items2 = data;
    if (shouldResponsive) {
      if (containerWidth === null && fullySSR) {
        items2 = data;
      } else {
        items2 = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));
      }
    } else if (typeof maxCount === "number") {
      items2 = data.slice(0, maxCount);
    }
    return items2;
  }, [data, itemWidth, containerWidth, maxCount, shouldResponsive]);
  var omittedItems = reactExports.useMemo(function () {
    if (shouldResponsive) {
      return data.slice(mergedDisplayCount + 1);
    }
    return data.slice(mergedData.length);
  }, [data, mergedData, shouldResponsive, mergedDisplayCount]);
  var getKey = reactExports.useCallback(function (item2, index2) {
    var _ref;
    if (typeof itemKey === "function") {
      return itemKey(item2);
    }
    return (_ref = itemKey && (item2 === null || item2 === void 0 ? void 0 : item2[itemKey])) !== null && _ref !== void 0 ? _ref : index2;
  }, [itemKey]);
  var mergedRenderItem = reactExports.useCallback(renderItem || function (item2) {
    return item2;
  }, [renderItem]);
  function updateDisplayCount(count, suffixFixedStartVal, notReady) {
    if (displayCount === count && (suffixFixedStartVal === void 0 || suffixFixedStartVal === suffixFixedStart)) {
      return;
    }
    setDisplayCount(count);
    if (!notReady) {
      setRestReady(count < data.length - 1);
      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);
    }
    if (suffixFixedStartVal !== void 0) {
      setSuffixFixedStart(suffixFixedStartVal);
    }
  }
  function onOverflowResize(_, element) {
    setContainerWidth(element.clientWidth);
  }
  function registerSize(key, width) {
    setItemWidths(function (origin) {
      var clone = new Map(origin);
      if (width === null) {
        clone.delete(key);
      } else {
        clone.set(key, width);
      }
      return clone;
    });
  }
  function registerOverflowSize(_, width) {
    setRestWidth(width);
    setPrevRestWidth(restWidth);
  }
  function registerSuffixSize(_, width) {
    setSuffixWidth(width);
  }
  function getItemWidth(index2) {
    return itemWidths.get(getKey(mergedData[index2], index2));
  }
  useLayoutEffect(function () {
    if (mergedContainerWidth && typeof mergedRestWidth === "number" && mergedData) {
      var totalWidth = suffixWidth;
      var len = mergedData.length;
      var lastIndex = len - 1;
      if (!len) {
        updateDisplayCount(0, null);
        return;
      }
      for (var i = 0; i < len; i += 1) {
        var currentItemWidth = getItemWidth(i);
        if (fullySSR) {
          currentItemWidth = currentItemWidth || 0;
        }
        if (currentItemWidth === void 0) {
          updateDisplayCount(i - 1, void 0, true);
          break;
        }
        totalWidth += currentItemWidth;
        if (
          // Only one means `totalWidth` is the final width
          lastIndex === 0 && totalWidth <= mergedContainerWidth || // Last two width will be the final width
          i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth
        ) {
          updateDisplayCount(lastIndex, null);
          break;
        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {
          updateDisplayCount(i - 1, totalWidth - currentItemWidth - suffixWidth + restWidth);
          break;
        }
      }
      if (suffix2 && getItemWidth(0) + suffixWidth > mergedContainerWidth) {
        setSuffixFixedStart(null);
      }
    }
  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]);
  var displayRest = restReady && !!omittedItems.length;
  var suffixStyle = {};
  if (suffixFixedStart !== null && shouldResponsive) {
    suffixStyle = {
      position: "absolute",
      left: suffixFixedStart,
      top: 0
    };
  }
  var itemSharedProps = {
    prefixCls: itemPrefixCls,
    responsive: shouldResponsive,
    component: itemComponent,
    invalidate
  };
  var internalRenderItemNode = renderRawItem ? function (item2, index2) {
    var key = getKey(item2, index2);
    return /* @__PURE__ */ reactExports.createElement(OverflowContext.Provider, {
      key,
      value: _objectSpread2(_objectSpread2({}, itemSharedProps), {}, {
        order: index2,
        item: item2,
        itemKey: key,
        registerSize,
        display: index2 <= mergedDisplayCount
      })
    }, renderRawItem(item2, index2));
  } : function (item2, index2) {
    var key = getKey(item2, index2);
    return /* @__PURE__ */ reactExports.createElement(Item$1, _extends$1({}, itemSharedProps, {
      order: index2,
      key,
      item: item2,
      renderItem: mergedRenderItem,
      itemKey: key,
      registerSize,
      display: index2 <= mergedDisplayCount
    }));
  };
  var restNode;
  var restContextProps = {
    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,
    className: "".concat(itemPrefixCls, "-rest"),
    registerSize: registerOverflowSize,
    display: displayRest
  };
  if (!renderRawRest) {
    var mergedRenderRest = renderRest || defaultRenderRest;
    restNode = /* @__PURE__ */ reactExports.createElement(Item$1, _extends$1({}, itemSharedProps, restContextProps), typeof mergedRenderRest === "function" ? mergedRenderRest(omittedItems) : mergedRenderRest);
  } else if (renderRawRest) {
    restNode = /* @__PURE__ */ reactExports.createElement(OverflowContext.Provider, {
      value: _objectSpread2(_objectSpread2({}, itemSharedProps), restContextProps)
    }, renderRawRest(omittedItems));
  }
  var overflowNode = /* @__PURE__ */ reactExports.createElement(Component, _extends$1({
    className: classNames(!invalidate && prefixCls, className),
    style: style2,
    ref
  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix2 && /* @__PURE__ */ reactExports.createElement(Item$1, _extends$1({}, itemSharedProps, {
    responsive: isResponsive,
    responsiveDisabled: !shouldResponsive,
    order: mergedDisplayCount,
    className: "".concat(itemPrefixCls, "-suffix"),
    registerSize: registerSuffixSize,
    display: true,
    style: suffixStyle
  }), suffix2));
  if (isResponsive) {
    overflowNode = /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
      onResize: onOverflowResize,
      disabled: !shouldResponsive
    }, overflowNode);
  }
  return overflowNode;
}
var ForwardOverflow = /* @__PURE__ */ reactExports.forwardRef(Overflow);
ForwardOverflow.displayName = "Overflow";
ForwardOverflow.Item = RawItem;
ForwardOverflow.RESPONSIVE = RESPONSIVE;
ForwardOverflow.INVALIDATE = INVALIDATE;
function Arrow$2(props) {
  var prefixCls = props.prefixCls, align = props.align, arrow = props.arrow, arrowPos = props.arrowPos;
  var _ref = arrow || {}, className = _ref.className, content2 = _ref.content;
  var _arrowPos$x = arrowPos.x, x = _arrowPos$x === void 0 ? 0 : _arrowPos$x, _arrowPos$y = arrowPos.y, y = _arrowPos$y === void 0 ? 0 : _arrowPos$y;
  var arrowRef = reactExports.useRef();
  if (!align || !align.points) {
    return null;
  }
  var alignStyle = {
    position: "absolute"
  };
  if (align.autoArrow !== false) {
    var popupPoints = align.points[0];
    var targetPoints = align.points[1];
    var popupTB = popupPoints[0];
    var popupLR = popupPoints[1];
    var targetTB = targetPoints[0];
    var targetLR = targetPoints[1];
    if (popupTB === targetTB || !["t", "b"].includes(popupTB)) {
      alignStyle.top = y;
    } else if (popupTB === "t") {
      alignStyle.top = 0;
    } else {
      alignStyle.bottom = 0;
    }
    if (popupLR === targetLR || !["l", "r"].includes(popupLR)) {
      alignStyle.left = x;
    } else if (popupLR === "l") {
      alignStyle.left = 0;
    } else {
      alignStyle.right = 0;
    }
  }
  return /* @__PURE__ */ reactExports.createElement("div", {
    ref: arrowRef,
    className: classNames("".concat(prefixCls, "-arrow"), className),
    style: alignStyle
  }, content2);
}
function Mask(props) {
  var prefixCls = props.prefixCls, open2 = props.open, zIndex = props.zIndex, mask = props.mask, motion = props.motion;
  if (!mask) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(CSSMotion, _extends$1({}, motion, {
    motionAppear: true,
    visible: open2,
    removeOnLeave: true
  }), function (_ref) {
    var className = _ref.className;
    return /* @__PURE__ */ reactExports.createElement("div", {
      style: {
        zIndex
      },
      className: classNames("".concat(prefixCls, "-mask"), className)
    });
  });
}
var PopupContent = /* @__PURE__ */ reactExports.memo(function (_ref) {
  var children = _ref.children;
  return children;
}, function (_, next2) {
  return next2.cache;
});
var Popup$1 = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
  var popup = props.popup, className = props.className, prefixCls = props.prefixCls, style2 = props.style, target = props.target, _onVisibleChanged = props.onVisibleChanged, open2 = props.open, keepDom = props.keepDom, fresh = props.fresh, onClick = props.onClick, mask = props.mask, arrow = props.arrow, arrowPos = props.arrowPos, align = props.align, motion = props.motion, maskMotion = props.maskMotion, forceRender = props.forceRender, getPopupContainer = props.getPopupContainer, autoDestroy = props.autoDestroy, Portal2 = props.portal, zIndex = props.zIndex, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onPointerEnter = props.onPointerEnter, ready = props.ready, offsetX = props.offsetX, offsetY = props.offsetY, offsetR = props.offsetR, offsetB = props.offsetB, onAlign = props.onAlign, onPrepare = props.onPrepare, stretch = props.stretch, targetWidth = props.targetWidth, targetHeight = props.targetHeight;
  var childNode = typeof popup === "function" ? popup() : popup;
  var isNodeVisible = open2 || keepDom;
  var getPopupContainerNeedParams = (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer.length) > 0;
  var _React$useState = reactExports.useState(!getPopupContainer || !getPopupContainerNeedParams), _React$useState2 = _slicedToArray(_React$useState, 2), show = _React$useState2[0], setShow = _React$useState2[1];
  useLayoutEffect(function () {
    if (!show && getPopupContainerNeedParams && target) {
      setShow(true);
    }
  }, [show, getPopupContainerNeedParams, target]);
  if (!show) {
    return null;
  }
  var AUTO = "auto";
  var offsetStyle = {
    left: "-1000vw",
    top: "-1000vh",
    right: AUTO,
    bottom: AUTO
  };
  if (ready || !open2) {
    var _experimental;
    var points = align.points;
    var dynamicInset = align.dynamicInset || ((_experimental = align._experimental) === null || _experimental === void 0 ? void 0 : _experimental.dynamicInset);
    var alignRight = dynamicInset && points[0][1] === "r";
    var alignBottom = dynamicInset && points[0][0] === "b";
    if (alignRight) {
      offsetStyle.right = offsetR;
      offsetStyle.left = AUTO;
    } else {
      offsetStyle.left = offsetX;
      offsetStyle.right = AUTO;
    }
    if (alignBottom) {
      offsetStyle.bottom = offsetB;
      offsetStyle.top = AUTO;
    } else {
      offsetStyle.top = offsetY;
      offsetStyle.bottom = AUTO;
    }
  }
  var miscStyle = {};
  if (stretch) {
    if (stretch.includes("height") && targetHeight) {
      miscStyle.height = targetHeight;
    } else if (stretch.includes("minHeight") && targetHeight) {
      miscStyle.minHeight = targetHeight;
    }
    if (stretch.includes("width") && targetWidth) {
      miscStyle.width = targetWidth;
    } else if (stretch.includes("minWidth") && targetWidth) {
      miscStyle.minWidth = targetWidth;
    }
  }
  if (!open2) {
    miscStyle.pointerEvents = "none";
  }
  return /* @__PURE__ */ reactExports.createElement(Portal2, {
    open: forceRender || isNodeVisible,
    getContainer: getPopupContainer && function () {
      return getPopupContainer(target);
    },
    autoDestroy
  }, /* @__PURE__ */ reactExports.createElement(Mask, {
    prefixCls,
    open: open2,
    zIndex,
    mask,
    motion: maskMotion
  }), /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
    onResize: onAlign,
    disabled: !open2
  }, function (resizeObserverRef) {
    return /* @__PURE__ */ reactExports.createElement(CSSMotion, _extends$1({
      motionAppear: true,
      motionEnter: true,
      motionLeave: true,
      removeOnLeave: false,
      forceRender,
      leavedClassName: "".concat(prefixCls, "-hidden")
    }, motion, {
      onAppearPrepare: onPrepare,
      onEnterPrepare: onPrepare,
      visible: open2,
      onVisibleChanged: function onVisibleChanged(nextVisible) {
        var _motion$onVisibleChan;
        motion === null || motion === void 0 || (_motion$onVisibleChan = motion.onVisibleChanged) === null || _motion$onVisibleChan === void 0 || _motion$onVisibleChan.call(motion, nextVisible);
        _onVisibleChanged(nextVisible);
      }
    }), function (_ref, motionRef) {
      var motionClassName = _ref.className, motionStyle = _ref.style;
      var cls = classNames(prefixCls, motionClassName, className);
      return /* @__PURE__ */ reactExports.createElement("div", {
        ref: composeRef(resizeObserverRef, ref, motionRef),
        className: cls,
        style: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({
          "--arrow-x": "".concat(arrowPos.x || 0, "px"),
          "--arrow-y": "".concat(arrowPos.y || 0, "px")
        }, offsetStyle), miscStyle), motionStyle), {}, {
          boxSizing: "border-box",
          zIndex
        }, style2),
        onMouseEnter,
        onMouseLeave,
        onPointerEnter,
        onClick
      }, arrow && /* @__PURE__ */ reactExports.createElement(Arrow$2, {
        prefixCls,
        arrow,
        arrowPos,
        align
      }), /* @__PURE__ */ reactExports.createElement(PopupContent, {
        cache: !open2 && !fresh
      }, childNode));
    });
  }));
});
var TriggerWrapper = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
  var children = props.children, getTriggerDOMNode = props.getTriggerDOMNode;
  var canUseRef = supportRef(children);
  var setRef = reactExports.useCallback(function (node2) {
    fillRef(ref, getTriggerDOMNode ? getTriggerDOMNode(node2) : node2);
  }, [getTriggerDOMNode]);
  var mergedRef = useComposeRef(setRef, children.ref);
  return canUseRef ? /* @__PURE__ */ reactExports.cloneElement(children, {
    ref: mergedRef
  }) : children;
});
var TriggerContext = /* @__PURE__ */ reactExports.createContext(null);
function toArray$1(val) {
  return val ? Array.isArray(val) ? val : [val] : [];
}
function useAction(mobile, action, showAction, hideAction) {
  return reactExports.useMemo(function () {
    var mergedShowAction = toArray$1(showAction !== null && showAction !== void 0 ? showAction : action);
    var mergedHideAction = toArray$1(hideAction !== null && hideAction !== void 0 ? hideAction : action);
    var showActionSet = new Set(mergedShowAction);
    var hideActionSet = new Set(mergedHideAction);
    if (mobile) {
      if (showActionSet.has("hover")) {
        showActionSet.delete("hover");
        showActionSet.add("click");
      }
      if (hideActionSet.has("hover")) {
        hideActionSet.delete("hover");
        hideActionSet.add("click");
      }
    }
    return [showActionSet, hideActionSet];
  }, [mobile, action, showAction, hideAction]);
}
function isPointsEq() {
  var a1 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var a2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var isAlignPoint = arguments.length > 2 ? arguments[2] : void 0;
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }
  return a1[0] === a2[0] && a1[1] === a2[1];
}
function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {
  var points = align.points;
  var placements = Object.keys(builtinPlacements);
  for (var i = 0; i < placements.length; i += 1) {
    var _builtinPlacements$pl;
    var placement = placements[i];
    if (isPointsEq((_builtinPlacements$pl = builtinPlacements[placement]) === null || _builtinPlacements$pl === void 0 ? void 0 : _builtinPlacements$pl.points, points, isAlignPoint)) {
      return "".concat(prefixCls, "-placement-").concat(placement);
    }
  }
  return "";
}
function getMotion(prefixCls, motion, animation, transitionName) {
  if (motion) {
    return motion;
  }
  if (animation) {
    return {
      motionName: "".concat(prefixCls, "-").concat(animation)
    };
  }
  if (transitionName) {
    return {
      motionName: transitionName
    };
  }
  return null;
}
function getWin(ele) {
  return ele.ownerDocument.defaultView;
}
function collectScroller(ele) {
  var scrollerList = [];
  var current = ele === null || ele === void 0 ? void 0 : ele.parentElement;
  var scrollStyle = ["hidden", "scroll", "clip", "auto"];
  while (current) {
    var _getWin$getComputedSt = getWin(current).getComputedStyle(current), overflowX = _getWin$getComputedSt.overflowX, overflowY = _getWin$getComputedSt.overflowY, overflow = _getWin$getComputedSt.overflow;
    if ([overflowX, overflowY, overflow].some(function (o) {
      return scrollStyle.includes(o);
    })) {
      scrollerList.push(current);
    }
    current = current.parentElement;
  }
  return scrollerList;
}
function toNum(num2) {
  var defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return Number.isNaN(num2) ? defaultValue : num2;
}
function getPxValue(val) {
  return toNum(parseFloat(val), 0);
}
function getVisibleArea(initArea, scrollerList) {
  var visibleArea = _objectSpread2({}, initArea);
  (scrollerList || []).forEach(function (ele) {
    if (ele instanceof HTMLBodyElement || ele instanceof HTMLHtmlElement) {
      return;
    }
    var _getWin$getComputedSt2 = getWin(ele).getComputedStyle(ele), overflow = _getWin$getComputedSt2.overflow, overflowClipMargin = _getWin$getComputedSt2.overflowClipMargin, borderTopWidth = _getWin$getComputedSt2.borderTopWidth, borderBottomWidth = _getWin$getComputedSt2.borderBottomWidth, borderLeftWidth = _getWin$getComputedSt2.borderLeftWidth, borderRightWidth = _getWin$getComputedSt2.borderRightWidth;
    var eleRect = ele.getBoundingClientRect();
    var eleOutHeight = ele.offsetHeight, eleInnerHeight = ele.clientHeight, eleOutWidth = ele.offsetWidth, eleInnerWidth = ele.clientWidth;
    var borderTopNum = getPxValue(borderTopWidth);
    var borderBottomNum = getPxValue(borderBottomWidth);
    var borderLeftNum = getPxValue(borderLeftWidth);
    var borderRightNum = getPxValue(borderRightWidth);
    var scaleX = toNum(Math.round(eleRect.width / eleOutWidth * 1e3) / 1e3);
    var scaleY = toNum(Math.round(eleRect.height / eleOutHeight * 1e3) / 1e3);
    var eleScrollWidth = (eleOutWidth - eleInnerWidth - borderLeftNum - borderRightNum) * scaleX;
    var eleScrollHeight = (eleOutHeight - eleInnerHeight - borderTopNum - borderBottomNum) * scaleY;
    var scaledBorderTopWidth = borderTopNum * scaleY;
    var scaledBorderBottomWidth = borderBottomNum * scaleY;
    var scaledBorderLeftWidth = borderLeftNum * scaleX;
    var scaledBorderRightWidth = borderRightNum * scaleX;
    var clipMarginWidth = 0;
    var clipMarginHeight = 0;
    if (overflow === "clip") {
      var clipNum = getPxValue(overflowClipMargin);
      clipMarginWidth = clipNum * scaleX;
      clipMarginHeight = clipNum * scaleY;
    }
    var eleLeft = eleRect.x + scaledBorderLeftWidth - clipMarginWidth;
    var eleTop = eleRect.y + scaledBorderTopWidth - clipMarginHeight;
    var eleRight = eleLeft + eleRect.width + 2 * clipMarginWidth - scaledBorderLeftWidth - scaledBorderRightWidth - eleScrollWidth;
    var eleBottom = eleTop + eleRect.height + 2 * clipMarginHeight - scaledBorderTopWidth - scaledBorderBottomWidth - eleScrollHeight;
    visibleArea.left = Math.max(visibleArea.left, eleLeft);
    visibleArea.top = Math.max(visibleArea.top, eleTop);
    visibleArea.right = Math.min(visibleArea.right, eleRight);
    visibleArea.bottom = Math.min(visibleArea.bottom, eleBottom);
  });
  return visibleArea;
}
function getUnitOffset(size2) {
  var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var offsetStr = "".concat(offset);
  var cells = offsetStr.match(/^(.*)\%$/);
  if (cells) {
    return size2 * (parseFloat(cells[1]) / 100);
  }
  return parseFloat(offsetStr);
}
function getNumberOffset(rect, offset) {
  var _ref = offset || [], _ref2 = _slicedToArray(_ref, 2), offsetX = _ref2[0], offsetY = _ref2[1];
  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];
}
function splitPoints() {
  var points = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  return [points[0], points[1]];
}
function getAlignPoint(rect, points) {
  var topBottom = points[0];
  var leftRight = points[1];
  var x;
  var y;
  if (topBottom === "t") {
    y = rect.y;
  } else if (topBottom === "b") {
    y = rect.y + rect.height;
  } else {
    y = rect.y + rect.height / 2;
  }
  if (leftRight === "l") {
    x = rect.x;
  } else if (leftRight === "r") {
    x = rect.x + rect.width;
  } else {
    x = rect.x + rect.width / 2;
  }
  return {
    x,
    y
  };
}
function reversePoints(points, index2) {
  var reverseMap = {
    t: "b",
    b: "t",
    l: "r",
    r: "l"
  };
  return points.map(function (point2, i) {
    if (i === index2) {
      return reverseMap[point2] || "c";
    }
    return point2;
  }).join("");
}
function useAlign(open2, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {
  var _React$useState = reactExports.useState({
    ready: false,
    offsetX: 0,
    offsetY: 0,
    offsetR: 0,
    offsetB: 0,
    arrowX: 0,
    arrowY: 0,
    scaleX: 1,
    scaleY: 1,
    align: builtinPlacements[placement] || {}
  }), _React$useState2 = _slicedToArray(_React$useState, 2), offsetInfo = _React$useState2[0], setOffsetInfo = _React$useState2[1];
  var alignCountRef = reactExports.useRef(0);
  var scrollerList = reactExports.useMemo(function () {
    if (!popupEle) {
      return [];
    }
    return collectScroller(popupEle);
  }, [popupEle]);
  var prevFlipRef = reactExports.useRef({});
  var resetFlipCache = function resetFlipCache2() {
    prevFlipRef.current = {};
  };
  if (!open2) {
    resetFlipCache();
  }
  var onAlign = useEvent(function () {
    if (popupEle && target && open2) {
      let getIntersectionVisibleArea = function (offsetX, offsetY) {
        var area2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : visibleArea;
        var l2 = popupRect.x + offsetX;
        var t2 = popupRect.y + offsetY;
        var r2 = l2 + popupWidth;
        var b2 = t2 + popupHeight;
        var visibleL = Math.max(l2, area2.left);
        var visibleT = Math.max(t2, area2.top);
        var visibleR = Math.min(r2, area2.right);
        var visibleB = Math.min(b2, area2.bottom);
        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));
      }, syncNextPopupPosition = function () {
        nextPopupY = popupRect.y + nextOffsetY;
        nextPopupBottom = nextPopupY + popupHeight;
        nextPopupX = popupRect.x + nextOffsetX;
        nextPopupRight = nextPopupX + popupWidth;
      };
      var _popupElement$parentE, _popupElement$parentE2;
      var popupElement = popupEle;
      var doc = popupElement.ownerDocument;
      var win = getWin(popupElement);
      var _win$getComputedStyle = win.getComputedStyle(popupElement), width = _win$getComputedStyle.width, height = _win$getComputedStyle.height, popupPosition = _win$getComputedStyle.position;
      var originLeft = popupElement.style.left;
      var originTop = popupElement.style.top;
      var originRight = popupElement.style.right;
      var originBottom = popupElement.style.bottom;
      var originOverflow = popupElement.style.overflow;
      var placementInfo = _objectSpread2(_objectSpread2({}, builtinPlacements[placement]), popupAlign);
      var placeholderElement = doc.createElement("div");
      (_popupElement$parentE = popupElement.parentElement) === null || _popupElement$parentE === void 0 || _popupElement$parentE.appendChild(placeholderElement);
      placeholderElement.style.left = "".concat(popupElement.offsetLeft, "px");
      placeholderElement.style.top = "".concat(popupElement.offsetTop, "px");
      placeholderElement.style.position = popupPosition;
      placeholderElement.style.height = "".concat(popupElement.offsetHeight, "px");
      placeholderElement.style.width = "".concat(popupElement.offsetWidth, "px");
      popupElement.style.left = "0";
      popupElement.style.top = "0";
      popupElement.style.right = "auto";
      popupElement.style.bottom = "auto";
      popupElement.style.overflow = "hidden";
      var targetRect;
      if (Array.isArray(target)) {
        targetRect = {
          x: target[0],
          y: target[1],
          width: 0,
          height: 0
        };
      } else {
        var rect = target.getBoundingClientRect();
        targetRect = {
          x: rect.x,
          y: rect.y,
          width: rect.width,
          height: rect.height
        };
      }
      var popupRect = popupElement.getBoundingClientRect();
      var _doc$documentElement = doc.documentElement, clientWidth = _doc$documentElement.clientWidth, clientHeight = _doc$documentElement.clientHeight, scrollWidth = _doc$documentElement.scrollWidth, scrollHeight = _doc$documentElement.scrollHeight, scrollTop = _doc$documentElement.scrollTop, scrollLeft = _doc$documentElement.scrollLeft;
      var popupHeight = popupRect.height;
      var popupWidth = popupRect.width;
      var targetHeight = targetRect.height;
      var targetWidth = targetRect.width;
      var visibleRegion = {
        left: 0,
        top: 0,
        right: clientWidth,
        bottom: clientHeight
      };
      var scrollRegion = {
        left: -scrollLeft,
        top: -scrollTop,
        right: scrollWidth - scrollLeft,
        bottom: scrollHeight - scrollTop
      };
      var htmlRegion = placementInfo.htmlRegion;
      var VISIBLE = "visible";
      var VISIBLE_FIRST = "visibleFirst";
      if (htmlRegion !== "scroll" && htmlRegion !== VISIBLE_FIRST) {
        htmlRegion = VISIBLE;
      }
      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;
      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);
      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);
      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea;
      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea;
      popupElement.style.left = "auto";
      popupElement.style.top = "auto";
      popupElement.style.right = "0";
      popupElement.style.bottom = "0";
      var popupMirrorRect = popupElement.getBoundingClientRect();
      popupElement.style.left = originLeft;
      popupElement.style.top = originTop;
      popupElement.style.right = originRight;
      popupElement.style.bottom = originBottom;
      popupElement.style.overflow = originOverflow;
      (_popupElement$parentE2 = popupElement.parentElement) === null || _popupElement$parentE2 === void 0 || _popupElement$parentE2.removeChild(placeholderElement);
      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1e3) / 1e3);
      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1e3) / 1e3);
      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {
        return;
      }
      var offset = placementInfo.offset, targetOffset = placementInfo.targetOffset;
      var _getNumberOffset = getNumberOffset(popupRect, offset), _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2), popupOffsetX = _getNumberOffset2[0], popupOffsetY = _getNumberOffset2[1];
      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset), _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2), targetOffsetX = _getNumberOffset4[0], targetOffsetY = _getNumberOffset4[1];
      targetRect.x -= targetOffsetX;
      targetRect.y -= targetOffsetY;
      var _ref3 = placementInfo.points || [], _ref4 = _slicedToArray(_ref3, 2), popupPoint = _ref4[0], targetPoint = _ref4[1];
      var targetPoints = splitPoints(targetPoint);
      var popupPoints = splitPoints(popupPoint);
      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);
      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);
      var nextAlignInfo = _objectSpread2({}, placementInfo);
      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;
      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;
      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);
      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea);
      var targetAlignPointTL = getAlignPoint(targetRect, ["t", "l"]);
      var popupAlignPointTL = getAlignPoint(popupRect, ["t", "l"]);
      var targetAlignPointBR = getAlignPoint(targetRect, ["b", "r"]);
      var popupAlignPointBR = getAlignPoint(popupRect, ["b", "r"]);
      var overflow = placementInfo.overflow || {};
      var adjustX = overflow.adjustX, adjustY = overflow.adjustY, shiftX = overflow.shiftX, shiftY = overflow.shiftY;
      var supportAdjust = function supportAdjust2(val) {
        if (typeof val === "boolean") {
          return val;
        }
        return val >= 0;
      };
      var nextPopupY;
      var nextPopupBottom;
      var nextPopupX;
      var nextPopupRight;
      syncNextPopupPosition();
      var needAdjustY = supportAdjust(adjustY);
      var sameTB = popupPoints[0] === targetPoints[0];
      if (needAdjustY && popupPoints[0] === "t" && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {
        var tmpNextOffsetY = nextOffsetY;
        if (sameTB) {
          tmpNextOffsetY -= popupHeight - targetHeight;
        } else {
          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;
        }
        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);
        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);
        if (
          // Of course use larger one
          newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one
            newVisibleRecommendArea >= originIntersectionRecommendArea)
        ) {
          prevFlipRef.current.bt = true;
          nextOffsetY = tmpNextOffsetY;
          popupOffsetY = -popupOffsetY;
          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];
        } else {
          prevFlipRef.current.bt = false;
        }
      }
      if (needAdjustY && popupPoints[0] === "b" && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {
        var _tmpNextOffsetY = nextOffsetY;
        if (sameTB) {
          _tmpNextOffsetY += popupHeight - targetHeight;
        } else {
          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;
        }
        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);
        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);
        if (
          // Of course use larger one
          _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one
            _newVisibleRecommendArea >= originIntersectionRecommendArea)
        ) {
          prevFlipRef.current.tb = true;
          nextOffsetY = _tmpNextOffsetY;
          popupOffsetY = -popupOffsetY;
          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];
        } else {
          prevFlipRef.current.tb = false;
        }
      }
      var needAdjustX = supportAdjust(adjustX);
      var sameLR = popupPoints[1] === targetPoints[1];
      if (needAdjustX && popupPoints[1] === "l" && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {
        var tmpNextOffsetX = nextOffsetX;
        if (sameLR) {
          tmpNextOffsetX -= popupWidth - targetWidth;
        } else {
          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;
        }
        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);
        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);
        if (
          // Of course use larger one
          _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one
            _newVisibleRecommendArea2 >= originIntersectionRecommendArea)
        ) {
          prevFlipRef.current.rl = true;
          nextOffsetX = tmpNextOffsetX;
          popupOffsetX = -popupOffsetX;
          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];
        } else {
          prevFlipRef.current.rl = false;
        }
      }
      if (needAdjustX && popupPoints[1] === "r" && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {
        var _tmpNextOffsetX = nextOffsetX;
        if (sameLR) {
          _tmpNextOffsetX += popupWidth - targetWidth;
        } else {
          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;
        }
        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);
        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);
        if (
          // Of course use larger one
          _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one
            _newVisibleRecommendArea3 >= originIntersectionRecommendArea)
        ) {
          prevFlipRef.current.lr = true;
          nextOffsetX = _tmpNextOffsetX;
          popupOffsetX = -popupOffsetX;
          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];
        } else {
          prevFlipRef.current.lr = false;
        }
      }
      syncNextPopupPosition();
      var numShiftX = shiftX === true ? 0 : shiftX;
      if (typeof numShiftX === "number") {
        if (nextPopupX < visibleRegionArea.left) {
          nextOffsetX -= nextPopupX - visibleRegionArea.left - popupOffsetX;
          if (targetRect.x + targetWidth < visibleRegionArea.left + numShiftX) {
            nextOffsetX += targetRect.x - visibleRegionArea.left + targetWidth - numShiftX;
          }
        }
        if (nextPopupRight > visibleRegionArea.right) {
          nextOffsetX -= nextPopupRight - visibleRegionArea.right - popupOffsetX;
          if (targetRect.x > visibleRegionArea.right - numShiftX) {
            nextOffsetX += targetRect.x - visibleRegionArea.right + numShiftX;
          }
        }
      }
      var numShiftY = shiftY === true ? 0 : shiftY;
      if (typeof numShiftY === "number") {
        if (nextPopupY < visibleRegionArea.top) {
          nextOffsetY -= nextPopupY - visibleRegionArea.top - popupOffsetY;
          if (targetRect.y + targetHeight < visibleRegionArea.top + numShiftY) {
            nextOffsetY += targetRect.y - visibleRegionArea.top + targetHeight - numShiftY;
          }
        }
        if (nextPopupBottom > visibleRegionArea.bottom) {
          nextOffsetY -= nextPopupBottom - visibleRegionArea.bottom - popupOffsetY;
          if (targetRect.y > visibleRegionArea.bottom - numShiftY) {
            nextOffsetY += targetRect.y - visibleRegionArea.bottom + numShiftY;
          }
        }
      }
      var popupLeft = popupRect.x + nextOffsetX;
      var popupRight = popupLeft + popupWidth;
      var popupTop = popupRect.y + nextOffsetY;
      var popupBottom = popupTop + popupHeight;
      var targetLeft = targetRect.x;
      var targetRight = targetLeft + targetWidth;
      var targetTop = targetRect.y;
      var targetBottom = targetTop + targetHeight;
      var maxLeft = Math.max(popupLeft, targetLeft);
      var minRight = Math.min(popupRight, targetRight);
      var xCenter = (maxLeft + minRight) / 2;
      var nextArrowX = xCenter - popupLeft;
      var maxTop = Math.max(popupTop, targetTop);
      var minBottom = Math.min(popupBottom, targetBottom);
      var yCenter = (maxTop + minBottom) / 2;
      var nextArrowY = yCenter - popupTop;
      onPopupAlign === null || onPopupAlign === void 0 || onPopupAlign(popupEle, nextAlignInfo);
      var offsetX4Right = popupMirrorRect.right - popupRect.x - (nextOffsetX + popupRect.width);
      var offsetY4Bottom = popupMirrorRect.bottom - popupRect.y - (nextOffsetY + popupRect.height);
      setOffsetInfo({
        ready: true,
        offsetX: nextOffsetX / _scaleX,
        offsetY: nextOffsetY / _scaleY,
        offsetR: offsetX4Right / _scaleX,
        offsetB: offsetY4Bottom / _scaleY,
        arrowX: nextArrowX / _scaleX,
        arrowY: nextArrowY / _scaleY,
        scaleX: _scaleX,
        scaleY: _scaleY,
        align: nextAlignInfo
      });
    }
  });
  var triggerAlign = function triggerAlign2() {
    alignCountRef.current += 1;
    var id2 = alignCountRef.current;
    Promise.resolve().then(function () {
      if (alignCountRef.current === id2) {
        onAlign();
      }
    });
  };
  var resetReady = function resetReady2() {
    setOffsetInfo(function (ori) {
      return _objectSpread2(_objectSpread2({}, ori), {}, {
        ready: false
      });
    });
  };
  useLayoutEffect(resetReady, [placement]);
  useLayoutEffect(function () {
    if (!open2) {
      resetReady();
    }
  }, [open2]);
  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.offsetR, offsetInfo.offsetB, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];
}
function useWatch(open2, target, popup, onAlign, onScroll) {
  useLayoutEffect(function () {
    if (open2 && target && popup) {
      let notifyScroll = function () {
        onAlign();
        onScroll();
      };
      var targetElement = target;
      var popupElement = popup;
      var targetScrollList = collectScroller(targetElement);
      var popupScrollList = collectScroller(popupElement);
      var win = getWin(popupElement);
      var mergedList = new Set([win].concat(_toConsumableArray(targetScrollList), _toConsumableArray(popupScrollList)));
      mergedList.forEach(function (scroller) {
        scroller.addEventListener("scroll", notifyScroll, {
          passive: true
        });
      });
      win.addEventListener("resize", notifyScroll, {
        passive: true
      });
      onAlign();
      return function () {
        mergedList.forEach(function (scroller) {
          scroller.removeEventListener("scroll", notifyScroll);
          win.removeEventListener("resize", notifyScroll);
        });
      };
    }
  }, [open2, target, popup]);
}
function useWinClick(open2, clickToHide, targetEle, popupEle, mask, maskClosable, inPopupOrChild, triggerOpen) {
  var openRef = reactExports.useRef(open2);
  openRef.current = open2;
  reactExports.useEffect(function () {
    if (clickToHide && popupEle && (!mask || maskClosable)) {
      var onTriggerClose = function onTriggerClose2(_ref) {
        var target = _ref.target;
        if (openRef.current && !inPopupOrChild(target)) {
          triggerOpen(false);
        }
      };
      var win = getWin(popupEle);
      win.addEventListener("mousedown", onTriggerClose, true);
      win.addEventListener("contextmenu", onTriggerClose, true);
      var targetShadowRoot = getShadowRoot(targetEle);
      if (targetShadowRoot) {
        targetShadowRoot.addEventListener("mousedown", onTriggerClose, true);
        targetShadowRoot.addEventListener("contextmenu", onTriggerClose, true);
      }
      return function () {
        win.removeEventListener("mousedown", onTriggerClose, true);
        win.removeEventListener("contextmenu", onTriggerClose, true);
        if (targetShadowRoot) {
          targetShadowRoot.removeEventListener("mousedown", onTriggerClose, true);
          targetShadowRoot.removeEventListener("contextmenu", onTriggerClose, true);
        }
      };
    }
  }, [clickToHide, targetEle, popupEle, mask, maskClosable]);
}
var _excluded$4 = ["prefixCls", "children", "action", "showAction", "hideAction", "popupVisible", "defaultPopupVisible", "onPopupVisibleChange", "afterPopupVisibleChange", "mouseEnterDelay", "mouseLeaveDelay", "focusDelay", "blurDelay", "mask", "maskClosable", "getPopupContainer", "forceRender", "autoDestroy", "destroyPopupOnHide", "popup", "popupClassName", "popupStyle", "popupPlacement", "builtinPlacements", "popupAlign", "zIndex", "stretch", "getPopupClassNameFromAlign", "fresh", "alignPoint", "onPopupClick", "onPopupAlign", "arrow", "popupMotion", "maskMotion", "popupTransitionName", "popupAnimation", "maskTransitionName", "maskAnimation", "className", "getTriggerDOMNode"];
function generateTrigger() {
  var PortalComponent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Portal;
  var Trigger2 = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
    var _props$prefixCls = props.prefixCls, prefixCls = _props$prefixCls === void 0 ? "rc-trigger-popup" : _props$prefixCls, children = props.children, _props$action = props.action, action = _props$action === void 0 ? "hover" : _props$action, showAction = props.showAction, hideAction = props.hideAction, popupVisible = props.popupVisible, defaultPopupVisible = props.defaultPopupVisible, onPopupVisibleChange = props.onPopupVisibleChange, afterPopupVisibleChange = props.afterPopupVisibleChange, mouseEnterDelay = props.mouseEnterDelay, _props$mouseLeaveDela = props.mouseLeaveDelay, mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela, focusDelay = props.focusDelay, blurDelay = props.blurDelay, mask = props.mask, _props$maskClosable = props.maskClosable, maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable, getPopupContainer = props.getPopupContainer, forceRender = props.forceRender, autoDestroy = props.autoDestroy, destroyPopupOnHide = props.destroyPopupOnHide, popup = props.popup, popupClassName = props.popupClassName, popupStyle = props.popupStyle, popupPlacement = props.popupPlacement, _props$builtinPlaceme = props.builtinPlacements, builtinPlacements = _props$builtinPlaceme === void 0 ? {} : _props$builtinPlaceme, popupAlign = props.popupAlign, zIndex = props.zIndex, stretch = props.stretch, getPopupClassNameFromAlign = props.getPopupClassNameFromAlign, fresh = props.fresh, alignPoint = props.alignPoint, onPopupClick = props.onPopupClick, onPopupAlign = props.onPopupAlign, arrow = props.arrow, popupMotion = props.popupMotion, maskMotion = props.maskMotion, popupTransitionName = props.popupTransitionName, popupAnimation = props.popupAnimation, maskTransitionName = props.maskTransitionName, maskAnimation = props.maskAnimation, className = props.className, getTriggerDOMNode = props.getTriggerDOMNode, restProps = _objectWithoutProperties(props, _excluded$4);
    var mergedAutoDestroy = autoDestroy || destroyPopupOnHide || false;
    var _React$useState = reactExports.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), mobile = _React$useState2[0], setMobile = _React$useState2[1];
    useLayoutEffect(function () {
      setMobile(isMobile());
    }, []);
    var subPopupElements = reactExports.useRef({});
    var parentContext = reactExports.useContext(TriggerContext);
    var context2 = reactExports.useMemo(function () {
      return {
        registerSubPopup: function registerSubPopup(id22, subPopupEle) {
          subPopupElements.current[id22] = subPopupEle;
          parentContext === null || parentContext === void 0 || parentContext.registerSubPopup(id22, subPopupEle);
        }
      };
    }, [parentContext]);
    var id2 = useId();
    var _React$useState3 = reactExports.useState(null), _React$useState4 = _slicedToArray(_React$useState3, 2), popupEle = _React$useState4[0], setPopupEle = _React$useState4[1];
    var externalPopupRef = reactExports.useRef(null);
    var setPopupRef = useEvent(function (node2) {
      externalPopupRef.current = node2;
      if (isDOM(node2) && popupEle !== node2) {
        setPopupEle(node2);
      }
      parentContext === null || parentContext === void 0 || parentContext.registerSubPopup(id2, node2);
    });
    var _React$useState5 = reactExports.useState(null), _React$useState6 = _slicedToArray(_React$useState5, 2), targetEle = _React$useState6[0], setTargetEle = _React$useState6[1];
    var externalForwardRef = reactExports.useRef(null);
    var setTargetRef = useEvent(function (node2) {
      if (isDOM(node2) && targetEle !== node2) {
        setTargetEle(node2);
        externalForwardRef.current = node2;
      }
    });
    var child = reactExports.Children.only(children);
    var originChildProps = (child === null || child === void 0 ? void 0 : child.props) || {};
    var cloneProps = {};
    var inPopupOrChild = useEvent(function (ele) {
      var _getShadowRoot, _getShadowRoot2;
      var childDOM = targetEle;
      return (childDOM === null || childDOM === void 0 ? void 0 : childDOM.contains(ele)) || ((_getShadowRoot = getShadowRoot(childDOM)) === null || _getShadowRoot === void 0 ? void 0 : _getShadowRoot.host) === ele || ele === childDOM || (popupEle === null || popupEle === void 0 ? void 0 : popupEle.contains(ele)) || ((_getShadowRoot2 = getShadowRoot(popupEle)) === null || _getShadowRoot2 === void 0 ? void 0 : _getShadowRoot2.host) === ele || ele === popupEle || Object.values(subPopupElements.current).some(function (subPopupEle) {
        return (subPopupEle === null || subPopupEle === void 0 ? void 0 : subPopupEle.contains(ele)) || ele === subPopupEle;
      });
    });
    var mergePopupMotion = getMotion(prefixCls, popupMotion, popupAnimation, popupTransitionName);
    var mergeMaskMotion = getMotion(prefixCls, maskMotion, maskAnimation, maskTransitionName);
    var _React$useState7 = reactExports.useState(defaultPopupVisible || false), _React$useState8 = _slicedToArray(_React$useState7, 2), internalOpen = _React$useState8[0], setInternalOpen = _React$useState8[1];
    var mergedOpen = popupVisible !== null && popupVisible !== void 0 ? popupVisible : internalOpen;
    var setMergedOpen = useEvent(function (nextOpen) {
      if (popupVisible === void 0) {
        setInternalOpen(nextOpen);
      }
    });
    useLayoutEffect(function () {
      setInternalOpen(popupVisible || false);
    }, [popupVisible]);
    var openRef = reactExports.useRef(mergedOpen);
    openRef.current = mergedOpen;
    var lastTriggerRef = reactExports.useRef([]);
    lastTriggerRef.current = [];
    var internalTriggerOpen = useEvent(function (nextOpen) {
      var _lastTriggerRef$curre;
      setMergedOpen(nextOpen);
      if (((_lastTriggerRef$curre = lastTriggerRef.current[lastTriggerRef.current.length - 1]) !== null && _lastTriggerRef$curre !== void 0 ? _lastTriggerRef$curre : mergedOpen) !== nextOpen) {
        lastTriggerRef.current.push(nextOpen);
        onPopupVisibleChange === null || onPopupVisibleChange === void 0 || onPopupVisibleChange(nextOpen);
      }
    });
    var delayRef = reactExports.useRef();
    var clearDelay = function clearDelay2() {
      clearTimeout(delayRef.current);
    };
    var triggerOpen = function triggerOpen2(nextOpen) {
      var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      clearDelay();
      if (delay === 0) {
        internalTriggerOpen(nextOpen);
      } else {
        delayRef.current = setTimeout(function () {
          internalTriggerOpen(nextOpen);
        }, delay * 1e3);
      }
    };
    reactExports.useEffect(function () {
      return clearDelay;
    }, []);
    var _React$useState9 = reactExports.useState(false), _React$useState10 = _slicedToArray(_React$useState9, 2), inMotion = _React$useState10[0], setInMotion = _React$useState10[1];
    useLayoutEffect(function (firstMount) {
      if (!firstMount || mergedOpen) {
        setInMotion(true);
      }
    }, [mergedOpen]);
    var _React$useState11 = reactExports.useState(null), _React$useState12 = _slicedToArray(_React$useState11, 2), motionPrepareResolve = _React$useState12[0], setMotionPrepareResolve = _React$useState12[1];
    var _React$useState13 = reactExports.useState([0, 0]), _React$useState14 = _slicedToArray(_React$useState13, 2), mousePos = _React$useState14[0], setMousePos = _React$useState14[1];
    var setMousePosByEvent = function setMousePosByEvent2(event) {
      setMousePos([event.clientX, event.clientY]);
    };
    var _useAlign = useAlign(mergedOpen, popupEle, alignPoint ? mousePos : targetEle, popupPlacement, builtinPlacements, popupAlign, onPopupAlign), _useAlign2 = _slicedToArray(_useAlign, 11), ready = _useAlign2[0], offsetX = _useAlign2[1], offsetY = _useAlign2[2], offsetR = _useAlign2[3], offsetB = _useAlign2[4], arrowX = _useAlign2[5], arrowY = _useAlign2[6], scaleX = _useAlign2[7], scaleY = _useAlign2[8], alignInfo = _useAlign2[9], onAlign = _useAlign2[10];
    var _useAction = useAction(mobile, action, showAction, hideAction), _useAction2 = _slicedToArray(_useAction, 2), showActions = _useAction2[0], hideActions = _useAction2[1];
    var clickToShow = showActions.has("click");
    var clickToHide = hideActions.has("click") || hideActions.has("contextMenu");
    var triggerAlign = useEvent(function () {
      if (!inMotion) {
        onAlign();
      }
    });
    var onScroll = function onScroll2() {
      if (openRef.current && alignPoint && clickToHide) {
        triggerOpen(false);
      }
    };
    useWatch(mergedOpen, targetEle, popupEle, triggerAlign, onScroll);
    useLayoutEffect(function () {
      triggerAlign();
    }, [mousePos, popupPlacement]);
    useLayoutEffect(function () {
      if (mergedOpen && !(builtinPlacements !== null && builtinPlacements !== void 0 && builtinPlacements[popupPlacement])) {
        triggerAlign();
      }
    }, [JSON.stringify(popupAlign)]);
    var alignedClassName = reactExports.useMemo(function () {
      var baseClassName = getAlignPopupClassName(builtinPlacements, prefixCls, alignInfo, alignPoint);
      return classNames(baseClassName, getPopupClassNameFromAlign === null || getPopupClassNameFromAlign === void 0 ? void 0 : getPopupClassNameFromAlign(alignInfo));
    }, [alignInfo, getPopupClassNameFromAlign, builtinPlacements, prefixCls, alignPoint]);
    reactExports.useImperativeHandle(ref, function () {
      return {
        nativeElement: externalForwardRef.current,
        popupElement: externalPopupRef.current,
        forceAlign: triggerAlign
      };
    });
    var _React$useState15 = reactExports.useState(0), _React$useState16 = _slicedToArray(_React$useState15, 2), targetWidth = _React$useState16[0], setTargetWidth = _React$useState16[1];
    var _React$useState17 = reactExports.useState(0), _React$useState18 = _slicedToArray(_React$useState17, 2), targetHeight = _React$useState18[0], setTargetHeight = _React$useState18[1];
    var syncTargetSize = function syncTargetSize2() {
      if (stretch && targetEle) {
        var rect = targetEle.getBoundingClientRect();
        setTargetWidth(rect.width);
        setTargetHeight(rect.height);
      }
    };
    var onTargetResize = function onTargetResize2() {
      syncTargetSize();
      triggerAlign();
    };
    var onVisibleChanged = function onVisibleChanged2(visible) {
      setInMotion(false);
      onAlign();
      afterPopupVisibleChange === null || afterPopupVisibleChange === void 0 || afterPopupVisibleChange(visible);
    };
    var onPrepare = function onPrepare2() {
      return new Promise(function (resolve) {
        syncTargetSize();
        setMotionPrepareResolve(function () {
          return resolve;
        });
      });
    };
    useLayoutEffect(function () {
      if (motionPrepareResolve) {
        onAlign();
        motionPrepareResolve();
        setMotionPrepareResolve(null);
      }
    }, [motionPrepareResolve]);
    function wrapperAction(eventName, nextOpen, delay, preEvent) {
      cloneProps[eventName] = function (event) {
        var _originChildProps$eve;
        preEvent === null || preEvent === void 0 || preEvent(event);
        triggerOpen(nextOpen, delay);
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        (_originChildProps$eve = originChildProps[eventName]) === null || _originChildProps$eve === void 0 || _originChildProps$eve.call.apply(_originChildProps$eve, [originChildProps, event].concat(args));
      };
    }
    if (clickToShow || clickToHide) {
      cloneProps.onClick = function (event) {
        var _originChildProps$onC;
        if (openRef.current && clickToHide) {
          triggerOpen(false);
        } else if (!openRef.current && clickToShow) {
          setMousePosByEvent(event);
          triggerOpen(true);
        }
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        (_originChildProps$onC = originChildProps.onClick) === null || _originChildProps$onC === void 0 || _originChildProps$onC.call.apply(_originChildProps$onC, [originChildProps, event].concat(args));
      };
    }
    useWinClick(mergedOpen, clickToHide, targetEle, popupEle, mask, maskClosable, inPopupOrChild, triggerOpen);
    var hoverToShow = showActions.has("hover");
    var hoverToHide = hideActions.has("hover");
    var onPopupMouseEnter;
    var onPopupMouseLeave;
    if (hoverToShow) {
      wrapperAction("onMouseEnter", true, mouseEnterDelay, function (event) {
        setMousePosByEvent(event);
      });
      wrapperAction("onPointerEnter", true, mouseEnterDelay, function (event) {
        setMousePosByEvent(event);
      });
      onPopupMouseEnter = function onPopupMouseEnter2(event) {
        if ((mergedOpen || inMotion) && popupEle !== null && popupEle !== void 0 && popupEle.contains(event.target)) {
          triggerOpen(true, mouseEnterDelay);
        }
      };
      if (alignPoint) {
        cloneProps.onMouseMove = function (event) {
          var _originChildProps$onM;
          (_originChildProps$onM = originChildProps.onMouseMove) === null || _originChildProps$onM === void 0 || _originChildProps$onM.call(originChildProps, event);
        };
      }
    }
    if (hoverToHide) {
      wrapperAction("onMouseLeave", false, mouseLeaveDelay);
      wrapperAction("onPointerLeave", false, mouseLeaveDelay);
      onPopupMouseLeave = function onPopupMouseLeave2() {
        triggerOpen(false, mouseLeaveDelay);
      };
    }
    if (showActions.has("focus")) {
      wrapperAction("onFocus", true, focusDelay);
    }
    if (hideActions.has("focus")) {
      wrapperAction("onBlur", false, blurDelay);
    }
    if (showActions.has("contextMenu")) {
      cloneProps.onContextMenu = function (event) {
        var _originChildProps$onC2;
        if (openRef.current && hideActions.has("contextMenu")) {
          triggerOpen(false);
        } else {
          setMousePosByEvent(event);
          triggerOpen(true);
        }
        event.preventDefault();
        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          args[_key3 - 1] = arguments[_key3];
        }
        (_originChildProps$onC2 = originChildProps.onContextMenu) === null || _originChildProps$onC2 === void 0 || _originChildProps$onC2.call.apply(_originChildProps$onC2, [originChildProps, event].concat(args));
      };
    }
    if (className) {
      cloneProps.className = classNames(originChildProps.className, className);
    }
    var mergedChildrenProps = _objectSpread2(_objectSpread2({}, originChildProps), cloneProps);
    var passedProps = {};
    var passedEventList = ["onContextMenu", "onClick", "onMouseDown", "onTouchStart", "onMouseEnter", "onMouseLeave", "onFocus", "onBlur"];
    passedEventList.forEach(function (eventName) {
      if (restProps[eventName]) {
        passedProps[eventName] = function () {
          var _mergedChildrenProps$;
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          (_mergedChildrenProps$ = mergedChildrenProps[eventName]) === null || _mergedChildrenProps$ === void 0 || _mergedChildrenProps$.call.apply(_mergedChildrenProps$, [mergedChildrenProps].concat(args));
          restProps[eventName].apply(restProps, args);
        };
      }
    });
    var triggerNode = /* @__PURE__ */ reactExports.cloneElement(child, _objectSpread2(_objectSpread2({}, mergedChildrenProps), passedProps));
    var arrowPos = {
      x: arrowX,
      y: arrowY
    };
    var innerArrow = arrow ? _objectSpread2({}, arrow !== true ? arrow : {}) : null;
    return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
      disabled: !mergedOpen,
      ref: setTargetRef,
      onResize: onTargetResize
    }, /* @__PURE__ */ reactExports.createElement(TriggerWrapper, {
      getTriggerDOMNode
    }, triggerNode)), /* @__PURE__ */ reactExports.createElement(TriggerContext.Provider, {
      value: context2
    }, /* @__PURE__ */ reactExports.createElement(Popup$1, {
      portal: PortalComponent,
      ref: setPopupRef,
      prefixCls,
      popup,
      className: classNames(popupClassName, alignedClassName),
      style: popupStyle,
      target: targetEle,
      onMouseEnter: onPopupMouseEnter,
      onMouseLeave: onPopupMouseLeave,
      onPointerEnter: onPopupMouseEnter,
      zIndex,
      open: mergedOpen,
      keepDom: inMotion,
      fresh,
      onClick: onPopupClick,
      mask,
      motion: mergePopupMotion,
      maskMotion: mergeMaskMotion,
      onVisibleChanged,
      onPrepare,
      forceRender,
      autoDestroy: mergedAutoDestroy,
      getPopupContainer,
      align: alignInfo,
      arrow: innerArrow,
      arrowPos,
      ready,
      offsetX,
      offsetY,
      offsetR,
      offsetB,
      onAlign: triggerAlign,
      stretch,
      targetWidth: targetWidth / scaleX,
      targetHeight: targetHeight / scaleY
    })));
  });
  return Trigger2;
}
const Trigger = generateTrigger(Portal);
function getStatusClassNames(prefixCls, status, hasFeedback) {
  return classNames({
    ["".concat(prefixCls, "-status-success")]: status === "success",
    ["".concat(prefixCls, "-status-warning")]: status === "warning",
    ["".concat(prefixCls, "-status-error")]: status === "error",
    ["".concat(prefixCls, "-status-validating")]: status === "validating",
    ["".concat(prefixCls, "-has-feedback")]: hasFeedback
  });
}
const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;
const Variants = ["outlined", "borderless", "filled"];
const useVariant = function (variant) {
  let legacyBordered = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
  const ctxVariant = reactExports.useContext(VariantContext);
  let mergedVariant;
  if (typeof variant !== "undefined") {
    mergedVariant = variant;
  } else if (legacyBordered === false) {
    mergedVariant = "borderless";
  } else {
    mergedVariant = ctxVariant !== null && ctxVariant !== void 0 ? ctxVariant : "outlined";
  }
  const enableVariantCls = Variants.includes(mergedVariant);
  return [mergedVariant, enableVariantCls];
};
const FIXED_ITEM_MARGIN = 2;
const getMultipleSelectorUnit = (token2) => {
  const {
    multipleSelectItemHeight,
    paddingXXS,
    lineWidth
  } = token2;
  const basePadding = token2.max(token2.calc(paddingXXS).sub(lineWidth).equal(), 0);
  const containerPadding = token2.max(token2.calc(basePadding).sub(FIXED_ITEM_MARGIN).equal(), 0);
  return {
    basePadding,
    containerPadding,
    itemHeight: unit$1(multipleSelectItemHeight),
    itemLineHeight: unit$1(token2.calc(multipleSelectItemHeight).sub(token2.calc(token2.lineWidth).mul(2)).equal())
  };
};
const genOverflowStyle = (token2) => {
  const {
    componentCls,
    iconCls,
    borderRadiusSM,
    motionDurationSlow,
    paddingXS,
    multipleItemColorDisabled,
    multipleItemBorderColorDisabled,
    colorIcon,
    colorIconHover
  } = token2;
  const selectOverflowPrefixCls = "".concat(componentCls, "-selection-overflow");
  return {
    /**
     * Do not merge `height` & `line-height` under style with `selection` & `search`, since chrome
     * may update to redesign with its align logic.
     */
    // =========================== Overflow ===========================
    [selectOverflowPrefixCls]: {
      position: "relative",
      display: "flex",
      flex: "auto",
      flexWrap: "wrap",
      maxWidth: "100%",
      "&-item": {
        flex: "none",
        alignSelf: "center",
        maxWidth: "100%",
        display: "inline-flex"
      },
      // ======================== Selections ==========================
      ["".concat(componentCls, "-selection-item")]: {
        display: "flex",
        alignSelf: "center",
        flex: "none",
        boxSizing: "border-box",
        maxWidth: "100%",
        marginBlock: FIXED_ITEM_MARGIN,
        borderRadius: borderRadiusSM,
        cursor: "default",
        transition: "font-size ".concat(motionDurationSlow, ", line-height ").concat(motionDurationSlow, ", height ").concat(motionDurationSlow),
        marginInlineEnd: token2.calc(FIXED_ITEM_MARGIN).mul(2).equal(),
        paddingInlineStart: paddingXS,
        paddingInlineEnd: token2.calc(paddingXS).div(2).equal(),
        ["".concat(componentCls, "-disabled&")]: {
          color: multipleItemColorDisabled,
          borderColor: multipleItemBorderColorDisabled,
          cursor: "not-allowed"
        },
        // It's ok not to do this, but 24px makes bottom narrow in view should adjust
        "&-content": {
          display: "inline-block",
          marginInlineEnd: token2.calc(paddingXS).div(2).equal(),
          overflow: "hidden",
          whiteSpace: "pre",
          // fix whitespace wrapping. custom tags display all whitespace within.
          textOverflow: "ellipsis"
        },
        "&-remove": Object.assign(Object.assign({}, resetIcon()), {
          display: "inline-flex",
          alignItems: "center",
          color: colorIcon,
          fontWeight: "bold",
          fontSize: 10,
          lineHeight: "inherit",
          cursor: "pointer",
          ["> ".concat(iconCls)]: {
            verticalAlign: "-0.2em"
          },
          "&:hover": {
            color: colorIconHover
          }
        })
      }
    }
  };
};
var CheckOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z" } }] }, "name": "check", "theme": "outlined" };
var CheckOutlined = function CheckOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: CheckOutlined$1
  }));
};
var RefIcon$5 = /* @__PURE__ */ reactExports.forwardRef(CheckOutlined);
var DownOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z" } }] }, "name": "down", "theme": "outlined" };
var DownOutlined = function DownOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: DownOutlined$1
  }));
};
var RefIcon$4 = /* @__PURE__ */ reactExports.forwardRef(DownOutlined);
var SearchOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z" } }] }, "name": "search", "theme": "outlined" };
var SearchOutlined = function SearchOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: SearchOutlined$1
  }));
};
var RefIcon$3 = /* @__PURE__ */ reactExports.forwardRef(SearchOutlined);
function useIcons$1(_ref) {
  let {
    suffixIcon,
    clearIcon,
    menuItemSelectedIcon,
    removeIcon,
    loading: loading2,
    multiple,
    hasFeedback,
    prefixCls,
    showSuffixIcon,
    feedbackIcon,
    showArrow,
    componentName
  } = _ref;
  const mergedClearIcon = clearIcon !== null && clearIcon !== void 0 ? clearIcon : /* @__PURE__ */ reactExports.createElement(RefIcon$8, null);
  const getSuffixIconNode = (arrowIcon) => {
    if (suffixIcon === null && !hasFeedback && !showArrow) {
      return null;
    }
    return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, showSuffixIcon !== false && arrowIcon, hasFeedback && feedbackIcon);
  };
  let mergedSuffixIcon = null;
  if (suffixIcon !== void 0) {
    mergedSuffixIcon = getSuffixIconNode(suffixIcon);
  } else if (loading2) {
    mergedSuffixIcon = getSuffixIconNode(/* @__PURE__ */ reactExports.createElement(RefIcon$6, {
      spin: true
    }));
  } else {
    const iconCls = "".concat(prefixCls, "-suffix");
    mergedSuffixIcon = (_ref2) => {
      let {
        open: open2,
        showSearch
      } = _ref2;
      if (open2 && showSearch) {
        return getSuffixIconNode(/* @__PURE__ */ reactExports.createElement(RefIcon$3, {
          className: iconCls
        }));
      }
      return getSuffixIconNode(/* @__PURE__ */ reactExports.createElement(RefIcon$4, {
        className: iconCls
      }));
    };
  }
  let mergedItemIcon = null;
  if (menuItemSelectedIcon !== void 0) {
    mergedItemIcon = menuItemSelectedIcon;
  } else if (multiple) {
    mergedItemIcon = /* @__PURE__ */ reactExports.createElement(RefIcon$5, null);
  } else {
    mergedItemIcon = null;
  }
  let mergedRemoveIcon = null;
  if (removeIcon !== void 0) {
    mergedRemoveIcon = removeIcon;
  } else {
    mergedRemoveIcon = /* @__PURE__ */ reactExports.createElement(RefIcon$7, null);
  }
  return {
    clearIcon: mergedClearIcon,
    suffixIcon: mergedSuffixIcon,
    itemIcon: mergedItemIcon,
    removeIcon: mergedRemoveIcon
  };
}
function getArrowToken(token2) {
  const {
    sizePopupArrow,
    borderRadiusXS,
    borderRadiusOuter
  } = token2;
  const unitWidth = sizePopupArrow / 2;
  const ax = 0;
  const ay = unitWidth;
  const bx = borderRadiusOuter * 1 / Math.sqrt(2);
  const by = unitWidth - borderRadiusOuter * (1 - 1 / Math.sqrt(2));
  const cx = unitWidth - borderRadiusXS * (1 / Math.sqrt(2));
  const cy = borderRadiusOuter * (Math.sqrt(2) - 1) + borderRadiusXS * (1 / Math.sqrt(2));
  const dx = 2 * unitWidth - cx;
  const dy = cy;
  const ex = 2 * unitWidth - bx;
  const ey = by;
  const fx = 2 * unitWidth - ax;
  const fy = ay;
  const shadowWidth = unitWidth * Math.sqrt(2) + borderRadiusOuter * (Math.sqrt(2) - 2);
  const polygonOffset = borderRadiusOuter * (Math.sqrt(2) - 1);
  const arrowPolygon = "polygon(".concat(polygonOffset, "px 100%, 50% ").concat(polygonOffset, "px, ").concat(2 * unitWidth - polygonOffset, "px 100%, ").concat(polygonOffset, "px 100%)");
  const arrowPath = "path('M ".concat(ax, " ").concat(ay, " A ").concat(borderRadiusOuter, " ").concat(borderRadiusOuter, " 0 0 0 ").concat(bx, " ").concat(by, " L ").concat(cx, " ").concat(cy, " A ").concat(borderRadiusXS, " ").concat(borderRadiusXS, " 0 0 1 ").concat(dx, " ").concat(dy, " L ").concat(ex, " ").concat(ey, " A ").concat(borderRadiusOuter, " ").concat(borderRadiusOuter, " 0 0 0 ").concat(fx, " ").concat(fy, " Z')");
  return {
    arrowShadowWidth: shadowWidth,
    arrowPath,
    arrowPolygon
  };
}
const genRoundedArrow = (token2, bgColor, boxShadow) => {
  const {
    sizePopupArrow,
    arrowPolygon,
    arrowPath,
    arrowShadowWidth,
    borderRadiusXS,
    calc
  } = token2;
  return {
    pointerEvents: "none",
    width: sizePopupArrow,
    height: sizePopupArrow,
    overflow: "hidden",
    "&::before": {
      position: "absolute",
      bottom: 0,
      insetInlineStart: 0,
      width: sizePopupArrow,
      height: calc(sizePopupArrow).div(2).equal(),
      background: bgColor,
      clipPath: {
        _multi_value_: true,
        value: [arrowPolygon, arrowPath]
      },
      content: '""'
    },
    "&::after": {
      content: '""',
      position: "absolute",
      width: arrowShadowWidth,
      height: arrowShadowWidth,
      bottom: 0,
      insetInline: 0,
      margin: "auto",
      borderRadius: {
        _skip_check_: true,
        value: "0 0 ".concat(unit$1(borderRadiusXS), " 0")
      },
      transform: "translateY(50%) rotate(-135deg)",
      boxShadow,
      zIndex: 0,
      background: "transparent"
    }
  };
};
var weekday$1 = { exports: {} };
(function (module, exports) {
  !function (e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function () {
    return function (e2, t2) {
      t2.prototype.weekday = function (e3) {
        var t3 = this.$locale().weekStart || 0, i = this.$W, n2 = (i < t3 ? i + 7 : i) - t3;
        return this.$utils().u(e3) ? n2 : this.subtract(n2, "day").add(e3, "day");
      };
    };
  });
})(weekday$1);
var weekdayExports = weekday$1.exports;
const weekday = /* @__PURE__ */ getDefaultExportFromCjs(weekdayExports);
var localeData$1 = { exports: {} };
(function (module, exports) {
  !function (n2, e2) {
    module.exports = e2();
  }(commonjsGlobal, function () {
    return function (n2, e2, t2) {
      var r2 = e2.prototype, o = function (n3) {
        return n3 && (n3.indexOf ? n3 : n3.s);
      }, u2 = function (n3, e3, t3, r3, u3) {
        var i2 = n3.name ? n3 : n3.$locale(), a2 = o(i2[e3]), s2 = o(i2[t3]), f2 = a2 || s2.map(function (n4) {
          return n4.slice(0, r3);
        });
        if (!u3)
          return f2;
        var d2 = i2.weekStart;
        return f2.map(function (n4, e4) {
          return f2[(e4 + (d2 || 0)) % 7];
        });
      }, i = function () {
        return t2.Ls[t2.locale()];
      }, a = function (n3, e3) {
        return n3.formats[e3] || function (n4) {
          return n4.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function (n5, e4, t3) {
            return e4 || t3.slice(1);
          });
        }(n3.formats[e3.toUpperCase()]);
      }, s = function () {
        var n3 = this;
        return {
          months: function (e3) {
            return e3 ? e3.format("MMMM") : u2(n3, "months");
          }, monthsShort: function (e3) {
            return e3 ? e3.format("MMM") : u2(n3, "monthsShort", "months", 3);
          }, firstDayOfWeek: function () {
            return n3.$locale().weekStart || 0;
          }, weekdays: function (e3) {
            return e3 ? e3.format("dddd") : u2(n3, "weekdays");
          }, weekdaysMin: function (e3) {
            return e3 ? e3.format("dd") : u2(n3, "weekdaysMin", "weekdays", 2);
          }, weekdaysShort: function (e3) {
            return e3 ? e3.format("ddd") : u2(n3, "weekdaysShort", "weekdays", 3);
          }, longDateFormat: function (e3) {
            return a(n3.$locale(), e3);
          }, meridiem: this.$locale().meridiem, ordinal: this.$locale().ordinal
        };
      };
      r2.localeData = function () {
        return s.bind(this)();
      }, t2.localeData = function () {
        var n3 = i();
        return {
          firstDayOfWeek: function () {
            return n3.weekStart || 0;
          }, weekdays: function () {
            return t2.weekdays();
          }, weekdaysShort: function () {
            return t2.weekdaysShort();
          }, weekdaysMin: function () {
            return t2.weekdaysMin();
          }, months: function () {
            return t2.months();
          }, monthsShort: function () {
            return t2.monthsShort();
          }, longDateFormat: function (e3) {
            return a(n3, e3);
          }, meridiem: n3.meridiem, ordinal: n3.ordinal
        };
      }, t2.months = function () {
        return u2(i(), "months");
      }, t2.monthsShort = function () {
        return u2(i(), "monthsShort", "months", 3);
      }, t2.weekdays = function (n3) {
        return u2(i(), "weekdays", null, null, n3);
      }, t2.weekdaysShort = function (n3) {
        return u2(i(), "weekdaysShort", "weekdays", 3, n3);
      }, t2.weekdaysMin = function (n3) {
        return u2(i(), "weekdaysMin", "weekdays", 2, n3);
      };
    };
  });
})(localeData$1);
var localeDataExports = localeData$1.exports;
const localeData = /* @__PURE__ */ getDefaultExportFromCjs(localeDataExports);
var weekOfYear$1 = { exports: {} };
(function (module, exports) {
  !function (e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function () {
    var e2 = "week", t2 = "year";
    return function (i, n2, r2) {
      var f2 = n2.prototype;
      f2.week = function (i2) {
        if (void 0 === i2 && (i2 = null), null !== i2)
          return this.add(7 * (i2 - this.week()), "day");
        var n3 = this.$locale().yearStart || 1;
        if (11 === this.month() && this.date() > 25) {
          var f3 = r2(this).startOf(t2).add(1, t2).date(n3), s = r2(this).endOf(e2);
          if (f3.isBefore(s))
            return 1;
        }
        var a = r2(this).startOf(t2).date(n3).startOf(e2).subtract(1, "millisecond"), o = this.diff(a, e2, true);
        return o < 0 ? r2(this).startOf("week").week() : Math.ceil(o);
      }, f2.weeks = function (e3) {
        return void 0 === e3 && (e3 = null), this.week(e3);
      };
    };
  });
})(weekOfYear$1);
var weekOfYearExports = weekOfYear$1.exports;
const weekOfYear = /* @__PURE__ */ getDefaultExportFromCjs(weekOfYearExports);
var weekYear$1 = { exports: {} };
(function (module, exports) {
  !function (e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function () {
    return function (e2, t2) {
      t2.prototype.weekYear = function () {
        var e3 = this.month(), t3 = this.week(), n2 = this.year();
        return 1 === t3 && 11 === e3 ? n2 + 1 : 0 === e3 && t3 >= 52 ? n2 - 1 : n2;
      };
    };
  });
})(weekYear$1);
var weekYearExports = weekYear$1.exports;
const weekYear = /* @__PURE__ */ getDefaultExportFromCjs(weekYearExports);
var advancedFormat$1 = { exports: {} };
(function (module, exports) {
  !function (e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function () {
    return function (e2, t2) {
      var r2 = t2.prototype, n2 = r2.format;
      r2.format = function (e3) {
        var t3 = this, r3 = this.$locale();
        if (!this.isValid())
          return n2.bind(this)(e3);
        var s = this.$utils(), a = (e3 || "YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g, function (e4) {
          switch (e4) {
            case "Q":
              return Math.ceil((t3.$M + 1) / 3);
            case "Do":
              return r3.ordinal(t3.$D);
            case "gggg":
              return t3.weekYear();
            case "GGGG":
              return t3.isoWeekYear();
            case "wo":
              return r3.ordinal(t3.week(), "W");
            case "w":
            case "ww":
              return s.s(t3.week(), "w" === e4 ? 1 : 2, "0");
            case "W":
            case "WW":
              return s.s(t3.isoWeek(), "W" === e4 ? 1 : 2, "0");
            case "k":
            case "kk":
              return s.s(String(0 === t3.$H ? 24 : t3.$H), "k" === e4 ? 1 : 2, "0");
            case "X":
              return Math.floor(t3.$d.getTime() / 1e3);
            case "x":
              return t3.$d.getTime();
            case "z":
              return "[" + t3.offsetName() + "]";
            case "zzz":
              return "[" + t3.offsetName("long") + "]";
            default:
              return e4;
          }
        });
        return n2.bind(this)(a);
      };
    };
  });
})(advancedFormat$1);
var advancedFormatExports = advancedFormat$1.exports;
const advancedFormat = /* @__PURE__ */ getDefaultExportFromCjs(advancedFormatExports);
var customParseFormat$1 = { exports: {} };
(function (module, exports) {
  !function (e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function () {
    var e2 = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, t2 = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, n2 = /\d\d/, r2 = /\d\d?/, i = /\d*[^-_:/,()\s\d]+/, o = {}, s = function (e3) {
      return (e3 = +e3) + (e3 > 68 ? 1900 : 2e3);
    };
    var a = function (e3) {
      return function (t3) {
        this[e3] = +t3;
      };
    }, f2 = [/[+-]\d\d:?(\d\d)?|Z/, function (e3) {
      (this.zone || (this.zone = {})).offset = function (e4) {
        if (!e4)
          return 0;
        if ("Z" === e4)
          return 0;
        var t3 = e4.match(/([+-]|\d\d)/g), n3 = 60 * t3[1] + (+t3[2] || 0);
        return 0 === n3 ? 0 : "+" === t3[0] ? -n3 : n3;
      }(e3);
    }], h2 = function (e3) {
      var t3 = o[e3];
      return t3 && (t3.indexOf ? t3 : t3.s.concat(t3.f));
    }, u2 = function (e3, t3) {
      var n3, r3 = o.meridiem;
      if (r3) {
        for (var i2 = 1; i2 <= 24; i2 += 1)
          if (e3.indexOf(r3(i2, 0, t3)) > -1) {
            n3 = i2 > 12;
            break;
          }
      } else
        n3 = e3 === (t3 ? "pm" : "PM");
      return n3;
    }, d2 = {
      A: [i, function (e3) {
        this.afternoon = u2(e3, false);
      }], a: [i, function (e3) {
        this.afternoon = u2(e3, true);
      }], S: [/\d/, function (e3) {
        this.milliseconds = 100 * +e3;
      }], SS: [n2, function (e3) {
        this.milliseconds = 10 * +e3;
      }], SSS: [/\d{3}/, function (e3) {
        this.milliseconds = +e3;
      }], s: [r2, a("seconds")], ss: [r2, a("seconds")], m: [r2, a("minutes")], mm: [r2, a("minutes")], H: [r2, a("hours")], h: [r2, a("hours")], HH: [r2, a("hours")], hh: [r2, a("hours")], D: [r2, a("day")], DD: [n2, a("day")], Do: [i, function (e3) {
        var t3 = o.ordinal, n3 = e3.match(/\d+/);
        if (this.day = n3[0], t3)
          for (var r3 = 1; r3 <= 31; r3 += 1)
            t3(r3).replace(/\[|\]/g, "") === e3 && (this.day = r3);
      }], M: [r2, a("month")], MM: [n2, a("month")], MMM: [i, function (e3) {
        var t3 = h2("months"), n3 = (h2("monthsShort") || t3.map(function (e4) {
          return e4.slice(0, 3);
        })).indexOf(e3) + 1;
        if (n3 < 1)
          throw new Error();
        this.month = n3 % 12 || n3;
      }], MMMM: [i, function (e3) {
        var t3 = h2("months").indexOf(e3) + 1;
        if (t3 < 1)
          throw new Error();
        this.month = t3 % 12 || t3;
      }], Y: [/[+-]?\d+/, a("year")], YY: [n2, function (e3) {
        this.year = s(e3);
      }], YYYY: [/\d{4}/, a("year")], Z: f2, ZZ: f2
    };
    function c2(n3) {
      var r3, i2;
      r3 = n3, i2 = o && o.formats;
      for (var s2 = (n3 = r3.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function (t3, n4, r4) {
        var o2 = r4 && r4.toUpperCase();
        return n4 || i2[r4] || e2[r4] || i2[o2].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function (e3, t4, n5) {
          return t4 || n5.slice(1);
        });
      })).match(t2), a2 = s2.length, f3 = 0; f3 < a2; f3 += 1) {
        var h3 = s2[f3], u3 = d2[h3], c3 = u3 && u3[0], l2 = u3 && u3[1];
        s2[f3] = l2 ? { regex: c3, parser: l2 } : h3.replace(/^\[|\]$/g, "");
      }
      return function (e3) {
        for (var t3 = {}, n4 = 0, r4 = 0; n4 < a2; n4 += 1) {
          var i3 = s2[n4];
          if ("string" == typeof i3)
            r4 += i3.length;
          else {
            var o2 = i3.regex, f4 = i3.parser, h4 = e3.slice(r4), u4 = o2.exec(h4)[0];
            f4.call(t3, u4), e3 = e3.replace(u4, "");
          }
        }
        return function (e4) {
          var t4 = e4.afternoon;
          if (void 0 !== t4) {
            var n5 = e4.hours;
            t4 ? n5 < 12 && (e4.hours += 12) : 12 === n5 && (e4.hours = 0), delete e4.afternoon;
          }
        }(t3), t3;
      };
    }
    return function (e3, t3, n3) {
      n3.p.customParseFormat = true, e3 && e3.parseTwoDigitYear && (s = e3.parseTwoDigitYear);
      var r3 = t3.prototype, i2 = r3.parse;
      r3.parse = function (e4) {
        var t4 = e4.date, r4 = e4.utc, s2 = e4.args;
        this.$u = r4;
        var a2 = s2[1];
        if ("string" == typeof a2) {
          var f3 = true === s2[2], h3 = true === s2[3], u3 = f3 || h3, d3 = s2[2];
          h3 && (d3 = s2[2]), o = this.$locale(), !f3 && d3 && (o = n3.Ls[d3]), this.$d = function (e5, t5, n4) {
            try {
              if (["x", "X"].indexOf(t5) > -1)
                return new Date(("X" === t5 ? 1e3 : 1) * e5);
              var r5 = c2(t5)(e5), i3 = r5.year, o2 = r5.month, s3 = r5.day, a3 = r5.hours, f4 = r5.minutes, h4 = r5.seconds, u4 = r5.milliseconds, d4 = r5.zone, l3 = /* @__PURE__ */ new Date(), m3 = s3 || (i3 || o2 ? 1 : l3.getDate()), M2 = i3 || l3.getFullYear(), Y = 0;
              i3 && !o2 || (Y = o2 > 0 ? o2 - 1 : l3.getMonth());
              var p2 = a3 || 0, v2 = f4 || 0, D = h4 || 0, g2 = u4 || 0;
              return d4 ? new Date(Date.UTC(M2, Y, m3, p2, v2, D, g2 + 60 * d4.offset * 1e3)) : n4 ? new Date(Date.UTC(M2, Y, m3, p2, v2, D, g2)) : new Date(M2, Y, m3, p2, v2, D, g2);
            } catch (e6) {
              return /* @__PURE__ */ new Date("");
            }
          }(t4, a2, r4), this.init(), d3 && true !== d3 && (this.$L = this.locale(d3).$L), u3 && t4 != this.format(a2) && (this.$d = /* @__PURE__ */ new Date("")), o = {};
        } else if (a2 instanceof Array)
          for (var l2 = a2.length, m2 = 1; m2 <= l2; m2 += 1) {
            s2[1] = a2[m2 - 1];
            var M = n3.apply(this, s2);
            if (M.isValid()) {
              this.$d = M.$d, this.$L = M.$L, this.init();
              break;
            }
            m2 === l2 && (this.$d = /* @__PURE__ */ new Date(""));
          }
        else
          i2.call(this, e4);
      };
    };
  });
})(customParseFormat$1);
var customParseFormatExports = customParseFormat$1.exports;
const customParseFormat = /* @__PURE__ */ getDefaultExportFromCjs(customParseFormatExports);
dayjs.extend(customParseFormat);
dayjs.extend(advancedFormat);
dayjs.extend(weekday);
dayjs.extend(localeData);
dayjs.extend(weekOfYear);
dayjs.extend(weekYear);
dayjs.extend(function (o, c2) {
  var proto = c2.prototype;
  var oldFormat = proto.format;
  proto.format = function f2(formatStr2) {
    var str2 = (formatStr2 || "").replace("Wo", "wo");
    return oldFormat.bind(this)(str2);
  };
});
var localeMap = {
  // ar_EG:
  // az_AZ:
  // bg_BG:
  bn_BD: "bn-bd",
  by_BY: "be",
  // ca_ES:
  // cs_CZ:
  // da_DK:
  // de_DE:
  // el_GR:
  en_GB: "en-gb",
  en_US: "en",
  // es_ES:
  // et_EE:
  // fa_IR:
  // fi_FI:
  fr_BE: "fr",
  // todo: dayjs has no fr_BE locale, use fr at present
  fr_CA: "fr-ca",
  // fr_FR:
  // ga_IE:
  // gl_ES:
  // he_IL:
  // hi_IN:
  // hr_HR:
  // hu_HU:
  hy_AM: "hy-am",
  // id_ID:
  // is_IS:
  // it_IT:
  // ja_JP:
  // ka_GE:
  // kk_KZ:
  // km_KH:
  kmr_IQ: "ku",
  // kn_IN:
  // ko_KR:
  // ku_IQ: // previous ku in antd
  // lt_LT:
  // lv_LV:
  // mk_MK:
  // ml_IN:
  // mn_MN:
  // ms_MY:
  // nb_NO:
  // ne_NP:
  nl_BE: "nl-be",
  // nl_NL:
  // pl_PL:
  pt_BR: "pt-br",
  // pt_PT:
  // ro_RO:
  // ru_RU:
  // sk_SK:
  // sl_SI:
  // sr_RS:
  // sv_SE:
  // ta_IN:
  // th_TH:
  // tr_TR:
  // uk_UA:
  // ur_PK:
  // vi_VN:
  zh_CN: "zh-cn",
  zh_HK: "zh-hk",
  zh_TW: "zh-tw"
};
var parseLocale = function parseLocale2(locale2) {
  var mapLocale = localeMap[locale2];
  return mapLocale || locale2.split("_")[0];
};
var parseNoMatchNotice = function parseNoMatchNotice2() {
  noteOnce(false, "Not match any format. Please help to fire a issue about this.");
};
var generateConfig = {
  // get
  getNow: function getNow() {
    return dayjs();
  },
  getFixedDate: function getFixedDate(string3) {
    return dayjs(string3, ["YYYY-M-DD", "YYYY-MM-DD"]);
  },
  getEndDate: function getEndDate(date5) {
    return date5.endOf("month");
  },
  getWeekDay: function getWeekDay(date5) {
    var clone = date5.locale("en");
    return clone.weekday() + clone.localeData().firstDayOfWeek();
  },
  getYear: function getYear(date5) {
    return date5.year();
  },
  getMonth: function getMonth(date5) {
    return date5.month();
  },
  getDate: function getDate(date5) {
    return date5.date();
  },
  getHour: function getHour(date5) {
    return date5.hour();
  },
  getMinute: function getMinute(date5) {
    return date5.minute();
  },
  getSecond: function getSecond(date5) {
    return date5.second();
  },
  getMillisecond: function getMillisecond(date5) {
    return date5.millisecond();
  },
  // set
  addYear: function addYear(date5, diff) {
    return date5.add(diff, "year");
  },
  addMonth: function addMonth(date5, diff) {
    return date5.add(diff, "month");
  },
  addDate: function addDate(date5, diff) {
    return date5.add(diff, "day");
  },
  setYear: function setYear(date5, year) {
    return date5.year(year);
  },
  setMonth: function setMonth(date5, month) {
    return date5.month(month);
  },
  setDate: function setDate(date5, num2) {
    return date5.date(num2);
  },
  setHour: function setHour(date5, hour) {
    return date5.hour(hour);
  },
  setMinute: function setMinute(date5, minute) {
    return date5.minute(minute);
  },
  setSecond: function setSecond(date5, second) {
    return date5.second(second);
  },
  setMillisecond: function setMillisecond(date5, milliseconds) {
    return date5.millisecond(milliseconds);
  },
  // Compare
  isAfter: function isAfter(date1, date22) {
    return date1.isAfter(date22);
  },
  isValidate: function isValidate(date5) {
    return date5.isValid();
  },
  locale: {
    getWeekFirstDay: function getWeekFirstDay(locale2) {
      return dayjs().locale(parseLocale(locale2)).localeData().firstDayOfWeek();
    },
    getWeekFirstDate: function getWeekFirstDate(locale2, date5) {
      return date5.locale(parseLocale(locale2)).weekday(0);
    },
    getWeek: function getWeek(locale2, date5) {
      return date5.locale(parseLocale(locale2)).week();
    },
    getShortWeekDays: function getShortWeekDays(locale2) {
      return dayjs().locale(parseLocale(locale2)).localeData().weekdaysMin();
    },
    getShortMonths: function getShortMonths(locale2) {
      return dayjs().locale(parseLocale(locale2)).localeData().monthsShort();
    },
    format: function format2(locale2, date5, _format) {
      return date5.locale(parseLocale(locale2)).format(_format);
    },
    parse: function parse2(locale2, text2, formats) {
      var localeStr = parseLocale(locale2);
      for (var i = 0; i < formats.length; i += 1) {
        var format3 = formats[i];
        var formatText = text2;
        if (format3.includes("wo") || format3.includes("Wo")) {
          var year = formatText.split("-")[0];
          var weekStr = formatText.split("-")[1];
          var firstWeek = dayjs(year, "YYYY").startOf("year").locale(localeStr);
          for (var j = 0; j <= 52; j += 1) {
            var nextWeek = firstWeek.add(j, "week");
            if (nextWeek.format("Wo") === weekStr) {
              return nextWeek;
            }
          }
          parseNoMatchNotice();
          return null;
        }
        var date5 = dayjs(formatText, format3, true).locale(localeStr);
        if (date5.isValid()) {
          return date5;
        }
      }
      if (text2) {
        parseNoMatchNotice();
      }
      return null;
    }
  }
};
var PickerContext = /* @__PURE__ */ reactExports.createContext(null);
var BUILT_IN_PLACEMENTS = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  bottomRight: {
    points: ["tr", "br"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  },
  topRight: {
    points: ["br", "tr"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  }
};
function PickerTrigger(_ref) {
  var popupElement = _ref.popupElement, popupStyle = _ref.popupStyle, popupClassName = _ref.popupClassName, popupAlign = _ref.popupAlign, transitionName = _ref.transitionName, getPopupContainer = _ref.getPopupContainer, children = _ref.children, range3 = _ref.range, placement = _ref.placement, _ref$builtinPlacement = _ref.builtinPlacements, builtinPlacements = _ref$builtinPlacement === void 0 ? BUILT_IN_PLACEMENTS : _ref$builtinPlacement, direction = _ref.direction, visible = _ref.visible, onClose = _ref.onClose;
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls;
  var dropdownPrefixCls = "".concat(prefixCls, "-dropdown");
  var mergedPlacement = reactExports.useMemo(function () {
    if (placement !== void 0) {
      return placement;
    }
    return direction === "rtl" ? "bottomRight" : "bottomLeft";
  }, [placement, direction]);
  return /* @__PURE__ */ reactExports.createElement(Trigger, {
    showAction: [],
    hideAction: ["click"],
    popupPlacement: mergedPlacement,
    builtinPlacements,
    prefixCls: dropdownPrefixCls,
    popupTransitionName: transitionName,
    popup: popupElement,
    popupAlign,
    popupVisible: visible,
    popupClassName: classNames(popupClassName, _defineProperty(_defineProperty({}, "".concat(dropdownPrefixCls, "-range"), range3), "".concat(dropdownPrefixCls, "-rtl"), direction === "rtl")),
    popupStyle,
    stretch: "minWidth",
    getPopupContainer,
    onPopupVisibleChange: function onPopupVisibleChange(nextVisible) {
      if (!nextVisible) {
        onClose();
      }
    }
  }, children);
}
function leftPad(str2, length2) {
  var fill = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "0";
  var current = String(str2);
  while (current.length < length2) {
    current = "".concat(fill).concat(current);
  }
  return current;
}
function toArray(val) {
  if (val === null || val === void 0) {
    return [];
  }
  return Array.isArray(val) ? val : [val];
}
function fillIndex(ori, index2, value2) {
  var clone = _toConsumableArray(ori);
  clone[index2] = value2;
  return clone;
}
function pickProps(props, keys2) {
  var clone = {};
  var mergedKeys = keys2 || Object.keys(props);
  mergedKeys.forEach(function (key) {
    if (props[key] !== void 0) {
      clone[key] = props[key];
    }
  });
  return clone;
}
function getRowFormat(picker, locale2, format3) {
  if (format3) {
    return format3;
  }
  switch (picker) {
    case "time":
      return locale2.fieldTimeFormat;
    case "datetime":
      return locale2.fieldDateTimeFormat;
    case "month":
      return locale2.fieldMonthFormat;
    case "year":
      return locale2.fieldYearFormat;
    case "quarter":
      return locale2.fieldQuarterFormat;
    case "week":
      return locale2.fieldWeekFormat;
    default:
      return locale2.fieldDateFormat;
  }
}
function pickTriggerProps(props) {
  return pickProps(props, ["placement", "builtinPlacements", "popupAlign", "getPopupContainer", "transitionName", "direction"]);
}
function useCellRender(cellRender, dateRender, monthCellRender, range3) {
  var mergedCellRender = reactExports.useMemo(function () {
    if (cellRender) {
      return cellRender;
    }
    return function (current, info2) {
      var date5 = current;
      if (dateRender && info2.type === "date") {
        return dateRender(date5, info2.today);
      }
      if (monthCellRender && info2.type === "month") {
        return monthCellRender(date5, info2.locale);
      }
      return info2.originNode;
    };
  }, [cellRender, monthCellRender, dateRender]);
  var onInternalCellRender = reactExports.useCallback(function (date5, info2) {
    return mergedCellRender(date5, _objectSpread2(_objectSpread2({}, info2), {}, {
      range: range3
    }));
  }, [mergedCellRender, range3]);
  return onInternalCellRender;
}
function useFieldsInvalidate(calendarValue, isInvalidateDate) {
  var allowEmpty = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  var _React$useState = reactExports.useState([false, false]), _React$useState2 = _slicedToArray(_React$useState, 2), fieldsInvalidates = _React$useState2[0], setFieldsInvalidates = _React$useState2[1];
  var onSelectorInvalid = function onSelectorInvalid2(invalid, index2) {
    setFieldsInvalidates(function (ori) {
      return fillIndex(ori, index2, invalid);
    });
  };
  var submitInvalidates = reactExports.useMemo(function () {
    return fieldsInvalidates.map(function (invalid, index2) {
      if (invalid) {
        return true;
      }
      var current = calendarValue[index2];
      if (!current) {
        return false;
      }
      if (!allowEmpty[index2] && !current) {
        return true;
      }
      if (current && isInvalidateDate(current, {
        activeIndex: index2
      })) {
        return true;
      }
      return false;
    });
  }, [calendarValue, fieldsInvalidates, isInvalidateDate, allowEmpty]);
  return [submitInvalidates, onSelectorInvalid];
}
function fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem) {
  var timeFormat = "";
  var cells = [];
  if (showHour) {
    cells.push(showMeridiem ? "hh" : "HH");
  }
  if (showMinute) {
    cells.push("mm");
  }
  if (showSecond) {
    cells.push("ss");
  }
  timeFormat = cells.join(":");
  if (showMillisecond) {
    timeFormat += ".SSS";
  }
  if (showMeridiem) {
    timeFormat += " A";
  }
  return timeFormat;
}
function fillLocale(locale2, showHour, showMinute, showSecond, showMillisecond, use12Hours) {
  var fieldDateTimeFormat = locale2.fieldDateTimeFormat, fieldDateFormat = locale2.fieldDateFormat, fieldTimeFormat = locale2.fieldTimeFormat, fieldMonthFormat = locale2.fieldMonthFormat, fieldYearFormat = locale2.fieldYearFormat, fieldWeekFormat = locale2.fieldWeekFormat, fieldQuarterFormat = locale2.fieldQuarterFormat, yearFormat = locale2.yearFormat, cellYearFormat = locale2.cellYearFormat, cellQuarterFormat = locale2.cellQuarterFormat, dayFormat = locale2.dayFormat, cellDateFormat = locale2.cellDateFormat;
  var timeFormat = fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, use12Hours);
  return _objectSpread2(_objectSpread2({}, locale2), {}, {
    fieldDateTimeFormat: fieldDateTimeFormat || "YYYY-MM-DD ".concat(timeFormat),
    fieldDateFormat: fieldDateFormat || "YYYY-MM-DD",
    fieldTimeFormat: fieldTimeFormat || timeFormat,
    fieldMonthFormat: fieldMonthFormat || "YYYY-MM",
    fieldYearFormat: fieldYearFormat || "YYYY",
    fieldWeekFormat: fieldWeekFormat || "gggg-wo",
    fieldQuarterFormat: fieldQuarterFormat || "YYYY-[Q]Q",
    yearFormat: yearFormat || "YYYY",
    cellYearFormat: cellYearFormat || "YYYY",
    cellQuarterFormat: cellQuarterFormat || "[Q]Q",
    cellDateFormat: cellDateFormat || dayFormat || "D"
  });
}
function useLocale(locale2, showProps) {
  var showHour = showProps.showHour, showMinute = showProps.showMinute, showSecond = showProps.showSecond, showMillisecond = showProps.showMillisecond, use12Hours = showProps.use12Hours;
  return React.useMemo(function () {
    return fillLocale(locale2, showHour, showMinute, showSecond, showMillisecond, use12Hours);
  }, [locale2, showHour, showMinute, showSecond, showMillisecond, use12Hours]);
}
function checkShow(format3, keywords, show) {
  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {
    return format3.includes(keyword);
  });
}
var showTimeKeys = [
  // 'format',
  "showNow",
  "showHour",
  "showMinute",
  "showSecond",
  "showMillisecond",
  "use12Hours",
  "hourStep",
  "minuteStep",
  "secondStep",
  "millisecondStep",
  "hideDisabledOptions",
  "defaultValue",
  "disabledHours",
  "disabledMinutes",
  "disabledSeconds",
  "disabledMilliseconds",
  "disabledTime",
  "changeOnScroll",
  "defaultOpenValue"
];
function pickTimeProps(props) {
  var timeProps = pickProps(props, showTimeKeys);
  var format3 = props.format, picker = props.picker;
  var propFormat = null;
  if (format3) {
    propFormat = format3;
    if (Array.isArray(propFormat)) {
      propFormat = propFormat[0];
    }
    propFormat = _typeof(propFormat) === "object" ? propFormat.format : propFormat;
  }
  if (picker === "time") {
    timeProps.format = propFormat;
  }
  return [timeProps, propFormat];
}
function isStringFormat(format3) {
  return format3 && typeof format3 === "string";
}
function existShowConfig(showHour, showMinute, showSecond, showMillisecond) {
  return [showHour, showMinute, showSecond, showMillisecond].some(function (show) {
    return show !== void 0;
  });
}
function fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond) {
  var parsedShowHour = showHour;
  var parsedShowMinute = showMinute;
  var parsedShowSecond = showSecond;
  if (!hasShowConfig && !parsedShowHour && !parsedShowMinute && !parsedShowSecond && !showMillisecond) {
    parsedShowHour = true;
    parsedShowMinute = true;
    parsedShowSecond = true;
  } else if (hasShowConfig) {
    var _parsedShowHour, _parsedShowMinute, _parsedShowSecond;
    var existFalse = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {
      return show === false;
    });
    var existTrue = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {
      return show === true;
    });
    var defaultShow = existFalse ? true : !existTrue;
    parsedShowHour = (_parsedShowHour = parsedShowHour) !== null && _parsedShowHour !== void 0 ? _parsedShowHour : defaultShow;
    parsedShowMinute = (_parsedShowMinute = parsedShowMinute) !== null && _parsedShowMinute !== void 0 ? _parsedShowMinute : defaultShow;
    parsedShowSecond = (_parsedShowSecond = parsedShowSecond) !== null && _parsedShowSecond !== void 0 ? _parsedShowSecond : defaultShow;
  }
  return [parsedShowHour, parsedShowMinute, parsedShowSecond, showMillisecond];
}
function getTimeProps(componentProps) {
  var showTime = componentProps.showTime;
  var _pickTimeProps = pickTimeProps(componentProps), _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2), pickedProps = _pickTimeProps2[0], propFormat = _pickTimeProps2[1];
  var showTimeConfig = showTime && _typeof(showTime) === "object" ? showTime : {};
  var timeConfig = _objectSpread2(_objectSpread2({
    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue
  }, pickedProps), showTimeConfig);
  var showMillisecond = timeConfig.showMillisecond;
  var showHour = timeConfig.showHour, showMinute = timeConfig.showMinute, showSecond = timeConfig.showSecond;
  var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond);
  var _fillShowConfig = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);
  var _fillShowConfig2 = _slicedToArray(_fillShowConfig, 3);
  showHour = _fillShowConfig2[0];
  showMinute = _fillShowConfig2[1];
  showSecond = _fillShowConfig2[2];
  return [timeConfig, _objectSpread2(_objectSpread2({}, timeConfig), {}, {
    showHour,
    showMinute,
    showSecond,
    showMillisecond
  }), timeConfig.format, propFormat];
}
function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale2) {
  var isTimePicker = picker === "time";
  if (picker === "datetime" || isTimePicker) {
    var pickedProps = timeConfig;
    var defaultLocaleFormat = getRowFormat(picker, locale2, null);
    var baselineFormat = defaultLocaleFormat;
    var formatList = [showTimeFormat, propFormat];
    for (var i = 0; i < formatList.length; i += 1) {
      var format3 = toArray(formatList[i])[0];
      if (isStringFormat(format3)) {
        baselineFormat = format3;
        break;
      }
    }
    var showHour = pickedProps.showHour, showMinute = pickedProps.showMinute, showSecond = pickedProps.showSecond, showMillisecond = pickedProps.showMillisecond;
    var use12Hours = pickedProps.use12Hours;
    var showMeridiem = checkShow(baselineFormat, ["a", "A", "LT", "LLL", "LTS"], use12Hours);
    var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond);
    if (!hasShowConfig) {
      showHour = checkShow(baselineFormat, ["H", "h", "k", "LT", "LLL"]);
      showMinute = checkShow(baselineFormat, ["m", "LT", "LLL"]);
      showSecond = checkShow(baselineFormat, ["s", "LTS"]);
      showMillisecond = checkShow(baselineFormat, ["SSS"]);
    }
    var _fillShowConfig3 = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);
    var _fillShowConfig4 = _slicedToArray(_fillShowConfig3, 3);
    showHour = _fillShowConfig4[0];
    showMinute = _fillShowConfig4[1];
    showSecond = _fillShowConfig4[2];
    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);
    return _objectSpread2(_objectSpread2({}, pickedProps), {}, {
      // Format
      format: timeFormat,
      // Show Config
      showHour,
      showMinute,
      showSecond,
      showMillisecond,
      use12Hours: showMeridiem
    });
  }
  return null;
}
function fillClearIcon(prefixCls, allowClear, clearIcon) {
  if (allowClear === false) {
    return null;
  }
  var config2 = allowClear && _typeof(allowClear) === "object" ? allowClear : {};
  return config2.clearIcon || clearIcon || /* @__PURE__ */ reactExports.createElement("span", {
    className: "".concat(prefixCls, "-clear-btn")
  });
}
var WEEK_DAY_COUNT = 7;
function nullableCompare(value1, value2, oriCompareFn) {
  if (!value1 && !value2 || value1 === value2) {
    return true;
  }
  if (!value1 || !value2) {
    return false;
  }
  return oriCompareFn();
}
function isSameDecade(generateConfig2, decade1, decade2) {
  return nullableCompare(decade1, decade2, function () {
    var num1 = Math.floor(generateConfig2.getYear(decade1) / 10);
    var num2 = Math.floor(generateConfig2.getYear(decade2) / 10);
    return num1 === num2;
  });
}
function isSameYear(generateConfig2, year1, year2) {
  return nullableCompare(year1, year2, function () {
    return generateConfig2.getYear(year1) === generateConfig2.getYear(year2);
  });
}
function getQuarter(generateConfig2, date5) {
  var quota = Math.floor(generateConfig2.getMonth(date5) / 3);
  return quota + 1;
}
function isSameQuarter(generateConfig2, quarter1, quarter2) {
  return nullableCompare(quarter1, quarter2, function () {
    return isSameYear(generateConfig2, quarter1, quarter2) && getQuarter(generateConfig2, quarter1) === getQuarter(generateConfig2, quarter2);
  });
}
function isSameMonth(generateConfig2, month1, month2) {
  return nullableCompare(month1, month2, function () {
    return isSameYear(generateConfig2, month1, month2) && generateConfig2.getMonth(month1) === generateConfig2.getMonth(month2);
  });
}
function isSameDate(generateConfig2, date1, date22) {
  return nullableCompare(date1, date22, function () {
    return isSameYear(generateConfig2, date1, date22) && isSameMonth(generateConfig2, date1, date22) && generateConfig2.getDate(date1) === generateConfig2.getDate(date22);
  });
}
function isSameTime(generateConfig2, time1, time2) {
  return nullableCompare(time1, time2, function () {
    return generateConfig2.getHour(time1) === generateConfig2.getHour(time2) && generateConfig2.getMinute(time1) === generateConfig2.getMinute(time2) && generateConfig2.getSecond(time1) === generateConfig2.getSecond(time2);
  });
}
function isSameTimestamp(generateConfig2, time1, time2) {
  return nullableCompare(time1, time2, function () {
    return isSameDate(generateConfig2, time1, time2) && isSameTime(generateConfig2, time1, time2) && generateConfig2.getMillisecond(time1) === generateConfig2.getMillisecond(time2);
  });
}
function isSameWeek(generateConfig2, locale2, date1, date22) {
  return nullableCompare(date1, date22, function () {
    var weekStartDate1 = generateConfig2.locale.getWeekFirstDate(locale2, date1);
    var weekStartDate2 = generateConfig2.locale.getWeekFirstDate(locale2, date22);
    return isSameYear(generateConfig2, weekStartDate1, weekStartDate2) && generateConfig2.locale.getWeek(locale2, date1) === generateConfig2.locale.getWeek(locale2, date22);
  });
}
function isSame(generateConfig2, locale2, source, target, type4) {
  switch (type4) {
    case "date":
      return isSameDate(generateConfig2, source, target);
    case "week":
      return isSameWeek(generateConfig2, locale2.locale, source, target);
    case "month":
      return isSameMonth(generateConfig2, source, target);
    case "quarter":
      return isSameQuarter(generateConfig2, source, target);
    case "year":
      return isSameYear(generateConfig2, source, target);
    case "decade":
      return isSameDecade(generateConfig2, source, target);
    case "time":
      return isSameTime(generateConfig2, source, target);
    default:
      return isSameTimestamp(generateConfig2, source, target);
  }
}
function isInRange(generateConfig2, startDate, endDate, current) {
  if (!startDate || !endDate || !current) {
    return false;
  }
  return generateConfig2.isAfter(current, startDate) && generateConfig2.isAfter(endDate, current);
}
function isSameOrAfter(generateConfig2, locale2, date1, date22, type4) {
  if (isSame(generateConfig2, locale2, date1, date22, type4)) {
    return true;
  }
  return generateConfig2.isAfter(date1, date22);
}
function getWeekStartDate(locale2, generateConfig2, value2) {
  var weekFirstDay = generateConfig2.locale.getWeekFirstDay(locale2);
  var monthStartDate = generateConfig2.setDate(value2, 1);
  var startDateWeekDay = generateConfig2.getWeekDay(monthStartDate);
  var alignStartDate = generateConfig2.addDate(monthStartDate, weekFirstDay - startDateWeekDay);
  if (generateConfig2.getMonth(alignStartDate) === generateConfig2.getMonth(value2) && generateConfig2.getDate(alignStartDate) > 1) {
    alignStartDate = generateConfig2.addDate(alignStartDate, -7);
  }
  return alignStartDate;
}
function formatValue(value2, _ref) {
  var generateConfig2 = _ref.generateConfig, locale2 = _ref.locale, format3 = _ref.format;
  if (!value2) {
    return "";
  }
  return typeof format3 === "function" ? format3(value2) : generateConfig2.locale.format(locale2.locale, value2, format3);
}
function fillTime(generateConfig2, date5, time2) {
  var tmpDate = date5;
  var getFn = ["getHour", "getMinute", "getSecond", "getMillisecond"];
  var setFn = ["setHour", "setMinute", "setSecond", "setMillisecond"];
  setFn.forEach(function (fn, index2) {
    if (time2) {
      tmpDate = generateConfig2[fn](tmpDate, generateConfig2[getFn[index2]](time2));
    } else {
      tmpDate = generateConfig2[fn](tmpDate, 0);
    }
  });
  return tmpDate;
}
function useDisabledBoundary(generateConfig2, locale2, disabledDate, minDate, maxDate) {
  var mergedDisabledDate = useEvent(function (date5, info2) {
    if (disabledDate && disabledDate(date5, info2)) {
      return true;
    }
    if (minDate && generateConfig2.isAfter(minDate, date5) && !isSame(generateConfig2, locale2, minDate, date5, info2.type)) {
      return true;
    }
    if (maxDate && generateConfig2.isAfter(date5, maxDate) && !isSame(generateConfig2, locale2, maxDate, date5, info2.type)) {
      return true;
    }
    return false;
  });
  return mergedDisabledDate;
}
function useFieldFormat(picker, locale2, format3) {
  return reactExports.useMemo(function () {
    var rawFormat = getRowFormat(picker, locale2, format3);
    var formatList = toArray(rawFormat);
    var firstFormat = formatList[0];
    var maskFormat = _typeof(firstFormat) === "object" && firstFormat.type === "mask" ? firstFormat.format : null;
    return [
      // Format list
      formatList.map(function (config2) {
        return typeof config2 === "string" || typeof config2 === "function" ? config2 : config2.format;
      }),
      // Mask Format
      maskFormat
    ];
  }, [picker, locale2, format3]);
}
function useInputReadOnly(formatList, inputReadOnly, multiple) {
  if (typeof formatList[0] === "function" || multiple) {
    return true;
  }
  return inputReadOnly;
}
function useInvalidate(generateConfig2, picker, disabledDate, showTime) {
  var isInvalidate = useEvent(function (date5, info2) {
    var outsideInfo = _objectSpread2({
      type: picker
    }, info2);
    delete outsideInfo.activeIndex;
    if (
      // Date object is invalid
      !generateConfig2.isValidate(date5) || // Date is disabled by `disabledDate`
      disabledDate && disabledDate(date5, outsideInfo)
    ) {
      return true;
    }
    if ((picker === "date" || picker === "time") && showTime) {
      var _showTime$disabledTim;
      var _ref = ((_showTime$disabledTim = showTime.disabledTime) === null || _showTime$disabledTim === void 0 ? void 0 : _showTime$disabledTim.call(showTime, date5, info2 && info2.activeIndex === 1 ? "end" : "start")) || {}, disabledHours = _ref.disabledHours, disabledMinutes = _ref.disabledMinutes, disabledSeconds = _ref.disabledSeconds, disabledMilliseconds = _ref.disabledMilliseconds;
      var legacyDisabledHours = showTime.disabledHours, legacyDisabledMinutes = showTime.disabledMinutes, legacyDisabledSeconds = showTime.disabledSeconds;
      var mergedDisabledHours = disabledHours || legacyDisabledHours;
      var mergedDisabledMinutes = disabledMinutes || legacyDisabledMinutes;
      var mergedDisabledSeconds = disabledSeconds || legacyDisabledSeconds;
      var hour = generateConfig2.getHour(date5);
      var minute = generateConfig2.getMinute(date5);
      var second = generateConfig2.getSecond(date5);
      var millisecond = generateConfig2.getMillisecond(date5);
      if (mergedDisabledHours && mergedDisabledHours().includes(hour)) {
        return true;
      }
      if (mergedDisabledMinutes && mergedDisabledMinutes(hour).includes(minute)) {
        return true;
      }
      if (mergedDisabledSeconds && mergedDisabledSeconds(hour, minute).includes(second)) {
        return true;
      }
      if (disabledMilliseconds && disabledMilliseconds(hour, minute, second).includes(millisecond)) {
        return true;
      }
    }
    return false;
  });
  return isInvalidate;
}
function useList(value2) {
  var fillMode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var values2 = reactExports.useMemo(function () {
    var list = value2 ? toArray(value2) : value2;
    if (fillMode && list) {
      list[1] = list[1] || list[0];
    }
    return list;
  }, [value2, fillMode]);
  return values2;
}
function useFilledProps(props, updater) {
  var generateConfig2 = props.generateConfig, locale2 = props.locale, _props$picker = props.picker, picker = _props$picker === void 0 ? "date" : _props$picker, _props$prefixCls = props.prefixCls, prefixCls = _props$prefixCls === void 0 ? "rc-picker" : _props$prefixCls, _props$styles = props.styles, styles = _props$styles === void 0 ? {} : _props$styles, _props$classNames = props.classNames, classNames2 = _props$classNames === void 0 ? {} : _props$classNames, _props$order = props.order, order2 = _props$order === void 0 ? true : _props$order, _props$components = props.components, components = _props$components === void 0 ? {} : _props$components, inputRender = props.inputRender, allowClear = props.allowClear, clearIcon = props.clearIcon, needConfirm = props.needConfirm, multiple = props.multiple, format3 = props.format, inputReadOnly = props.inputReadOnly, disabledDate = props.disabledDate, minDate = props.minDate, maxDate = props.maxDate, showTime = props.showTime, value2 = props.value, defaultValue = props.defaultValue, pickerValue = props.pickerValue, defaultPickerValue = props.defaultPickerValue;
  var values2 = useList(value2);
  var defaultValues = useList(defaultValue);
  var pickerValues = useList(pickerValue);
  var defaultPickerValues = useList(defaultPickerValue);
  var internalPicker = picker === "date" && showTime ? "datetime" : picker;
  var multipleInteractivePicker = internalPicker === "time" || internalPicker === "datetime";
  var complexPicker = multipleInteractivePicker || multiple;
  var mergedNeedConfirm = needConfirm !== null && needConfirm !== void 0 ? needConfirm : multipleInteractivePicker;
  var _getTimeProps = getTimeProps(props), _getTimeProps2 = _slicedToArray(_getTimeProps, 4), timeProps = _getTimeProps2[0], localeTimeProps = _getTimeProps2[1], showTimeFormat = _getTimeProps2[2], propFormat = _getTimeProps2[3];
  var mergedLocale = useLocale(locale2, localeTimeProps);
  var mergedShowTime = reactExports.useMemo(function () {
    return fillShowTimeConfig(internalPicker, showTimeFormat, propFormat, timeProps, mergedLocale);
  }, [internalPicker, showTimeFormat, propFormat, timeProps, mergedLocale]);
  var filledProps = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, props), {}, {
      prefixCls,
      locale: mergedLocale,
      picker,
      styles,
      classNames: classNames2,
      order: order2,
      components: _objectSpread2({
        input: inputRender
      }, components),
      clearIcon: fillClearIcon(prefixCls, allowClear, clearIcon),
      showTime: mergedShowTime,
      value: values2,
      defaultValue: defaultValues,
      pickerValue: pickerValues,
      defaultPickerValue: defaultPickerValues
    }, updater === null || updater === void 0 ? void 0 : updater());
  }, [props]);
  var _useFieldFormat = useFieldFormat(internalPicker, mergedLocale, format3), _useFieldFormat2 = _slicedToArray(_useFieldFormat, 2), formatList = _useFieldFormat2[0], maskFormat = _useFieldFormat2[1];
  var mergedInputReadOnly = useInputReadOnly(formatList, inputReadOnly, multiple);
  var disabledBoundaryDate = useDisabledBoundary(generateConfig2, locale2, disabledDate, minDate, maxDate);
  var isInvalidateDate = useInvalidate(generateConfig2, picker, disabledDate, mergedShowTime);
  var mergedProps = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, filledProps), {}, {
      needConfirm: mergedNeedConfirm,
      inputReadOnly: mergedInputReadOnly,
      disabledDate: disabledBoundaryDate
    });
  }, [filledProps, mergedNeedConfirm, mergedInputReadOnly, disabledBoundaryDate]);
  return [mergedProps, internalPicker, complexPicker, formatList, maskFormat, isInvalidateDate];
}
function useDelayState(value2, defaultValue, onChange) {
  var _useMergedState = useMergedState(defaultValue, {
    value: value2
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), state2 = _useMergedState2[0], setState = _useMergedState2[1];
  var nextValueRef = React.useRef(value2);
  var rafRef = React.useRef();
  var cancelRaf = function cancelRaf2() {
    wrapperRaf.cancel(rafRef.current);
  };
  var doUpdate = useEvent(function () {
    setState(nextValueRef.current);
    if (onChange && state2 !== nextValueRef.current) {
      onChange(nextValueRef.current);
    }
  });
  var updateValue = useEvent(function (next2, immediately) {
    cancelRaf();
    nextValueRef.current = next2;
    if (next2 || immediately) {
      doUpdate();
    } else {
      rafRef.current = wrapperRaf(doUpdate);
    }
  });
  React.useEffect(function () {
    return cancelRaf;
  }, []);
  return [state2, updateValue];
}
function useOpen(open2, defaultOpen) {
  var disabledList = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  var onOpenChange = arguments.length > 3 ? arguments[3] : void 0;
  var mergedOpen = disabledList.every(function (disabled2) {
    return disabled2;
  }) ? false : open2;
  var _useDelayState = useDelayState(mergedOpen, defaultOpen || false, onOpenChange), _useDelayState2 = _slicedToArray(_useDelayState, 2), rafOpen = _useDelayState2[0], setRafOpen = _useDelayState2[1];
  function setOpen(next2) {
    var config2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!config2.inherit || rafOpen) {
      setRafOpen(next2, config2.force);
    }
  }
  return [rafOpen, setOpen];
}
function usePickerRef(ref) {
  var selectorRef = reactExports.useRef();
  reactExports.useImperativeHandle(ref, function () {
    var _selectorRef$current;
    return {
      nativeElement: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.nativeElement,
      focus: function focus(options2) {
        var _selectorRef$current2;
        (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 || _selectorRef$current2.focus(options2);
      },
      blur: function blur() {
        var _selectorRef$current3;
        (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.blur();
      }
    };
  });
  return selectorRef;
}
function usePresets(presets, legacyRanges) {
  return reactExports.useMemo(function () {
    if (presets) {
      return presets;
    }
    if (legacyRanges) {
      warningOnce(false, "`ranges` is deprecated. Please use `presets` instead.");
      return Object.entries(legacyRanges).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2), label2 = _ref2[0], value2 = _ref2[1];
        return {
          label: label2,
          value: value2
        };
      });
    }
    return [];
  }, [presets, legacyRanges]);
}
function useLockEffect(condition, callback) {
  var delayFrames = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  var callbackRef = reactExports.useRef(callback);
  callbackRef.current = callback;
  useLayoutUpdateEffect(function () {
    if (condition) {
      callbackRef.current(condition);
    } else {
      var id2 = wrapperRaf(function () {
        callbackRef.current(condition);
      }, delayFrames);
      return function () {
        wrapperRaf.cancel(id2);
      };
    }
  }, [condition]);
}
function useRangeActive(disabled2) {
  var empty2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var _React$useState = reactExports.useState(0), _React$useState2 = _slicedToArray(_React$useState, 2), activeIndex = _React$useState2[0], setActiveIndex = _React$useState2[1];
  var _React$useState3 = reactExports.useState(false), _React$useState4 = _slicedToArray(_React$useState3, 2), focused = _React$useState4[0], setFocused = _React$useState4[1];
  var activeListRef = reactExports.useRef([]);
  var lastOperationRef = reactExports.useRef(null);
  var triggerFocus = function triggerFocus2(nextFocus) {
    setFocused(nextFocus);
  };
  var lastOperation = function lastOperation2(type4) {
    if (type4) {
      lastOperationRef.current = type4;
    }
    return lastOperationRef.current;
  };
  var nextActiveIndex = function nextActiveIndex2(nextValue) {
    var list = activeListRef.current;
    var filledActiveSet = new Set(list.filter(function (index2) {
      return nextValue[index2] || empty2[index2];
    }));
    var nextIndex = list[list.length - 1] === 0 ? 1 : 0;
    if (filledActiveSet.size >= 2 || disabled2[nextIndex]) {
      return null;
    }
    return nextIndex;
  };
  useLockEffect(focused, function () {
    if (!focused) {
      activeListRef.current = [];
    }
  });
  reactExports.useEffect(function () {
    if (focused) {
      activeListRef.current.push(activeIndex);
    }
  }, [focused, activeIndex]);
  return [focused, triggerFocus, lastOperation, activeIndex, setActiveIndex, nextActiveIndex, activeListRef.current];
}
function useRangeDisabledDate(values2, disabled2, activeIndexList, generateConfig2, locale2, disabledDate) {
  var activeIndex = activeIndexList[activeIndexList.length - 1];
  var firstValuedIndex = activeIndexList.find(function (index2) {
    return values2[index2];
  });
  var rangeDisabledDate = function rangeDisabledDate2(date5, info2) {
    var _values = _slicedToArray(values2, 2), start = _values[0], end = _values[1];
    var mergedInfo = _objectSpread2(_objectSpread2({}, info2), {}, {
      from: activeIndex !== firstValuedIndex ? values2[firstValuedIndex] : void 0
    });
    if (activeIndex === 1 && disabled2[0] && start && // Same date isOK
      !isSame(generateConfig2, locale2, start, date5, mergedInfo.type) && // Before start date
      generateConfig2.isAfter(start, date5)) {
      return true;
    }
    if (activeIndex === 0 && disabled2[1] && end && // Same date isOK
      !isSame(generateConfig2, locale2, end, date5, mergedInfo.type) && // After end date
      generateConfig2.isAfter(date5, end)) {
      return true;
    }
    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date5, mergedInfo);
  };
  return rangeDisabledDate;
}
function offsetPanelDate(generateConfig2, picker, date5, offset) {
  switch (picker) {
    case "date":
    case "week":
      return generateConfig2.addMonth(date5, offset);
    case "month":
    case "quarter":
      return generateConfig2.addYear(date5, offset);
    case "year":
      return generateConfig2.addYear(date5, offset * 10);
    case "decade":
      return generateConfig2.addYear(date5, offset * 100);
    default:
      return date5;
  }
}
var EMPTY_LIST = [];
function useRangePickerValue(generateConfig2, locale2, calendarValue, modes, open2, activeIndex, pickerMode, multiplePanel) {
  var defaultPickerValue = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : EMPTY_LIST;
  var pickerValue = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : EMPTY_LIST;
  var timeDefaultValue = arguments.length > 10 && arguments[10] !== void 0 ? arguments[10] : EMPTY_LIST;
  var onPickerValueChange = arguments.length > 11 ? arguments[11] : void 0;
  var minDate = arguments.length > 12 ? arguments[12] : void 0;
  var maxDate = arguments.length > 13 ? arguments[13] : void 0;
  var isTimePicker = pickerMode === "time";
  var mergedActiveIndex = activeIndex || 0;
  var getDefaultPickerValue = function getDefaultPickerValue2(index2) {
    var now2 = generateConfig2.getNow();
    if (isTimePicker) {
      now2 = fillTime(generateConfig2, now2);
    }
    return defaultPickerValue[index2] || calendarValue[index2] || now2;
  };
  var _pickerValue = _slicedToArray(pickerValue, 2), startPickerValue = _pickerValue[0], endPickerValue = _pickerValue[1];
  var _useMergedState = useMergedState(function () {
    return getDefaultPickerValue(0);
  }, {
    value: startPickerValue
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), mergedStartPickerValue = _useMergedState2[0], setStartPickerValue = _useMergedState2[1];
  var _useMergedState3 = useMergedState(function () {
    return getDefaultPickerValue(1);
  }, {
    value: endPickerValue
  }), _useMergedState4 = _slicedToArray(_useMergedState3, 2), mergedEndPickerValue = _useMergedState4[0], setEndPickerValue = _useMergedState4[1];
  var currentPickerValue = reactExports.useMemo(function () {
    var current = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex];
    return isTimePicker ? current : fillTime(generateConfig2, current, timeDefaultValue[mergedActiveIndex]);
  }, [isTimePicker, mergedStartPickerValue, mergedEndPickerValue, mergedActiveIndex, generateConfig2, timeDefaultValue]);
  var setCurrentPickerValue = function setCurrentPickerValue2(nextPickerValue) {
    var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "panel";
    var updater = [setStartPickerValue, setEndPickerValue][mergedActiveIndex];
    updater(nextPickerValue);
    var clone = [mergedStartPickerValue, mergedEndPickerValue];
    clone[mergedActiveIndex] = nextPickerValue;
    if (onPickerValueChange && (!isSame(generateConfig2, locale2, mergedStartPickerValue, clone[0], pickerMode) || !isSame(generateConfig2, locale2, mergedEndPickerValue, clone[1], pickerMode))) {
      onPickerValueChange(clone, {
        source,
        range: mergedActiveIndex === 1 ? "end" : "start",
        mode: modes
      });
    }
  };
  var getEndDatePickerValue = function getEndDatePickerValue2(startDate, endDate) {
    if (multiplePanel) {
      var SAME_CHECKER = {
        date: "month",
        week: "month",
        month: "year",
        quarter: "year"
      };
      var mode2 = SAME_CHECKER[pickerMode];
      if (mode2 && !isSame(generateConfig2, locale2, startDate, endDate, mode2)) {
        return offsetPanelDate(generateConfig2, pickerMode, endDate, -1);
      }
      if (pickerMode === "year") {
        var srcYear = Math.floor(generateConfig2.getYear(startDate) / 10);
        var tgtYear = Math.floor(generateConfig2.getYear(endDate) / 10);
        if (srcYear !== tgtYear) {
          return offsetPanelDate(generateConfig2, pickerMode, endDate, -1);
        }
      }
    }
    return endDate;
  };
  var prevActiveIndexRef = reactExports.useRef(null);
  useLayoutEffect(function () {
    if (open2) {
      if (!defaultPickerValue[mergedActiveIndex]) {
        var nextPickerValue = isTimePicker ? null : generateConfig2.getNow();
        if (prevActiveIndexRef.current !== null && prevActiveIndexRef.current !== mergedActiveIndex) {
          nextPickerValue = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex ^ 1];
        } else if (calendarValue[mergedActiveIndex]) {
          nextPickerValue = mergedActiveIndex === 0 ? calendarValue[0] : getEndDatePickerValue(calendarValue[0], calendarValue[1]);
        } else if (calendarValue[mergedActiveIndex ^ 1]) {
          nextPickerValue = calendarValue[mergedActiveIndex ^ 1];
        }
        if (nextPickerValue) {
          if (minDate && generateConfig2.isAfter(minDate, nextPickerValue)) {
            nextPickerValue = minDate;
          }
          var offsetPickerValue = multiplePanel ? offsetPanelDate(generateConfig2, pickerMode, nextPickerValue, 1) : nextPickerValue;
          if (maxDate && generateConfig2.isAfter(offsetPickerValue, maxDate)) {
            nextPickerValue = multiplePanel ? offsetPanelDate(generateConfig2, pickerMode, maxDate, -1) : maxDate;
          }
          setCurrentPickerValue(nextPickerValue, "reset");
        }
      }
    }
  }, [open2, mergedActiveIndex, calendarValue[mergedActiveIndex]]);
  reactExports.useEffect(function () {
    if (open2) {
      prevActiveIndexRef.current = mergedActiveIndex;
    } else {
      prevActiveIndexRef.current = null;
    }
  }, [open2, mergedActiveIndex]);
  useLayoutEffect(function () {
    if (open2 && defaultPickerValue) {
      if (defaultPickerValue[mergedActiveIndex]) {
        setCurrentPickerValue(defaultPickerValue[mergedActiveIndex], "reset");
      }
    }
  }, [open2, mergedActiveIndex]);
  return [currentPickerValue, setCurrentPickerValue];
}
function useSyncState(defaultValue, controlledValue) {
  var valueRef = reactExports.useRef(defaultValue);
  var _React$useState = reactExports.useState({}), _React$useState2 = _slicedToArray(_React$useState, 2), forceUpdate = _React$useState2[1];
  var getter = function getter2(useControlledValueFirst) {
    return useControlledValueFirst && controlledValue !== void 0 ? controlledValue : valueRef.current;
  };
  var setter = function setter2(nextValue) {
    valueRef.current = nextValue;
    forceUpdate({});
  };
  return [getter, setter, getter(true)];
}
var EMPTY_VALUE = [];
function useUtil(generateConfig2, locale2, formatList) {
  var getDateTexts = function getDateTexts2(dates) {
    return dates.map(function (date5) {
      return formatValue(date5, {
        generateConfig: generateConfig2,
        locale: locale2,
        format: formatList[0]
      });
    });
  };
  var isSameDates = function isSameDates2(source, target) {
    var maxLen = Math.max(source.length, target.length);
    var diffIndex = -1;
    for (var i = 0; i < maxLen; i += 1) {
      var prev2 = source[i] || null;
      var next2 = target[i] || null;
      if (prev2 !== next2 && !isSameTimestamp(generateConfig2, prev2, next2)) {
        diffIndex = i;
        break;
      }
    }
    return [diffIndex < 0, diffIndex !== 0];
  };
  return [getDateTexts, isSameDates];
}
function orderDates(dates, generateConfig2) {
  return _toConsumableArray(dates).sort(function (a, b2) {
    return generateConfig2.isAfter(a, b2) ? 1 : -1;
  });
}
function useCalendarValue(mergedValue) {
  var _useSyncState = useSyncState(mergedValue), _useSyncState2 = _slicedToArray(_useSyncState, 2), calendarValue = _useSyncState2[0], setCalendarValue = _useSyncState2[1];
  var syncWithValue = useEvent(function () {
    setCalendarValue(mergedValue);
  });
  reactExports.useEffect(function () {
    syncWithValue();
  }, [mergedValue]);
  return [calendarValue, setCalendarValue];
}
function useInnerValue(generateConfig2, locale2, formatList, rangeValue, order2, defaultValue, value2, onCalendarChange, onOk) {
  var _useMergedState = useMergedState(defaultValue, {
    value: value2
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), innerValue = _useMergedState2[0], setInnerValue = _useMergedState2[1];
  var mergedValue = innerValue || EMPTY_VALUE;
  var _useCalendarValue = useCalendarValue(mergedValue), _useCalendarValue2 = _slicedToArray(_useCalendarValue, 2), calendarValue = _useCalendarValue2[0], setCalendarValue = _useCalendarValue2[1];
  var _useUtil = useUtil(generateConfig2, locale2, formatList), _useUtil2 = _slicedToArray(_useUtil, 2), getDateTexts = _useUtil2[0], isSameDates = _useUtil2[1];
  var triggerCalendarChange = useEvent(function (nextCalendarValues) {
    var clone = _toConsumableArray(nextCalendarValues);
    if (rangeValue) {
      for (var i = 0; i < 2; i += 1) {
        clone[i] = clone[i] || null;
      }
    } else if (order2) {
      clone = orderDates(clone.filter(function (date5) {
        return date5;
      }), generateConfig2);
    }
    var _isSameDates = isSameDates(calendarValue(), clone), _isSameDates2 = _slicedToArray(_isSameDates, 2), isSameMergedDates = _isSameDates2[0], isSameStart = _isSameDates2[1];
    if (!isSameMergedDates) {
      setCalendarValue(clone);
      if (onCalendarChange) {
        var cellTexts = getDateTexts(clone);
        onCalendarChange(clone, cellTexts, {
          range: isSameStart ? "end" : "start"
        });
      }
    }
  });
  var triggerOk = function triggerOk2() {
    if (onOk) {
      onOk(calendarValue());
    }
  };
  return [mergedValue, setInnerValue, calendarValue, triggerCalendarChange, triggerOk];
}
function useRangeValue(info2, mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, disabled2, formatList, focused, open2, isInvalidateDate) {
  var generateConfig2 = info2.generateConfig, locale2 = info2.locale, picker = info2.picker, onChange = info2.onChange, allowEmpty = info2.allowEmpty, order2 = info2.order;
  var orderOnChange = disabled2.some(function (d2) {
    return d2;
  }) ? false : order2;
  var _useUtil3 = useUtil(generateConfig2, locale2, formatList), _useUtil4 = _slicedToArray(_useUtil3, 2), getDateTexts = _useUtil4[0], isSameDates = _useUtil4[1];
  var _useSyncState3 = useSyncState(mergedValue), _useSyncState4 = _slicedToArray(_useSyncState3, 2), submitValue = _useSyncState4[0], setSubmitValue = _useSyncState4[1];
  var syncWithValue = useEvent(function () {
    setSubmitValue(mergedValue);
  });
  reactExports.useEffect(function () {
    syncWithValue();
  }, [mergedValue]);
  var triggerSubmit = useEvent(function (nextValue) {
    var isNullValue = nextValue === null;
    var clone = _toConsumableArray(nextValue || submitValue());
    if (isNullValue) {
      var maxLen = Math.max(disabled2.length, clone.length);
      for (var i = 0; i < maxLen; i += 1) {
        if (!disabled2[i]) {
          clone[i] = null;
        }
      }
    }
    if (orderOnChange && clone[0] && clone[1]) {
      clone = orderDates(clone, generateConfig2);
    }
    triggerCalendarChange(clone);
    var _clone = clone, _clone2 = _slicedToArray(_clone, 2), start = _clone2[0], end = _clone2[1];
    var startEmpty = !start;
    var endEmpty = !end;
    var validateEmptyDateRange = allowEmpty ? (
      // Validate empty start
      (!startEmpty || allowEmpty[0]) && // Validate empty end
      (!endEmpty || allowEmpty[1])
    ) : true;
    var validateOrder = !order2 || startEmpty || endEmpty || isSame(generateConfig2, locale2, start, end, picker) || generateConfig2.isAfter(end, start);
    var validateDates = (
      // Validate start
      (!start || !isInvalidateDate(start, {
        activeIndex: 0
      })) && // Validate end
      (!end || !isInvalidateDate(end, {
        from: start,
        activeIndex: 1
      }))
    );
    var allPassed = (
      // Null value is from clear button
      isNullValue || // Normal check
      validateEmptyDateRange && validateOrder && validateDates
    );
    if (allPassed) {
      setInnerValue(clone);
      var _isSameDates3 = isSameDates(clone, mergedValue), _isSameDates4 = _slicedToArray(_isSameDates3, 1), isSameMergedDates = _isSameDates4[0];
      if (onChange && !isSameMergedDates) {
        onChange(
          // Return null directly if all date are empty
          isNullValue && clone.every(function (val) {
            return !val;
          }) ? null : clone,
          getDateTexts(clone)
        );
      }
    }
    return allPassed;
  });
  var flushSubmit = useEvent(function (index2, needTriggerChange) {
    var nextSubmitValue = fillIndex(submitValue(), index2, getCalendarValue()[index2]);
    setSubmitValue(nextSubmitValue);
    if (needTriggerChange) {
      triggerSubmit();
    }
  });
  var interactiveFinished = !focused && !open2;
  useLockEffect(!interactiveFinished, function () {
    if (interactiveFinished) {
      triggerSubmit();
      triggerCalendarChange(mergedValue);
      syncWithValue();
    }
  }, 2);
  return [flushSubmit, triggerSubmit];
}
function useShowNow(picker, mode2, showNow, showToday, rangePicker) {
  if (mode2 !== "date" && mode2 !== "time") {
    return false;
  }
  if (showNow !== void 0) {
    return showNow;
  }
  if (showToday !== void 0) {
    return showToday;
  }
  return !rangePicker && (picker === "date" || picker === "time");
}
function findValidateTime(date5, getHourUnits, getMinuteUnits, getSecondUnits, getMillisecondUnits, generateConfig2) {
  var nextDate = date5;
  function alignValidate(getUnitValue, setUnitValue, units) {
    var nextValue = generateConfig2[getUnitValue](nextDate);
    var nextUnit = units.find(function (unit2) {
      return unit2.value === nextValue;
    });
    if (!nextUnit || nextUnit.disabled) {
      var validateUnits = units.filter(function (unit2) {
        return !unit2.disabled;
      });
      var reverseEnabledUnits = _toConsumableArray(validateUnits).reverse();
      var validateUnit = reverseEnabledUnits.find(function (unit2) {
        return unit2.value <= nextValue;
      }) || validateUnits[0];
      if (validateUnit) {
        nextValue = validateUnit.value;
        nextDate = generateConfig2[setUnitValue](nextDate, nextValue);
      }
    }
    return nextValue;
  }
  var nextHour = alignValidate("getHour", "setHour", getHourUnits());
  var nextMinute = alignValidate("getMinute", "setMinute", getMinuteUnits(nextHour));
  var nextSecond = alignValidate("getSecond", "setSecond", getSecondUnits(nextHour, nextMinute));
  alignValidate("getMillisecond", "setMillisecond", getMillisecondUnits(nextHour, nextMinute, nextSecond));
  return nextDate;
}
function emptyDisabled() {
  return [];
}
function generateUnits(start, end) {
  var step = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  var hideDisabledOptions = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var disabledUnits = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];
  var pad = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 2;
  var units = [];
  var integerStep = step >= 1 ? step | 0 : 1;
  for (var i = start; i <= end; i += integerStep) {
    var disabled2 = disabledUnits.includes(i);
    if (!disabled2 || !hideDisabledOptions) {
      units.push({
        label: leftPad(i, pad),
        value: i,
        disabled: disabled2
      });
    }
  }
  return units;
}
function useTimeInfo(generateConfig2) {
  var props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var date5 = arguments.length > 2 ? arguments[2] : void 0;
  var _ref = props || {}, use12Hours = _ref.use12Hours, _ref$hourStep = _ref.hourStep, hourStep = _ref$hourStep === void 0 ? 1 : _ref$hourStep, _ref$minuteStep = _ref.minuteStep, minuteStep = _ref$minuteStep === void 0 ? 1 : _ref$minuteStep, _ref$secondStep = _ref.secondStep, secondStep = _ref$secondStep === void 0 ? 1 : _ref$secondStep, _ref$millisecondStep = _ref.millisecondStep, millisecondStep = _ref$millisecondStep === void 0 ? 100 : _ref$millisecondStep, hideDisabledOptions = _ref.hideDisabledOptions, disabledTime = _ref.disabledTime, disabledHours = _ref.disabledHours, disabledMinutes = _ref.disabledMinutes, disabledSeconds = _ref.disabledSeconds;
  var mergedDate = reactExports.useMemo(function () {
    return date5 || generateConfig2.getNow();
  }, [date5, generateConfig2]);
  var getDisabledTimes = reactExports.useCallback(function (targetDate) {
    var disabledConfig = (disabledTime === null || disabledTime === void 0 ? void 0 : disabledTime(targetDate)) || {};
    return [disabledConfig.disabledHours || disabledHours || emptyDisabled, disabledConfig.disabledMinutes || disabledMinutes || emptyDisabled, disabledConfig.disabledSeconds || disabledSeconds || emptyDisabled, disabledConfig.disabledMilliseconds || emptyDisabled];
  }, [disabledTime, disabledHours, disabledMinutes, disabledSeconds]);
  var _React$useMemo = reactExports.useMemo(function () {
    return getDisabledTimes(mergedDate);
  }, [mergedDate, getDisabledTimes]), _React$useMemo2 = _slicedToArray(_React$useMemo, 4), mergedDisabledHours = _React$useMemo2[0], mergedDisabledMinutes = _React$useMemo2[1], mergedDisabledSeconds = _React$useMemo2[2], mergedDisabledMilliseconds = _React$useMemo2[3];
  var getAllUnits = reactExports.useCallback(function (getDisabledHours, getDisabledMinutes, getDisabledSeconds, getDisabledMilliseconds) {
    var hours = generateUnits(0, 23, hourStep, hideDisabledOptions, getDisabledHours());
    var rowHourUnits2 = use12Hours ? hours.map(function (unit2) {
      return _objectSpread2(_objectSpread2({}, unit2), {}, {
        label: leftPad(unit2.value % 12 || 12, 2)
      });
    }) : hours;
    var getMinuteUnits2 = function getMinuteUnits3(nextHour) {
      return generateUnits(0, 59, minuteStep, hideDisabledOptions, getDisabledMinutes(nextHour));
    };
    var getSecondUnits2 = function getSecondUnits3(nextHour, nextMinute) {
      return generateUnits(0, 59, secondStep, hideDisabledOptions, getDisabledSeconds(nextHour, nextMinute));
    };
    var getMillisecondUnits2 = function getMillisecondUnits3(nextHour, nextMinute, nextSecond) {
      return generateUnits(0, 999, millisecondStep, hideDisabledOptions, getDisabledMilliseconds(nextHour, nextMinute, nextSecond), 3);
    };
    return [rowHourUnits2, getMinuteUnits2, getSecondUnits2, getMillisecondUnits2];
  }, [hideDisabledOptions, hourStep, use12Hours, millisecondStep, minuteStep, secondStep]);
  var _React$useMemo3 = reactExports.useMemo(function () {
    return getAllUnits(mergedDisabledHours, mergedDisabledMinutes, mergedDisabledSeconds, mergedDisabledMilliseconds);
  }, [getAllUnits, mergedDisabledHours, mergedDisabledMinutes, mergedDisabledSeconds, mergedDisabledMilliseconds]), _React$useMemo4 = _slicedToArray(_React$useMemo3, 4), rowHourUnits = _React$useMemo4[0], getMinuteUnits = _React$useMemo4[1], getSecondUnits = _React$useMemo4[2], getMillisecondUnits = _React$useMemo4[3];
  var getValidTime = function getValidTime2(nextTime, certainDate) {
    var getCheckHourUnits = function getCheckHourUnits2() {
      return rowHourUnits;
    };
    var getCheckMinuteUnits = getMinuteUnits;
    var getCheckSecondUnits = getSecondUnits;
    var getCheckMillisecondUnits = getMillisecondUnits;
    if (certainDate) {
      var _getDisabledTimes = getDisabledTimes(certainDate), _getDisabledTimes2 = _slicedToArray(_getDisabledTimes, 4), targetDisabledHours = _getDisabledTimes2[0], targetDisabledMinutes = _getDisabledTimes2[1], targetDisabledSeconds = _getDisabledTimes2[2], targetDisabledMilliseconds = _getDisabledTimes2[3];
      var _getAllUnits = getAllUnits(targetDisabledHours, targetDisabledMinutes, targetDisabledSeconds, targetDisabledMilliseconds), _getAllUnits2 = _slicedToArray(_getAllUnits, 4), targetRowHourUnits = _getAllUnits2[0], targetGetMinuteUnits = _getAllUnits2[1], targetGetSecondUnits = _getAllUnits2[2], targetGetMillisecondUnits = _getAllUnits2[3];
      getCheckHourUnits = function getCheckHourUnits2() {
        return targetRowHourUnits;
      };
      getCheckMinuteUnits = targetGetMinuteUnits;
      getCheckSecondUnits = targetGetSecondUnits;
      getCheckMillisecondUnits = targetGetMillisecondUnits;
    }
    var validateDate = findValidateTime(nextTime, getCheckHourUnits, getCheckMinuteUnits, getCheckSecondUnits, getCheckMillisecondUnits, generateConfig2);
    return validateDate;
  };
  return [
    // getValidTime
    getValidTime,
    // Units
    rowHourUnits,
    getMinuteUnits,
    getSecondUnits,
    getMillisecondUnits
  ];
}
function Footer(props) {
  var mode2 = props.mode, internalMode = props.internalMode, renderExtraFooter = props.renderExtraFooter, showNow = props.showNow, showTime = props.showTime, onSubmit = props.onSubmit, onNow = props.onNow, invalid = props.invalid, needConfirm = props.needConfirm, generateConfig2 = props.generateConfig, disabledDate = props.disabledDate;
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls, locale2 = _React$useContext.locale, _React$useContext$but = _React$useContext.button, Button2 = _React$useContext$but === void 0 ? "button" : _React$useContext$but;
  var now2 = generateConfig2.getNow();
  var _useTimeInfo = useTimeInfo(generateConfig2, showTime, now2), _useTimeInfo2 = _slicedToArray(_useTimeInfo, 1), getValidTime = _useTimeInfo2[0];
  var extraNode = renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter(mode2);
  var nowDisabled = disabledDate(now2, {
    type: mode2
  });
  var onInternalNow = function onInternalNow2() {
    if (!nowDisabled) {
      var validateNow = getValidTime(now2);
      onNow(validateNow);
    }
  };
  var nowPrefixCls = "".concat(prefixCls, "-now");
  var nowBtnPrefixCls = "".concat(nowPrefixCls, "-btn");
  var presetNode = showNow && /* @__PURE__ */ reactExports.createElement("li", {
    className: nowPrefixCls
  }, /* @__PURE__ */ reactExports.createElement("a", {
    className: classNames(nowBtnPrefixCls, nowDisabled && "".concat(nowBtnPrefixCls, "-disabled")),
    "aria-disabled": nowDisabled,
    onClick: onInternalNow
  }, internalMode === "date" ? locale2.today : locale2.now));
  var okNode = needConfirm && /* @__PURE__ */ reactExports.createElement("li", {
    className: "".concat(prefixCls, "-ok")
  }, /* @__PURE__ */ reactExports.createElement(Button2, {
    disabled: invalid,
    onClick: onSubmit
  }, locale2.ok));
  var rangeNode = (presetNode || okNode) && /* @__PURE__ */ reactExports.createElement("ul", {
    className: "".concat(prefixCls, "-ranges")
  }, presetNode, okNode);
  if (!extraNode && !rangeNode) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-footer")
  }, extraNode && /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-footer-extra")
  }, extraNode), rangeNode);
}
function useToggleDates(generateConfig2, locale2, panelMode) {
  function toggleDates(list, target) {
    var index2 = list.findIndex(function (date5) {
      return isSame(generateConfig2, locale2, date5, target, panelMode);
    });
    if (index2 === -1) {
      return [].concat(_toConsumableArray(list), [target]);
    }
    var sliceList = _toConsumableArray(list);
    sliceList.splice(index2, 1);
    return sliceList;
  }
  return toggleDates;
}
var PanelContext = /* @__PURE__ */ reactExports.createContext(null);
function usePanelContext() {
  return reactExports.useContext(PanelContext);
}
function useInfo(props, panelType) {
  var prefixCls = props.prefixCls, generateConfig2 = props.generateConfig, locale2 = props.locale, disabledDate = props.disabledDate, minDate = props.minDate, maxDate = props.maxDate, cellRender = props.cellRender, hoverValue = props.hoverValue, hoverRangeValue = props.hoverRangeValue, onHover = props.onHover, values2 = props.values, pickerValue = props.pickerValue, onSelect = props.onSelect, prevIcon = props.prevIcon, nextIcon = props.nextIcon, superPrevIcon = props.superPrevIcon, superNextIcon = props.superNextIcon;
  var now2 = generateConfig2.getNow();
  var info2 = {
    now: now2,
    values: values2,
    pickerValue,
    prefixCls,
    disabledDate,
    minDate,
    maxDate,
    cellRender,
    hoverValue,
    hoverRangeValue,
    onHover,
    locale: locale2,
    generateConfig: generateConfig2,
    onSelect,
    panelType,
    // Icons
    prevIcon,
    nextIcon,
    superPrevIcon,
    superNextIcon
  };
  return [info2, now2];
}
var PickerHackContext = /* @__PURE__ */ reactExports.createContext({});
function PanelBody(props) {
  var rowNum = props.rowNum, colNum = props.colNum, baseDate = props.baseDate, getCellDate = props.getCellDate, prefixColumn = props.prefixColumn, rowClassName = props.rowClassName, titleFormat = props.titleFormat, getCellText = props.getCellText, getCellClassName = props.getCellClassName, headerCells = props.headerCells, _props$cellSelection = props.cellSelection, cellSelection = _props$cellSelection === void 0 ? true : _props$cellSelection, disabledDate = props.disabledDate;
  var _usePanelContext = usePanelContext(), prefixCls = _usePanelContext.prefixCls, type4 = _usePanelContext.panelType, now2 = _usePanelContext.now, contextDisabledDate = _usePanelContext.disabledDate, cellRender = _usePanelContext.cellRender, onHover = _usePanelContext.onHover, hoverValue = _usePanelContext.hoverValue, hoverRangeValue = _usePanelContext.hoverRangeValue, generateConfig2 = _usePanelContext.generateConfig, values2 = _usePanelContext.values, locale2 = _usePanelContext.locale, onSelect = _usePanelContext.onSelect;
  var mergedDisabledDate = disabledDate || contextDisabledDate;
  var cellPrefixCls = "".concat(prefixCls, "-cell");
  var _React$useContext = reactExports.useContext(PickerHackContext), onCellDblClick = _React$useContext.onCellDblClick;
  var matchValues = function matchValues2(date5) {
    return values2.some(function (singleValue) {
      return singleValue && isSame(generateConfig2, locale2, date5, singleValue, type4);
    });
  };
  var rows = [];
  for (var row = 0; row < rowNum; row += 1) {
    var rowNode = [];
    var rowStartDate = void 0;
    var _loop = function _loop2() {
      var offset = row * colNum + col;
      var currentDate = getCellDate(baseDate, offset);
      var disabled2 = mergedDisabledDate === null || mergedDisabledDate === void 0 ? void 0 : mergedDisabledDate(currentDate, {
        type: type4
      });
      if (col === 0) {
        rowStartDate = currentDate;
        if (prefixColumn) {
          rowNode.push(prefixColumn(rowStartDate));
        }
      }
      var inRange = false;
      var rangeStart = false;
      var rangeEnd = false;
      if (cellSelection && hoverRangeValue) {
        var _hoverRangeValue = _slicedToArray(hoverRangeValue, 2), hoverStart = _hoverRangeValue[0], hoverEnd = _hoverRangeValue[1];
        inRange = isInRange(generateConfig2, hoverStart, hoverEnd, currentDate);
        rangeStart = isSame(generateConfig2, locale2, currentDate, hoverStart, type4);
        rangeEnd = isSame(generateConfig2, locale2, currentDate, hoverEnd, type4);
      }
      var title2 = titleFormat ? formatValue(currentDate, {
        locale: locale2,
        format: titleFormat,
        generateConfig: generateConfig2
      }) : void 0;
      var inner = /* @__PURE__ */ reactExports.createElement("div", {
        className: "".concat(cellPrefixCls, "-inner")
      }, getCellText(currentDate));
      rowNode.push(/* @__PURE__ */ reactExports.createElement("td", {
        key: col,
        title: title2,
        className: classNames(cellPrefixCls, _objectSpread2(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(cellPrefixCls, "-disabled"), disabled2), "".concat(cellPrefixCls, "-hover"), (hoverValue || []).some(function (date5) {
          return isSame(generateConfig2, locale2, currentDate, date5, type4);
        })), "".concat(cellPrefixCls, "-in-range"), inRange && !rangeStart && !rangeEnd), "".concat(cellPrefixCls, "-range-start"), rangeStart), "".concat(cellPrefixCls, "-range-end"), rangeEnd), "".concat(prefixCls, "-cell-selected"), !hoverRangeValue && // WeekPicker use row instead
        type4 !== "week" && matchValues(currentDate)), getCellClassName(currentDate))),
        onClick: function onClick() {
          if (!disabled2) {
            onSelect(currentDate);
          }
        },
        onDoubleClick: function onDoubleClick() {
          if (!disabled2 && onCellDblClick) {
            onCellDblClick();
          }
        },
        onMouseEnter: function onMouseEnter() {
          if (!disabled2) {
            onHover === null || onHover === void 0 || onHover(currentDate);
          }
        },
        onMouseLeave: function onMouseLeave() {
          if (!disabled2) {
            onHover === null || onHover === void 0 || onHover(null);
          }
        }
      }, cellRender ? cellRender(currentDate, {
        prefixCls,
        originNode: inner,
        today: now2,
        type: type4,
        locale: locale2
      }) : inner));
    };
    for (var col = 0; col < colNum; col += 1) {
      _loop();
    }
    rows.push(/* @__PURE__ */ reactExports.createElement("tr", {
      key: row,
      className: rowClassName === null || rowClassName === void 0 ? void 0 : rowClassName(rowStartDate)
    }, rowNode));
  }
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-body")
  }, /* @__PURE__ */ reactExports.createElement("table", {
    className: "".concat(prefixCls, "-content")
  }, headerCells && /* @__PURE__ */ reactExports.createElement("thead", null, /* @__PURE__ */ reactExports.createElement("tr", null, headerCells)), /* @__PURE__ */ reactExports.createElement("tbody", null, rows)));
}
var HIDDEN_STYLE = {
  visibility: "hidden"
};
function PanelHeader(props) {
  var offset = props.offset, superOffset = props.superOffset, onChange = props.onChange, getStart = props.getStart, getEnd = props.getEnd, children = props.children;
  var _usePanelContext = usePanelContext(), prefixCls = _usePanelContext.prefixCls, _usePanelContext$prev = _usePanelContext.prevIcon, prevIcon = _usePanelContext$prev === void 0 ? "‹" : _usePanelContext$prev, _usePanelContext$next = _usePanelContext.nextIcon, nextIcon = _usePanelContext$next === void 0 ? "›" : _usePanelContext$next, _usePanelContext$supe = _usePanelContext.superPrevIcon, superPrevIcon = _usePanelContext$supe === void 0 ? "«" : _usePanelContext$supe, _usePanelContext$supe2 = _usePanelContext.superNextIcon, superNextIcon = _usePanelContext$supe2 === void 0 ? "»" : _usePanelContext$supe2, minDate = _usePanelContext.minDate, maxDate = _usePanelContext.maxDate, generateConfig2 = _usePanelContext.generateConfig, locale2 = _usePanelContext.locale, pickerValue = _usePanelContext.pickerValue, type4 = _usePanelContext.panelType;
  var headerPrefixCls = "".concat(prefixCls, "-header");
  var _React$useContext = reactExports.useContext(PickerHackContext), hidePrev = _React$useContext.hidePrev, hideNext = _React$useContext.hideNext, hideHeader = _React$useContext.hideHeader;
  var disabledOffsetPrev = reactExports.useMemo(function () {
    if (!minDate || !offset || !getEnd) {
      return false;
    }
    var prevPanelLimitDate = getEnd(offset(-1, pickerValue));
    return !isSameOrAfter(generateConfig2, locale2, prevPanelLimitDate, minDate, type4);
  }, [minDate, offset, pickerValue, getEnd, generateConfig2, locale2, type4]);
  var disabledSuperOffsetPrev = reactExports.useMemo(function () {
    if (!minDate || !superOffset || !getEnd) {
      return false;
    }
    var prevPanelLimitDate = getEnd(superOffset(-1, pickerValue));
    return !isSameOrAfter(generateConfig2, locale2, prevPanelLimitDate, minDate, type4);
  }, [minDate, superOffset, pickerValue, getEnd, generateConfig2, locale2, type4]);
  var disabledOffsetNext = reactExports.useMemo(function () {
    if (!maxDate || !offset || !getStart) {
      return false;
    }
    var nextPanelLimitDate = getStart(offset(1, pickerValue));
    return !isSameOrAfter(generateConfig2, locale2, maxDate, nextPanelLimitDate, type4);
  }, [maxDate, offset, pickerValue, getStart, generateConfig2, locale2, type4]);
  var disabledSuperOffsetNext = reactExports.useMemo(function () {
    if (!maxDate || !superOffset || !getStart) {
      return false;
    }
    var nextPanelLimitDate = getStart(superOffset(1, pickerValue));
    return !isSameOrAfter(generateConfig2, locale2, maxDate, nextPanelLimitDate, type4);
  }, [maxDate, superOffset, pickerValue, getStart, generateConfig2, locale2, type4]);
  var onOffset = function onOffset2(distance) {
    if (offset) {
      onChange(offset(distance, pickerValue));
    }
  };
  var onSuperOffset = function onSuperOffset2(distance) {
    if (superOffset) {
      onChange(superOffset(distance, pickerValue));
    }
  };
  if (hideHeader) {
    return null;
  }
  var prevBtnCls = "".concat(headerPrefixCls, "-prev-btn");
  var nextBtnCls = "".concat(headerPrefixCls, "-next-btn");
  var superPrevBtnCls = "".concat(headerPrefixCls, "-super-prev-btn");
  var superNextBtnCls = "".concat(headerPrefixCls, "-super-next-btn");
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: headerPrefixCls
  }, superOffset && /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return onSuperOffset(-1);
    },
    tabIndex: -1,
    className: classNames(superPrevBtnCls, disabledSuperOffsetPrev && "".concat(superPrevBtnCls, "-disabled")),
    disabled: disabledSuperOffsetPrev,
    style: hidePrev ? HIDDEN_STYLE : {}
  }, superPrevIcon), offset && /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return onOffset(-1);
    },
    tabIndex: -1,
    className: classNames(prevBtnCls, disabledOffsetPrev && "".concat(prevBtnCls, "-disabled")),
    disabled: disabledOffsetPrev,
    style: hidePrev ? HIDDEN_STYLE : {}
  }, prevIcon), /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(headerPrefixCls, "-view")
  }, children), offset && /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return onOffset(1);
    },
    tabIndex: -1,
    className: classNames(nextBtnCls, disabledOffsetNext && "".concat(nextBtnCls, "-disabled")),
    disabled: disabledOffsetNext,
    style: hideNext ? HIDDEN_STYLE : {}
  }, nextIcon), superOffset && /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return onSuperOffset(1);
    },
    tabIndex: -1,
    className: classNames(superNextBtnCls, disabledSuperOffsetNext && "".concat(superNextBtnCls, "-disabled")),
    disabled: disabledSuperOffsetNext,
    style: hideNext ? HIDDEN_STYLE : {}
  }, superNextIcon));
}
function DatePanel(props) {
  var prefixCls = props.prefixCls, _props$panelName = props.panelName, panelName = _props$panelName === void 0 ? "date" : _props$panelName, locale2 = props.locale, generateConfig2 = props.generateConfig, pickerValue = props.pickerValue, onPickerValueChange = props.onPickerValueChange, onModeChange = props.onModeChange, _props$mode = props.mode, mode2 = _props$mode === void 0 ? "date" : _props$mode, disabledDate = props.disabledDate, onSelect = props.onSelect, onHover = props.onHover, showWeek = props.showWeek;
  var panelPrefixCls = "".concat(prefixCls, "-").concat(panelName, "-panel");
  var cellPrefixCls = "".concat(prefixCls, "-cell");
  var isWeek = mode2 === "week";
  var _useInfo = useInfo(props, mode2), _useInfo2 = _slicedToArray(_useInfo, 2), info2 = _useInfo2[0], now2 = _useInfo2[1];
  var weekFirstDay = generateConfig2.locale.getWeekFirstDay(locale2.locale);
  var monthStartDate = generateConfig2.setDate(pickerValue, 1);
  var baseDate = getWeekStartDate(locale2.locale, generateConfig2, monthStartDate);
  var month = generateConfig2.getMonth(pickerValue);
  var prefixColumn = isWeek || showWeek ? function (date5) {
    var disabled2 = disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date5, {
      type: "week"
    });
    return /* @__PURE__ */ reactExports.createElement("td", {
      key: "week",
      className: classNames(cellPrefixCls, "".concat(cellPrefixCls, "-week"), _defineProperty({}, "".concat(cellPrefixCls, "-disabled"), disabled2)),
      onClick: function onClick() {
        if (!disabled2) {
          onSelect(date5);
        }
      },
      onMouseEnter: function onMouseEnter() {
        if (!disabled2) {
          onHover === null || onHover === void 0 || onHover(date5);
        }
      },
      onMouseLeave: function onMouseLeave() {
        if (!disabled2) {
          onHover === null || onHover === void 0 || onHover(null);
        }
      }
    }, /* @__PURE__ */ reactExports.createElement("div", {
      className: "".concat(cellPrefixCls, "-inner")
    }, generateConfig2.locale.getWeek(locale2.locale, date5)));
  } : null;
  var headerCells = [];
  var weekDaysLocale = locale2.shortWeekDays || (generateConfig2.locale.getShortWeekDays ? generateConfig2.locale.getShortWeekDays(locale2.locale) : []);
  if (prefixColumn) {
    headerCells.push(/* @__PURE__ */ reactExports.createElement("th", {
      key: "empty",
      "aria-label": "empty cell"
    }));
  }
  for (var i = 0; i < WEEK_DAY_COUNT; i += 1) {
    headerCells.push(/* @__PURE__ */ reactExports.createElement("th", {
      key: i
    }, weekDaysLocale[(i + weekFirstDay) % WEEK_DAY_COUNT]));
  }
  var getCellDate = function getCellDate2(date5, offset) {
    return generateConfig2.addDate(date5, offset);
  };
  var getCellText = function getCellText2(date5) {
    return formatValue(date5, {
      locale: locale2,
      format: locale2.cellDateFormat,
      generateConfig: generateConfig2
    });
  };
  var getCellClassName = function getCellClassName2(date5) {
    var classObj = _defineProperty(_defineProperty({}, "".concat(prefixCls, "-cell-in-view"), isSameMonth(generateConfig2, date5, pickerValue)), "".concat(prefixCls, "-cell-today"), isSameDate(generateConfig2, date5, now2));
    return classObj;
  };
  var monthsLocale = locale2.shortMonths || (generateConfig2.locale.getShortMonths ? generateConfig2.locale.getShortMonths(locale2.locale) : []);
  var yearNode = /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    key: "year",
    onClick: function onClick() {
      onModeChange("year", pickerValue);
    },
    tabIndex: -1,
    className: "".concat(prefixCls, "-year-btn")
  }, formatValue(pickerValue, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }));
  var monthNode = /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    key: "month",
    onClick: function onClick() {
      onModeChange("month", pickerValue);
    },
    tabIndex: -1,
    className: "".concat(prefixCls, "-month-btn")
  }, locale2.monthFormat ? formatValue(pickerValue, {
    locale: locale2,
    format: locale2.monthFormat,
    generateConfig: generateConfig2
  }) : monthsLocale[month]);
  var monthYearNodes = locale2.monthBeforeYear ? [monthNode, yearNode] : [yearNode, monthNode];
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: classNames(panelPrefixCls, showWeek && "".concat(panelPrefixCls, "-show-week"))
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, {
    offset: function offset(distance) {
      return generateConfig2.addMonth(pickerValue, distance);
    },
    superOffset: function superOffset(distance) {
      return generateConfig2.addYear(pickerValue, distance);
    },
    onChange: onPickerValueChange,
    getStart: function getStart(date5) {
      return generateConfig2.setDate(date5, 1);
    },
    getEnd: function getEnd(date5) {
      var clone = generateConfig2.setDate(date5, 1);
      clone = generateConfig2.addMonth(clone, 1);
      return generateConfig2.addDate(clone, -1);
    }
  }, monthYearNodes), /* @__PURE__ */ reactExports.createElement(PanelBody, _extends$1({
    titleFormat: locale2.fieldDateFormat
  }, props, {
    colNum: WEEK_DAY_COUNT,
    rowNum: 6,
    baseDate,
    headerCells,
    getCellDate,
    getCellText,
    getCellClassName,
    prefixColumn,
    cellSelection: !isWeek
  }))));
}
var SPEED_PTG = 1 / 3;
function useScrollTo(ulRef, value2) {
  var scrollingRef = reactExports.useRef(false);
  var scrollRafRef = reactExports.useRef(null);
  var scrollDistRef = reactExports.useRef(null);
  var isScrolling = function isScrolling2() {
    return scrollingRef.current;
  };
  var stopScroll = function stopScroll2() {
    wrapperRaf.cancel(scrollRafRef.current);
    scrollingRef.current = false;
  };
  var scrollRafTimesRef = reactExports.useRef();
  var startScroll = function startScroll2() {
    var ul = ulRef.current;
    scrollDistRef.current = null;
    scrollRafTimesRef.current = 0;
    if (ul) {
      var targetLi = ul.querySelector('[data-value="'.concat(value2, '"]'));
      var firstLi = ul.querySelector("li");
      var doScroll = function doScroll2() {
        stopScroll();
        scrollingRef.current = true;
        scrollRafTimesRef.current += 1;
        var currentTop = ul.scrollTop;
        var firstLiTop = firstLi.offsetTop;
        var targetLiTop = targetLi.offsetTop;
        var targetTop = targetLiTop - firstLiTop;
        if (targetLiTop === 0 && targetLi !== firstLi || !isVisible(ul)) {
          if (scrollRafTimesRef.current <= 5) {
            scrollRafRef.current = wrapperRaf(doScroll2);
          }
          return;
        }
        var nextTop = currentTop + (targetTop - currentTop) * SPEED_PTG;
        var dist = Math.abs(targetTop - nextTop);
        if (scrollDistRef.current !== null && scrollDistRef.current < dist) {
          stopScroll();
          return;
        }
        scrollDistRef.current = dist;
        if (dist <= 1) {
          ul.scrollTop = targetTop;
          stopScroll();
          return;
        }
        ul.scrollTop = nextTop;
        scrollRafRef.current = wrapperRaf(doScroll2);
      };
      if (targetLi && firstLi) {
        doScroll();
      }
    }
  };
  var syncScroll = useEvent(startScroll);
  return [syncScroll, stopScroll, isScrolling];
}
var SCROLL_DELAY = 300;
function TimeColumn(props) {
  var units = props.units, value2 = props.value, optionalValue = props.optionalValue, type4 = props.type, onChange = props.onChange, onDblClick = props.onDblClick, changeOnScroll = props.changeOnScroll;
  var _usePanelContext = usePanelContext(), prefixCls = _usePanelContext.prefixCls, cellRender = _usePanelContext.cellRender, now2 = _usePanelContext.now, locale2 = _usePanelContext.locale;
  var panelPrefixCls = "".concat(prefixCls, "-time-panel");
  var cellPrefixCls = "".concat(prefixCls, "-time-panel-cell");
  var ulRef = reactExports.useRef(null);
  var checkDelayRef = reactExports.useRef();
  var clearDelayCheck = function clearDelayCheck2() {
    clearTimeout(checkDelayRef.current);
  };
  var _useScrollTo = useScrollTo(ulRef, value2 !== null && value2 !== void 0 ? value2 : optionalValue), _useScrollTo2 = _slicedToArray(_useScrollTo, 3), syncScroll = _useScrollTo2[0], stopScroll = _useScrollTo2[1], isScrolling = _useScrollTo2[2];
  useLayoutEffect(function () {
    syncScroll();
    clearDelayCheck();
    return function () {
      stopScroll();
      clearDelayCheck();
    };
  }, [value2, optionalValue, units]);
  var onInternalScroll = function onInternalScroll2(event) {
    clearDelayCheck();
    var target = event.target;
    if (!isScrolling() && changeOnScroll) {
      checkDelayRef.current = setTimeout(function () {
        var ul = ulRef.current;
        var firstLiTop = ul.querySelector("li").offsetTop;
        var liList = Array.from(ul.querySelectorAll("li"));
        var liTopList = liList.map(function (li) {
          return li.offsetTop - firstLiTop;
        });
        var liDistList = liTopList.map(function (top2, index2) {
          if (units[index2].disabled) {
            return Number.MAX_SAFE_INTEGER;
          }
          return Math.abs(top2 - target.scrollTop);
        });
        var minDist = Math.min.apply(Math, _toConsumableArray(liDistList));
        var minDistIndex = liDistList.findIndex(function (dist) {
          return dist === minDist;
        });
        var targetUnit = units[minDistIndex];
        if (targetUnit && !targetUnit.disabled) {
          onChange(targetUnit.value);
        }
      }, SCROLL_DELAY);
    }
  };
  var columnPrefixCls = "".concat(panelPrefixCls, "-column");
  return /* @__PURE__ */ reactExports.createElement("ul", {
    className: columnPrefixCls,
    ref: ulRef,
    "data-type": type4,
    onScroll: onInternalScroll
  }, units.map(function (_ref) {
    var label2 = _ref.label, unitValue = _ref.value, disabled2 = _ref.disabled;
    var inner = /* @__PURE__ */ reactExports.createElement("div", {
      className: "".concat(cellPrefixCls, "-inner")
    }, label2);
    return /* @__PURE__ */ reactExports.createElement("li", {
      key: unitValue,
      className: classNames(cellPrefixCls, _defineProperty(_defineProperty({}, "".concat(cellPrefixCls, "-selected"), value2 === unitValue), "".concat(cellPrefixCls, "-disabled"), disabled2)),
      onClick: function onClick() {
        if (!disabled2) {
          onChange(unitValue);
        }
      },
      onDoubleClick: function onDoubleClick() {
        if (!disabled2 && onDblClick) {
          onDblClick();
        }
      },
      "data-value": unitValue
    }, cellRender ? cellRender(unitValue, {
      prefixCls,
      originNode: inner,
      today: now2,
      type: "time",
      subType: type4,
      locale: locale2
    }) : inner);
  }));
}
function isAM(hour) {
  return hour < 12;
}
function TimePanelBody(props) {
  var showHour = props.showHour, showMinute = props.showMinute, showSecond = props.showSecond, showMillisecond = props.showMillisecond, showMeridiem = props.use12Hours, changeOnScroll = props.changeOnScroll;
  var _usePanelContext = usePanelContext(), prefixCls = _usePanelContext.prefixCls, values2 = _usePanelContext.values, generateConfig2 = _usePanelContext.generateConfig, locale2 = _usePanelContext.locale, onSelect = _usePanelContext.onSelect, pickerValue = _usePanelContext.pickerValue;
  var value2 = (values2 === null || values2 === void 0 ? void 0 : values2[0]) || null;
  var _React$useContext = reactExports.useContext(PickerHackContext), onCellDblClick = _React$useContext.onCellDblClick;
  var _useTimeInfo = useTimeInfo(generateConfig2, props, value2), _useTimeInfo2 = _slicedToArray(_useTimeInfo, 5), getValidTime = _useTimeInfo2[0], rowHourUnits = _useTimeInfo2[1], getMinuteUnits = _useTimeInfo2[2], getSecondUnits = _useTimeInfo2[3], getMillisecondUnits = _useTimeInfo2[4];
  var getUnitValue = function getUnitValue2(func) {
    var valueUnitVal = value2 && generateConfig2[func](value2);
    var pickerUnitValue = pickerValue && generateConfig2[func](pickerValue);
    return [valueUnitVal, pickerUnitValue];
  };
  var _getUnitValue = getUnitValue("getHour"), _getUnitValue2 = _slicedToArray(_getUnitValue, 2), hour = _getUnitValue2[0], pickerHour = _getUnitValue2[1];
  var _getUnitValue3 = getUnitValue("getMinute"), _getUnitValue4 = _slicedToArray(_getUnitValue3, 2), minute = _getUnitValue4[0], pickerMinute = _getUnitValue4[1];
  var _getUnitValue5 = getUnitValue("getSecond"), _getUnitValue6 = _slicedToArray(_getUnitValue5, 2), second = _getUnitValue6[0], pickerSecond = _getUnitValue6[1];
  var _getUnitValue7 = getUnitValue("getMillisecond"), _getUnitValue8 = _slicedToArray(_getUnitValue7, 2), millisecond = _getUnitValue8[0], pickerMillisecond = _getUnitValue8[1];
  var meridiem = hour === null ? null : isAM(hour) ? "am" : "pm";
  var hourUnits = reactExports.useMemo(function () {
    if (!showMeridiem) {
      return rowHourUnits;
    }
    return isAM(hour) ? rowHourUnits.filter(function (h2) {
      return isAM(h2.value);
    }) : rowHourUnits.filter(function (h2) {
      return !isAM(h2.value);
    });
  }, [hour, rowHourUnits, showMeridiem]);
  var getEnabled = function getEnabled2(units, val) {
    var _enabledUnits$;
    var enabledUnits = units.filter(function (unit2) {
      return !unit2.disabled;
    });
    return val !== null && val !== void 0 ? val : (
      // Fallback to enabled value
      enabledUnits === null || enabledUnits === void 0 || (_enabledUnits$ = enabledUnits[0]) === null || _enabledUnits$ === void 0 ? void 0 : _enabledUnits$.value
    );
  };
  var validHour = getEnabled(rowHourUnits, hour);
  var minuteUnits = reactExports.useMemo(function () {
    return getMinuteUnits(validHour);
  }, [getMinuteUnits, validHour]);
  var validMinute = getEnabled(minuteUnits, minute);
  var secondUnits = reactExports.useMemo(function () {
    return getSecondUnits(validHour, validMinute);
  }, [getSecondUnits, validHour, validMinute]);
  var validSecond = getEnabled(secondUnits, second);
  var millisecondUnits = reactExports.useMemo(function () {
    return getMillisecondUnits(validHour, validMinute, validSecond);
  }, [getMillisecondUnits, validHour, validMinute, validSecond]);
  var validMillisecond = getEnabled(millisecondUnits, millisecond);
  var meridiemUnits = reactExports.useMemo(function () {
    if (!showMeridiem) {
      return [];
    }
    var base2 = generateConfig2.getNow();
    var amDate = generateConfig2.setHour(base2, 6);
    var pmDate = generateConfig2.setHour(base2, 18);
    var formatMeridiem = function formatMeridiem2(date5, defaultLabel) {
      var cellMeridiemFormat = locale2.cellMeridiemFormat;
      return cellMeridiemFormat ? formatValue(date5, {
        generateConfig: generateConfig2,
        locale: locale2,
        format: cellMeridiemFormat
      }) : defaultLabel;
    };
    return [{
      label: formatMeridiem(amDate, "AM"),
      value: "am",
      disabled: rowHourUnits.every(function (h2) {
        return h2.disabled || !isAM(h2.value);
      })
    }, {
      label: formatMeridiem(pmDate, "PM"),
      value: "pm",
      disabled: rowHourUnits.every(function (h2) {
        return h2.disabled || isAM(h2.value);
      })
    }];
  }, [rowHourUnits, showMeridiem, generateConfig2, locale2]);
  var triggerChange = function triggerChange2(nextDate) {
    var validateDate = getValidTime(nextDate);
    onSelect(validateDate);
  };
  var triggerDateTmpl = reactExports.useMemo(function () {
    var tmpl = value2 || pickerValue || generateConfig2.getNow();
    var isNotNull = function isNotNull2(num2) {
      return num2 !== null && num2 !== void 0;
    };
    if (isNotNull(hour)) {
      tmpl = generateConfig2.setHour(tmpl, hour);
      tmpl = generateConfig2.setMinute(tmpl, minute);
      tmpl = generateConfig2.setSecond(tmpl, second);
      tmpl = generateConfig2.setMillisecond(tmpl, millisecond);
    } else if (isNotNull(pickerHour)) {
      tmpl = generateConfig2.setHour(tmpl, pickerHour);
      tmpl = generateConfig2.setMinute(tmpl, pickerMinute);
      tmpl = generateConfig2.setSecond(tmpl, pickerSecond);
      tmpl = generateConfig2.setMillisecond(tmpl, pickerMillisecond);
    } else if (isNotNull(validHour)) {
      tmpl = generateConfig2.setHour(tmpl, validHour);
      tmpl = generateConfig2.setMinute(tmpl, validMinute);
      tmpl = generateConfig2.setSecond(tmpl, validSecond);
      tmpl = generateConfig2.setMillisecond(tmpl, validMillisecond);
    }
    return tmpl;
  }, [value2, pickerValue, hour, minute, second, millisecond, validHour, validMinute, validSecond, validMillisecond, pickerHour, pickerMinute, pickerSecond, pickerMillisecond, generateConfig2]);
  var onHourChange = function onHourChange2(val) {
    triggerChange(generateConfig2.setHour(triggerDateTmpl, val));
  };
  var onMinuteChange = function onMinuteChange2(val) {
    triggerChange(generateConfig2.setMinute(triggerDateTmpl, val));
  };
  var onSecondChange = function onSecondChange2(val) {
    triggerChange(generateConfig2.setSecond(triggerDateTmpl, val));
  };
  var onMillisecondChange = function onMillisecondChange2(val) {
    triggerChange(generateConfig2.setMillisecond(triggerDateTmpl, val));
  };
  var onMeridiemChange = function onMeridiemChange2(val) {
    if (val === "am" && !isAM(hour)) {
      triggerChange(generateConfig2.setHour(triggerDateTmpl, hour - 12));
    } else if (val === "pm" && isAM(hour)) {
      triggerChange(generateConfig2.setHour(triggerDateTmpl, hour + 12));
    }
  };
  var sharedColumnProps = {
    onDblClick: onCellDblClick,
    changeOnScroll
  };
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-content")
  }, showHour && /* @__PURE__ */ reactExports.createElement(TimeColumn, _extends$1({
    units: hourUnits,
    value: hour,
    optionalValue: pickerHour,
    type: "hour",
    onChange: onHourChange
  }, sharedColumnProps)), showMinute && /* @__PURE__ */ reactExports.createElement(TimeColumn, _extends$1({
    units: minuteUnits,
    value: minute,
    optionalValue: pickerMinute,
    type: "minute",
    onChange: onMinuteChange
  }, sharedColumnProps)), showSecond && /* @__PURE__ */ reactExports.createElement(TimeColumn, _extends$1({
    units: secondUnits,
    value: second,
    optionalValue: pickerSecond,
    type: "second",
    onChange: onSecondChange
  }, sharedColumnProps)), showMillisecond && /* @__PURE__ */ reactExports.createElement(TimeColumn, _extends$1({
    units: millisecondUnits,
    value: millisecond,
    optionalValue: pickerMillisecond,
    type: "millisecond",
    onChange: onMillisecondChange
  }, sharedColumnProps)), showMeridiem && /* @__PURE__ */ reactExports.createElement(TimeColumn, _extends$1({
    units: meridiemUnits,
    value: meridiem,
    type: "meridiem",
    onChange: onMeridiemChange
  }, sharedColumnProps)));
}
function TimePanel(props) {
  var prefixCls = props.prefixCls, value2 = props.value, locale2 = props.locale, generateConfig2 = props.generateConfig, showTime = props.showTime;
  var _ref = showTime || {}, format3 = _ref.format;
  var panelPrefixCls = "".concat(prefixCls, "-time-panel");
  var _useInfo = useInfo(props, "time"), _useInfo2 = _slicedToArray(_useInfo, 1), info2 = _useInfo2[0];
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: classNames(panelPrefixCls)
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, null, value2 ? formatValue(value2, {
    locale: locale2,
    format: format3,
    generateConfig: generateConfig2
  }) : " "), /* @__PURE__ */ reactExports.createElement(TimePanelBody, showTime)));
}
function DateTimePanel(props) {
  var prefixCls = props.prefixCls, generateConfig2 = props.generateConfig, showTime = props.showTime, onSelect = props.onSelect, value2 = props.value, pickerValue = props.pickerValue, onHover = props.onHover;
  var panelPrefixCls = "".concat(prefixCls, "-datetime-panel");
  var _useTimeInfo = useTimeInfo(generateConfig2, showTime), _useTimeInfo2 = _slicedToArray(_useTimeInfo, 1), getValidTime = _useTimeInfo2[0];
  var mergeTime = function mergeTime2(date5) {
    if (value2) {
      return fillTime(generateConfig2, date5, value2);
    }
    return fillTime(generateConfig2, date5, pickerValue);
  };
  var onDateHover = function onDateHover2(date5) {
    onHover(date5 ? mergeTime(date5) : date5);
  };
  var onDateSelect = function onDateSelect2(date5) {
    var cloneDate = mergeTime(date5);
    onSelect(getValidTime(cloneDate, cloneDate));
  };
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: panelPrefixCls
  }, /* @__PURE__ */ reactExports.createElement(DatePanel, _extends$1({}, props, {
    onSelect: onDateSelect,
    onHover: onDateHover
  })), /* @__PURE__ */ reactExports.createElement(TimePanel, props));
}
function DecadePanel(props) {
  var prefixCls = props.prefixCls, locale2 = props.locale, generateConfig2 = props.generateConfig, pickerValue = props.pickerValue, disabledDate = props.disabledDate, onPickerValueChange = props.onPickerValueChange;
  var panelPrefixCls = "".concat(prefixCls, "-decade-panel");
  var _useInfo = useInfo(props, "decade"), _useInfo2 = _slicedToArray(_useInfo, 1), info2 = _useInfo2[0];
  var getStartYear = function getStartYear2(date5) {
    var startYear = Math.floor(generateConfig2.getYear(pickerValue) / 100) * 100;
    return generateConfig2.setYear(date5, startYear);
  };
  var getEndYear = function getEndYear2(date5) {
    var startYear = getStartYear(date5);
    return generateConfig2.addYear(startYear, 99);
  };
  var startYearDate = getStartYear(pickerValue);
  var endYearDate = getEndYear(pickerValue);
  var baseDate = generateConfig2.addYear(startYearDate, -10);
  var getCellDate = function getCellDate2(date5, offset) {
    return generateConfig2.addYear(date5, offset * 10);
  };
  var getCellText = function getCellText2(date5) {
    var cellYearFormat = locale2.cellYearFormat;
    var startYearStr = formatValue(date5, {
      locale: locale2,
      format: cellYearFormat,
      generateConfig: generateConfig2
    });
    var endYearStr = formatValue(generateConfig2.addYear(date5, 9), {
      locale: locale2,
      format: cellYearFormat,
      generateConfig: generateConfig2
    });
    return "".concat(startYearStr, "-").concat(endYearStr);
  };
  var getCellClassName = function getCellClassName2(date5) {
    return _defineProperty({}, "".concat(prefixCls, "-cell-in-view"), isSameDecade(generateConfig2, date5, startYearDate) || isSameDecade(generateConfig2, date5, endYearDate) || isInRange(generateConfig2, startYearDate, endYearDate, date5));
  };
  var mergedDisabledDate = disabledDate ? function (currentDate, disabledInfo) {
    var baseStartDate = generateConfig2.setDate(currentDate, 1);
    var baseStartMonth = generateConfig2.setMonth(baseStartDate, 0);
    var baseStartYear = generateConfig2.setYear(baseStartMonth, Math.floor(generateConfig2.getYear(baseStartMonth) / 10) * 10);
    var baseEndYear = generateConfig2.addYear(baseStartYear, 10);
    var baseEndDate = generateConfig2.addDate(baseEndYear, -1);
    return disabledDate(baseStartYear, disabledInfo) && disabledDate(baseEndDate, disabledInfo);
  } : null;
  var yearNode = "".concat(formatValue(startYearDate, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }), "-").concat(formatValue(endYearDate, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }));
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: panelPrefixCls
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, {
    superOffset: function superOffset(distance) {
      return generateConfig2.addYear(pickerValue, distance * 100);
    },
    onChange: onPickerValueChange,
    getStart: getStartYear,
    getEnd: getEndYear
  }, yearNode), /* @__PURE__ */ reactExports.createElement(PanelBody, _extends$1({}, props, {
    disabledDate: mergedDisabledDate,
    colNum: 3,
    rowNum: 4,
    baseDate,
    getCellDate,
    getCellText,
    getCellClassName
  }))));
}
function MonthPanel(props) {
  var prefixCls = props.prefixCls, locale2 = props.locale, generateConfig2 = props.generateConfig, pickerValue = props.pickerValue, disabledDate = props.disabledDate, onPickerValueChange = props.onPickerValueChange, onModeChange = props.onModeChange;
  var panelPrefixCls = "".concat(prefixCls, "-month-panel");
  var _useInfo = useInfo(props, "month"), _useInfo2 = _slicedToArray(_useInfo, 1), info2 = _useInfo2[0];
  var baseDate = generateConfig2.setMonth(pickerValue, 0);
  var monthsLocale = locale2.shortMonths || (generateConfig2.locale.getShortMonths ? generateConfig2.locale.getShortMonths(locale2.locale) : []);
  var getCellDate = function getCellDate2(date5, offset) {
    return generateConfig2.addMonth(date5, offset);
  };
  var getCellText = function getCellText2(date5) {
    var month = generateConfig2.getMonth(date5);
    return locale2.monthFormat ? formatValue(date5, {
      locale: locale2,
      format: locale2.monthFormat,
      generateConfig: generateConfig2
    }) : monthsLocale[month];
  };
  var getCellClassName = function getCellClassName2() {
    return _defineProperty({}, "".concat(prefixCls, "-cell-in-view"), true);
  };
  var mergedDisabledDate = disabledDate ? function (currentDate, disabledInfo) {
    var startDate = generateConfig2.setDate(currentDate, 1);
    var nextMonthStartDate = generateConfig2.setMonth(startDate, generateConfig2.getMonth(startDate) + 1);
    var endDate = generateConfig2.addDate(nextMonthStartDate, -1);
    return disabledDate(startDate, disabledInfo) && disabledDate(endDate, disabledInfo);
  } : null;
  var yearNode = /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    key: "year",
    onClick: function onClick() {
      onModeChange("year");
    },
    tabIndex: -1,
    className: "".concat(prefixCls, "-year-btn")
  }, formatValue(pickerValue, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }));
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: panelPrefixCls
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, {
    superOffset: function superOffset(distance) {
      return generateConfig2.addYear(pickerValue, distance);
    },
    onChange: onPickerValueChange,
    getStart: function getStart(date5) {
      return generateConfig2.setMonth(date5, 0);
    },
    getEnd: function getEnd(date5) {
      return generateConfig2.setMonth(date5, 11);
    }
  }, yearNode), /* @__PURE__ */ reactExports.createElement(PanelBody, _extends$1({}, props, {
    disabledDate: mergedDisabledDate,
    titleFormat: locale2.fieldMonthFormat,
    colNum: 3,
    rowNum: 4,
    baseDate,
    getCellDate,
    getCellText,
    getCellClassName
  }))));
}
function QuarterPanel(props) {
  var prefixCls = props.prefixCls, locale2 = props.locale, generateConfig2 = props.generateConfig, pickerValue = props.pickerValue, onPickerValueChange = props.onPickerValueChange, onModeChange = props.onModeChange;
  var panelPrefixCls = "".concat(prefixCls, "-quarter-panel");
  var _useInfo = useInfo(props, "quarter"), _useInfo2 = _slicedToArray(_useInfo, 1), info2 = _useInfo2[0];
  var baseDate = generateConfig2.setMonth(pickerValue, 0);
  var getCellDate = function getCellDate2(date5, offset) {
    return generateConfig2.addMonth(date5, offset * 3);
  };
  var getCellText = function getCellText2(date5) {
    return formatValue(date5, {
      locale: locale2,
      format: locale2.cellQuarterFormat,
      generateConfig: generateConfig2
    });
  };
  var getCellClassName = function getCellClassName2() {
    return _defineProperty({}, "".concat(prefixCls, "-cell-in-view"), true);
  };
  var yearNode = /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    key: "year",
    onClick: function onClick() {
      onModeChange("year");
    },
    tabIndex: -1,
    className: "".concat(prefixCls, "-year-btn")
  }, formatValue(pickerValue, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }));
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: panelPrefixCls
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, {
    superOffset: function superOffset(distance) {
      return generateConfig2.addYear(pickerValue, distance);
    },
    onChange: onPickerValueChange,
    getStart: function getStart(date5) {
      return generateConfig2.setMonth(date5, 0);
    },
    getEnd: function getEnd(date5) {
      return generateConfig2.setMonth(date5, 11);
    }
  }, yearNode), /* @__PURE__ */ reactExports.createElement(PanelBody, _extends$1({}, props, {
    titleFormat: locale2.fieldQuarterFormat,
    colNum: 4,
    rowNum: 1,
    baseDate,
    getCellDate,
    getCellText,
    getCellClassName
  }))));
}
function WeekPanel(props) {
  var prefixCls = props.prefixCls, generateConfig2 = props.generateConfig, locale2 = props.locale, value2 = props.value, hoverValue = props.hoverValue, hoverRangeValue = props.hoverRangeValue;
  var localeName = locale2.locale;
  var rowPrefixCls = "".concat(prefixCls, "-week-panel-row");
  var rowClassName = function rowClassName2(currentDate) {
    var rangeCls = {};
    if (hoverRangeValue) {
      var _hoverRangeValue = _slicedToArray(hoverRangeValue, 2), rangeStart = _hoverRangeValue[0], rangeEnd = _hoverRangeValue[1];
      var isRangeStart = isSameWeek(generateConfig2, localeName, rangeStart, currentDate);
      var isRangeEnd = isSameWeek(generateConfig2, localeName, rangeEnd, currentDate);
      rangeCls["".concat(rowPrefixCls, "-range-start")] = isRangeStart;
      rangeCls["".concat(rowPrefixCls, "-range-end")] = isRangeEnd;
      rangeCls["".concat(rowPrefixCls, "-range-hover")] = !isRangeStart && !isRangeEnd && isInRange(generateConfig2, rangeStart, rangeEnd, currentDate);
    }
    if (hoverValue) {
      rangeCls["".concat(rowPrefixCls, "-hover")] = hoverValue.some(function (date5) {
        return isSameWeek(generateConfig2, localeName, currentDate, date5);
      });
    }
    return classNames(
      rowPrefixCls,
      _defineProperty({}, "".concat(rowPrefixCls, "-selected"), !hoverRangeValue && isSameWeek(generateConfig2, localeName, value2, currentDate)),
      // Patch for hover range
      rangeCls
    );
  };
  return /* @__PURE__ */ reactExports.createElement(DatePanel, _extends$1({}, props, {
    mode: "week",
    panelName: "week",
    rowClassName
  }));
}
function YearPanel(props) {
  var prefixCls = props.prefixCls, locale2 = props.locale, generateConfig2 = props.generateConfig, pickerValue = props.pickerValue, disabledDate = props.disabledDate, onPickerValueChange = props.onPickerValueChange, onModeChange = props.onModeChange;
  var panelPrefixCls = "".concat(prefixCls, "-year-panel");
  var _useInfo = useInfo(props, "year"), _useInfo2 = _slicedToArray(_useInfo, 1), info2 = _useInfo2[0];
  var getStartYear = function getStartYear2(date5) {
    var startYear = Math.floor(generateConfig2.getYear(pickerValue) / 10) * 10;
    return generateConfig2.setYear(date5, startYear);
  };
  var getEndYear = function getEndYear2(date5) {
    var startYear = getStartYear(date5);
    return generateConfig2.addYear(startYear, 9);
  };
  var startYearDate = getStartYear(pickerValue);
  var endYearDate = getEndYear(pickerValue);
  var baseDate = generateConfig2.addYear(startYearDate, -1);
  var getCellDate = function getCellDate2(date5, offset) {
    return generateConfig2.addYear(date5, offset);
  };
  var getCellText = function getCellText2(date5) {
    return formatValue(date5, {
      locale: locale2,
      format: locale2.cellYearFormat,
      generateConfig: generateConfig2
    });
  };
  var getCellClassName = function getCellClassName2(date5) {
    return _defineProperty({}, "".concat(prefixCls, "-cell-in-view"), isSameYear(generateConfig2, date5, startYearDate) || isSameYear(generateConfig2, date5, endYearDate) || isInRange(generateConfig2, startYearDate, endYearDate, date5));
  };
  var mergedDisabledDate = disabledDate ? function (currentDate, disabledInfo) {
    var startMonth = generateConfig2.setMonth(currentDate, 0);
    var startDate = generateConfig2.setDate(startMonth, 1);
    var endMonth = generateConfig2.setMonth(currentDate, generateConfig2.getMonth(currentDate) + 1);
    var enDate = generateConfig2.addDate(endMonth, -1);
    return disabledDate(startDate, disabledInfo) && disabledDate(enDate, disabledInfo);
  } : null;
  var yearNode = /* @__PURE__ */ reactExports.createElement("button", {
    type: "button",
    key: "year",
    onClick: function onClick() {
      onModeChange("decade");
    },
    tabIndex: -1,
    className: "".concat(prefixCls, "-decade-btn")
  }, formatValue(startYearDate, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }), "-", formatValue(endYearDate, {
    locale: locale2,
    format: locale2.yearFormat,
    generateConfig: generateConfig2
  }));
  return /* @__PURE__ */ reactExports.createElement(PanelContext.Provider, {
    value: info2
  }, /* @__PURE__ */ reactExports.createElement("div", {
    className: panelPrefixCls
  }, /* @__PURE__ */ reactExports.createElement(PanelHeader, {
    superOffset: function superOffset(distance) {
      return generateConfig2.addYear(pickerValue, distance * 10);
    },
    onChange: onPickerValueChange,
    getStart: getStartYear,
    getEnd: getEndYear
  }, yearNode), /* @__PURE__ */ reactExports.createElement(PanelBody, _extends$1({}, props, {
    disabledDate: mergedDisabledDate,
    titleFormat: locale2.fieldYearFormat,
    colNum: 3,
    rowNum: 4,
    baseDate,
    getCellDate,
    getCellText,
    getCellClassName
  }))));
}
var DefaultComponents = {
  date: DatePanel,
  datetime: DateTimePanel,
  week: WeekPanel,
  month: MonthPanel,
  quarter: QuarterPanel,
  year: YearPanel,
  decade: DecadePanel,
  time: TimePanel
};
function PickerPanel(props, ref) {
  var _React$useContext;
  var locale2 = props.locale, generateConfig2 = props.generateConfig, direction = props.direction, prefixCls = props.prefixCls, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, multiple = props.multiple, defaultValue = props.defaultValue, value2 = props.value, onChange = props.onChange, onSelect = props.onSelect, defaultPickerValue = props.defaultPickerValue, pickerValue = props.pickerValue, onPickerValueChange = props.onPickerValueChange, mode2 = props.mode, onPanelChange = props.onPanelChange, _props$picker = props.picker, picker = _props$picker === void 0 ? "date" : _props$picker, showTime = props.showTime, hoverValue = props.hoverValue, hoverRangeValue = props.hoverRangeValue, cellRender = props.cellRender, dateRender = props.dateRender, monthCellRender = props.monthCellRender, _props$components = props.components, components = _props$components === void 0 ? {} : _props$components, hideHeader = props.hideHeader;
  var mergedPrefixCls = ((_React$useContext = reactExports.useContext(PickerContext)) === null || _React$useContext === void 0 ? void 0 : _React$useContext.prefixCls) || prefixCls || "rc-picker";
  var rootRef = reactExports.useRef();
  reactExports.useImperativeHandle(ref, function () {
    return {
      nativeElement: rootRef.current
    };
  });
  var _getTimeProps = getTimeProps(props), _getTimeProps2 = _slicedToArray(_getTimeProps, 4), timeProps = _getTimeProps2[0], localeTimeProps = _getTimeProps2[1], showTimeFormat = _getTimeProps2[2], propFormat = _getTimeProps2[3];
  var filledLocale = useLocale(locale2, localeTimeProps);
  var internalPicker = picker === "date" && showTime ? "datetime" : picker;
  var mergedShowTime = reactExports.useMemo(function () {
    return fillShowTimeConfig(internalPicker, showTimeFormat, propFormat, timeProps, filledLocale);
  }, [internalPicker, showTimeFormat, propFormat, timeProps, filledLocale]);
  var now2 = generateConfig2.getNow();
  var _useMergedState = useMergedState(picker, {
    value: mode2,
    postState: function postState(val) {
      return val || "date";
    }
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), mergedMode = _useMergedState2[0], setMergedMode = _useMergedState2[1];
  var internalMode = mergedMode === "date" && mergedShowTime ? "datetime" : mergedMode;
  var toggleDates = useToggleDates(generateConfig2, locale2, internalPicker);
  var _useMergedState3 = useMergedState(defaultValue, {
    value: value2
  }), _useMergedState4 = _slicedToArray(_useMergedState3, 2), innerValue = _useMergedState4[0], setMergedValue = _useMergedState4[1];
  var mergedValue = reactExports.useMemo(function () {
    var values2 = toArray(innerValue).filter(function (val) {
      return val;
    });
    return multiple ? values2 : values2.slice(0, 1);
  }, [innerValue, multiple]);
  var triggerChange = useEvent(function (nextValue) {
    setMergedValue(nextValue);
    if (onChange && (nextValue === null || mergedValue.length !== nextValue.length || mergedValue.some(function (ori, index2) {
      return !isSame(generateConfig2, locale2, ori, nextValue[index2], internalPicker);
    }))) {
      onChange === null || onChange === void 0 || onChange(multiple ? nextValue : nextValue[0]);
    }
  });
  var onInternalSelect = useEvent(function (newDate) {
    onSelect === null || onSelect === void 0 || onSelect(newDate);
    if (mergedMode === picker) {
      var nextValues = multiple ? toggleDates(mergedValue, newDate) : [newDate];
      triggerChange(nextValues);
    }
  });
  var _useMergedState5 = useMergedState(defaultPickerValue || mergedValue[0] || now2, {
    value: pickerValue
  }), _useMergedState6 = _slicedToArray(_useMergedState5, 2), mergedPickerValue = _useMergedState6[0], setInternalPickerValue = _useMergedState6[1];
  reactExports.useEffect(function () {
    if (mergedValue[0] && !pickerValue) {
      setInternalPickerValue(mergedValue[0]);
    }
  }, [mergedValue[0]]);
  var triggerPanelChange = function triggerPanelChange2(viewDate, nextMode) {
    onPanelChange === null || onPanelChange === void 0 || onPanelChange(viewDate || pickerValue, nextMode || mergedMode);
  };
  var setPickerValue = function setPickerValue2(nextPickerValue) {
    var triggerPanelEvent = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    setInternalPickerValue(nextPickerValue);
    onPickerValueChange === null || onPickerValueChange === void 0 || onPickerValueChange(nextPickerValue);
    if (triggerPanelEvent) {
      triggerPanelChange(nextPickerValue);
    }
  };
  var triggerModeChange = function triggerModeChange2(nextMode, viewDate) {
    setMergedMode(nextMode);
    if (viewDate) {
      setPickerValue(viewDate);
    }
    triggerPanelChange(viewDate, nextMode);
  };
  var onPanelValueSelect = function onPanelValueSelect2(nextValue) {
    onInternalSelect(nextValue);
    setPickerValue(nextValue);
    if (mergedMode !== picker) {
      var decadeYearQueue = ["decade", "year"];
      var decadeYearMonthQueue = [].concat(decadeYearQueue, ["month"]);
      var pickerQueue = {
        quarter: [].concat(decadeYearQueue, ["quarter"]),
        week: [].concat(_toConsumableArray(decadeYearMonthQueue), ["week"]),
        date: [].concat(_toConsumableArray(decadeYearMonthQueue), ["date"])
      };
      var queue = pickerQueue[picker] || decadeYearMonthQueue;
      var index2 = queue.indexOf(mergedMode);
      var nextMode = queue[index2 + 1];
      if (nextMode) {
        triggerModeChange(nextMode, nextValue);
      }
    }
  };
  var hoverRangeDate = reactExports.useMemo(function () {
    var start;
    var end;
    if (Array.isArray(hoverRangeValue)) {
      var _hoverRangeValue = _slicedToArray(hoverRangeValue, 2);
      start = _hoverRangeValue[0];
      end = _hoverRangeValue[1];
    } else {
      start = hoverRangeValue;
    }
    if (!start && !end) {
      return null;
    }
    start = start || end;
    end = end || start;
    return generateConfig2.isAfter(start, end) ? [end, start] : [start, end];
  }, [hoverRangeValue, generateConfig2]);
  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender);
  var PanelComponent = components[internalMode] || DefaultComponents[internalMode] || DatePanel;
  var parentHackContext = reactExports.useContext(PickerHackContext);
  var pickerPanelContext = reactExports.useMemo(function () {
    return _objectSpread2(_objectSpread2({}, parentHackContext), {}, {
      hideHeader
    });
  }, [parentHackContext, hideHeader]);
  var panelCls = "".concat(mergedPrefixCls, "-panel");
  var panelProps = pickProps(props, [
    // Week
    "showWeek",
    // Icons
    "prevIcon",
    "nextIcon",
    "superPrevIcon",
    "superNextIcon",
    // Disabled
    "disabledDate",
    "minDate",
    "maxDate",
    // Hover
    "onHover"
  ]);
  return /* @__PURE__ */ reactExports.createElement(PickerHackContext.Provider, {
    value: pickerPanelContext
  }, /* @__PURE__ */ reactExports.createElement("div", {
    ref: rootRef,
    tabIndex,
    className: classNames(panelCls, _defineProperty({}, "".concat(panelCls, "-rtl"), direction === "rtl"))
  }, /* @__PURE__ */ reactExports.createElement(PanelComponent, _extends$1({}, panelProps, {
    // Time
    showTime: mergedShowTime,
    prefixCls: mergedPrefixCls,
    locale: filledLocale,
    generateConfig: generateConfig2,
    onModeChange: triggerModeChange,
    pickerValue: mergedPickerValue,
    onPickerValueChange: function onPickerValueChange2(nextPickerValue) {
      setPickerValue(nextPickerValue, true);
    },
    value: mergedValue[0],
    onSelect: onPanelValueSelect,
    values: mergedValue,
    cellRender: onInternalCellRender,
    hoverRangeValue: hoverRangeDate,
    hoverValue
  }))));
}
var RefPanelPicker = /* @__PURE__ */ reactExports.memo(/* @__PURE__ */ reactExports.forwardRef(PickerPanel));
function PopupPanel(props) {
  var picker = props.picker, multiplePanel = props.multiplePanel, pickerValue = props.pickerValue, onPickerValueChange = props.onPickerValueChange, needConfirm = props.needConfirm, onSubmit = props.onSubmit, range3 = props.range, hoverValue = props.hoverValue;
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls, generateConfig2 = _React$useContext.generateConfig;
  var internalOffsetDate = reactExports.useCallback(function (date5, offset) {
    return offsetPanelDate(generateConfig2, picker, date5, offset);
  }, [generateConfig2, picker]);
  var nextPickerValue = reactExports.useMemo(function () {
    return internalOffsetDate(pickerValue, 1);
  }, [pickerValue, internalOffsetDate]);
  var onSecondPickerValueChange = function onSecondPickerValueChange2(nextDate) {
    onPickerValueChange(internalOffsetDate(nextDate, -1));
  };
  var sharedContext = {
    onCellDblClick: function onCellDblClick() {
      if (needConfirm) {
        onSubmit();
      }
    }
  };
  var hideHeader = picker === "time";
  var pickerProps = _objectSpread2(_objectSpread2({}, props), {}, {
    hoverValue: null,
    hoverRangeValue: null,
    hideHeader
  });
  if (range3) {
    pickerProps.hoverRangeValue = hoverValue;
  } else {
    pickerProps.hoverValue = hoverValue;
  }
  if (multiplePanel) {
    return /* @__PURE__ */ reactExports.createElement("div", {
      className: "".concat(prefixCls, "-panels")
    }, /* @__PURE__ */ reactExports.createElement(PickerHackContext.Provider, {
      value: _objectSpread2(_objectSpread2({}, sharedContext), {}, {
        hideNext: true
      })
    }, /* @__PURE__ */ reactExports.createElement(RefPanelPicker, pickerProps)), /* @__PURE__ */ reactExports.createElement(PickerHackContext.Provider, {
      value: _objectSpread2(_objectSpread2({}, sharedContext), {}, {
        hidePrev: true
      })
    }, /* @__PURE__ */ reactExports.createElement(RefPanelPicker, _extends$1({}, pickerProps, {
      pickerValue: nextPickerValue,
      onPickerValueChange: onSecondPickerValueChange
    }))));
  }
  return /* @__PURE__ */ reactExports.createElement(PickerHackContext.Provider, {
    value: _objectSpread2({}, sharedContext)
  }, /* @__PURE__ */ reactExports.createElement(RefPanelPicker, pickerProps));
}
function executeValue(value2) {
  return typeof value2 === "function" ? value2() : value2;
}
function PresetPanel(props) {
  var prefixCls = props.prefixCls, presets = props.presets, _onClick = props.onClick, onHover = props.onHover;
  if (!presets.length) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-presets")
  }, /* @__PURE__ */ reactExports.createElement("ul", null, presets.map(function (_ref, index2) {
    var label2 = _ref.label, value2 = _ref.value;
    return /* @__PURE__ */ reactExports.createElement("li", {
      key: index2,
      onClick: function onClick() {
        _onClick(executeValue(value2));
      },
      onMouseEnter: function onMouseEnter() {
        onHover(executeValue(value2));
      },
      onMouseLeave: function onMouseLeave() {
        onHover(null);
      }
    }, label2);
  })));
}
function Popup(props) {
  var panelRender = props.panelRender, internalMode = props.internalMode, picker = props.picker, showNow = props.showNow, range3 = props.range, multiple = props.multiple, _props$activeOffset = props.activeOffset, activeOffset = _props$activeOffset === void 0 ? 0 : _props$activeOffset, presets = props.presets, onPresetHover = props.onPresetHover, onPresetSubmit = props.onPresetSubmit, onFocus = props.onFocus, onBlur = props.onBlur, direction = props.direction, value2 = props.value, onSelect = props.onSelect, isInvalid = props.isInvalid, defaultOpenValue = props.defaultOpenValue, onOk = props.onOk, onSubmit = props.onSubmit;
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls;
  var panelPrefixCls = "".concat(prefixCls, "-panel");
  var rtl = direction === "rtl";
  var arrowRef = reactExports.useRef(null);
  var wrapperRef = reactExports.useRef(null);
  var _React$useState = reactExports.useState(0), _React$useState2 = _slicedToArray(_React$useState, 2), containerWidth = _React$useState2[0], setContainerWidth = _React$useState2[1];
  var _React$useState3 = reactExports.useState(0), _React$useState4 = _slicedToArray(_React$useState3, 2), containerOffset = _React$useState4[0], setContainerOffset = _React$useState4[1];
  var onResize2 = function onResize3(info2) {
    if (info2.offsetWidth) {
      setContainerWidth(info2.offsetWidth);
    }
  };
  reactExports.useEffect(function () {
    if (range3) {
      var _arrowRef$current;
      var arrowWidth = ((_arrowRef$current = arrowRef.current) === null || _arrowRef$current === void 0 ? void 0 : _arrowRef$current.offsetWidth) || 0;
      var maxOffset = containerWidth - arrowWidth;
      if (activeOffset <= maxOffset) {
        setContainerOffset(0);
      } else {
        setContainerOffset(activeOffset + arrowWidth - containerWidth);
      }
    }
  }, [containerWidth, activeOffset, range3]);
  function filterEmpty(list) {
    return list.filter(function (item2) {
      return item2;
    });
  }
  var valueList = reactExports.useMemo(function () {
    return filterEmpty(toArray(value2));
  }, [value2]);
  var isTimePickerEmptyValue = picker === "time" && !valueList.length;
  var footerSubmitValue = reactExports.useMemo(function () {
    if (isTimePickerEmptyValue) {
      return filterEmpty([defaultOpenValue]);
    }
    return valueList;
  }, [isTimePickerEmptyValue, valueList, defaultOpenValue]);
  var popupPanelValue = isTimePickerEmptyValue ? defaultOpenValue : valueList;
  var disableSubmit = reactExports.useMemo(function () {
    if (!footerSubmitValue.length) {
      return true;
    }
    return footerSubmitValue.some(function (val) {
      return isInvalid(val);
    });
  }, [footerSubmitValue, isInvalid]);
  var onFooterSubmit = function onFooterSubmit2() {
    if (isTimePickerEmptyValue) {
      onSelect(defaultOpenValue);
    }
    onOk();
    onSubmit();
  };
  var mergedNodes = /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-panel-layout")
  }, /* @__PURE__ */ reactExports.createElement(PresetPanel, {
    prefixCls,
    presets,
    onClick: onPresetSubmit,
    onHover: onPresetHover
  }), /* @__PURE__ */ reactExports.createElement("div", null, /* @__PURE__ */ reactExports.createElement(PopupPanel, _extends$1({}, props, {
    value: popupPanelValue
  })), /* @__PURE__ */ reactExports.createElement(Footer, _extends$1({}, props, {
    showNow: multiple ? false : showNow,
    invalid: disableSubmit,
    onSubmit: onFooterSubmit
  }))));
  if (panelRender) {
    mergedNodes = panelRender(mergedNodes);
  }
  var containerPrefixCls = "".concat(panelPrefixCls, "-container");
  var marginLeft = "marginLeft";
  var marginRight = "marginRight";
  var renderNode = /* @__PURE__ */ reactExports.createElement("div", {
    tabIndex: -1,
    className: classNames(
      containerPrefixCls,
      // Used for Today Button style, safe to remove if no need
      "".concat(prefixCls, "-").concat(internalMode, "-panel-container")
    ),
    style: _defineProperty(_defineProperty({}, rtl ? marginRight : marginLeft, containerOffset), rtl ? marginLeft : marginRight, "auto"),
    onFocus,
    onBlur
  }, mergedNodes);
  if (range3) {
    renderNode = /* @__PURE__ */ reactExports.createElement("div", {
      ref: wrapperRef,
      className: classNames("".concat(prefixCls, "-range-wrapper"), "".concat(prefixCls, "-").concat(picker, "-range-wrapper"))
    }, /* @__PURE__ */ reactExports.createElement("div", {
      ref: arrowRef,
      className: "".concat(prefixCls, "-range-arrow"),
      style: _defineProperty({}, rtl ? "right" : "left", activeOffset)
    }), /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
      onResize: onResize2
    }, renderNode));
  }
  return renderNode;
}
function useInputProps(props, postProps) {
  var format3 = props.format, maskFormat = props.maskFormat, generateConfig2 = props.generateConfig, locale2 = props.locale, preserveInvalidOnBlur = props.preserveInvalidOnBlur, inputReadOnly = props.inputReadOnly, required5 = props.required, ariaRequired = props["aria-required"], onSubmit = props.onSubmit, _onFocus = props.onFocus, _onBlur = props.onBlur, onInputChange = props.onInputChange, onInvalid = props.onInvalid, open2 = props.open, onOpenChange = props.onOpenChange, _onKeyDown = props.onKeyDown, _onChange = props.onChange, activeHelp = props.activeHelp, name2 = props.name, autoComplete = props.autoComplete, id2 = props.id, value2 = props.value, invalid = props.invalid, placeholder2 = props.placeholder, disabled2 = props.disabled, activeIndex = props.activeIndex, allHelp = props.allHelp, picker = props.picker;
  var parseDate = function parseDate2(str2, formatStr2) {
    var parsed = generateConfig2.locale.parse(locale2.locale, str2, [formatStr2]);
    return parsed && generateConfig2.isValidate(parsed) ? parsed : null;
  };
  var firstFormat = format3[0];
  var getText = reactExports.useCallback(function (date5) {
    return formatValue(date5, {
      locale: locale2,
      format: firstFormat,
      generateConfig: generateConfig2
    });
  }, [locale2, generateConfig2, firstFormat]);
  var valueTexts = reactExports.useMemo(function () {
    return value2.map(getText);
  }, [value2, getText]);
  var size2 = reactExports.useMemo(function () {
    var defaultSize = picker === "time" ? 8 : 10;
    var length2 = typeof firstFormat === "function" ? firstFormat(generateConfig2.getNow()).length : firstFormat.length;
    return Math.max(defaultSize, length2) + 2;
  }, [firstFormat, picker, generateConfig2]);
  var _validateFormat = function validateFormat(text2) {
    for (var i = 0; i < format3.length; i += 1) {
      var singleFormat = format3[i];
      if (typeof singleFormat === "string") {
        var parsed = parseDate(text2, singleFormat);
        if (parsed) {
          return parsed;
        }
      }
    }
    return false;
  };
  var getInputProps = function getInputProps2(index2) {
    function getProp(propValue) {
      return index2 !== void 0 ? propValue[index2] : propValue;
    }
    var pickedAttrs = pickAttrs(props, {
      aria: true,
      data: true
    });
    var inputProps = _objectSpread2(_objectSpread2({}, pickedAttrs), {}, {
      // ============== Shared ==============
      format: maskFormat,
      validateFormat: function validateFormat(text2) {
        return !!_validateFormat(text2);
      },
      preserveInvalidOnBlur,
      readOnly: inputReadOnly,
      required: required5,
      "aria-required": ariaRequired,
      name: name2,
      autoComplete,
      size: size2,
      // ============= By Index =============
      id: getProp(id2),
      value: getProp(valueTexts) || "",
      invalid: getProp(invalid),
      placeholder: getProp(placeholder2),
      active: activeIndex === index2,
      helped: allHelp || activeHelp && activeIndex === index2,
      disabled: getProp(disabled2),
      onFocus: function onFocus(event) {
        _onFocus(event, index2);
      },
      onBlur: function onBlur(event) {
        _onBlur(event, index2);
      },
      onSubmit,
      // Get validate text value
      onChange: function onChange(text2) {
        onInputChange();
        var parsed = _validateFormat(text2);
        if (parsed) {
          onInvalid(false, index2);
          _onChange(parsed, index2);
          return;
        }
        onInvalid(!!text2, index2);
      },
      onHelp: function onHelp() {
        onOpenChange(true, {
          index: index2
        });
      },
      onKeyDown: function onKeyDown(event) {
        var prevented = false;
        _onKeyDown === null || _onKeyDown === void 0 || _onKeyDown(event, function () {
          prevented = true;
        });
        if (!event.defaultPrevented && !prevented) {
          switch (event.key) {
            case "Escape":
              onOpenChange(false, {
                index: index2
              });
              break;
            case "Enter":
              if (!open2) {
                onOpenChange(true);
              }
              break;
          }
        }
      }
    }, postProps === null || postProps === void 0 ? void 0 : postProps({
      valueTexts
    }));
    Object.keys(inputProps).forEach(function (key) {
      if (inputProps[key] === void 0) {
        delete inputProps[key];
      }
    });
    return inputProps;
  };
  return [getInputProps, getText];
}
var propNames = ["onMouseEnter", "onMouseLeave"];
function useRootProps(props) {
  return reactExports.useMemo(function () {
    return pickProps(props, propNames);
  }, [props]);
}
var _excluded$3 = ["icon", "type"], _excluded2$1 = ["onClear"];
function Icon(props) {
  var icon3 = props.icon, type4 = props.type, restProps = _objectWithoutProperties(props, _excluded$3);
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls;
  return icon3 ? /* @__PURE__ */ reactExports.createElement("span", _extends$1({
    className: "".concat(prefixCls, "-").concat(type4)
  }, restProps), icon3) : null;
}
function ClearIcon(_ref) {
  var onClear = _ref.onClear, restProps = _objectWithoutProperties(_ref, _excluded2$1);
  return /* @__PURE__ */ reactExports.createElement(Icon, _extends$1({}, restProps, {
    type: "clear",
    role: "button",
    onMouseDown: function onMouseDown(e2) {
      e2.preventDefault();
    },
    onClick: function onClick(e2) {
      e2.stopPropagation();
      onClear();
    }
  }));
}
var FORMAT_KEYS = ["YYYY", "MM", "DD", "HH", "mm", "ss", "SSS"];
var REPLACE_KEY = "顧";
var MaskFormat = /* @__PURE__ */ function () {
  function MaskFormat2(format3) {
    _classCallCheck(this, MaskFormat2);
    _defineProperty(this, "format", void 0);
    _defineProperty(this, "maskFormat", void 0);
    _defineProperty(this, "cells", void 0);
    _defineProperty(this, "maskCells", void 0);
    this.format = format3;
    var replaceKeys = FORMAT_KEYS.map(function (key) {
      return "(".concat(key, ")");
    }).join("|");
    var replaceReg = new RegExp(replaceKeys, "g");
    this.maskFormat = format3.replace(
      replaceReg,
      // Use Chinese character to avoid user use it in format
      function (key) {
        return REPLACE_KEY.repeat(key.length);
      }
    );
    var cellReg = new RegExp("(".concat(FORMAT_KEYS.join("|"), ")"));
    var strCells = (format3.split(cellReg) || []).filter(function (str2) {
      return str2;
    });
    var offset = 0;
    this.cells = strCells.map(function (text2) {
      var mask = FORMAT_KEYS.includes(text2);
      var start = offset;
      var end = offset + text2.length;
      offset = end;
      return {
        text: text2,
        mask,
        start,
        end
      };
    });
    this.maskCells = this.cells.filter(function (cell2) {
      return cell2.mask;
    });
  }
  _createClass(MaskFormat2, [{
    key: "getSelection",
    value: function getSelection(maskCellIndex) {
      var _ref = this.maskCells[maskCellIndex] || {}, start = _ref.start, end = _ref.end;
      return [start || 0, end || 0];
    }
    /** Check given text match format */
  }, {
    key: "match",
    value: function match2(text2) {
      for (var i = 0; i < this.maskFormat.length; i += 1) {
        var maskChar = this.maskFormat[i];
        var textChar = text2[i];
        if (!textChar || maskChar !== REPLACE_KEY && maskChar !== textChar) {
          return false;
        }
      }
      return true;
    }
    /** Get mask cell count */
  }, {
    key: "size",
    value: function size2() {
      return this.maskCells.length;
    }
  }, {
    key: "getMaskCellIndex",
    value: function getMaskCellIndex(anchorIndex) {
      var closetDist = Number.MAX_SAFE_INTEGER;
      var closetIndex = 0;
      for (var i = 0; i < this.maskCells.length; i += 1) {
        var _this$maskCells$i = this.maskCells[i], start = _this$maskCells$i.start, end = _this$maskCells$i.end;
        if (anchorIndex >= start && anchorIndex <= end) {
          return i;
        }
        var dist = Math.min(Math.abs(anchorIndex - start), Math.abs(anchorIndex - end));
        if (dist < closetDist) {
          closetDist = dist;
          closetIndex = i;
        }
      }
      return closetIndex;
    }
  }]);
  return MaskFormat2;
}();
function getMaskRange(key) {
  var PresetRange = {
    YYYY: [0, 9999, (/* @__PURE__ */ new Date()).getFullYear()],
    MM: [1, 12],
    DD: [1, 31],
    HH: [0, 23],
    mm: [0, 59],
    ss: [0, 59],
    SSS: [0, 999]
  };
  return PresetRange[key];
}
var _excluded$2 = ["active", "showActiveCls", "suffixIcon", "format", "validateFormat", "onChange", "onInput", "helped", "onHelp", "onSubmit", "onKeyDown", "preserveInvalidOnBlur", "invalid", "clearIcon"];
var Input$1 = /* @__PURE__ */ reactExports.forwardRef(function (props, ref) {
  var active2 = props.active, _props$showActiveCls = props.showActiveCls, showActiveCls = _props$showActiveCls === void 0 ? true : _props$showActiveCls, suffixIcon = props.suffixIcon, format3 = props.format, validateFormat = props.validateFormat, onChange = props.onChange;
  props.onInput;
  var helped = props.helped, onHelp = props.onHelp, onSubmit = props.onSubmit, onKeyDown = props.onKeyDown, _props$preserveInvali = props.preserveInvalidOnBlur, preserveInvalidOnBlur = _props$preserveInvali === void 0 ? false : _props$preserveInvali, invalid = props.invalid, clearIcon = props.clearIcon, restProps = _objectWithoutProperties(props, _excluded$2);
  var value2 = props.value, onFocus = props.onFocus, onBlur = props.onBlur, onMouseUp = props.onMouseUp;
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls, _React$useContext$inp = _React$useContext.input, Component = _React$useContext$inp === void 0 ? "input" : _React$useContext$inp;
  var inputPrefixCls = "".concat(prefixCls, "-input");
  var _React$useState = reactExports.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), focused = _React$useState2[0], setFocused = _React$useState2[1];
  var _React$useState3 = reactExports.useState(value2), _React$useState4 = _slicedToArray(_React$useState3, 2), internalInputValue = _React$useState4[0], setInputValue = _React$useState4[1];
  var _React$useState5 = reactExports.useState(""), _React$useState6 = _slicedToArray(_React$useState5, 2), focusCellText = _React$useState6[0], setFocusCellText = _React$useState6[1];
  var _React$useState7 = reactExports.useState(null), _React$useState8 = _slicedToArray(_React$useState7, 2), focusCellIndex = _React$useState8[0], setFocusCellIndex = _React$useState8[1];
  var _React$useState9 = reactExports.useState(null), _React$useState10 = _slicedToArray(_React$useState9, 2), forceSelectionSyncMark = _React$useState10[0], forceSelectionSync = _React$useState10[1];
  var inputValue = internalInputValue || "";
  reactExports.useEffect(function () {
    setInputValue(value2);
  }, [value2]);
  var holderRef = reactExports.useRef();
  var inputRef = reactExports.useRef();
  reactExports.useImperativeHandle(ref, function () {
    return {
      nativeElement: holderRef.current,
      inputElement: inputRef.current,
      focus: function focus(options2) {
        inputRef.current.focus(options2);
      },
      blur: function blur() {
        inputRef.current.blur();
      }
    };
  });
  var maskFormat = reactExports.useMemo(function () {
    return new MaskFormat(format3 || "");
  }, [format3]);
  var _React$useMemo = reactExports.useMemo(function () {
    if (helped) {
      return [0, 0];
    }
    return maskFormat.getSelection(focusCellIndex);
  }, [maskFormat, focusCellIndex, helped]), _React$useMemo2 = _slicedToArray(_React$useMemo, 2), selectionStart = _React$useMemo2[0], selectionEnd = _React$useMemo2[1];
  var onModify = function onModify2(text2) {
    if (text2 && text2 !== format3 && text2 !== value2) {
      onHelp();
    }
  };
  var triggerInputChange = useEvent(function (text2) {
    if (validateFormat(text2)) {
      onChange(text2);
    }
    setInputValue(text2);
    onModify(text2);
  });
  var onInternalChange = function onInternalChange2(event) {
    if (!format3) {
      var text2 = event.target.value;
      onModify(text2);
      setInputValue(text2);
      onChange(text2);
    }
  };
  var onFormatPaste = function onFormatPaste2(event) {
    var pasteText = event.clipboardData.getData("text");
    if (validateFormat(pasteText)) {
      triggerInputChange(pasteText);
    }
  };
  var mouseDownRef = reactExports.useRef(false);
  var onFormatMouseDown = function onFormatMouseDown2() {
    mouseDownRef.current = true;
  };
  var onFormatMouseUp = function onFormatMouseUp2(event) {
    var _ref = event.target, start = _ref.selectionStart;
    var closeMaskIndex = maskFormat.getMaskCellIndex(start);
    setFocusCellIndex(closeMaskIndex);
    forceSelectionSync({});
    onMouseUp === null || onMouseUp === void 0 || onMouseUp(event);
    mouseDownRef.current = false;
  };
  var onFormatFocus = function onFormatFocus2(event) {
    setFocused(true);
    setFocusCellIndex(0);
    setFocusCellText("");
    onFocus(event);
  };
  var onSharedBlur = function onSharedBlur2(event) {
    onBlur(event);
  };
  var onFormatBlur = function onFormatBlur2(event) {
    setFocused(false);
    onSharedBlur(event);
  };
  useLockEffect(active2, function () {
    if (!active2 && !preserveInvalidOnBlur) {
      setInputValue(value2);
    }
  });
  var onSharedKeyDown = function onSharedKeyDown2(event) {
    if (event.key === "Enter" && validateFormat(inputValue)) {
      onSubmit();
    }
    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event);
  };
  var onFormatKeyDown = function onFormatKeyDown2(event) {
    onSharedKeyDown(event);
    var key = event.key;
    var nextCellText = null;
    var nextFillText = null;
    var maskCellLen = selectionEnd - selectionStart;
    var cellFormat = format3.slice(selectionStart, selectionEnd);
    var offsetCellIndex = function offsetCellIndex2(offset) {
      setFocusCellIndex(function (idx) {
        var nextIndex = idx + offset;
        nextIndex = Math.max(nextIndex, 0);
        nextIndex = Math.min(nextIndex, maskFormat.size() - 1);
        return nextIndex;
      });
    };
    var offsetCellValue = function offsetCellValue2(offset) {
      var _getMaskRange = getMaskRange(cellFormat), _getMaskRange2 = _slicedToArray(_getMaskRange, 3), rangeStart = _getMaskRange2[0], rangeEnd = _getMaskRange2[1], rangeDefault = _getMaskRange2[2];
      var currentText = inputValue.slice(selectionStart, selectionEnd);
      var currentTextNum = Number(currentText);
      if (isNaN(currentTextNum)) {
        return String(rangeDefault ? rangeDefault : offset > 0 ? rangeStart : rangeEnd);
      }
      var num2 = currentTextNum + offset;
      var range3 = rangeEnd - rangeStart + 1;
      return String(rangeStart + (range3 + num2 - rangeStart) % range3);
    };
    switch (key) {
      case "Backspace":
      case "Delete":
        nextCellText = "";
        nextFillText = cellFormat;
        break;
      case "ArrowLeft":
        nextCellText = "";
        offsetCellIndex(-1);
        break;
      case "ArrowRight":
        nextCellText = "";
        offsetCellIndex(1);
        break;
      case "ArrowUp":
        nextCellText = "";
        nextFillText = offsetCellValue(1);
        break;
      case "ArrowDown":
        nextCellText = "";
        nextFillText = offsetCellValue(-1);
        break;
      default:
        if (!isNaN(Number(key))) {
          nextCellText = focusCellText + key;
          nextFillText = nextCellText;
        }
        break;
    }
    if (nextCellText !== null) {
      setFocusCellText(nextCellText);
      if (nextCellText.length >= maskCellLen) {
        offsetCellIndex(1);
        setFocusCellText("");
      }
    }
    if (nextFillText !== null) {
      var nextFocusValue = (
        // before
        inputValue.slice(0, selectionStart) + // replace
        leftPad(nextFillText, maskCellLen) + // after
        inputValue.slice(selectionEnd)
      );
      triggerInputChange(nextFocusValue.slice(0, format3.length));
    }
    forceSelectionSync({});
  };
  var rafRef = reactExports.useRef();
  useLayoutEffect(function () {
    if (!focused || !format3 || mouseDownRef.current) {
      return;
    }
    if (!maskFormat.match(inputValue)) {
      triggerInputChange(format3);
      return;
    }
    inputRef.current.setSelectionRange(selectionStart, selectionEnd);
    rafRef.current = wrapperRaf(function () {
      inputRef.current.setSelectionRange(selectionStart, selectionEnd);
    });
    return function () {
      wrapperRaf.cancel(rafRef.current);
    };
  }, [maskFormat, format3, focused, inputValue, focusCellIndex, selectionStart, selectionEnd, forceSelectionSyncMark, triggerInputChange]);
  var inputProps = format3 ? {
    onFocus: onFormatFocus,
    onBlur: onFormatBlur,
    onKeyDown: onFormatKeyDown,
    onMouseDown: onFormatMouseDown,
    onMouseUp: onFormatMouseUp,
    onPaste: onFormatPaste
  } : {};
  return /* @__PURE__ */ reactExports.createElement("div", {
    ref: holderRef,
    className: classNames(inputPrefixCls, _defineProperty(_defineProperty({}, "".concat(inputPrefixCls, "-active"), active2 && showActiveCls), "".concat(inputPrefixCls, "-placeholder"), helped))
  }, /* @__PURE__ */ reactExports.createElement(Component, _extends$1({
    ref: inputRef,
    "aria-invalid": invalid,
    autoComplete: "off"
  }, restProps, {
    onKeyDown: onSharedKeyDown,
    onBlur: onSharedBlur
    // Replace with format
  }, inputProps, {
    // Value
    value: inputValue,
    onChange: onInternalChange
  })), /* @__PURE__ */ reactExports.createElement(Icon, {
    type: "suffix",
    icon: suffixIcon
  }), clearIcon);
});
var _excluded$1 = ["id", "clearIcon", "suffixIcon", "separator", "activeIndex", "activeHelp", "allHelp", "focused", "onFocus", "onBlur", "onKeyDown", "locale", "generateConfig", "placeholder", "className", "style", "onClick", "onClear", "value", "onChange", "onSubmit", "onInputChange", "format", "maskFormat", "preserveInvalidOnBlur", "onInvalid", "disabled", "invalid", "inputReadOnly", "direction", "onOpenChange", "onActiveOffset", "onMouseDown", "required", "aria-required", "autoFocus"], _excluded2 = ["index"];
function RangeSelector(props, ref) {
  var id2 = props.id, clearIcon = props.clearIcon, suffixIcon = props.suffixIcon, _props$separator = props.separator, separator = _props$separator === void 0 ? "~" : _props$separator, activeIndex = props.activeIndex;
  props.activeHelp;
  props.allHelp;
  var focused = props.focused;
  props.onFocus;
  props.onBlur;
  props.onKeyDown;
  props.locale;
  props.generateConfig;
  var placeholder2 = props.placeholder, className = props.className, style2 = props.style, onClick = props.onClick, onClear = props.onClear, value2 = props.value;
  props.onChange;
  props.onSubmit;
  props.onInputChange;
  props.format;
  props.maskFormat;
  props.preserveInvalidOnBlur;
  props.onInvalid;
  var disabled2 = props.disabled, invalid = props.invalid;
  props.inputReadOnly;
  var direction = props.direction;
  props.onOpenChange;
  var onActiveOffset = props.onActiveOffset, _onMouseDown = props.onMouseDown;
  props.required;
  props["aria-required"];
  var autoFocus = props.autoFocus, restProps = _objectWithoutProperties(props, _excluded$1);
  var rtl = direction === "rtl";
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls;
  var ids = reactExports.useMemo(function () {
    if (typeof id2 === "string") {
      return [id2];
    }
    var mergedId = id2 || {};
    return [mergedId.start, mergedId.end];
  }, [id2]);
  var rootRef = reactExports.useRef();
  var inputStartRef = reactExports.useRef();
  var inputEndRef = reactExports.useRef();
  var getInput = function getInput2(index2) {
    var _index;
    return (_index = [inputStartRef, inputEndRef][index2]) === null || _index === void 0 ? void 0 : _index.current;
  };
  reactExports.useImperativeHandle(ref, function () {
    return {
      nativeElement: rootRef.current,
      focus: function focus(options2) {
        if (_typeof(options2) === "object") {
          var _getInput;
          var _ref = options2 || {}, _ref$index = _ref.index, _index2 = _ref$index === void 0 ? 0 : _ref$index, rest = _objectWithoutProperties(_ref, _excluded2);
          (_getInput = getInput(_index2)) === null || _getInput === void 0 || _getInput.focus(rest);
        } else {
          var _getInput2;
          (_getInput2 = getInput(options2 !== null && options2 !== void 0 ? options2 : 0)) === null || _getInput2 === void 0 || _getInput2.focus();
        }
      },
      blur: function blur() {
        var _getInput3, _getInput4;
        (_getInput3 = getInput(0)) === null || _getInput3 === void 0 || _getInput3.blur();
        (_getInput4 = getInput(1)) === null || _getInput4 === void 0 || _getInput4.blur();
      }
    };
  });
  var rootProps = useRootProps(restProps);
  var mergedPlaceholder = reactExports.useMemo(function () {
    return Array.isArray(placeholder2) ? placeholder2 : [placeholder2, placeholder2];
  }, [placeholder2]);
  var _useInputProps = useInputProps(_objectSpread2(_objectSpread2({}, props), {}, {
    id: ids,
    placeholder: mergedPlaceholder
  })), _useInputProps2 = _slicedToArray(_useInputProps, 1), getInputProps = _useInputProps2[0];
  var offsetUnit = rtl ? "right" : "left";
  var _React$useState = reactExports.useState(_defineProperty({
    position: "absolute",
    width: 0
  }, offsetUnit, 0)), _React$useState2 = _slicedToArray(_React$useState, 2), activeBarStyle = _React$useState2[0], setActiveBarStyle = _React$useState2[1];
  var syncActiveOffset = useEvent(function () {
    var input2 = getInput(activeIndex);
    if (input2) {
      var _input$nativeElement = input2.nativeElement, offsetWidth = _input$nativeElement.offsetWidth, offsetLeft = _input$nativeElement.offsetLeft, offsetParent = _input$nativeElement.offsetParent;
      var _offset = offsetLeft;
      if (rtl) {
        var parentElement = offsetParent;
        var parentStyle = getComputedStyle(parentElement);
        _offset = parentElement.offsetWidth - parseFloat(parentStyle.borderRightWidth) - parseFloat(parentStyle.borderLeftWidth) - offsetLeft - offsetWidth;
      }
      setActiveBarStyle(function (ori) {
        return _objectSpread2(_objectSpread2({}, ori), {}, _defineProperty({
          width: offsetWidth
        }, offsetUnit, _offset));
      });
      onActiveOffset(activeIndex === 0 ? 0 : _offset);
    }
  });
  reactExports.useEffect(function () {
    syncActiveOffset();
  }, [activeIndex]);
  var showClear = clearIcon && (value2[0] && !disabled2[0] || value2[1] && !disabled2[1]);
  var startAutoFocus = autoFocus && !disabled2[0];
  var endAutoFocus = autoFocus && !startAutoFocus && !disabled2[1];
  return /* @__PURE__ */ reactExports.createElement(RefResizeObserver, {
    onResize: syncActiveOffset
  }, /* @__PURE__ */ reactExports.createElement("div", _extends$1({}, rootProps, {
    className: classNames(prefixCls, "".concat(prefixCls, "-range"), _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-focused"), focused), "".concat(prefixCls, "-disabled"), disabled2.every(function (i) {
      return i;
    })), "".concat(prefixCls, "-invalid"), invalid.some(function (i) {
      return i;
    })), "".concat(prefixCls, "-rtl"), rtl), className),
    style: style2,
    ref: rootRef,
    onClick,
    onMouseDown: function onMouseDown(e2) {
      var target = e2.target;
      if (target !== inputStartRef.current.inputElement && target !== inputEndRef.current.inputElement) {
        e2.preventDefault();
      }
      _onMouseDown === null || _onMouseDown === void 0 || _onMouseDown(e2);
    }
  }), /* @__PURE__ */ reactExports.createElement(Input$1, _extends$1({
    ref: inputStartRef
  }, getInputProps(0), {
    autoFocus: startAutoFocus,
    "date-range": "start"
  })), /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-range-separator")
  }, separator), /* @__PURE__ */ reactExports.createElement(Input$1, _extends$1({
    ref: inputEndRef
  }, getInputProps(1), {
    autoFocus: endAutoFocus,
    "date-range": "end"
  })), /* @__PURE__ */ reactExports.createElement("div", {
    className: "".concat(prefixCls, "-active-bar"),
    style: activeBarStyle
  }), /* @__PURE__ */ reactExports.createElement(Icon, {
    type: "suffix",
    icon: suffixIcon
  }), showClear && /* @__PURE__ */ reactExports.createElement(ClearIcon, {
    icon: clearIcon,
    onClear
  })));
}
var RefRangeSelector = /* @__PURE__ */ reactExports.forwardRef(RangeSelector);
function separateConfig(config2, defaultConfig2) {
  var singleConfig = config2 !== null && config2 !== void 0 ? config2 : defaultConfig2;
  if (Array.isArray(singleConfig)) {
    return singleConfig;
  }
  return [singleConfig, singleConfig];
}
function getActiveRange(activeIndex) {
  return activeIndex === 1 ? "end" : "start";
}
function RangePicker(props, ref) {
  var _useFilledProps = useFilledProps(props, function () {
    var disabled22 = props.disabled, allowEmpty2 = props.allowEmpty;
    var mergedDisabled = separateConfig(disabled22, false);
    var mergedAllowEmpty = separateConfig(allowEmpty2, false);
    return {
      disabled: mergedDisabled,
      allowEmpty: mergedAllowEmpty
    };
  }), _useFilledProps2 = _slicedToArray(_useFilledProps, 6), filledProps = _useFilledProps2[0], internalPicker = _useFilledProps2[1], complexPicker = _useFilledProps2[2], formatList = _useFilledProps2[3], maskFormat = _useFilledProps2[4], isInvalidateDate = _useFilledProps2[5];
  var prefixCls = filledProps.prefixCls, styles = filledProps.styles, classNames2 = filledProps.classNames, defaultValue = filledProps.defaultValue, value2 = filledProps.value, needConfirm = filledProps.needConfirm, onKeyDown = filledProps.onKeyDown, disabled2 = filledProps.disabled, allowEmpty = filledProps.allowEmpty, disabledDate = filledProps.disabledDate, minDate = filledProps.minDate, maxDate = filledProps.maxDate, defaultOpen = filledProps.defaultOpen, open2 = filledProps.open, onOpenChange = filledProps.onOpenChange, locale2 = filledProps.locale, generateConfig2 = filledProps.generateConfig, picker = filledProps.picker, showNow = filledProps.showNow, showToday = filledProps.showToday, showTime = filledProps.showTime, mode2 = filledProps.mode, onPanelChange = filledProps.onPanelChange, onCalendarChange = filledProps.onCalendarChange, onOk = filledProps.onOk, defaultPickerValue = filledProps.defaultPickerValue, pickerValue = filledProps.pickerValue, onPickerValueChange = filledProps.onPickerValueChange, inputReadOnly = filledProps.inputReadOnly, suffixIcon = filledProps.suffixIcon, onFocus = filledProps.onFocus, onBlur = filledProps.onBlur, presets = filledProps.presets, ranges = filledProps.ranges, components = filledProps.components, cellRender = filledProps.cellRender, dateRender = filledProps.dateRender, monthCellRender = filledProps.monthCellRender, onClick = filledProps.onClick;
  var selectorRef = usePickerRef(ref);
  var _useOpen = useOpen(open2, defaultOpen, disabled2, onOpenChange), _useOpen2 = _slicedToArray(_useOpen, 2), mergedOpen = _useOpen2[0], setMergeOpen = _useOpen2[1];
  var triggerOpen = function triggerOpen2(nextOpen, config2) {
    if (disabled2.some(function (fieldDisabled) {
      return !fieldDisabled;
    }) || !nextOpen) {
      setMergeOpen(nextOpen, config2);
    }
  };
  var _useInnerValue = useInnerValue(generateConfig2, locale2, formatList, true, false, defaultValue, value2, onCalendarChange, onOk), _useInnerValue2 = _slicedToArray(_useInnerValue, 5), mergedValue = _useInnerValue2[0], setInnerValue = _useInnerValue2[1], getCalendarValue = _useInnerValue2[2], triggerCalendarChange = _useInnerValue2[3], triggerOk = _useInnerValue2[4];
  var calendarValue = getCalendarValue();
  var _useRangeActive = useRangeActive(disabled2, allowEmpty), _useRangeActive2 = _slicedToArray(_useRangeActive, 7), focused = _useRangeActive2[0], triggerFocus = _useRangeActive2[1], lastOperation = _useRangeActive2[2], activeIndex = _useRangeActive2[3], setActiveIndex = _useRangeActive2[4], nextActiveIndex = _useRangeActive2[5], activeIndexList = _useRangeActive2[6];
  var onSharedFocus = function onSharedFocus2(event, index2) {
    triggerFocus(true);
    onFocus === null || onFocus === void 0 || onFocus(event, {
      range: getActiveRange(index2 !== null && index2 !== void 0 ? index2 : activeIndex)
    });
  };
  var onSharedBlur = function onSharedBlur2(event, index2) {
    triggerFocus(false);
    onBlur === null || onBlur === void 0 || onBlur(event, {
      range: getActiveRange(index2 !== null && index2 !== void 0 ? index2 : activeIndex)
    });
  };
  var mergedShowTime = reactExports.useMemo(function () {
    if (!showTime) {
      return null;
    }
    var disabledTime = showTime.disabledTime;
    var proxyDisabledTime = disabledTime ? function (date5) {
      var range3 = getActiveRange(activeIndex);
      return disabledTime(date5, range3);
    } : void 0;
    return _objectSpread2(_objectSpread2({}, showTime), {}, {
      disabledTime: proxyDisabledTime
    });
  }, [showTime, activeIndex]);
  var _useMergedState = useMergedState([picker, picker], {
    value: mode2
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), modes = _useMergedState2[0], setModes = _useMergedState2[1];
  var mergedMode = modes[activeIndex] || picker;
  var internalMode = mergedMode === "date" && mergedShowTime ? "datetime" : mergedMode;
  var multiplePanel = internalMode === picker && internalMode !== "time";
  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday, true);
  var _useRangeValue = useRangeValue(filledProps, mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, disabled2, formatList, focused, mergedOpen, isInvalidateDate), _useRangeValue2 = _slicedToArray(_useRangeValue, 2), flushSubmit = _useRangeValue2[0], triggerSubmitChange = _useRangeValue2[1];
  var mergedDisabledDate = useRangeDisabledDate(calendarValue, disabled2, activeIndexList, generateConfig2, locale2, disabledDate);
  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate, allowEmpty), _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2), submitInvalidates = _useFieldsInvalidate2[0], onSelectorInvalid = _useFieldsInvalidate2[1];
  var _useRangePickerValue = useRangePickerValue(generateConfig2, locale2, calendarValue, modes, mergedOpen, activeIndex, internalPicker, multiplePanel, defaultPickerValue, pickerValue, mergedShowTime === null || mergedShowTime === void 0 ? void 0 : mergedShowTime.defaultOpenValue, onPickerValueChange, minDate, maxDate), _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2), currentPickerValue = _useRangePickerValue2[0], setCurrentPickerValue = _useRangePickerValue2[1];
  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {
    var clone = fillIndex(modes, activeIndex, nextMode);
    if (clone[0] !== modes[0] || clone[1] !== modes[1]) {
      setModes(clone);
    }
    if (onPanelChange && triggerEvent !== false) {
      var clonePickerValue = _toConsumableArray(calendarValue);
      if (nextPickerValue) {
        clonePickerValue[activeIndex] = nextPickerValue;
      }
      onPanelChange(clonePickerValue, clone);
    }
  });
  var fillCalendarValue = function fillCalendarValue2(date5, index2) {
    return (
      // Trigger change only when date changed
      fillIndex(calendarValue, index2, date5)
    );
  };
  var triggerPartConfirm = function triggerPartConfirm2(date5, skipFocus) {
    var nextValue = calendarValue;
    if (date5) {
      nextValue = fillCalendarValue(date5, activeIndex);
    }
    var nextIndex = nextActiveIndex(nextValue);
    triggerCalendarChange(nextValue);
    flushSubmit(activeIndex, nextIndex === null);
    if (nextIndex === null) {
      triggerOpen(false, {
        force: true
      });
    } else if (!skipFocus) {
      selectorRef.current.focus({
        index: nextIndex
      });
    }
  };
  var onSelectorClick = function onSelectorClick2(event) {
    if (!selectorRef.current.nativeElement.contains(document.activeElement)) {
      var enabledIndex = disabled2.findIndex(function (d2) {
        return !d2;
      });
      if (enabledIndex >= 0) {
        selectorRef.current.focus({
          index: enabledIndex
        });
      }
    }
    triggerOpen(true);
    onClick === null || onClick === void 0 || onClick(event);
  };
  var onSelectorClear = function onSelectorClear2() {
    triggerSubmitChange(null);
    triggerOpen(false, {
      force: true
    });
  };
  var _React$useState = reactExports.useState(null), _React$useState2 = _slicedToArray(_React$useState, 2), hoverSource = _React$useState2[0], setHoverSource = _React$useState2[1];
  var _React$useState3 = reactExports.useState(null), _React$useState4 = _slicedToArray(_React$useState3, 2), internalHoverValues = _React$useState4[0], setInternalHoverValues = _React$useState4[1];
  var hoverValues = reactExports.useMemo(function () {
    return internalHoverValues || calendarValue;
  }, [calendarValue, internalHoverValues]);
  reactExports.useEffect(function () {
    if (!mergedOpen) {
      setInternalHoverValues(null);
    }
  }, [mergedOpen]);
  var _React$useState5 = reactExports.useState(0), _React$useState6 = _slicedToArray(_React$useState5, 2), activeOffset = _React$useState6[0], setActiveOffset = _React$useState6[1];
  var presetList = usePresets(presets, ranges);
  var onPresetHover = function onPresetHover2(nextValues) {
    setInternalHoverValues(nextValues);
    setHoverSource("preset");
  };
  var onPresetSubmit = function onPresetSubmit2(nextValues) {
    var passed = triggerSubmitChange(nextValues);
    if (passed) {
      triggerOpen(false, {
        force: true
      });
    }
  };
  var onNow = function onNow2(now2) {
    triggerPartConfirm(now2);
  };
  var onPanelHover = function onPanelHover2(date5) {
    setInternalHoverValues(date5 ? fillCalendarValue(date5, activeIndex) : null);
    setHoverSource("cell");
  };
  var onPanelFocus = function onPanelFocus2(event) {
    triggerOpen(true);
    onSharedFocus(event);
  };
  var onPanelSelect = function onPanelSelect2(date5) {
    lastOperation("panel");
    var clone = fillIndex(calendarValue, activeIndex, date5);
    triggerCalendarChange(clone);
    if (!needConfirm && !complexPicker && internalPicker === internalMode) {
      triggerPartConfirm(date5);
    }
  };
  var onPopupClose = function onPopupClose2() {
    triggerOpen(false);
  };
  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender, getActiveRange(activeIndex));
  var panelValue = calendarValue[activeIndex] || null;
  var isPopupInvalidateDate = useEvent(function (date5) {
    return isInvalidateDate(date5, {
      activeIndex
    });
  });
  var panelProps = reactExports.useMemo(function () {
    var domProps = pickAttrs(filledProps, false);
    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ["onChange", "onCalendarChange", "style", "className", "onPanelChange"]));
    return restProps;
  }, [filledProps]);
  var panel = /* @__PURE__ */ reactExports.createElement(Popup, _extends$1({}, panelProps, {
    showNow: mergedShowNow,
    showTime: mergedShowTime,
    range: true,
    multiplePanel,
    activeOffset,
    disabledDate: mergedDisabledDate,
    onFocus: onPanelFocus,
    onBlur: onSharedBlur,
    picker,
    mode: mergedMode,
    internalMode,
    onPanelChange: triggerModeChange,
    format: maskFormat,
    value: panelValue,
    isInvalid: isPopupInvalidateDate,
    onChange: null,
    onSelect: onPanelSelect,
    pickerValue: currentPickerValue,
    defaultOpenValue: toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue)[activeIndex],
    onPickerValueChange: setCurrentPickerValue,
    hoverValue: hoverValues,
    onHover: onPanelHover,
    needConfirm,
    onSubmit: triggerPartConfirm,
    onOk: triggerOk,
    presets: presetList,
    onPresetHover,
    onPresetSubmit,
    onNow,
    cellRender: onInternalCellRender
  }));
  var onSelectorChange = function onSelectorChange2(date5, index2) {
    var clone = fillCalendarValue(date5, index2);
    triggerCalendarChange(clone);
  };
  var onSelectorInputChange = function onSelectorInputChange2() {
    lastOperation("input");
  };
  var onSelectorFocus = function onSelectorFocus2(event, index2) {
    lastOperation("input");
    triggerOpen(true, {
      inherit: true
    });
    setActiveIndex(index2);
    onSharedFocus(event, index2);
  };
  var onSelectorBlur = function onSelectorBlur2(event, index2) {
    triggerOpen(false);
    onSharedBlur(event, index2);
  };
  var onSelectorKeyDown = function onSelectorKeyDown2(event, preventDefault2) {
    if (event.key === "Tab") {
      triggerPartConfirm(null, true);
    }
    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault2);
  };
  var context2 = reactExports.useMemo(function () {
    return {
      prefixCls,
      locale: locale2,
      generateConfig: generateConfig2,
      button: components.button,
      input: components.input
    };
  }, [prefixCls, locale2, generateConfig2, components.button, components.input]);
  useLayoutEffect(function () {
    if (mergedOpen && activeIndex !== void 0) {
      triggerModeChange(null, picker, false);
    }
  }, [mergedOpen, activeIndex, picker]);
  useLayoutEffect(function () {
    var lastOp = lastOperation();
    if (!mergedOpen && lastOp === "input") {
      triggerOpen(false);
      triggerPartConfirm(null, true);
    }
    if (!mergedOpen && complexPicker && !needConfirm && lastOp === "panel") {
      triggerOpen(true);
      triggerPartConfirm();
    }
  }, [mergedOpen]);
  return /* @__PURE__ */ reactExports.createElement(PickerContext.Provider, {
    value: context2
  }, /* @__PURE__ */ reactExports.createElement(PickerTrigger, _extends$1({}, pickTriggerProps(filledProps), {
    popupElement: panel,
    popupStyle: styles.popup,
    popupClassName: classNames2.popup,
    visible: mergedOpen,
    onClose: onPopupClose,
    range: true
  }), /* @__PURE__ */ reactExports.createElement(
    RefRangeSelector,
    _extends$1({}, filledProps, {
      // Ref
      ref: selectorRef,
      suffixIcon,
      activeIndex: focused || mergedOpen ? activeIndex : null,
      activeHelp: !!internalHoverValues,
      allHelp: !!internalHoverValues && hoverSource === "preset",
      focused,
      onFocus: onSelectorFocus,
      onBlur: onSelectorBlur,
      onKeyDown: onSelectorKeyDown,
      onSubmit: triggerPartConfirm,
      value: hoverValues,
      maskFormat,
      onChange: onSelectorChange,
      onInputChange: onSelectorInputChange,
      format: formatList,
      inputReadOnly,
      disabled: disabled2,
      open: mergedOpen,
      onOpenChange: triggerOpen,
      onClick: onSelectorClick,
      onClear: onSelectorClear,
      invalid: submitInvalidates,
      onInvalid: onSelectorInvalid,
      onActiveOffset: setActiveOffset
    })
  )));
}
var RefRangePicker = /* @__PURE__ */ reactExports.forwardRef(RangePicker);
function MultipleDates(props) {
  var prefixCls = props.prefixCls, value2 = props.value, onRemove = props.onRemove, _props$removeIcon = props.removeIcon, removeIcon = _props$removeIcon === void 0 ? "×" : _props$removeIcon, formatDate = props.formatDate, disabled2 = props.disabled, maxTagCount = props.maxTagCount;
  var selectorCls = "".concat(prefixCls, "-selector");
  var selectionCls = "".concat(prefixCls, "-selection");
  var overflowCls = "".concat(selectionCls, "-overflow");
  function renderSelector(content2, onClose) {
    return /* @__PURE__ */ reactExports.createElement("span", {
      className: classNames("".concat(selectionCls, "-item")),
      title: typeof content2 === "string" ? content2 : null
    }, /* @__PURE__ */ reactExports.createElement("span", {
      className: "".concat(selectionCls, "-item-content")
    }, content2), !disabled2 && onClose && /* @__PURE__ */ reactExports.createElement("span", {
      onMouseDown: function onMouseDown(e2) {
        e2.preventDefault();
      },
      onClick: onClose,
      className: "".concat(selectionCls, "-item-remove")
    }, removeIcon));
  }
  function renderItem(date5) {
    var displayLabel = formatDate(date5);
    var onClose = function onClose2(event) {
      if (event)
        event.stopPropagation();
      onRemove(date5);
    };
    return renderSelector(displayLabel, onClose);
  }
  function renderRest(omittedValues) {
    var content2 = "+ ".concat(omittedValues.length, " ...");
    return renderSelector(content2);
  }
  return /* @__PURE__ */ reactExports.createElement("div", {
    className: selectorCls
  }, /* @__PURE__ */ reactExports.createElement(ForwardOverflow, {
    prefixCls: overflowCls,
    data: value2,
    renderItem,
    renderRest,
    itemKey: function itemKey(date5) {
      return formatDate(date5);
    },
    maxCount: maxTagCount
  }));
}
var _excluded = ["id", "open", "clearIcon", "suffixIcon", "activeHelp", "allHelp", "focused", "onFocus", "onBlur", "onKeyDown", "locale", "generateConfig", "placeholder", "className", "style", "onClick", "onClear", "internalPicker", "value", "onChange", "onSubmit", "onInputChange", "multiple", "maxTagCount", "format", "maskFormat", "preserveInvalidOnBlur", "onInvalid", "disabled", "invalid", "inputReadOnly", "direction", "onOpenChange", "onMouseDown", "required", "aria-required", "autoFocus", "removeIcon"];
function SingleSelector(props, ref) {
  props.id;
  var open2 = props.open, clearIcon = props.clearIcon, suffixIcon = props.suffixIcon;
  props.activeHelp;
  props.allHelp;
  var focused = props.focused;
  props.onFocus;
  props.onBlur;
  props.onKeyDown;
  var locale2 = props.locale, generateConfig2 = props.generateConfig;
  props.placeholder;
  var className = props.className, style2 = props.style, onClick = props.onClick, onClear = props.onClear, internalPicker = props.internalPicker, value2 = props.value, onChange = props.onChange, onSubmit = props.onSubmit;
  props.onInputChange;
  var multiple = props.multiple, maxTagCount = props.maxTagCount;
  props.format;
  props.maskFormat;
  props.preserveInvalidOnBlur;
  props.onInvalid;
  var disabled2 = props.disabled, invalid = props.invalid;
  props.inputReadOnly;
  var direction = props.direction;
  props.onOpenChange;
  var _onMouseDown = props.onMouseDown;
  props.required;
  props["aria-required"];
  var autoFocus = props.autoFocus, removeIcon = props.removeIcon, restProps = _objectWithoutProperties(props, _excluded);
  var rtl = direction === "rtl";
  var _React$useContext = reactExports.useContext(PickerContext), prefixCls = _React$useContext.prefixCls;
  var rootRef = reactExports.useRef();
  var inputRef = reactExports.useRef();
  reactExports.useImperativeHandle(ref, function () {
    return {
      nativeElement: rootRef.current,
      focus: function focus(options2) {
        var _inputRef$current;
        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 || _inputRef$current.focus(options2);
      },
      blur: function blur() {
        var _inputRef$current2;
        (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 || _inputRef$current2.blur();
      }
    };
  });
  var rootProps = useRootProps(restProps);
  var onSingleChange = function onSingleChange2(date5) {
    onChange([date5]);
  };
  var onMultipleRemove = function onMultipleRemove2(date5) {
    var nextValues = value2.filter(function (oriDate) {
      return oriDate && !isSame(generateConfig2, locale2, oriDate, date5, internalPicker);
    });
    onChange(nextValues);
    if (!open2) {
      onSubmit();
    }
  };
  var _useInputProps = useInputProps(_objectSpread2(_objectSpread2({}, props), {}, {
    onChange: onSingleChange
  }), function (_ref) {
    var valueTexts = _ref.valueTexts;
    return {
      value: valueTexts[0] || "",
      active: focused
    };
  }), _useInputProps2 = _slicedToArray(_useInputProps, 2), getInputProps = _useInputProps2[0], getText = _useInputProps2[1];
  var showClear = !!(clearIcon && value2.length && !disabled2);
  var selectorNode = multiple ? /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement(MultipleDates, {
    prefixCls,
    value: value2,
    onRemove: onMultipleRemove,
    formatDate: getText,
    maxTagCount,
    disabled: disabled2,
    removeIcon
  }), /* @__PURE__ */ reactExports.createElement("input", {
    className: "".concat(prefixCls, "-multiple-input"),
    value: value2.map(getText).join(","),
    ref: inputRef,
    readOnly: true,
    autoFocus
  }), /* @__PURE__ */ reactExports.createElement(Icon, {
    type: "suffix",
    icon: suffixIcon
  }), showClear && /* @__PURE__ */ reactExports.createElement(ClearIcon, {
    icon: clearIcon,
    onClear
  })) : /* @__PURE__ */ reactExports.createElement(Input$1, _extends$1({
    ref: inputRef
  }, getInputProps(), {
    autoFocus,
    suffixIcon,
    clearIcon: showClear && /* @__PURE__ */ reactExports.createElement(ClearIcon, {
      icon: clearIcon,
      onClear
    }),
    showActiveCls: false
  }));
  return /* @__PURE__ */ reactExports.createElement("div", _extends$1({}, rootProps, {
    className: classNames(prefixCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-multiple"), multiple), "".concat(prefixCls, "-focused"), focused), "".concat(prefixCls, "-disabled"), disabled2), "".concat(prefixCls, "-invalid"), invalid), "".concat(prefixCls, "-rtl"), rtl), className),
    style: style2,
    ref: rootRef,
    onClick,
    onMouseDown: function onMouseDown(e2) {
      var _inputRef$current3;
      var target = e2.target;
      if (target !== ((_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.inputElement)) {
        e2.preventDefault();
      }
      _onMouseDown === null || _onMouseDown === void 0 || _onMouseDown(e2);
    }
  }), selectorNode);
}
var RefSingleSelector = /* @__PURE__ */ reactExports.forwardRef(SingleSelector);
function Picker$1(props, ref) {
  var _useFilledProps = useFilledProps(props), _useFilledProps2 = _slicedToArray(_useFilledProps, 6), filledProps = _useFilledProps2[0], internalPicker = _useFilledProps2[1], complexPicker = _useFilledProps2[2], formatList = _useFilledProps2[3], maskFormat = _useFilledProps2[4], isInvalidateDate = _useFilledProps2[5];
  var _ref = filledProps, prefixCls = _ref.prefixCls, styles = _ref.styles, classNames2 = _ref.classNames, order2 = _ref.order, defaultValue = _ref.defaultValue, value2 = _ref.value, needConfirm = _ref.needConfirm, onChange = _ref.onChange, onKeyDown = _ref.onKeyDown, disabled2 = _ref.disabled, disabledDate = _ref.disabledDate, minDate = _ref.minDate, maxDate = _ref.maxDate, defaultOpen = _ref.defaultOpen, open2 = _ref.open, onOpenChange = _ref.onOpenChange, locale2 = _ref.locale, generateConfig2 = _ref.generateConfig, picker = _ref.picker, showNow = _ref.showNow, showToday = _ref.showToday, showTime = _ref.showTime, mode2 = _ref.mode, onPanelChange = _ref.onPanelChange, onCalendarChange = _ref.onCalendarChange, onOk = _ref.onOk, multiple = _ref.multiple, defaultPickerValue = _ref.defaultPickerValue, pickerValue = _ref.pickerValue, onPickerValueChange = _ref.onPickerValueChange, inputReadOnly = _ref.inputReadOnly, suffixIcon = _ref.suffixIcon, removeIcon = _ref.removeIcon, onFocus = _ref.onFocus, onBlur = _ref.onBlur, presets = _ref.presets, components = _ref.components, cellRender = _ref.cellRender, dateRender = _ref.dateRender, monthCellRender = _ref.monthCellRender, onClick = _ref.onClick;
  var selectorRef = usePickerRef(ref);
  function pickerParam(values2) {
    if (values2 === null) {
      return null;
    }
    return multiple ? values2 : values2[0];
  }
  var toggleDates = useToggleDates(generateConfig2, locale2, internalPicker);
  var _useOpen = useOpen(open2, defaultOpen, [disabled2], onOpenChange), _useOpen2 = _slicedToArray(_useOpen, 2), mergedOpen = _useOpen2[0], triggerOpen = _useOpen2[1];
  var onInternalCalendarChange = function onInternalCalendarChange2(dates, dateStrings, info2) {
    if (onCalendarChange) {
      var filteredInfo = _objectSpread2({}, info2);
      delete filteredInfo.range;
      onCalendarChange(pickerParam(dates), pickerParam(dateStrings), filteredInfo);
    }
  };
  var onInternalOk = function onInternalOk2(dates) {
    onOk === null || onOk === void 0 || onOk(pickerParam(dates));
  };
  var _useInnerValue = useInnerValue(generateConfig2, locale2, formatList, false, order2, defaultValue, value2, onInternalCalendarChange, onInternalOk), _useInnerValue2 = _slicedToArray(_useInnerValue, 5), mergedValue = _useInnerValue2[0], setInnerValue = _useInnerValue2[1], getCalendarValue = _useInnerValue2[2], triggerCalendarChange = _useInnerValue2[3], triggerOk = _useInnerValue2[4];
  var calendarValue = getCalendarValue();
  var _useRangeActive = useRangeActive([disabled2]), _useRangeActive2 = _slicedToArray(_useRangeActive, 4), focused = _useRangeActive2[0], triggerFocus = _useRangeActive2[1], lastOperation = _useRangeActive2[2], activeIndex = _useRangeActive2[3];
  var onSharedFocus = function onSharedFocus2(event) {
    triggerFocus(true);
    onFocus === null || onFocus === void 0 || onFocus(event, {});
  };
  var onSharedBlur = function onSharedBlur2(event) {
    triggerFocus(false);
    onBlur === null || onBlur === void 0 || onBlur(event, {});
  };
  var _useMergedState = useMergedState(picker, {
    value: mode2
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), mergedMode = _useMergedState2[0], setMode = _useMergedState2[1];
  var internalMode = mergedMode === "date" && showTime ? "datetime" : mergedMode;
  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday);
  var onInternalChange = onChange && function (dates, dateStrings) {
    onChange(pickerParam(dates), pickerParam(dateStrings));
  };
  var _useRangeValue = useRangeValue(
    _objectSpread2(_objectSpread2({}, filledProps), {}, {
      onChange: onInternalChange
    }),
    mergedValue,
    setInnerValue,
    getCalendarValue,
    triggerCalendarChange,
    [],
    //disabled,
    formatList,
    focused,
    mergedOpen,
    isInvalidateDate
  ), _useRangeValue2 = _slicedToArray(_useRangeValue, 2), triggerSubmitChange = _useRangeValue2[1];
  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate), _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2), submitInvalidates = _useFieldsInvalidate2[0], onSelectorInvalid = _useFieldsInvalidate2[1];
  var submitInvalidate = reactExports.useMemo(function () {
    return submitInvalidates.some(function (invalidated) {
      return invalidated;
    });
  }, [submitInvalidates]);
  var onInternalPickerValueChange = function onInternalPickerValueChange2(dates, info2) {
    if (onPickerValueChange) {
      var cleanInfo = _objectSpread2(_objectSpread2({}, info2), {}, {
        mode: info2.mode[0]
      });
      delete cleanInfo.range;
      onPickerValueChange(dates[0], cleanInfo);
    }
  };
  var _useRangePickerValue = useRangePickerValue(
    generateConfig2,
    locale2,
    calendarValue,
    [mergedMode],
    mergedOpen,
    activeIndex,
    internalPicker,
    false,
    // multiplePanel,
    defaultPickerValue,
    pickerValue,
    toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue),
    onInternalPickerValueChange,
    minDate,
    maxDate
  ), _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2), currentPickerValue = _useRangePickerValue2[0], setCurrentPickerValue = _useRangePickerValue2[1];
  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {
    setMode(nextMode);
    if (onPanelChange && triggerEvent !== false) {
      var lastPickerValue = nextPickerValue || calendarValue[calendarValue.length - 1];
      onPanelChange(lastPickerValue, nextMode);
    }
  });
  var triggerConfirm = function triggerConfirm2() {
    triggerSubmitChange(getCalendarValue());
    triggerOpen(false, {
      force: true
    });
  };
  var onSelectorClick = function onSelectorClick2(event) {
    if (!disabled2 && !selectorRef.current.nativeElement.contains(document.activeElement)) {
      selectorRef.current.focus();
    }
    triggerOpen(true);
    onClick === null || onClick === void 0 || onClick(event);
  };
  var onSelectorClear = function onSelectorClear2() {
    triggerSubmitChange(null);
    triggerOpen(false, {
      force: true
    });
  };
  var _React$useState = reactExports.useState(null), _React$useState2 = _slicedToArray(_React$useState, 2), hoverSource = _React$useState2[0], setHoverSource = _React$useState2[1];
  var _React$useState3 = reactExports.useState(null), _React$useState4 = _slicedToArray(_React$useState3, 2), internalHoverValue = _React$useState4[0], setInternalHoverValue = _React$useState4[1];
  var hoverValues = reactExports.useMemo(function () {
    var values2 = [internalHoverValue].concat(_toConsumableArray(calendarValue)).filter(function (date5) {
      return date5;
    });
    return multiple ? values2 : values2.slice(0, 1);
  }, [calendarValue, internalHoverValue, multiple]);
  var selectorValues = reactExports.useMemo(function () {
    if (!multiple && internalHoverValue) {
      return [internalHoverValue];
    }
    return calendarValue.filter(function (date5) {
      return date5;
    });
  }, [calendarValue, internalHoverValue, multiple]);
  reactExports.useEffect(function () {
    if (!mergedOpen) {
      setInternalHoverValue(null);
    }
  }, [mergedOpen]);
  var presetList = usePresets(presets);
  var onPresetHover = function onPresetHover2(nextValue) {
    setInternalHoverValue(nextValue);
    setHoverSource("preset");
  };
  var onPresetSubmit = function onPresetSubmit2(nextValue) {
    var nextCalendarValues = multiple ? toggleDates(getCalendarValue(), nextValue) : [nextValue];
    var passed = triggerSubmitChange(nextCalendarValues);
    if (passed && !multiple) {
      triggerOpen(false, {
        force: true
      });
    }
  };
  var onNow = function onNow2(now2) {
    onPresetSubmit(now2);
  };
  var onPanelHover = function onPanelHover2(date5) {
    setInternalHoverValue(date5);
    setHoverSource("cell");
  };
  var onPanelFocus = function onPanelFocus2(event) {
    triggerOpen(true);
    onSharedFocus(event);
  };
  var onPanelSelect = function onPanelSelect2(date5) {
    lastOperation("panel");
    var nextValues = multiple ? toggleDates(getCalendarValue(), date5) : [date5];
    triggerCalendarChange(nextValues);
    if (!needConfirm && !complexPicker && internalPicker === internalMode) {
      triggerConfirm();
    }
  };
  var onPopupClose = function onPopupClose2() {
    triggerOpen(false);
  };
  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender);
  var panelProps = reactExports.useMemo(function () {
    var domProps = pickAttrs(filledProps, false);
    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ["onChange", "onCalendarChange", "style", "className", "onPanelChange"]));
    return _objectSpread2(_objectSpread2({}, restProps), {}, {
      multiple: filledProps.multiple
    });
  }, [filledProps]);
  var panel = /* @__PURE__ */ reactExports.createElement(Popup, _extends$1({}, panelProps, {
    showNow: mergedShowNow,
    showTime,
    disabledDate,
    onFocus: onPanelFocus,
    onBlur: onSharedBlur,
    picker,
    mode: mergedMode,
    internalMode,
    onPanelChange: triggerModeChange,
    format: maskFormat,
    value: calendarValue,
    isInvalid: isInvalidateDate,
    onChange: null,
    onSelect: onPanelSelect,
    pickerValue: currentPickerValue,
    defaultOpenValue: showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue,
    onPickerValueChange: setCurrentPickerValue,
    hoverValue: hoverValues,
    onHover: onPanelHover,
    needConfirm,
    onSubmit: triggerConfirm,
    onOk: triggerOk,
    presets: presetList,
    onPresetHover,
    onPresetSubmit,
    onNow,
    cellRender: onInternalCellRender
  }));
  var onSelectorChange = function onSelectorChange2(date5) {
    triggerCalendarChange(date5);
  };
  var onSelectorInputChange = function onSelectorInputChange2() {
    lastOperation("input");
  };
  var onSelectorFocus = function onSelectorFocus2(event) {
    lastOperation("input");
    triggerOpen(true, {
      inherit: true
    });
    onSharedFocus(event);
  };
  var onSelectorBlur = function onSelectorBlur2(event) {
    triggerOpen(false);
    onSharedBlur(event);
  };
  var onSelectorKeyDown = function onSelectorKeyDown2(event, preventDefault2) {
    if (event.key === "Tab") {
      triggerConfirm();
    }
    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault2);
  };
  var context2 = reactExports.useMemo(function () {
    return {
      prefixCls,
      locale: locale2,
      generateConfig: generateConfig2,
      button: components.button,
      input: components.input
    };
  }, [prefixCls, locale2, generateConfig2, components.button, components.input]);
  useLayoutEffect(function () {
    if (mergedOpen && activeIndex !== void 0) {
      triggerModeChange(null, picker, false);
    }
  }, [mergedOpen, activeIndex, picker]);
  useLayoutEffect(function () {
    var lastOp = lastOperation();
    if (!mergedOpen && lastOp === "input") {
      triggerOpen(false);
      triggerConfirm();
    }
    if (!mergedOpen && complexPicker && !needConfirm && lastOp === "panel") {
      triggerOpen(true);
      triggerConfirm();
    }
  }, [mergedOpen]);
  return /* @__PURE__ */ reactExports.createElement(PickerContext.Provider, {
    value: context2
  }, /* @__PURE__ */ reactExports.createElement(PickerTrigger, _extends$1({}, pickTriggerProps(filledProps), {
    popupElement: panel,
    popupStyle: styles.popup,
    popupClassName: classNames2.popup,
    visible: mergedOpen,
    onClose: onPopupClose
  }), /* @__PURE__ */ reactExports.createElement(
    RefSingleSelector,
    _extends$1({}, filledProps, {
      // Ref
      ref: selectorRef,
      suffixIcon,
      removeIcon,
      activeHelp: !!internalHoverValue,
      allHelp: !!internalHoverValue && hoverSource === "preset",
      focused,
      onFocus: onSelectorFocus,
      onBlur: onSelectorBlur,
      onKeyDown: onSelectorKeyDown,
      onSubmit: triggerConfirm,
      value: selectorValues,
      maskFormat,
      onChange: onSelectorChange,
      onInputChange: onSelectorInputChange,
      internalPicker,
      format: formatList,
      inputReadOnly,
      disabled: disabled2,
      open: mergedOpen,
      onOpenChange: triggerOpen,
      onClick: onSelectorClick,
      onClear: onSelectorClear,
      invalid: submitInvalidate,
      onInvalid: function onInvalid(invalid) {
        onSelectorInvalid(invalid, 0);
      }
    })
  )));
}
var RefPicker = /* @__PURE__ */ reactExports.forwardRef(Picker$1);
function initInputToken(token2) {
  return merge(token2, {
    inputAffixPadding: token2.paddingXXS
  });
}
const initComponentToken = (token2) => {
  const {
    controlHeight,
    fontSize,
    lineHeight: lineHeight2,
    lineWidth,
    controlHeightSM,
    controlHeightLG,
    fontSizeLG,
    lineHeightLG,
    paddingSM,
    controlPaddingHorizontalSM,
    controlPaddingHorizontal,
    colorFillAlter,
    colorPrimaryHover,
    colorPrimary,
    controlOutlineWidth,
    controlOutline,
    colorErrorOutline,
    colorWarningOutline,
    colorBgContainer
  } = token2;
  return {
    paddingBlock: Math.max(Math.round((controlHeight - fontSize * lineHeight2) / 2 * 10) / 10 - lineWidth, 0),
    paddingBlockSM: Math.max(Math.round((controlHeightSM - fontSize * lineHeight2) / 2 * 10) / 10 - lineWidth, 0),
    paddingBlockLG: Math.ceil((controlHeightLG - fontSizeLG * lineHeightLG) / 2 * 10) / 10 - lineWidth,
    paddingInline: paddingSM - lineWidth,
    paddingInlineSM: controlPaddingHorizontalSM - lineWidth,
    paddingInlineLG: controlPaddingHorizontal - lineWidth,
    addonBg: colorFillAlter,
    activeBorderColor: colorPrimary,
    hoverBorderColor: colorPrimaryHover,
    activeShadow: "0 0 0 ".concat(controlOutlineWidth, "px ").concat(controlOutline),
    errorActiveShadow: "0 0 0 ".concat(controlOutlineWidth, "px ").concat(colorErrorOutline),
    warningActiveShadow: "0 0 0 ".concat(controlOutlineWidth, "px ").concat(colorWarningOutline),
    hoverBg: colorBgContainer,
    activeBg: colorBgContainer,
    inputFontSize: fontSize,
    inputFontSizeLG: fontSizeLG,
    inputFontSizeSM: fontSize
  };
};
const genHoverStyle = (token2) => ({
  borderColor: token2.hoverBorderColor,
  backgroundColor: token2.hoverBg
});
const genDisabledStyle = (token2) => ({
  color: token2.colorTextDisabled,
  backgroundColor: token2.colorBgContainerDisabled,
  borderColor: token2.colorBorder,
  boxShadow: "none",
  cursor: "not-allowed",
  opacity: 1,
  "input[disabled]": {
    cursor: "not-allowed"
  },
  "&:hover:not([disabled])": Object.assign({}, genHoverStyle(merge(token2, {
    hoverBorderColor: token2.colorBorder,
    hoverBg: token2.colorBgContainerDisabled
  })))
});
const genBaseOutlinedStyle = (token2, options2) => ({
  background: token2.colorBgContainer,
  borderWidth: token2.lineWidth,
  borderStyle: token2.lineType,
  borderColor: options2.borderColor,
  "&:hover": {
    borderColor: options2.hoverBorderColor,
    backgroundColor: token2.hoverBg
  },
  "&:focus, &:focus-within": {
    borderColor: options2.activeBorderColor,
    boxShadow: options2.activeShadow,
    outline: 0,
    backgroundColor: token2.activeBg
  }
});
const genOutlinedStatusStyle = (token2, options2) => ({
  ["&".concat(token2.componentCls, "-status-").concat(options2.status, ":not(").concat(token2.componentCls, "-disabled)")]: Object.assign(Object.assign({}, genBaseOutlinedStyle(token2, options2)), {
    ["".concat(token2.componentCls, "-prefix, ").concat(token2.componentCls, "-suffix")]: {
      color: options2.affixColor
    }
  })
});
const genOutlinedStyle = (token2, extraStyles) => ({
  "&-outlined": Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genBaseOutlinedStyle(token2, {
    borderColor: token2.colorBorder,
    hoverBorderColor: token2.hoverBorderColor,
    activeBorderColor: token2.activeBorderColor,
    activeShadow: token2.activeShadow
  })), {
    ["&".concat(token2.componentCls, "-disabled, &[disabled]")]: Object.assign({}, genDisabledStyle(token2))
  }), genOutlinedStatusStyle(token2, {
    status: "error",
    borderColor: token2.colorError,
    hoverBorderColor: token2.colorErrorBorderHover,
    activeBorderColor: token2.colorError,
    activeShadow: token2.errorActiveShadow,
    affixColor: token2.colorError
  })), genOutlinedStatusStyle(token2, {
    status: "warning",
    borderColor: token2.colorWarning,
    hoverBorderColor: token2.colorWarningBorderHover,
    activeBorderColor: token2.colorWarning,
    activeShadow: token2.warningActiveShadow,
    affixColor: token2.colorWarning
  })), extraStyles)
});
const genOutlinedGroupStatusStyle = (token2, options2) => ({
  ["&".concat(token2.componentCls, "-group-wrapper-status-").concat(options2.status)]: {
    ["".concat(token2.componentCls, "-group-addon")]: {
      borderColor: options2.addonBorderColor,
      color: options2.addonColor
    }
  }
});
const genOutlinedGroupStyle = (token2) => ({
  "&-outlined": Object.assign(Object.assign(Object.assign({
    ["".concat(token2.componentCls, "-group")]: {
      "&-addon": {
        background: token2.addonBg,
        border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder)
      },
      "&-addon:first-child": {
        borderInlineEnd: 0
      },
      "&-addon:last-child": {
        borderInlineStart: 0
      }
    }
  }, genOutlinedGroupStatusStyle(token2, {
    status: "error",
    addonBorderColor: token2.colorError,
    addonColor: token2.colorErrorText
  })), genOutlinedGroupStatusStyle(token2, {
    status: "warning",
    addonBorderColor: token2.colorWarning,
    addonColor: token2.colorWarningText
  })), {
    ["&".concat(token2.componentCls, "-group-wrapper-disabled")]: {
      ["".concat(token2.componentCls, "-group-addon")]: Object.assign({}, genDisabledStyle(token2))
    }
  })
});
const genBorderlessStyle = (token2, extraStyles) => ({
  "&-borderless": Object.assign({
    background: "transparent",
    border: "none",
    "&:focus, &:focus-within": {
      outline: "none"
    },
    ["&".concat(token2.componentCls, "-disabled, &[disabled]")]: {
      color: token2.colorTextDisabled
    }
  }, extraStyles)
});
const genBaseFilledStyle = (token2, options2) => ({
  background: options2.bg,
  borderWidth: token2.lineWidth,
  borderStyle: token2.lineType,
  borderColor: "transparent",
  ["input&, & input, textarea&, & textarea"]: {
    color: options2 === null || options2 === void 0 ? void 0 : options2.inputColor
  },
  "&:hover": {
    background: options2.hoverBg
  },
  "&:focus, &:focus-within": {
    outline: 0,
    borderColor: options2.activeBorderColor,
    backgroundColor: token2.activeBg
  }
});
const genFilledStatusStyle = (token2, options2) => ({
  ["&".concat(token2.componentCls, "-status-").concat(options2.status, ":not(").concat(token2.componentCls, "-disabled)")]: Object.assign(Object.assign({}, genBaseFilledStyle(token2, options2)), {
    ["".concat(token2.componentCls, "-prefix, ").concat(token2.componentCls, "-suffix")]: {
      color: options2.affixColor
    }
  })
});
const genFilledStyle = (token2, extraStyles) => ({
  "&-filled": Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genBaseFilledStyle(token2, {
    bg: token2.colorFillTertiary,
    hoverBg: token2.colorFillSecondary,
    activeBorderColor: token2.colorPrimary
  })), {
    ["&".concat(token2.componentCls, "-disabled, &[disabled]")]: Object.assign({}, genDisabledStyle(token2))
  }), genFilledStatusStyle(token2, {
    status: "error",
    bg: token2.colorErrorBg,
    hoverBg: token2.colorErrorBgHover,
    activeBorderColor: token2.colorError,
    inputColor: token2.colorErrorText,
    affixColor: token2.colorError
  })), genFilledStatusStyle(token2, {
    status: "warning",
    bg: token2.colorWarningBg,
    hoverBg: token2.colorWarningBgHover,
    activeBorderColor: token2.colorWarning,
    inputColor: token2.colorWarningText,
    affixColor: token2.colorWarning
  })), extraStyles)
});
const genFilledGroupStatusStyle = (token2, options2) => ({
  ["&".concat(token2.componentCls, "-group-wrapper-status-").concat(options2.status)]: {
    ["".concat(token2.componentCls, "-group-addon")]: {
      background: options2.addonBg,
      color: options2.addonColor
    }
  }
});
const genFilledGroupStyle = (token2) => ({
  "&-filled": Object.assign(Object.assign(Object.assign({
    ["".concat(token2.componentCls, "-group")]: {
      "&-addon": {
        background: token2.colorFillTertiary
      },
      ["".concat(token2.componentCls, "-filled:not(:focus):not(:focus-within)")]: {
        "&:not(:first-child)": {
          borderInlineStart: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorSplit)
        },
        "&:not(:last-child)": {
          borderInlineEnd: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorSplit)
        }
      }
    }
  }, genFilledGroupStatusStyle(token2, {
    status: "error",
    addonBg: token2.colorErrorBg,
    addonColor: token2.colorErrorText
  })), genFilledGroupStatusStyle(token2, {
    status: "warning",
    addonBg: token2.colorWarningBg,
    addonColor: token2.colorWarningText
  })), {
    ["&".concat(token2.componentCls, "-group-wrapper-disabled")]: {
      ["".concat(token2.componentCls, "-group")]: {
        "&-addon": {
          background: token2.colorFillTertiary,
          color: token2.colorTextDisabled
        },
        "&-addon:first-child": {
          borderInlineStart: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder),
          borderTop: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder),
          borderBottom: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder)
        },
        "&-addon:last-child": {
          borderInlineEnd: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder),
          borderTop: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder),
          borderBottom: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorBorder)
        }
      }
    }
  })
});
const genPlaceholderStyle = (color) => ({
  // Firefox
  "&::-moz-placeholder": {
    opacity: 1
  },
  "&::placeholder": {
    color,
    userSelect: "none"
    // https://github.com/ant-design/ant-design/pull/32639
  },
  "&:placeholder-shown": {
    textOverflow: "ellipsis"
  }
});
const genInputLargeStyle = (token2) => {
  const {
    paddingBlockLG,
    lineHeightLG,
    borderRadiusLG,
    paddingInlineLG
  } = token2;
  return {
    padding: "".concat(unit$1(paddingBlockLG), " ").concat(unit$1(paddingInlineLG)),
    fontSize: token2.inputFontSizeLG,
    lineHeight: lineHeightLG,
    borderRadius: borderRadiusLG
  };
};
const genInputSmallStyle = (token2) => ({
  padding: "".concat(unit$1(token2.paddingBlockSM), " ").concat(unit$1(token2.paddingInlineSM)),
  fontSize: token2.inputFontSizeSM,
  borderRadius: token2.borderRadiusSM
});
const genBasicInputStyle = (token2) => Object.assign(Object.assign({
  position: "relative",
  display: "inline-block",
  width: "100%",
  minWidth: 0,
  padding: "".concat(unit$1(token2.paddingBlock), " ").concat(unit$1(token2.paddingInline)),
  color: token2.colorText,
  fontSize: token2.inputFontSize,
  lineHeight: token2.lineHeight,
  borderRadius: token2.borderRadius,
  transition: "all ".concat(token2.motionDurationMid)
}, genPlaceholderStyle(token2.colorTextPlaceholder)), {
  // Reset height for `textarea`s
  "textarea&": {
    maxWidth: "100%",
    // prevent textarea resize from coming out of its container
    height: "auto",
    minHeight: token2.controlHeight,
    lineHeight: token2.lineHeight,
    verticalAlign: "bottom",
    transition: "all ".concat(token2.motionDurationSlow, ", height 0s"),
    resize: "vertical"
  },
  // Size
  "&-lg": Object.assign({}, genInputLargeStyle(token2)),
  "&-sm": Object.assign({}, genInputSmallStyle(token2)),
  // RTL
  "&-rtl": {
    direction: "rtl"
  },
  "&-textarea-rtl": {
    direction: "rtl"
  }
});
const genInputGroupStyle = (token2) => {
  const {
    componentCls,
    antCls
  } = token2;
  return {
    position: "relative",
    display: "table",
    width: "100%",
    borderCollapse: "separate",
    borderSpacing: 0,
    // Undo padding and float of grid classes
    ["&[class*='col-']"]: {
      paddingInlineEnd: token2.paddingXS,
      "&:last-child": {
        paddingInlineEnd: 0
      }
    },
    // Sizing options
    ["&-lg ".concat(componentCls, ", &-lg > ").concat(componentCls, "-group-addon")]: Object.assign({}, genInputLargeStyle(token2)),
    ["&-sm ".concat(componentCls, ", &-sm > ").concat(componentCls, "-group-addon")]: Object.assign({}, genInputSmallStyle(token2)),
    // Fix https://github.com/ant-design/ant-design/issues/5754
    ["&-lg ".concat(antCls, "-select-single ").concat(antCls, "-select-selector")]: {
      height: token2.controlHeightLG
    },
    ["&-sm ".concat(antCls, "-select-single ").concat(antCls, "-select-selector")]: {
      height: token2.controlHeightSM
    },
    ["> ".concat(componentCls)]: {
      display: "table-cell",
      "&:not(:first-child):not(:last-child)": {
        borderRadius: 0
      }
    },
    ["".concat(componentCls, "-group")]: {
      ["&-addon, &-wrap"]: {
        display: "table-cell",
        width: 1,
        whiteSpace: "nowrap",
        verticalAlign: "middle",
        "&:not(:first-child):not(:last-child)": {
          borderRadius: 0
        }
      },
      "&-wrap > *": {
        display: "block !important"
      },
      "&-addon": {
        position: "relative",
        padding: "0 ".concat(unit$1(token2.paddingInline)),
        color: token2.colorText,
        fontWeight: "normal",
        fontSize: token2.inputFontSize,
        textAlign: "center",
        borderRadius: token2.borderRadius,
        transition: "all ".concat(token2.motionDurationSlow),
        lineHeight: 1,
        // Reset Select's style in addon
        ["".concat(antCls, "-select")]: {
          margin: "".concat(unit$1(token2.calc(token2.paddingBlock).add(1).mul(-1).equal()), " ").concat(unit$1(token2.calc(token2.paddingInline).mul(-1).equal())),
          ["&".concat(antCls, "-select-single:not(").concat(antCls, "-select-customize-input):not(").concat(antCls, "-pagination-size-changer)")]: {
            ["".concat(antCls, "-select-selector")]: {
              backgroundColor: "inherit",
              border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " transparent"),
              boxShadow: "none"
            }
          },
          "&-open, &-focused": {
            ["".concat(antCls, "-select-selector")]: {
              color: token2.colorPrimary
            }
          }
        },
        // https://github.com/ant-design/ant-design/issues/31333
        ["".concat(antCls, "-cascader-picker")]: {
          margin: "-9px ".concat(unit$1(token2.calc(token2.paddingInline).mul(-1).equal())),
          backgroundColor: "transparent",
          ["".concat(antCls, "-cascader-input")]: {
            textAlign: "start",
            border: 0,
            boxShadow: "none"
          }
        }
      }
    },
    ["".concat(componentCls)]: {
      width: "100%",
      marginBottom: 0,
      textAlign: "inherit",
      "&:focus": {
        zIndex: 1,
        // Fix https://gw.alipayobjects.com/zos/rmsportal/DHNpoqfMXSfrSnlZvhsJ.png
        borderInlineEndWidth: 1
      },
      "&:hover": {
        zIndex: 1,
        borderInlineEndWidth: 1,
        ["".concat(componentCls, "-search-with-button &")]: {
          zIndex: 0
        }
      }
    },
    // Reset rounded corners
    ["> ".concat(componentCls, ":first-child, ").concat(componentCls, "-group-addon:first-child")]: {
      borderStartEndRadius: 0,
      borderEndEndRadius: 0,
      // Reset Select's style in addon
      ["".concat(antCls, "-select ").concat(antCls, "-select-selector")]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0
      }
    },
    ["> ".concat(componentCls, "-affix-wrapper")]: {
      ["&:not(:first-child) ".concat(componentCls)]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0
      },
      ["&:not(:last-child) ".concat(componentCls)]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0
      }
    },
    ["> ".concat(componentCls, ":last-child, ").concat(componentCls, "-group-addon:last-child")]: {
      borderStartStartRadius: 0,
      borderEndStartRadius: 0,
      // Reset Select's style in addon
      ["".concat(antCls, "-select ").concat(antCls, "-select-selector")]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0
      }
    },
    ["".concat(componentCls, "-affix-wrapper")]: {
      "&:not(:last-child)": {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0,
        ["".concat(componentCls, "-search &")]: {
          borderStartStartRadius: token2.borderRadius,
          borderEndStartRadius: token2.borderRadius
        }
      },
      ["&:not(:first-child), ".concat(componentCls, "-search &:not(:first-child)")]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0
      }
    },
    ["&".concat(componentCls, "-group-compact")]: Object.assign(Object.assign({
      display: "block"
    }, clearFix()), {
      ["".concat(componentCls, "-group-addon, ").concat(componentCls, "-group-wrap, > ").concat(componentCls)]: {
        "&:not(:first-child):not(:last-child)": {
          borderInlineEndWidth: token2.lineWidth,
          "&:hover": {
            zIndex: 1
          },
          "&:focus": {
            zIndex: 1
          }
        }
      },
      "& > *": {
        display: "inline-block",
        float: "none",
        verticalAlign: "top",
        // https://github.com/ant-design/ant-design-pro/issues/139
        borderRadius: 0
      },
      ["\n        & > ".concat(componentCls, "-affix-wrapper,\n        & > ").concat(componentCls, "-number-affix-wrapper,\n        & > ").concat(antCls, "-picker-range\n      ")]: {
        display: "inline-flex"
      },
      "& > *:not(:last-child)": {
        marginInlineEnd: token2.calc(token2.lineWidth).mul(-1).equal(),
        borderInlineEndWidth: token2.lineWidth
      },
      // Undo float for .ant-input-group .ant-input
      ["".concat(componentCls)]: {
        float: "none"
      },
      // reset border for Select, DatePicker, AutoComplete, Cascader, Mention, TimePicker, Input
      ["& > ".concat(antCls, "-select > ").concat(antCls, "-select-selector,\n      & > ").concat(antCls, "-select-auto-complete ").concat(componentCls, ",\n      & > ").concat(antCls, "-cascader-picker ").concat(componentCls, ",\n      & > ").concat(componentCls, "-group-wrapper ").concat(componentCls)]: {
        borderInlineEndWidth: token2.lineWidth,
        borderRadius: 0,
        "&:hover": {
          zIndex: 1
        },
        "&:focus": {
          zIndex: 1
        }
      },
      ["& > ".concat(antCls, "-select-focused")]: {
        zIndex: 1
      },
      // update z-index for arrow icon
      ["& > ".concat(antCls, "-select > ").concat(antCls, "-select-arrow")]: {
        zIndex: 1
        // https://github.com/ant-design/ant-design/issues/20371
      },
      ["& > *:first-child,\n      & > ".concat(antCls, "-select:first-child > ").concat(antCls, "-select-selector,\n      & > ").concat(antCls, "-select-auto-complete:first-child ").concat(componentCls, ",\n      & > ").concat(antCls, "-cascader-picker:first-child ").concat(componentCls)]: {
        borderStartStartRadius: token2.borderRadius,
        borderEndStartRadius: token2.borderRadius
      },
      ["& > *:last-child,\n      & > ".concat(antCls, "-select:last-child > ").concat(antCls, "-select-selector,\n      & > ").concat(antCls, "-cascader-picker:last-child ").concat(componentCls, ",\n      & > ").concat(antCls, "-cascader-picker-focused:last-child ").concat(componentCls)]: {
        borderInlineEndWidth: token2.lineWidth,
        borderStartEndRadius: token2.borderRadius,
        borderEndEndRadius: token2.borderRadius
      },
      // https://github.com/ant-design/ant-design/issues/12493
      ["& > ".concat(antCls, "-select-auto-complete ").concat(componentCls)]: {
        verticalAlign: "top"
      },
      ["".concat(componentCls, "-group-wrapper + ").concat(componentCls, "-group-wrapper")]: {
        marginInlineStart: token2.calc(token2.lineWidth).mul(-1).equal(),
        ["".concat(componentCls, "-affix-wrapper")]: {
          borderRadius: 0
        }
      },
      ["".concat(componentCls, "-group-wrapper:not(:last-child)")]: {
        ["&".concat(componentCls, "-search > ").concat(componentCls, "-group")]: {
          ["& > ".concat(componentCls, "-group-addon > ").concat(componentCls, "-search-button")]: {
            borderRadius: 0
          },
          ["& > ".concat(componentCls)]: {
            borderStartStartRadius: token2.borderRadius,
            borderStartEndRadius: 0,
            borderEndEndRadius: 0,
            borderEndStartRadius: token2.borderRadius
          }
        }
      }
    })
  };
};
const genInputStyle = (token2) => {
  const {
    componentCls,
    controlHeightSM,
    lineWidth,
    calc
  } = token2;
  const FIXED_CHROME_COLOR_HEIGHT = 16;
  const colorSmallPadding = calc(controlHeightSM).sub(calc(lineWidth).mul(2)).sub(FIXED_CHROME_COLOR_HEIGHT).div(2).equal();
  return {
    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token2)), genBasicInputStyle(token2)), genOutlinedStyle(token2)), genFilledStyle(token2)), genBorderlessStyle(token2)), {
      '&[type="color"]': {
        height: token2.controlHeight,
        ["&".concat(componentCls, "-lg")]: {
          height: token2.controlHeightLG
        },
        ["&".concat(componentCls, "-sm")]: {
          height: controlHeightSM,
          paddingTop: colorSmallPadding,
          paddingBottom: colorSmallPadding
        }
      },
      '&[type="search"]::-webkit-search-cancel-button, &[type="search"]::-webkit-search-decoration': {
        "-webkit-appearance": "none"
      }
    })
  };
};
const genAllowClearStyle = (token2) => {
  const {
    componentCls
  } = token2;
  return {
    // ========================= Input =========================
    ["".concat(componentCls, "-clear-icon")]: {
      margin: 0,
      color: token2.colorTextQuaternary,
      fontSize: token2.fontSizeIcon,
      verticalAlign: -1,
      // https://github.com/ant-design/ant-design/pull/18151
      // https://codesandbox.io/s/wizardly-sun-u10br
      cursor: "pointer",
      transition: "color ".concat(token2.motionDurationSlow),
      "&:hover": {
        color: token2.colorTextTertiary
      },
      "&:active": {
        color: token2.colorText
      },
      "&-hidden": {
        visibility: "hidden"
      },
      "&-has-suffix": {
        margin: "0 ".concat(unit$1(token2.inputAffixPadding))
      }
    }
  };
};
const genAffixStyle = (token2) => {
  const {
    componentCls,
    inputAffixPadding,
    colorTextDescription,
    motionDurationSlow,
    colorIcon,
    colorIconHover,
    iconCls
  } = token2;
  const affixCls = "".concat(componentCls, "-affix-wrapper");
  return {
    [affixCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, genBasicInputStyle(token2)), {
      display: "inline-flex",
      ["&:not(".concat(componentCls, "-disabled):hover")]: {
        zIndex: 1,
        ["".concat(componentCls, "-search-with-button &")]: {
          zIndex: 0
        }
      },
      "&-focused, &:focus": {
        zIndex: 1
      },
      ["> input".concat(componentCls)]: {
        padding: 0,
        fontSize: "inherit",
        border: "none",
        borderRadius: 0,
        outline: "none",
        background: "transparent",
        color: "inherit",
        "&::-ms-reveal": {
          display: "none"
        },
        "&:focus": {
          boxShadow: "none !important"
        }
      },
      "&::before": {
        display: "inline-block",
        width: 0,
        visibility: "hidden",
        content: '"\\a0"'
      },
      ["".concat(componentCls)]: {
        "&-prefix, &-suffix": {
          display: "flex",
          flex: "none",
          alignItems: "center",
          "> *:not(:last-child)": {
            marginInlineEnd: token2.paddingXS
          }
        },
        "&-show-count-suffix": {
          color: colorTextDescription
        },
        "&-show-count-has-suffix": {
          marginInlineEnd: token2.paddingXXS
        },
        "&-prefix": {
          marginInlineEnd: inputAffixPadding
        },
        "&-suffix": {
          marginInlineStart: inputAffixPadding
        }
      }
    }), genAllowClearStyle(token2)), {
      // password
      ["".concat(iconCls).concat(componentCls, "-password-icon")]: {
        color: colorIcon,
        cursor: "pointer",
        transition: "all ".concat(motionDurationSlow),
        "&:hover": {
          color: colorIconHover
        }
      }
    })
  };
};
const genGroupStyle = (token2) => {
  const {
    componentCls,
    borderRadiusLG,
    borderRadiusSM
  } = token2;
  return {
    ["".concat(componentCls, "-group")]: Object.assign(Object.assign(Object.assign({}, resetComponent(token2)), genInputGroupStyle(token2)), {
      "&-rtl": {
        direction: "rtl"
      },
      "&-wrapper": Object.assign(Object.assign(Object.assign({
        display: "inline-block",
        width: "100%",
        textAlign: "start",
        verticalAlign: "top",
        "&-rtl": {
          direction: "rtl"
        },
        // Size
        "&-lg": {
          ["".concat(componentCls, "-group-addon")]: {
            borderRadius: borderRadiusLG,
            fontSize: token2.inputFontSizeLG
          }
        },
        "&-sm": {
          ["".concat(componentCls, "-group-addon")]: {
            borderRadius: borderRadiusSM
          }
        }
      }, genOutlinedGroupStyle(token2)), genFilledGroupStyle(token2)), {
        // '&-disabled': {
        //   [`${componentCls}-group-addon`]: {
        //     ...genDisabledStyle(token),
        //   },
        // },
        // Fix the issue of using icons in Space Compact mode
        // https://github.com/ant-design/ant-design/issues/42122
        ["&:not(".concat(componentCls, "-compact-first-item):not(").concat(componentCls, "-compact-last-item)").concat(componentCls, "-compact-item")]: {
          ["".concat(componentCls, ", ").concat(componentCls, "-group-addon")]: {
            borderRadius: 0
          }
        },
        ["&:not(".concat(componentCls, "-compact-last-item)").concat(componentCls, "-compact-first-item")]: {
          ["".concat(componentCls, ", ").concat(componentCls, "-group-addon")]: {
            borderStartEndRadius: 0,
            borderEndEndRadius: 0
          }
        },
        ["&:not(".concat(componentCls, "-compact-first-item)").concat(componentCls, "-compact-last-item")]: {
          ["".concat(componentCls, ", ").concat(componentCls, "-group-addon")]: {
            borderStartStartRadius: 0,
            borderEndStartRadius: 0
          }
        },
        // Fix the issue of input use show-count param in space compact mode
        // https://github.com/ant-design/ant-design/issues/46872
        ["&:not(".concat(componentCls, "-compact-last-item)").concat(componentCls, "-compact-item")]: {
          ["".concat(componentCls, "-affix-wrapper")]: {
            borderStartEndRadius: 0,
            borderEndEndRadius: 0
          }
        }
      })
    })
  };
};
const genSearchInputStyle = (token2) => {
  const {
    componentCls,
    antCls
  } = token2;
  const searchPrefixCls = "".concat(componentCls, "-search");
  return {
    [searchPrefixCls]: {
      ["".concat(componentCls)]: {
        "&:hover, &:focus": {
          borderColor: token2.colorPrimaryHover,
          ["+ ".concat(componentCls, "-group-addon ").concat(searchPrefixCls, "-button:not(").concat(antCls, "-btn-primary)")]: {
            borderInlineStartColor: token2.colorPrimaryHover
          }
        }
      },
      ["".concat(componentCls, "-affix-wrapper")]: {
        borderRadius: 0
      },
      // fix slight height diff in Firefox:
      // https://ant.design/components/auto-complete-cn/#components-auto-complete-demo-certain-category
      ["".concat(componentCls, "-lg")]: {
        lineHeight: token2.calc(token2.lineHeightLG).sub(2e-4).equal({
          unit: false
        })
      },
      ["> ".concat(componentCls, "-group")]: {
        ["> ".concat(componentCls, "-group-addon:last-child")]: {
          insetInlineStart: -1,
          padding: 0,
          border: 0,
          ["".concat(searchPrefixCls, "-button")]: {
            // Fix https://github.com/ant-design/ant-design/issues/47150
            marginInlineEnd: -1,
            paddingTop: 0,
            paddingBottom: 0,
            borderStartStartRadius: 0,
            borderStartEndRadius: token2.borderRadius,
            borderEndEndRadius: token2.borderRadius,
            borderEndStartRadius: 0,
            boxShadow: "none"
          },
          ["".concat(searchPrefixCls, "-button:not(").concat(antCls, "-btn-primary)")]: {
            color: token2.colorTextDescription,
            "&:hover": {
              color: token2.colorPrimaryHover
            },
            "&:active": {
              color: token2.colorPrimaryActive
            },
            ["&".concat(antCls, "-btn-loading::before")]: {
              insetInlineStart: 0,
              insetInlineEnd: 0,
              insetBlockStart: 0,
              insetBlockEnd: 0
            }
          }
        }
      },
      ["".concat(searchPrefixCls, "-button")]: {
        height: token2.controlHeight,
        "&:hover, &:focus": {
          zIndex: 1
        }
      },
      ["&-large ".concat(searchPrefixCls, "-button")]: {
        height: token2.controlHeightLG
      },
      ["&-small ".concat(searchPrefixCls, "-button")]: {
        height: token2.controlHeightSM
      },
      "&-rtl": {
        direction: "rtl"
      },
      // ===================== Compact Item Customized Styles =====================
      ["&".concat(componentCls, "-compact-item")]: {
        ["&:not(".concat(componentCls, "-compact-last-item)")]: {
          ["".concat(componentCls, "-group-addon")]: {
            ["".concat(componentCls, "-search-button")]: {
              marginInlineEnd: token2.calc(token2.lineWidth).mul(-1).equal(),
              borderRadius: 0
            }
          }
        },
        ["&:not(".concat(componentCls, "-compact-first-item)")]: {
          ["".concat(componentCls, ",").concat(componentCls, "-affix-wrapper")]: {
            borderRadius: 0
          }
        },
        ["> ".concat(componentCls, "-group-addon ").concat(componentCls, "-search-button,\n        > ").concat(componentCls, ",\n        ").concat(componentCls, "-affix-wrapper")]: {
          "&:hover,&:focus,&:active": {
            zIndex: 2
          }
        },
        ["> ".concat(componentCls, "-affix-wrapper-focused")]: {
          zIndex: 2
        }
      }
    }
  };
};
const genTextAreaStyle = (token2) => {
  const {
    componentCls,
    paddingLG
  } = token2;
  const textareaPrefixCls = "".concat(componentCls, "-textarea");
  return {
    [textareaPrefixCls]: {
      position: "relative",
      "&-show-count": {
        // https://github.com/ant-design/ant-design/issues/33049
        ["> ".concat(componentCls)]: {
          height: "100%"
        },
        ["".concat(componentCls, "-data-count")]: {
          position: "absolute",
          bottom: token2.calc(token2.fontSize).mul(token2.lineHeight).mul(-1).equal(),
          insetInlineEnd: 0,
          color: token2.colorTextDescription,
          whiteSpace: "nowrap",
          pointerEvents: "none"
        }
      },
      "&-allow-clear": {
        ["> ".concat(componentCls)]: {
          paddingInlineEnd: paddingLG
        }
      },
      ["&-affix-wrapper".concat(textareaPrefixCls, "-has-feedback")]: {
        ["".concat(componentCls)]: {
          paddingInlineEnd: paddingLG
        }
      },
      ["&-affix-wrapper".concat(componentCls, "-affix-wrapper")]: {
        padding: 0,
        ["> textarea".concat(componentCls)]: {
          fontSize: "inherit",
          border: "none",
          outline: "none",
          background: "transparent",
          "&:focus": {
            boxShadow: "none !important"
          }
        },
        ["".concat(componentCls, "-suffix")]: {
          margin: 0,
          "> *:not(:last-child)": {
            marginInline: 0
          },
          // Clear Icon
          ["".concat(componentCls, "-clear-icon")]: {
            position: "absolute",
            insetInlineEnd: token2.paddingXS,
            insetBlockStart: token2.paddingXS
          },
          // Feedback Icon
          ["".concat(textareaPrefixCls, "-suffix")]: {
            position: "absolute",
            top: 0,
            insetInlineEnd: token2.paddingInline,
            bottom: 0,
            zIndex: 1,
            display: "inline-flex",
            alignItems: "center",
            margin: "auto",
            pointerEvents: "none"
          }
        }
      }
    }
  };
};
const genRangeStyle = (token2) => {
  const {
    componentCls
  } = token2;
  return {
    ["".concat(componentCls, "-out-of-range")]: {
      ["&, & input, & textarea, ".concat(componentCls, "-show-count-suffix, ").concat(componentCls, "-data-count")]: {
        color: token2.colorError
      }
    }
  };
};
genStyleHooks("Input", (token2) => {
  const inputToken = merge(token2, initInputToken(token2));
  return [
    genInputStyle(inputToken),
    genTextAreaStyle(inputToken),
    genAffixStyle(inputToken),
    genGroupStyle(inputToken),
    genSearchInputStyle(inputToken),
    genRangeStyle(inputToken),
    // =====================================================
    // ==             Space Compact                       ==
    // =====================================================
    genCompactItemStyle(inputToken)
  ];
}, initComponentToken);
const genSize = (token2, suffix2) => {
  const {
    componentCls,
    controlHeight
  } = token2;
  const suffixCls = suffix2 ? "".concat(componentCls, "-").concat(suffix2) : "";
  const multipleSelectorUnit = getMultipleSelectorUnit(token2);
  return [
    // genSelectionStyle(token, suffix),
    {
      ["".concat(componentCls, "-multiple").concat(suffixCls)]: {
        paddingBlock: multipleSelectorUnit.containerPadding,
        paddingInlineStart: multipleSelectorUnit.basePadding,
        minHeight: controlHeight,
        // ======================== Selections ========================
        ["".concat(componentCls, "-selection-item")]: {
          height: multipleSelectorUnit.itemHeight,
          lineHeight: unit$1(multipleSelectorUnit.itemLineHeight)
        }
      }
    }
  ];
};
const genPickerMultipleStyle = (token2) => {
  const {
    componentCls,
    calc,
    lineWidth
  } = token2;
  const smallToken = merge(token2, {
    fontHeight: token2.fontSize,
    selectHeight: token2.controlHeightSM,
    multipleSelectItemHeight: token2.multipleItemHeightSM,
    borderRadius: token2.borderRadiusSM,
    borderRadiusSM: token2.borderRadiusXS,
    controlHeight: token2.controlHeightSM
  });
  const largeToken = merge(token2, {
    fontHeight: calc(token2.multipleItemHeightLG).sub(calc(lineWidth).mul(2).equal()).equal(),
    fontSize: token2.fontSizeLG,
    selectHeight: token2.controlHeightLG,
    multipleSelectItemHeight: token2.multipleItemHeightLG,
    borderRadius: token2.borderRadiusLG,
    borderRadiusSM: token2.borderRadius,
    controlHeight: token2.controlHeightLG
  });
  return [
    // ======================== Size ========================
    genSize(smallToken, "small"),
    genSize(token2),
    genSize(largeToken, "large"),
    // ====================== Selection ======================
    {
      ["".concat(componentCls).concat(componentCls, "-multiple")]: Object.assign(Object.assign({
        width: "100%",
        // ==================== Selector =====================
        ["".concat(componentCls, "-selector")]: {
          flex: "auto",
          padding: 0,
          "&:after": {
            margin: 0
          }
        }
      }, genOverflowStyle(token2)), {
        // ====================== Input ======================
        // Input is `readonly`, which is used for a11y only
        ["".concat(componentCls, "-multiple-input")]: {
          width: 0,
          height: 0,
          border: 0,
          visibility: "hidden",
          position: "absolute",
          zIndex: -1
        }
      })
    }
  ];
};
const genPickerCellInnerStyle = (token2) => {
  const {
    pickerCellCls,
    pickerCellInnerCls,
    cellHeight,
    borderRadiusSM,
    motionDurationMid,
    cellHoverBg,
    lineWidth,
    lineType,
    colorPrimary,
    cellActiveWithRangeBg,
    colorTextLightSolid,
    colorTextDisabled,
    cellBgDisabled,
    colorFillSecondary
  } = token2;
  return {
    "&::before": {
      position: "absolute",
      top: "50%",
      insetInlineStart: 0,
      insetInlineEnd: 0,
      zIndex: 1,
      height: cellHeight,
      transform: "translateY(-50%)",
      content: '""'
    },
    // >>> Default
    [pickerCellInnerCls]: {
      position: "relative",
      zIndex: 2,
      display: "inline-block",
      minWidth: cellHeight,
      height: cellHeight,
      lineHeight: unit$1(cellHeight),
      borderRadius: borderRadiusSM,
      transition: "background ".concat(motionDurationMid)
    },
    // >>> Hover
    ["&:hover:not(".concat(pickerCellCls, "-in-view),\n    &:hover:not(").concat(pickerCellCls, "-selected):not(").concat(pickerCellCls, "-range-start):not(").concat(pickerCellCls, "-range-end)")]: {
      [pickerCellInnerCls]: {
        background: cellHoverBg
      }
    },
    // >>> Today
    ["&-in-view".concat(pickerCellCls, "-today ").concat(pickerCellInnerCls)]: {
      "&::before": {
        position: "absolute",
        top: 0,
        insetInlineEnd: 0,
        bottom: 0,
        insetInlineStart: 0,
        zIndex: 1,
        border: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorPrimary),
        borderRadius: borderRadiusSM,
        content: '""'
      }
    },
    // >>> In Range
    ["&-in-view".concat(pickerCellCls, "-in-range,\n      &-in-view").concat(pickerCellCls, "-range-start,\n      &-in-view").concat(pickerCellCls, "-range-end")]: {
      position: "relative",
      ["&:not(".concat(pickerCellCls, "-disabled):before")]: {
        background: cellActiveWithRangeBg
      }
    },
    // >>> Selected
    ["&-in-view".concat(pickerCellCls, "-selected,\n      &-in-view").concat(pickerCellCls, "-range-start,\n      &-in-view").concat(pickerCellCls, "-range-end")]: {
      ["&:not(".concat(pickerCellCls, "-disabled) ").concat(pickerCellInnerCls)]: {
        color: colorTextLightSolid,
        background: colorPrimary
      },
      ["&".concat(pickerCellCls, "-disabled ").concat(pickerCellInnerCls)]: {
        background: colorFillSecondary
      }
    },
    ["&-in-view".concat(pickerCellCls, "-range-start:not(").concat(pickerCellCls, "-disabled):before")]: {
      insetInlineStart: "50%"
    },
    ["&-in-view".concat(pickerCellCls, "-range-end:not(").concat(pickerCellCls, "-disabled):before")]: {
      insetInlineEnd: "50%"
    },
    // range start border-radius
    ["&-in-view".concat(pickerCellCls, "-range-start:not(").concat(pickerCellCls, "-range-end) ").concat(pickerCellInnerCls)]: {
      borderStartStartRadius: borderRadiusSM,
      borderEndStartRadius: borderRadiusSM,
      borderStartEndRadius: 0,
      borderEndEndRadius: 0
    },
    // range end border-radius
    ["&-in-view".concat(pickerCellCls, "-range-end:not(").concat(pickerCellCls, "-range-start) ").concat(pickerCellInnerCls)]: {
      borderStartStartRadius: 0,
      borderEndStartRadius: 0,
      borderStartEndRadius: borderRadiusSM,
      borderEndEndRadius: borderRadiusSM
    },
    // >>> Disabled
    "&-disabled": {
      color: colorTextDisabled,
      pointerEvents: "none",
      [pickerCellInnerCls]: {
        background: "transparent"
      },
      "&::before": {
        background: cellBgDisabled
      }
    },
    ["&-disabled".concat(pickerCellCls, "-today ").concat(pickerCellInnerCls, "::before")]: {
      borderColor: colorTextDisabled
    }
  };
};
const genPanelStyle = (token2) => {
  const {
    componentCls,
    pickerCellCls,
    pickerCellInnerCls,
    pickerYearMonthCellWidth,
    pickerControlIconSize,
    cellWidth,
    paddingSM,
    paddingXS,
    paddingXXS,
    colorBgContainer,
    lineWidth,
    lineType,
    borderRadiusLG,
    colorPrimary,
    colorTextHeading,
    colorSplit,
    pickerControlIconBorderWidth,
    colorIcon,
    textHeight,
    motionDurationMid,
    colorIconHover,
    fontWeightStrong,
    cellHeight,
    pickerCellPaddingVertical,
    colorTextDisabled,
    colorText,
    fontSize,
    motionDurationSlow,
    withoutTimeCellHeight,
    pickerQuarterPanelContentHeight,
    borderRadiusSM,
    colorTextLightSolid,
    cellHoverBg,
    timeColumnHeight,
    timeColumnWidth,
    timeCellHeight,
    controlItemBgActive,
    marginXXS,
    pickerDatePanelPaddingHorizontal,
    pickerControlIconMargin
  } = token2;
  const pickerPanelWidth = token2.calc(cellWidth).mul(7).add(token2.calc(pickerDatePanelPaddingHorizontal).mul(2)).equal();
  return {
    [componentCls]: {
      "&-panel": {
        display: "inline-flex",
        flexDirection: "column",
        textAlign: "center",
        background: colorBgContainer,
        borderRadius: borderRadiusLG,
        outline: "none",
        "&-focused": {
          borderColor: colorPrimary
        },
        "&-rtl": {
          direction: "rtl",
          ["".concat(componentCls, "-prev-icon,\n              ").concat(componentCls, "-super-prev-icon")]: {
            transform: "rotate(45deg)"
          },
          ["".concat(componentCls, "-next-icon,\n              ").concat(componentCls, "-super-next-icon")]: {
            transform: "rotate(-135deg)"
          }
        }
      },
      // ========================================================
      // =                     Shared Panel                     =
      // ========================================================
      ["&-decade-panel,\n        &-year-panel,\n        &-quarter-panel,\n        &-month-panel,\n        &-week-panel,\n        &-date-panel,\n        &-time-panel"]: {
        display: "flex",
        flexDirection: "column",
        width: pickerPanelWidth
      },
      // ======================= Header =======================
      "&-header": {
        display: "flex",
        padding: "0 ".concat(unit$1(paddingXS)),
        color: colorTextHeading,
        borderBottom: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit),
        "> *": {
          flex: "none"
        },
        button: {
          padding: 0,
          color: colorIcon,
          lineHeight: unit$1(textHeight),
          background: "transparent",
          border: 0,
          cursor: "pointer",
          transition: "color ".concat(motionDurationMid),
          fontSize: "inherit"
        },
        "> button": {
          minWidth: "1.6em",
          fontSize,
          "&:hover": {
            color: colorIconHover
          },
          "&:disabled": {
            opacity: 0.25,
            pointerEvents: "none"
          }
        },
        "&-view": {
          flex: "auto",
          fontWeight: fontWeightStrong,
          lineHeight: unit$1(textHeight),
          button: {
            color: "inherit",
            fontWeight: "inherit",
            verticalAlign: "top",
            "&:not(:first-child)": {
              marginInlineStart: paddingXS
            },
            "&:hover": {
              color: colorPrimary
            }
          }
        }
      },
      // Arrow button
      ["&-prev-icon,\n        &-next-icon,\n        &-super-prev-icon,\n        &-super-next-icon"]: {
        position: "relative",
        display: "inline-block",
        width: pickerControlIconSize,
        height: pickerControlIconSize,
        "&::before": {
          position: "absolute",
          top: 0,
          insetInlineStart: 0,
          display: "inline-block",
          width: pickerControlIconSize,
          height: pickerControlIconSize,
          border: "0 solid currentcolor",
          borderBlockStartWidth: pickerControlIconBorderWidth,
          borderBlockEndWidth: 0,
          borderInlineStartWidth: pickerControlIconBorderWidth,
          borderInlineEndWidth: 0,
          content: '""'
        }
      },
      ["&-super-prev-icon,\n        &-super-next-icon"]: {
        "&::after": {
          position: "absolute",
          top: pickerControlIconMargin,
          insetInlineStart: pickerControlIconMargin,
          display: "inline-block",
          width: pickerControlIconSize,
          height: pickerControlIconSize,
          border: "0 solid currentcolor",
          borderBlockStartWidth: pickerControlIconBorderWidth,
          borderBlockEndWidth: 0,
          borderInlineStartWidth: pickerControlIconBorderWidth,
          borderInlineEndWidth: 0,
          content: '""'
        }
      },
      ["&-prev-icon,\n        &-super-prev-icon"]: {
        transform: "rotate(-45deg)"
      },
      ["&-next-icon,\n        &-super-next-icon"]: {
        transform: "rotate(135deg)"
      },
      // ======================== Body ========================
      "&-content": {
        width: "100%",
        tableLayout: "fixed",
        borderCollapse: "collapse",
        "th, td": {
          position: "relative",
          minWidth: cellHeight,
          fontWeight: "normal"
        },
        th: {
          height: token2.calc(cellHeight).add(token2.calc(pickerCellPaddingVertical).mul(2)).equal(),
          color: colorText,
          verticalAlign: "middle"
        }
      },
      "&-cell": Object.assign({
        padding: "".concat(unit$1(pickerCellPaddingVertical), " 0"),
        color: colorTextDisabled,
        cursor: "pointer",
        // In view
        "&-in-view": {
          color: colorText
        }
      }, genPickerCellInnerStyle(token2)),
      ["&-decade-panel,\n        &-year-panel,\n        &-quarter-panel,\n        &-month-panel"]: {
        ["".concat(componentCls, "-content")]: {
          height: token2.calc(withoutTimeCellHeight).mul(4).equal()
        },
        [pickerCellInnerCls]: {
          padding: "0 ".concat(unit$1(paddingXS))
        }
      },
      "&-quarter-panel": {
        ["".concat(componentCls, "-content")]: {
          height: pickerQuarterPanelContentHeight
        }
      },
      // ========================================================
      // =                       Special                        =
      // ========================================================
      // ===================== Decade Panel =====================
      "&-decade-panel": {
        [pickerCellInnerCls]: {
          padding: "0 ".concat(unit$1(token2.calc(paddingXS).div(2).equal()))
        },
        ["".concat(componentCls, "-cell::before")]: {
          display: "none"
        }
      },
      // ============= Year & Quarter & Month Panel =============
      ["&-year-panel,\n        &-quarter-panel,\n        &-month-panel"]: {
        ["".concat(componentCls, "-body")]: {
          padding: "0 ".concat(unit$1(paddingXS))
        },
        [pickerCellInnerCls]: {
          width: pickerYearMonthCellWidth
        }
      },
      // ====================== Date Panel ======================
      "&-date-panel": {
        ["".concat(componentCls, "-body")]: {
          padding: "".concat(unit$1(paddingXS), " ").concat(unit$1(pickerDatePanelPaddingHorizontal))
        },
        ["".concat(componentCls, "-content th")]: {
          boxSizing: "border-box",
          padding: 0
        }
      },
      // ====================== Week Panel ======================
      "&-week-panel": {
        // Clear cell style
        ["".concat(componentCls, "-cell")]: {
          ["&:hover ".concat(pickerCellInnerCls, ",\n            &-selected ").concat(pickerCellInnerCls, ",\n            ").concat(pickerCellInnerCls)]: {
            background: "transparent !important"
          }
        },
        "&-row": {
          td: {
            "&:before": {
              transition: "background ".concat(motionDurationMid)
            },
            "&:first-child:before": {
              borderStartStartRadius: borderRadiusSM,
              borderEndStartRadius: borderRadiusSM
            },
            "&:last-child:before": {
              borderStartEndRadius: borderRadiusSM,
              borderEndEndRadius: borderRadiusSM
            }
          },
          ["&:hover td"]: {
            "&:before": {
              background: cellHoverBg
            }
          },
          ["&-range-start td,\n            &-range-end td,\n            &-selected td"]: {
            // Rise priority to override hover style
            ["&".concat(pickerCellCls)]: {
              "&:before": {
                background: colorPrimary
              },
              ["&".concat(componentCls, "-cell-week")]: {
                color: new TinyColor(colorTextLightSolid).setAlpha(0.5).toHexString()
              },
              [pickerCellInnerCls]: {
                color: colorTextLightSolid
              }
            }
          },
          ["&-range-hover td:before"]: {
            background: controlItemBgActive
          }
        }
      },
      // >>> ShowWeek
      ["&-week-panel, &-date-panel-show-week"]: {
        ["".concat(componentCls, "-body")]: {
          padding: "".concat(unit$1(paddingXS), " ").concat(unit$1(paddingSM))
        },
        ["".concat(componentCls, "-content th")]: {
          width: "auto"
        }
      },
      // ==================== Datetime Panel ====================
      "&-datetime-panel": {
        display: "flex",
        ["".concat(componentCls, "-time-panel")]: {
          borderInlineStart: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit)
        },
        ["".concat(componentCls, "-date-panel,\n          ").concat(componentCls, "-time-panel")]: {
          transition: "opacity ".concat(motionDurationSlow)
        },
        // Keyboard
        "&-active": {
          ["".concat(componentCls, "-date-panel,\n            ").concat(componentCls, "-time-panel")]: {
            opacity: 0.3,
            "&-active": {
              opacity: 1
            }
          }
        }
      },
      // ====================== Time Panel ======================
      "&-time-panel": {
        width: "auto",
        minWidth: "auto",
        direction: "ltr",
        ["".concat(componentCls, "-content")]: {
          display: "flex",
          flex: "auto",
          height: timeColumnHeight
        },
        "&-column": {
          flex: "1 0 auto",
          width: timeColumnWidth,
          margin: "".concat(unit$1(paddingXXS), " 0"),
          padding: 0,
          overflowY: "hidden",
          textAlign: "start",
          listStyle: "none",
          transition: "background ".concat(motionDurationMid),
          overflowX: "hidden",
          "&::-webkit-scrollbar": {
            width: 8,
            backgroundColor: "transparent"
          },
          "&::-webkit-scrollbar-thumb": {
            backgroundColor: token2.colorTextTertiary,
            borderRadius: 4
          },
          // For Firefox
          "&": {
            scrollbarWidth: "thin",
            scrollbarColor: "".concat(token2.colorTextTertiary, " transparent")
          },
          "&::after": {
            display: "block",
            height: token2.calc("100%").sub(timeCellHeight).equal(),
            content: '""'
          },
          "&:not(:first-child)": {
            borderInlineStart: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit)
          },
          "&-active": {
            background: new TinyColor(controlItemBgActive).setAlpha(0.2).toHexString()
          },
          "&:hover": {
            overflowY: "auto"
          },
          "> li": {
            margin: 0,
            padding: 0,
            ["&".concat(componentCls, "-time-panel-cell")]: {
              marginInline: marginXXS,
              ["".concat(componentCls, "-time-panel-cell-inner")]: {
                display: "block",
                width: token2.calc(timeColumnWidth).sub(token2.calc(marginXXS).mul(2)).equal(),
                height: timeCellHeight,
                margin: 0,
                paddingBlock: 0,
                paddingInlineEnd: 0,
                paddingInlineStart: token2.calc(timeColumnWidth).sub(timeCellHeight).div(2).equal(),
                color: colorText,
                lineHeight: unit$1(timeCellHeight),
                borderRadius: borderRadiusSM,
                cursor: "pointer",
                transition: "background ".concat(motionDurationMid),
                "&:hover": {
                  background: cellHoverBg
                }
              },
              "&-selected": {
                ["".concat(componentCls, "-time-panel-cell-inner")]: {
                  background: controlItemBgActive
                }
              },
              "&-disabled": {
                ["".concat(componentCls, "-time-panel-cell-inner")]: {
                  color: colorTextDisabled,
                  background: "transparent",
                  cursor: "not-allowed"
                }
              }
            }
          }
        }
      }
    }
  };
};
const genPickerPanelStyle = (token2) => {
  const {
    componentCls,
    textHeight,
    lineWidth,
    paddingSM,
    antCls,
    colorPrimary,
    cellActiveWithRangeBg,
    colorPrimaryBorder,
    lineType,
    colorSplit
  } = token2;
  return {
    ["".concat(componentCls, "-dropdown")]: {
      // ======================== Footer ========================
      ["".concat(componentCls, "-footer")]: {
        borderTop: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit),
        "&-extra": {
          padding: "0 ".concat(unit$1(paddingSM)),
          lineHeight: unit$1(token2.calc(textHeight).sub(token2.calc(lineWidth).mul(2)).equal()),
          textAlign: "start",
          "&:not(:last-child)": {
            borderBottom: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit)
          }
        }
      },
      // ==================== Footer > Ranges ===================
      ["".concat(componentCls, "-panels + ").concat(componentCls, "-footer ").concat(componentCls, "-ranges")]: {
        justifyContent: "space-between"
      },
      ["".concat(componentCls, "-ranges")]: {
        marginBlock: 0,
        paddingInline: unit$1(paddingSM),
        overflow: "hidden",
        textAlign: "start",
        listStyle: "none",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        "> li": {
          lineHeight: unit$1(token2.calc(textHeight).sub(token2.calc(lineWidth).mul(2)).equal()),
          display: "inline-block"
        },
        ["".concat(componentCls, "-now-btn-disabled")]: {
          pointerEvents: "none",
          color: token2.colorTextDisabled
        },
        // https://github.com/ant-design/ant-design/issues/23687
        ["".concat(componentCls, "-preset > ").concat(antCls, "-tag-blue")]: {
          color: colorPrimary,
          background: cellActiveWithRangeBg,
          borderColor: colorPrimaryBorder,
          cursor: "pointer"
        },
        ["".concat(componentCls, "-ok")]: {
          paddingBlock: token2.calc(lineWidth).mul(2).equal(),
          marginInlineStart: "auto"
        }
      }
    }
  };
};
const initPickerPanelToken = (token2) => {
  const {
    componentCls,
    controlHeightLG,
    paddingXXS,
    padding
  } = token2;
  return {
    pickerCellCls: "".concat(componentCls, "-cell"),
    pickerCellInnerCls: "".concat(componentCls, "-cell-inner"),
    pickerYearMonthCellWidth: token2.calc(controlHeightLG).mul(1.5).equal(),
    pickerQuarterPanelContentHeight: token2.calc(controlHeightLG).mul(1.4).equal(),
    pickerCellPaddingVertical: token2.calc(paddingXXS).add(token2.calc(paddingXXS).div(2)).equal(),
    pickerCellBorderGap: 2,
    // Magic for gap between cells
    pickerControlIconSize: 7,
    pickerControlIconMargin: 4,
    pickerControlIconBorderWidth: 1.5,
    pickerDatePanelPaddingHorizontal: token2.calc(padding).add(token2.calc(paddingXXS).div(2)).equal()
    // 18 in normal
  };
};
const initPanelComponentToken = (token2) => {
  const {
    colorBgContainerDisabled,
    controlHeight,
    controlHeightSM,
    controlHeightLG,
    paddingXXS
  } = token2;
  return {
    cellHoverBg: token2.controlItemBgHover,
    cellActiveWithRangeBg: token2.controlItemBgActive,
    cellHoverWithRangeBg: new TinyColor(token2.colorPrimary).lighten(35).toHexString(),
    cellRangeBorderColor: new TinyColor(token2.colorPrimary).lighten(20).toHexString(),
    cellBgDisabled: colorBgContainerDisabled,
    timeColumnWidth: controlHeightLG * 1.4,
    timeColumnHeight: 28 * 8,
    timeCellHeight: 28,
    cellWidth: controlHeightSM * 1.5,
    cellHeight: controlHeightSM,
    textHeight: controlHeightLG,
    withoutTimeCellHeight: controlHeightLG * 1.65,
    multipleItemBg: token2.colorFillSecondary,
    multipleItemBorderColor: "transparent",
    multipleItemHeight: controlHeight - paddingXXS * 2,
    multipleItemHeightSM: controlHeightSM - paddingXXS * 2,
    multipleItemHeightLG: controlHeightLG - paddingXXS * 2,
    multipleSelectorBgDisabled: colorBgContainerDisabled,
    multipleItemColorDisabled: token2.colorTextDisabled,
    multipleItemBorderColorDisabled: "transparent"
  };
};
const prepareComponentToken = (token2) => Object.assign(Object.assign(Object.assign(Object.assign({}, initComponentToken(token2)), initPanelComponentToken(token2)), getArrowToken(token2)), {
  presetsWidth: 120,
  presetsMaxWidth: 200,
  zIndexPopup: token2.zIndexPopupBase + 50
});
const genVariantsStyle = (token2) => {
  const {
    componentCls
  } = token2;
  return {
    [componentCls]: [
      Object.assign(Object.assign(Object.assign({}, genOutlinedStyle(token2)), genFilledStyle(token2)), genBorderlessStyle(token2)),
      // ========================= Multiple =========================
      {
        "&-outlined": {
          ["&".concat(componentCls, "-multiple ").concat(componentCls, "-selection-item")]: {
            background: token2.multipleItemBg,
            border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.multipleItemBorderColor)
          }
        },
        "&-filled": {
          ["&".concat(componentCls, "-multiple ").concat(componentCls, "-selection-item")]: {
            background: token2.colorBgContainer,
            border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.colorSplit)
          }
        },
        "&-borderless": {
          ["&".concat(componentCls, "-multiple ").concat(componentCls, "-selection-item")]: {
            background: token2.multipleItemBg,
            border: "".concat(unit$1(token2.lineWidth), " ").concat(token2.lineType, " ").concat(token2.multipleItemBorderColor)
          }
        }
      }
    ]
  };
};
const genPickerPadding = (token2, inputHeight, fontHeight, paddingHorizontal) => {
  const height = token2.calc(fontHeight).add(2).equal();
  const paddingTop = token2.max(token2.calc(inputHeight).sub(height).div(2).equal(), 0);
  const paddingBottom = token2.max(token2.calc(inputHeight).sub(height).sub(paddingTop).equal(), 0);
  return {
    padding: "".concat(unit$1(paddingTop), " ").concat(unit$1(paddingHorizontal), " ").concat(unit$1(paddingBottom))
  };
};
const genPickerStatusStyle = (token2) => {
  const {
    componentCls,
    colorError,
    colorWarning
  } = token2;
  return {
    ["".concat(componentCls, ":not(").concat(componentCls, "-disabled):not([disabled])")]: {
      ["&".concat(componentCls, "-status-error")]: {
        ["".concat(componentCls, "-active-bar")]: {
          background: colorError
        }
      },
      ["&".concat(componentCls, "-status-warning")]: {
        ["".concat(componentCls, "-active-bar")]: {
          background: colorWarning
        }
      }
    }
  };
};
const genPickerStyle = (token2) => {
  const {
    componentCls,
    antCls,
    controlHeight,
    paddingInline,
    lineWidth,
    lineType,
    colorBorder,
    borderRadius,
    motionDurationMid,
    colorTextDisabled,
    colorTextPlaceholder,
    controlHeightLG,
    fontSizeLG,
    controlHeightSM,
    paddingInlineSM,
    paddingXS,
    marginXS,
    colorTextDescription,
    lineWidthBold,
    colorPrimary,
    motionDurationSlow,
    zIndexPopup,
    paddingXXS,
    sizePopupArrow,
    colorBgElevated,
    borderRadiusLG,
    boxShadowSecondary,
    borderRadiusSM,
    colorSplit,
    cellHoverBg,
    presetsWidth,
    presetsMaxWidth,
    boxShadowPopoverArrow,
    fontHeight,
    fontHeightLG,
    lineHeightLG
  } = token2;
  return [
    {
      [componentCls]: Object.assign(Object.assign(Object.assign({}, resetComponent(token2)), genPickerPadding(token2, controlHeight, fontHeight, paddingInline)), {
        position: "relative",
        display: "inline-flex",
        alignItems: "center",
        lineHeight: 1,
        borderRadius,
        transition: "border ".concat(motionDurationMid, ", box-shadow ").concat(motionDurationMid, ", background ").concat(motionDurationMid),
        // ======================== Input =========================
        ["".concat(componentCls, "-input")]: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          width: "100%",
          "> input": Object.assign(Object.assign({
            position: "relative",
            display: "inline-block",
            width: "100%",
            color: "inherit",
            fontSize: token2.fontSize,
            lineHeight: token2.lineHeight,
            transition: "all ".concat(motionDurationMid)
          }, genPlaceholderStyle(colorTextPlaceholder)), {
            flex: "auto",
            // Fix Firefox flex not correct:
            // https://github.com/ant-design/ant-design/pull/20023#issuecomment-564389553
            minWidth: 1,
            height: "auto",
            padding: 0,
            background: "transparent",
            border: 0,
            fontFamily: "inherit",
            "&:focus": {
              boxShadow: "none",
              outline: 0
            },
            "&[disabled]": {
              background: "transparent",
              color: colorTextDisabled,
              cursor: "not-allowed"
            }
          }),
          "&-placeholder": {
            "> input": {
              color: colorTextPlaceholder
            }
          }
        },
        // Size
        "&-large": Object.assign(Object.assign({}, genPickerPadding(token2, controlHeightLG, fontHeightLG, paddingInline)), {
          ["".concat(componentCls, "-input > input")]: {
            fontSize: fontSizeLG,
            lineHeight: lineHeightLG
          }
        }),
        "&-small": Object.assign({}, genPickerPadding(token2, controlHeightSM, fontHeight, paddingInlineSM)),
        ["".concat(componentCls, "-suffix")]: {
          display: "flex",
          flex: "none",
          alignSelf: "center",
          marginInlineStart: token2.calc(paddingXS).div(2).equal(),
          color: colorTextDisabled,
          lineHeight: 1,
          pointerEvents: "none",
          transition: "opacity ".concat(motionDurationMid, ", color ").concat(motionDurationMid),
          "> *": {
            verticalAlign: "top",
            "&:not(:last-child)": {
              marginInlineEnd: marginXS
            }
          }
        },
        ["".concat(componentCls, "-clear")]: {
          position: "absolute",
          top: "50%",
          insetInlineEnd: 0,
          color: colorTextDisabled,
          lineHeight: 1,
          transform: "translateY(-50%)",
          cursor: "pointer",
          opacity: 0,
          transition: "opacity ".concat(motionDurationMid, ", color ").concat(motionDurationMid),
          "> *": {
            verticalAlign: "top"
          },
          "&:hover": {
            color: colorTextDescription
          }
        },
        "&:hover": {
          ["".concat(componentCls, "-clear")]: {
            opacity: 1
          },
          // Should use the following selector, but since `:has` has poor compatibility,
          // we use `:not(:last-child)` instead, which may cause some problems in some cases.
          // [`${componentCls}-suffix:has(+ ${componentCls}-clear)`]: {
          ["".concat(componentCls, "-suffix:not(:last-child)")]: {
            opacity: 0
          }
        },
        ["".concat(componentCls, "-separator")]: {
          position: "relative",
          display: "inline-block",
          width: "1em",
          height: fontSizeLG,
          color: colorTextDisabled,
          fontSize: fontSizeLG,
          verticalAlign: "top",
          cursor: "default",
          ["".concat(componentCls, "-focused &")]: {
            color: colorTextDescription
          },
          ["".concat(componentCls, "-range-separator &")]: {
            ["".concat(componentCls, "-disabled &")]: {
              cursor: "not-allowed"
            }
          }
        },
        // ======================== Range =========================
        "&-range": {
          position: "relative",
          display: "inline-flex",
          // Active bar
          ["".concat(componentCls, "-active-bar")]: {
            bottom: token2.calc(lineWidth).mul(-1).equal(),
            height: lineWidthBold,
            background: colorPrimary,
            opacity: 0,
            transition: "all ".concat(motionDurationSlow, " ease-out"),
            pointerEvents: "none"
          },
          ["&".concat(componentCls, "-focused")]: {
            ["".concat(componentCls, "-active-bar")]: {
              opacity: 1
            }
          },
          ["".concat(componentCls, "-range-separator")]: {
            alignItems: "center",
            padding: "0 ".concat(unit$1(paddingXS)),
            lineHeight: 1
          }
        },
        // ======================== Clear =========================
        "&-range, &-multiple": {
          // Clear
          ["".concat(componentCls, "-clear")]: {
            insetInlineEnd: paddingInline
          },
          ["&".concat(componentCls, "-small")]: {
            ["".concat(componentCls, "-clear")]: {
              insetInlineEnd: paddingInlineSM
            }
          }
        },
        // ======================= Dropdown =======================
        "&-dropdown": Object.assign(Object.assign(Object.assign({}, resetComponent(token2)), genPanelStyle(token2)), {
          pointerEvents: "none",
          position: "absolute",
          // Fix incorrect position of picker popup
          // https://github.com/ant-design/ant-design/issues/35590
          top: -9999,
          left: {
            _skip_check_: true,
            value: -9999
          },
          zIndex: zIndexPopup,
          ["&".concat(componentCls, "-dropdown-hidden")]: {
            display: "none"
          },
          ["&".concat(componentCls, "-dropdown-placement-bottomLeft")]: {
            ["".concat(componentCls, "-range-arrow")]: {
              top: 0,
              display: "block",
              transform: "translateY(-100%)"
            }
          },
          ["&".concat(componentCls, "-dropdown-placement-topLeft")]: {
            ["".concat(componentCls, "-range-arrow")]: {
              bottom: 0,
              display: "block",
              transform: "translateY(100%) rotate(180deg)"
            }
          },
          ["&".concat(antCls, "-slide-up-enter").concat(antCls, "-slide-up-enter-active").concat(componentCls, "-dropdown-placement-topLeft,\n          &").concat(antCls, "-slide-up-enter").concat(antCls, "-slide-up-enter-active").concat(componentCls, "-dropdown-placement-topRight,\n          &").concat(antCls, "-slide-up-appear").concat(antCls, "-slide-up-appear-active").concat(componentCls, "-dropdown-placement-topLeft,\n          &").concat(antCls, "-slide-up-appear").concat(antCls, "-slide-up-appear-active").concat(componentCls, "-dropdown-placement-topRight")]: {
            animationName: slideDownIn
          },
          ["&".concat(antCls, "-slide-up-enter").concat(antCls, "-slide-up-enter-active").concat(componentCls, "-dropdown-placement-bottomLeft,\n          &").concat(antCls, "-slide-up-enter").concat(antCls, "-slide-up-enter-active").concat(componentCls, "-dropdown-placement-bottomRight,\n          &").concat(antCls, "-slide-up-appear").concat(antCls, "-slide-up-appear-active").concat(componentCls, "-dropdown-placement-bottomLeft,\n          &").concat(antCls, "-slide-up-appear").concat(antCls, "-slide-up-appear-active").concat(componentCls, "-dropdown-placement-bottomRight")]: {
            animationName: slideUpIn
          },
          ["&".concat(antCls, "-slide-up-leave").concat(antCls, "-slide-up-leave-active").concat(componentCls, "-dropdown-placement-topLeft,\n          &").concat(antCls, "-slide-up-leave").concat(antCls, "-slide-up-leave-active").concat(componentCls, "-dropdown-placement-topRight")]: {
            animationName: slideDownOut
          },
          ["&".concat(antCls, "-slide-up-leave").concat(antCls, "-slide-up-leave-active").concat(componentCls, "-dropdown-placement-bottomLeft,\n          &").concat(antCls, "-slide-up-leave").concat(antCls, "-slide-up-leave-active").concat(componentCls, "-dropdown-placement-bottomRight")]: {
            animationName: slideUpOut
          },
          // Time picker with additional style
          ["".concat(componentCls, "-panel > ").concat(componentCls, "-time-panel")]: {
            paddingTop: paddingXXS
          },
          // ======================== Ranges ========================
          ["".concat(componentCls, "-range-wrapper")]: {
            display: "flex",
            position: "relative"
          },
          ["".concat(componentCls, "-range-arrow")]: Object.assign(Object.assign({
            position: "absolute",
            zIndex: 1,
            display: "none",
            paddingInline: token2.calc(paddingInline).mul(1.5).equal(),
            boxSizing: "content-box",
            transition: "left ".concat(motionDurationSlow, " ease-out")
          }, genRoundedArrow(token2, colorBgElevated, boxShadowPopoverArrow)), {
            "&:before": {
              insetInlineStart: token2.calc(paddingInline).mul(1.5).equal()
            }
          }),
          ["".concat(componentCls, "-panel-container")]: {
            overflow: "hidden",
            verticalAlign: "top",
            background: colorBgElevated,
            borderRadius: borderRadiusLG,
            boxShadow: boxShadowSecondary,
            transition: "margin ".concat(motionDurationSlow),
            display: "inline-block",
            pointerEvents: "auto",
            // ======================== Layout ========================
            ["".concat(componentCls, "-panel-layout")]: {
              display: "flex",
              flexWrap: "nowrap",
              alignItems: "stretch"
            },
            // ======================== Preset ========================
            ["".concat(componentCls, "-presets")]: {
              display: "flex",
              flexDirection: "column",
              minWidth: presetsWidth,
              maxWidth: presetsMaxWidth,
              ul: {
                height: 0,
                flex: "auto",
                listStyle: "none",
                overflow: "auto",
                margin: 0,
                padding: paddingXS,
                borderInlineEnd: "".concat(unit$1(lineWidth), " ").concat(lineType, " ").concat(colorSplit),
                li: Object.assign(Object.assign({}, textEllipsis), {
                  borderRadius: borderRadiusSM,
                  paddingInline: paddingXS,
                  paddingBlock: token2.calc(controlHeightSM).sub(fontHeight).div(2).equal(),
                  cursor: "pointer",
                  transition: "all ".concat(motionDurationSlow),
                  "+ li": {
                    marginTop: marginXS
                  },
                  "&:hover": {
                    background: cellHoverBg
                  }
                })
              }
            },
            // ======================== Panels ========================
            ["".concat(componentCls, "-panels")]: {
              display: "inline-flex",
              flexWrap: "nowrap",
              direction: "ltr",
              // [`${componentCls}-panel`]: {
              //   borderWidth: `0 0 ${unit(lineWidth)}`,
              // },
              "&:last-child": {
                ["".concat(componentCls, "-panel")]: {
                  borderWidth: 0
                }
              }
            },
            ["".concat(componentCls, "-panel")]: {
              verticalAlign: "top",
              background: "transparent",
              borderRadius: 0,
              borderWidth: 0,
              ["".concat(componentCls, "-content,\n            table")]: {
                textAlign: "center"
              },
              "&-focused": {
                borderColor: colorBorder
              }
            }
          }
        }),
        "&-dropdown-range": {
          padding: "".concat(unit$1(token2.calc(sizePopupArrow).mul(2).div(3).equal()), " 0"),
          "&-hidden": {
            display: "none"
          }
        },
        "&-rtl": {
          direction: "rtl",
          ["".concat(componentCls, "-separator")]: {
            transform: "rotate(180deg)"
          },
          ["".concat(componentCls, "-footer")]: {
            "&-extra": {
              direction: "rtl"
            }
          }
        }
      })
    },
    // Follow code may reuse in other components
    initSlideMotion(token2, "slide-up"),
    initSlideMotion(token2, "slide-down"),
    initMoveMotion(token2, "move-up"),
    initMoveMotion(token2, "move-down")
  ];
};
const useStyle = genStyleHooks("DatePicker", (token2) => {
  const pickerToken = merge(initInputToken(token2), initPickerPanelToken(token2), {
    inputPaddingHorizontalBase: token2.calc(token2.paddingSM).sub(1).equal(),
    multipleSelectItemHeight: token2.multipleItemHeight,
    selectHeight: token2.controlHeight
  });
  return [
    genPickerPanelStyle(pickerToken),
    genPickerStyle(pickerToken),
    genVariantsStyle(pickerToken),
    genPickerStatusStyle(pickerToken),
    genPickerMultipleStyle(pickerToken),
    // =====================================================
    // ==             Space Compact                       ==
    // =====================================================
    genCompactItemStyle(token2, {
      focusElCls: "".concat(token2.componentCls, "-focused")
    })
  ];
}, prepareComponentToken);
var CalendarOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z" } }] }, "name": "calendar", "theme": "outlined" };
var CalendarOutlined = function CalendarOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: CalendarOutlined$1
  }));
};
var RefIcon$2 = /* @__PURE__ */ reactExports.forwardRef(CalendarOutlined);
var ClockCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z" } }, { "tag": "path", "attrs": { "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z" } }] }, "name": "clock-circle", "theme": "outlined" };
var ClockCircleOutlined = function ClockCircleOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: ClockCircleOutlined$1
  }));
};
var RefIcon$1 = /* @__PURE__ */ reactExports.forwardRef(ClockCircleOutlined);
var SwapRightOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z" } }] }, "name": "swap-right", "theme": "outlined" };
var SwapRightOutlined = function SwapRightOutlined2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement(Icon$1, _extends$1({}, props, {
    ref,
    icon: SwapRightOutlined$1
  }));
};
var RefIcon = /* @__PURE__ */ reactExports.forwardRef(SwapRightOutlined);
function getPlaceholder(locale2, picker, customizePlaceholder) {
  if (customizePlaceholder !== void 0) {
    return customizePlaceholder;
  }
  if (picker === "year" && locale2.lang.yearPlaceholder) {
    return locale2.lang.yearPlaceholder;
  }
  if (picker === "quarter" && locale2.lang.quarterPlaceholder) {
    return locale2.lang.quarterPlaceholder;
  }
  if (picker === "month" && locale2.lang.monthPlaceholder) {
    return locale2.lang.monthPlaceholder;
  }
  if (picker === "week" && locale2.lang.weekPlaceholder) {
    return locale2.lang.weekPlaceholder;
  }
  if (picker === "time" && locale2.timePickerLocale.placeholder) {
    return locale2.timePickerLocale.placeholder;
  }
  return locale2.lang.placeholder;
}
function getRangePlaceholder(locale2, picker, customizePlaceholder) {
  if (customizePlaceholder !== void 0) {
    return customizePlaceholder;
  }
  if (picker === "year" && locale2.lang.yearPlaceholder) {
    return locale2.lang.rangeYearPlaceholder;
  }
  if (picker === "quarter" && locale2.lang.quarterPlaceholder) {
    return locale2.lang.rangeQuarterPlaceholder;
  }
  if (picker === "month" && locale2.lang.monthPlaceholder) {
    return locale2.lang.rangeMonthPlaceholder;
  }
  if (picker === "week" && locale2.lang.weekPlaceholder) {
    return locale2.lang.rangeWeekPlaceholder;
  }
  if (picker === "time" && locale2.timePickerLocale.placeholder) {
    return locale2.timePickerLocale.rangePlaceholder;
  }
  return locale2.lang.rangePlaceholder;
}
function transPlacement2DropdownAlign(direction, placement) {
  const overflow = {
    adjustX: 1,
    adjustY: 1
  };
  switch (placement) {
    case "bottomLeft": {
      return {
        points: ["tl", "bl"],
        offset: [0, 4],
        overflow
      };
    }
    case "bottomRight": {
      return {
        points: ["tr", "br"],
        offset: [0, 4],
        overflow
      };
    }
    case "topLeft": {
      return {
        points: ["bl", "tl"],
        offset: [0, -4],
        overflow
      };
    }
    case "topRight": {
      return {
        points: ["br", "tr"],
        offset: [0, -4],
        overflow
      };
    }
    default: {
      return {
        points: direction === "rtl" ? ["tr", "br"] : ["tl", "bl"],
        offset: [0, 4],
        overflow
      };
    }
  }
}
function useIcons(props, prefixCls) {
  const {
    allowClear = true
  } = props;
  const {
    clearIcon,
    removeIcon
  } = useIcons$1(Object.assign(Object.assign({}, props), {
    prefixCls,
    componentName: "DatePicker"
  }));
  const mergedAllowClear = reactExports.useMemo(() => {
    if (allowClear === false) {
      return false;
    }
    const allowClearConfig = allowClear === true ? {} : allowClear;
    return Object.assign({
      clearIcon
    }, allowClearConfig);
  }, [allowClear, clearIcon]);
  return [mergedAllowClear, removeIcon];
}
function PickerButton(props) {
  return /* @__PURE__ */ reactExports.createElement(Button$2, Object.assign({
    size: "small",
    type: "primary"
  }, props));
}
function useComponents(components) {
  return reactExports.useMemo(() => Object.assign({
    button: PickerButton
  }, components), [components]);
}
var __rest$1 = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
function generateRangePicker(generateConfig2) {
  const RangePicker2 = /* @__PURE__ */ reactExports.forwardRef((props, ref) => {
    var _a;
    const {
      prefixCls: customizePrefixCls,
      getPopupContainer: customGetPopupContainer,
      components,
      className,
      style: style2,
      placement,
      size: customizeSize,
      disabled: customDisabled,
      bordered = true,
      placeholder: placeholder2,
      popupClassName,
      dropdownClassName,
      status: customStatus,
      rootClassName,
      variant: customVariant
    } = props, restProps = __rest$1(props, ["prefixCls", "getPopupContainer", "components", "className", "style", "placement", "size", "disabled", "bordered", "placeholder", "popupClassName", "dropdownClassName", "status", "rootClassName", "variant"]);
    const innerRef = reactExports.useRef(null);
    const {
      getPrefixCls,
      direction,
      getPopupContainer,
      rangePicker
    } = reactExports.useContext(ConfigContext);
    const prefixCls = getPrefixCls("picker", customizePrefixCls);
    const {
      compactSize,
      compactItemClassnames
    } = useCompactItemContext(prefixCls, direction);
    const {
      picker
    } = props;
    const rootPrefixCls = getPrefixCls();
    const [variant, enableVariantCls] = useVariant(customVariant, bordered);
    const rootCls = useCSSVarCls(prefixCls);
    const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);
    const [mergedAllowClear] = useIcons(props, prefixCls);
    const mergedComponents = useComponents(components);
    const mergedSize = useSize((ctx) => {
      var _a2;
      return (_a2 = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a2 !== void 0 ? _a2 : ctx;
    });
    const disabled2 = reactExports.useContext(DisabledContext);
    const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled2;
    const formItemContext = reactExports.useContext(FormItemInputContext);
    const {
      hasFeedback,
      status: contextStatus,
      feedbackIcon
    } = formItemContext;
    const suffixNode = /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, picker === "time" ? /* @__PURE__ */ reactExports.createElement(RefIcon$1, null) : /* @__PURE__ */ reactExports.createElement(RefIcon$2, null), hasFeedback && feedbackIcon);
    reactExports.useImperativeHandle(ref, () => innerRef.current);
    const [contextLocale] = useLocale$1("Calendar", locale);
    const locale$12 = Object.assign(Object.assign({}, contextLocale), props.locale);
    const [zIndex] = useZIndex("DatePicker", (_a = props.popupStyle) === null || _a === void 0 ? void 0 : _a.zIndex);
    return wrapCSSVar(/* @__PURE__ */ reactExports.createElement(NoCompactStyle, null, /* @__PURE__ */ reactExports.createElement(RefRangePicker, Object.assign({
      separator: /* @__PURE__ */ reactExports.createElement("span", {
        "aria-label": "to",
        className: "".concat(prefixCls, "-separator")
      }, /* @__PURE__ */ reactExports.createElement(RefIcon, null)),
      disabled: mergedDisabled,
      ref: innerRef,
      popupAlign: transPlacement2DropdownAlign(direction, placement),
      placeholder: getRangePlaceholder(locale$12, picker, placeholder2),
      suffixIcon: suffixNode,
      prevIcon: /* @__PURE__ */ reactExports.createElement("span", {
        className: "".concat(prefixCls, "-prev-icon")
      }),
      nextIcon: /* @__PURE__ */ reactExports.createElement("span", {
        className: "".concat(prefixCls, "-next-icon")
      }),
      superPrevIcon: /* @__PURE__ */ reactExports.createElement("span", {
        className: "".concat(prefixCls, "-super-prev-icon")
      }),
      superNextIcon: /* @__PURE__ */ reactExports.createElement("span", {
        className: "".concat(prefixCls, "-super-next-icon")
      }),
      transitionName: "".concat(rootPrefixCls, "-slide-up")
    }, restProps, {
      className: classNames({
        ["".concat(prefixCls, "-").concat(mergedSize)]: mergedSize,
        ["".concat(prefixCls, "-").concat(variant)]: enableVariantCls
      }, getStatusClassNames(prefixCls, getMergedStatus(contextStatus, customStatus), hasFeedback), hashId, compactItemClassnames, className, rangePicker === null || rangePicker === void 0 ? void 0 : rangePicker.className, cssVarCls, rootCls, rootClassName),
      style: Object.assign(Object.assign({}, rangePicker === null || rangePicker === void 0 ? void 0 : rangePicker.style), style2),
      locale: locale$12.lang,
      prefixCls,
      getPopupContainer: customGetPopupContainer || getPopupContainer,
      generateConfig: generateConfig2,
      components: mergedComponents,
      direction,
      classNames: {
        popup: classNames(hashId, popupClassName || dropdownClassName, cssVarCls, rootCls, rootClassName)
      },
      styles: {
        popup: Object.assign(Object.assign({}, props.popupStyle), {
          zIndex
        })
      },
      allowClear: mergedAllowClear
    }))));
  });
  return RangePicker2;
}
var __rest = function (s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
};
function generatePicker$1(generateConfig2) {
  function getPicker(picker, displayName) {
    const consumerName = displayName === "TimePicker" ? "timePicker" : "datePicker";
    const Picker2 = /* @__PURE__ */ reactExports.forwardRef((props, ref) => {
      var _a;
      const {
        prefixCls: customizePrefixCls,
        getPopupContainer: customizeGetPopupContainer,
        components,
        style: style2,
        className,
        rootClassName,
        size: customizeSize,
        bordered,
        placement,
        placeholder: placeholder2,
        popupClassName,
        dropdownClassName,
        disabled: customDisabled,
        status: customStatus,
        variant: customVariant,
        onCalendarChange
      } = props, restProps = __rest(props, ["prefixCls", "getPopupContainer", "components", "style", "className", "rootClassName", "size", "bordered", "placement", "placeholder", "popupClassName", "dropdownClassName", "disabled", "status", "variant", "onCalendarChange"]);
      const {
        getPrefixCls,
        direction,
        getPopupContainer,
        // Consume different styles according to different names
        [consumerName]: consumerStyle
      } = reactExports.useContext(ConfigContext);
      const prefixCls = getPrefixCls("picker", customizePrefixCls);
      const {
        compactSize,
        compactItemClassnames
      } = useCompactItemContext(prefixCls, direction);
      const innerRef = reactExports.useRef(null);
      const [variant, enableVariantCls] = useVariant(customVariant, bordered);
      const rootCls = useCSSVarCls(prefixCls);
      const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);
      reactExports.useImperativeHandle(ref, () => innerRef.current);
      const additionalProps = {
        showToday: true
      };
      const mergedPicker = picker || props.picker;
      const rootPrefixCls = getPrefixCls();
      const {
        onSelect,
        multiple
      } = restProps;
      const hasLegacyOnSelect = onSelect && picker === "time" && !multiple;
      const onInternalCalendarChange = (date5, dateStr, info2) => {
        onCalendarChange === null || onCalendarChange === void 0 ? void 0 : onCalendarChange(date5, dateStr, info2);
        if (hasLegacyOnSelect) {
          onSelect(date5);
        }
      };
      const [mergedAllowClear, removeIcon] = useIcons(props, prefixCls);
      const mergedComponents = useComponents(components);
      const mergedSize = useSize((ctx) => {
        var _a2;
        return (_a2 = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a2 !== void 0 ? _a2 : ctx;
      });
      const disabled2 = reactExports.useContext(DisabledContext);
      const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled2;
      const formItemContext = reactExports.useContext(FormItemInputContext);
      const {
        hasFeedback,
        status: contextStatus,
        feedbackIcon
      } = formItemContext;
      const suffixNode = /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, mergedPicker === "time" ? /* @__PURE__ */ reactExports.createElement(RefIcon$1, null) : /* @__PURE__ */ reactExports.createElement(RefIcon$2, null), hasFeedback && feedbackIcon);
      const [contextLocale] = useLocale$1("DatePicker", locale);
      const locale$12 = Object.assign(Object.assign({}, contextLocale), props.locale);
      const [zIndex] = useZIndex("DatePicker", (_a = props.popupStyle) === null || _a === void 0 ? void 0 : _a.zIndex);
      return wrapCSSVar(/* @__PURE__ */ reactExports.createElement(NoCompactStyle, null, /* @__PURE__ */ reactExports.createElement(RefPicker, Object.assign({
        ref: innerRef,
        placeholder: getPlaceholder(locale$12, mergedPicker, placeholder2),
        suffixIcon: suffixNode,
        dropdownAlign: transPlacement2DropdownAlign(direction, placement),
        prevIcon: /* @__PURE__ */ reactExports.createElement("span", {
          className: "".concat(prefixCls, "-prev-icon")
        }),
        nextIcon: /* @__PURE__ */ reactExports.createElement("span", {
          className: "".concat(prefixCls, "-next-icon")
        }),
        superPrevIcon: /* @__PURE__ */ reactExports.createElement("span", {
          className: "".concat(prefixCls, "-super-prev-icon")
        }),
        superNextIcon: /* @__PURE__ */ reactExports.createElement("span", {
          className: "".concat(prefixCls, "-super-next-icon")
        }),
        transitionName: "".concat(rootPrefixCls, "-slide-up"),
        picker,
        onCalendarChange: onInternalCalendarChange
      }, additionalProps, restProps, {
        locale: locale$12.lang,
        className: classNames({
          ["".concat(prefixCls, "-").concat(mergedSize)]: mergedSize,
          ["".concat(prefixCls, "-").concat(variant)]: enableVariantCls
        }, getStatusClassNames(prefixCls, getMergedStatus(contextStatus, customStatus), hasFeedback), hashId, compactItemClassnames, consumerStyle === null || consumerStyle === void 0 ? void 0 : consumerStyle.className, className, cssVarCls, rootCls, rootClassName),
        style: Object.assign(Object.assign({}, consumerStyle === null || consumerStyle === void 0 ? void 0 : consumerStyle.style), style2),
        prefixCls,
        getPopupContainer: customizeGetPopupContainer || getPopupContainer,
        generateConfig: generateConfig2,
        components: mergedComponents,
        direction,
        disabled: mergedDisabled,
        classNames: {
          popup: classNames(hashId, cssVarCls, rootCls, rootClassName, popupClassName || dropdownClassName)
        },
        styles: {
          popup: Object.assign(Object.assign({}, props.popupStyle), {
            zIndex
          })
        },
        allowClear: mergedAllowClear,
        removeIcon
      }))));
    });
    return Picker2;
  }
  const DatePicker2 = getPicker();
  const WeekPicker = getPicker("week", "WeekPicker");
  const MonthPicker = getPicker("month", "MonthPicker");
  const YearPicker = getPicker("year", "YearPicker");
  const QuarterPicker = getPicker("quarter", "QuarterPicker");
  const TimePicker2 = getPicker("time", "TimePicker");
  return {
    DatePicker: DatePicker2,
    WeekPicker,
    MonthPicker,
    YearPicker,
    TimePicker: TimePicker2,
    QuarterPicker
  };
}
function generatePicker(generateConfig2) {
  const {
    DatePicker: DatePicker2,
    WeekPicker,
    MonthPicker,
    YearPicker,
    TimePicker: TimePicker2,
    QuarterPicker
  } = generatePicker$1(generateConfig2);
  const RangePicker2 = generateRangePicker(generateConfig2);
  const MergedDatePicker = DatePicker2;
  MergedDatePicker.WeekPicker = WeekPicker;
  MergedDatePicker.MonthPicker = MonthPicker;
  MergedDatePicker.YearPicker = YearPicker;
  MergedDatePicker.RangePicker = RangePicker2;
  MergedDatePicker.TimePicker = TimePicker2;
  MergedDatePicker.QuarterPicker = QuarterPicker;
  return MergedDatePicker;
}
const DatePicker$1 = generatePicker(generateConfig);
function postPureProps(props) {
  const dropdownAlign = transPlacement2DropdownAlign(props.direction, props.placement);
  dropdownAlign.overflow.adjustY = false;
  dropdownAlign.overflow.adjustX = false;
  return Object.assign(Object.assign({}, props), {
    dropdownAlign
  });
}
const PurePanel = genPurePanel(DatePicker$1, "picker", null, postPureProps);
DatePicker$1._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;
const PureRangePanel = genPurePanel(DatePicker$1.RangePicker, "picker", null, postPureProps);
DatePicker$1._InternalRangePanelDoNotUseOrYouWillBeFired = PureRangePanel;
DatePicker$1.generatePicker = generatePicker;
const svg_theme_fill_color$1y = "_svg_theme_fill_color_rklxv_3";
const pcDateContainer = "_pcDateContainer_rklxv_55";
const date4 = "_date_rklxv_220";
const css$1u = {
  svg_theme_fill_color: svg_theme_fill_color$1y,
  pcDateContainer,
  date: date4,
  "ant-picker": "_ant-picker_rklxv_175",
  "ant-picker-input": "_ant-picker-input_rklxv_175"
};
const PcDatePicker = (props) => {
  const { language } = useUserInfoStore();
  const [minDate] = reactExports.useState(dayjs(props.minDateStr));
  const [maxDate] = reactExports.useState(dayjs(props.maxDateStr));
  const [startDate, setStartDate] = reactExports.useState(dayjs(props.startDateStr));
  const [endDate, setEndDate] = reactExports.useState(dayjs(props.endDateStr));
  const { RangePicker: RangePicker2 } = DatePicker$1;
  reactExports.useEffect(() => {
    props.onChange && props.onChange(
      startDate.format("YYYY/MM/DD"),
      endDate.format("YYYY/MM/DD")
    );
  }, [startDate, endDate]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$1u.pcDateContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ConfigProvider, {
      locale: antdLocale[language], children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        RangePicker2,
        {
          minDate,
          maxDate,
          allowClear: false,
          defaultValue: [startDate, endDate],
          format: "DD/MM/YYYY",
          suffixIcon: null,
          onChange: (dates, dateStrings) => {
            setStartDate(dates[0]);
            setEndDate(dates[1]);
          }
        }
      )
    })
  });
};
const DatePicker = (props) => {
  getWebType();
  const minDateStr = "2015-01-01";
  const maxDateStr = "2029-12-31";
  const startDateStr = /* @__PURE__ */ new Date();
  const endDateStr = /* @__PURE__ */ new Date();
  const handleChange = (startDate, endDate) => {
    props.onChange && props.onChange("".concat(startDate.replaceAll("/", "-"), " 00:00:00"), "".concat(endDate.replaceAll("/", "-"), " 23:59:59"));
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: document.documentElement.getAttribute("nested") !== "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
      H5DatePicker,
      {
        minDateStr,
        maxDateStr,
        startDateStr,
        endDateStr,
        onChange: handleChange
      }
    ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
      PcDatePicker,
      {
        minDateStr,
        maxDateStr,
        startDateStr,
        endDateStr,
        onChange: handleChange
      }
    )
  });
};
const svg_theme_fill_color$1x = "_svg_theme_fill_color_1u76w_3";
const changeThemeBox = "_changeThemeBox_1u76w_55";
const btnItem = "_btnItem_1u76w_70";
const css$1t = {
  svg_theme_fill_color: svg_theme_fill_color$1x,
  changeThemeBox,
  btnItem
};
const themeArr = [
  { name: "黑色", key: "black" },
  { name: "蓝色", key: "blue" },
  { name: "白绿色", key: "whiteGreen" },
  { name: "紫色", key: "purple" },
  { name: "白红色", key: "whiteRed" },
  { name: "油绿色", key: "oilyGreen" },
  { name: "范思哲黄色", key: "versaceYellow" },
  { name: "蜜桃色", key: "lancomePeach" },
  { name: "黄白色", key: "whiteYellow" },
  { name: "蓝白色", key: "whiteBlue" },
  { name: "Sk2红色", key: "sk2" },
  { name: "橘白色", key: "whiteOrange" },
  { name: "橘色", key: "hermesOrange" },
  { name: "浅棕色", key: "lightBrown" },
  { name: "furla蓝色", key: "furlaBlue" },
  { name: "粉白色", key: "whitePink" },
  { name: "BV绿色", key: "bvGreen" },
  { name: "褐白色", key: "whiteBrown" },
  { name: "安娜苏紫", key: "AnnaSuiPurple" },
  { name: "紫白色", key: "whitePurple" },
  { name: "勃艮第红", key: "burgundyRed" },
  { name: "白墨绿", key: "whiteDarkGreen" },
  { name: "绿金色", key: "greenGold" }
];
const ChangeTheme = () => {
  const { setThemeColor } = useUserInfoStore();
  const hostname2 = window.location.hostname;
  if (hostname2 !== "localhost" && hostname2 !== "www-br.ssqlkjs.top") // MOSTRAR OPCOES PARA TROCAR TEMA
    return null;
  if (isH5$1)
    return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$1t.changeThemeBox, children: themeArr.map((item2, idx) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$1t.btnItem, onClick: () => {
          copyText(item2.key);
          setThemeColor(item2.key);
        }, children: [
          item2.name,
          " ",
          item2.key
        ]
      }, idx);
    })
  });
};
const svg_theme_fill_color$1w = "_svg_theme_fill_color_36n7e_3";
const showAllSVGBox = "_showAllSVGBox_36n7e_55";
const item$g = "_item_36n7e_72";
const css$1s = {
  svg_theme_fill_color: svg_theme_fill_color$1w,
  showAllSVGBox,
  item: item$g
};
const ShowAllSVG = () => {
  const hostname2 = window.location.hostname;
  const [modules, setModules] = reactExports.useState([]);
  reactExports.useEffect(() => {
    if (isH5$1)
      return void 0;
    if (hostname2 !== "localhost2") // MOSTRAR TODOS ICONES
      return void 0;
    getAllIcons(setModules);
  }, []);
  if (isH5$1)
    return void 0;
  if (hostname2 !== "localhost")
    return void 0;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$1s.showAllSVGBox, children: modules.map((item2, idx) => {
      const Com = reactExports.lazy(item2.fileFun);
      const name2 = item2.name.split("/")[4];
      return /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, {
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1s.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Com, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: name2 })
          ]
        })
      }, idx);
    })
  });
};
function getAllIcons(set2) {
  const files = /* @__PURE__ */ Object.assign({ "/src/icons/ActiveIcons/ActionBlockchaim.jsx": () => __vitePreload(() => import("./ActionBlockchaim-NFa5p7TG-2024_8_30_15_11.js"), true ? __vite__mapDeps([0, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionCasino.jsx": () => __vitePreload(() => import("./ActionCasino-CwXt-tYH-2024_8_30_15_11.js"), true ? __vite__mapDeps([3, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionCockfighting.jsx": () => __vitePreload(() => import("./ActionCockfighting-CGnTCsKU-2024_8_30_15_11.js"), true ? __vite__mapDeps([4, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionEsports.jsx": () => __vitePreload(() => import("./ActionEsports-KfV9xh0a-2024_8_30_15_11.js"), true ? __vite__mapDeps([5, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionEsportsIcon.jsx": () => __vitePreload(() => import("./ActionEsportsIcon-Cf5-XNcl-2024_8_30_15_11.js"), true ? __vite__mapDeps([6, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionFavoritos.jsx": () => __vitePreload(() => import("./ActionFavoritos-ByjL9ukC-2024_8_30_15_11.js"), true ? __vite__mapDeps([7, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionFishing.jsx": () => __vitePreload(() => import("./ActionFishing-C12EC6Lr-2024_8_30_15_11.js"), true ? __vite__mapDeps([8, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionHotIcon.jsx": () => __vitePreload(() => import("./ActionHotIcon-DaKu13yQ-2024_8_30_15_11.js"), true ? __vite__mapDeps([9, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionJogos.jsx": () => __vitePreload(() => import("./ActionJogos-BVpy0E_x-2024_8_30_15_11.js"), true ? __vite__mapDeps([10, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionLettery.jsx": () => __vitePreload(() => import("./ActionLettery-ziDKcflh-2024_8_30_15_11.js"), true ? __vite__mapDeps([11, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionPoker.jsx": () => __vitePreload(() => import("./ActionPoker-CLq5mRy_-2024_8_30_15_11.js"), true ? __vite__mapDeps([12, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionRecente.jsx": () => __vitePreload(() => import("./ActionRecente-Bv_dP03X-2024_8_30_15_11.js"), true ? __vite__mapDeps([13, 1, 2]) : void 0), "/src/icons/ActiveIcons/ActionRecordes.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActionRecordes$1), true ? void 0 : void 0), "/src/icons/ActiveIcons/ActionSports.jsx": () => __vitePreload(() => import("./ActionSports-Cn_1saH2-2024_8_30_15_11.js"), true ? __vite__mapDeps([14, 1, 2]) : void 0), "/src/icons/ActiveIcons/BottomActive.jsx": () => __vitePreload(() => import("./BottomActive-WlY5S84V-2024_8_30_15_11.js"), true ? __vite__mapDeps([15, 1, 2]) : void 0), "/src/icons/ActiveIcons/BottomArrow.jsx": () => __vitePreload(() => import("./BottomArrow-C1thwUUs-2024_8_30_15_11.js"), true ? __vite__mapDeps([16, 1, 2]) : void 0), "/src/icons/FunIcons/Add.jsx": () => __vitePreload(() => Promise.resolve().then(() => Add), true ? void 0 : void 0), "/src/icons/FunIcons/AlreadyGetBonus.jsx": () => __vitePreload(() => Promise.resolve().then(() => AlreadyGetBonus), true ? void 0 : void 0), "/src/icons/FunIcons/Android.jsx": () => __vitePreload(() => import("./Android-B66EuxNM-2024_8_30_15_11.js"), true ? __vite__mapDeps([17, 1, 2]) : void 0), "/src/icons/FunIcons/Arrow.jsx": () => __vitePreload(() => Promise.resolve().then(() => Arrow$1), true ? void 0 : void 0), "/src/icons/FunIcons/ArrowLeftInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => ArrowLeftInMine), true ? void 0 : void 0), "/src/icons/FunIcons/ArrowRightBicolor.jsx": () => __vitePreload(() => Promise.resolve().then(() => ArrowRightBicolor$1), true ? void 0 : void 0), "/src/icons/FunIcons/ArrowRightInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => ArrowRightInMine), true ? void 0 : void 0), "/src/icons/FunIcons/ArrowX.jsx": () => __vitePreload(() => Promise.resolve().then(() => ArrowX$1), true ? void 0 : void 0), "/src/icons/FunIcons/AudioDelete.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioDelete), true ? void 0 : void 0), "/src/icons/FunIcons/AudioLoop.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioLoop), true ? void 0 : void 0), "/src/icons/FunIcons/AudioMenu.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioMenu), true ? void 0 : void 0), "/src/icons/FunIcons/AudioMusic.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioMusic), true ? void 0 : void 0), "/src/icons/FunIcons/AudioNext.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioNext), true ? void 0 : void 0), "/src/icons/FunIcons/AudioNoVolum.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioNoVolum), true ? void 0 : void 0), "/src/icons/FunIcons/AudioOnce.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioOnce), true ? void 0 : void 0), "/src/icons/FunIcons/AudioPaused.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioPaused), true ? void 0 : void 0), "/src/icons/FunIcons/AudioPlayer.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioPlayer), true ? void 0 : void 0), "/src/icons/FunIcons/AudioPre.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioPre), true ? void 0 : void 0), "/src/icons/FunIcons/AudioRandom.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioRandom), true ? void 0 : void 0), "/src/icons/FunIcons/AudioStar.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioStar), true ? void 0 : void 0), "/src/icons/FunIcons/AudioVolum.jsx": () => __vitePreload(() => Promise.resolve().then(() => AudioVolum), true ? void 0 : void 0), "/src/icons/FunIcons/BaixarApp.jsx": () => __vitePreload(() => Promise.resolve().then(() => BaixarApp), true ? void 0 : void 0), "/src/icons/FunIcons/BaixarAppInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => BaixarAppInMine), true ? void 0 : void 0), "/src/icons/FunIcons/Bank.jsx": () => __vitePreload(() => import("./Bank-PiViDWV1-2024_8_30_15_11.js"), true ? __vite__mapDeps([18, 1, 2]) : void 0), "/src/icons/FunIcons/BlacCentral.jsx": () => __vitePreload(() => Promise.resolve().then(() => BlacCentral), true ? void 0 : void 0), "/src/icons/FunIcons/Bonus.jsx": () => __vitePreload(() => Promise.resolve().then(() => Bonus$1), true ? void 0 : void 0), "/src/icons/FunIcons/Card.jsx": () => __vitePreload(() => Promise.resolve().then(() => Card$1), true ? void 0 : void 0), "/src/icons/FunIcons/CarteiraCentral.jsx": () => __vitePreload(() => import("./CarteiraCentral-Di_r02Uv-2024_8_30_15_11.js"), true ? __vite__mapDeps([19, 1, 2]) : void 0), "/src/icons/FunIcons/CentroDeMensagens.jsx": () => __vitePreload(() => import("./CentroDeMensagens-Du-aSVmA-2024_8_30_15_11.js"), true ? __vite__mapDeps([20, 1, 2]) : void 0), "/src/icons/FunIcons/CloseIcon.jsx": () => __vitePreload(() => Promise.resolve().then(() => CloseIcon$1), true ? void 0 : void 0), "/src/icons/FunIcons/CloseIconInLogin.jsx": () => __vitePreload(() => Promise.resolve().then(() => CloseIconInLogin$1), true ? void 0 : void 0), "/src/icons/FunIcons/CloseIconInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => CloseIconInMine), true ? void 0 : void 0), "/src/icons/FunIcons/CloseModal.jsx": () => __vitePreload(() => Promise.resolve().then(() => CloseModal$1), true ? void 0 : void 0), "/src/icons/FunIcons/ConfiguraDeSaque.jsx": () => __vitePreload(() => Promise.resolve().then(() => ConfiguraDeSaque), true ? void 0 : void 0), "/src/icons/FunIcons/ConvidarInMenu.jsx": () => __vitePreload(() => Promise.resolve().then(() => ConvidarInMenu), true ? void 0 : void 0), "/src/icons/FunIcons/Cpf.jsx": () => __vitePreload(() => Promise.resolve().then(() => Cpf), true ? void 0 : void 0), "/src/icons/FunIcons/Delete.jsx": () => __vitePreload(() => import("./Delete-Cgx9NjxU-2024_8_30_15_11.js"), true ? __vite__mapDeps([21, 1, 2]) : void 0), "/src/icons/FunIcons/DepositItemTip.jsx": () => __vitePreload(() => Promise.resolve().then(() => DepositItemTip), true ? void 0 : void 0), "/src/icons/FunIcons/DepositSuccess.jsx": () => __vitePreload(() => Promise.resolve().then(() => DepositSuccess$1), true ? void 0 : void 0), "/src/icons/FunIcons/DepositTab.jsx": () => __vitePreload(() => Promise.resolve().then(() => DepositTab), true ? void 0 : void 0), "/src/icons/FunIcons/Deposito.jsx": () => __vitePreload(() => Promise.resolve().then(() => Deposito), true ? void 0 : void 0), "/src/icons/FunIcons/DetailInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => DetailInMine), true ? void 0 : void 0), "/src/icons/FunIcons/DetalhesDaConta.jsx": () => __vitePreload(() => Promise.resolve().then(() => DetalhesDaConta), true ? void 0 : void 0), "/src/icons/FunIcons/Down.jsx": () => __vitePreload(() => Promise.resolve().then(() => Down), true ? void 0 : void 0), "/src/icons/FunIcons/DropDown.jsx": () => __vitePreload(() => Promise.resolve().then(() => DropDown), true ? void 0 : void 0), "/src/icons/FunIcons/EditString.jsx": () => __vitePreload(() => Promise.resolve().then(() => EditString$1), true ? void 0 : void 0), "/src/icons/FunIcons/EditUser.jsx": () => __vitePreload(() => Promise.resolve().then(() => EditUser), true ? void 0 : void 0), "/src/icons/FunIcons/Email.jsx": () => __vitePreload(() => import("./Email-gUjxgRhU-2024_8_30_15_11.js"), true ? __vite__mapDeps([22, 1, 2]) : void 0), "/src/icons/FunIcons/Eventos.jsx": () => __vitePreload(() => Promise.resolve().then(() => Eventos), true ? void 0 : void 0), "/src/icons/FunIcons/EyeClose.jsx": () => __vitePreload(() => Promise.resolve().then(() => EyeClose), true ? void 0 : void 0), "/src/icons/FunIcons/EyeOpen.jsx": () => __vitePreload(() => Promise.resolve().then(() => EyeOpen), true ? void 0 : void 0), "/src/icons/FunIcons/FAQ.jsx": () => __vitePreload(() => Promise.resolve().then(() => FAQ), true ? void 0 : void 0), "/src/icons/FunIcons/FreshMoney.jsx": () => __vitePreload(() => import("./FreshMoney-P5OceOTo-2024_8_30_15_11.js"), true ? __vite__mapDeps([23, 1, 2]) : void 0), "/src/icons/FunIcons/FullScreenIcon.jsx": () => __vitePreload(() => import("./FullScreenIcon-BUj2hhfc-2024_8_30_15_11.js"), true ? __vite__mapDeps([24, 1, 2]) : void 0), "/src/icons/FunIcons/Gcash.jsx": () => __vitePreload(() => Promise.resolve().then(() => Gcash), true ? void 0 : void 0), "/src/icons/FunIcons/InputClear.jsx": () => __vitePreload(() => Promise.resolve().then(() => InputClear), true ? void 0 : void 0), "/src/icons/FunIcons/Interest.jsx": () => __vitePreload(() => import("./Interest-kD0Z8Dj4-2024_8_30_15_11.js"), true ? __vite__mapDeps([25, 1, 2]) : void 0), "/src/icons/FunIcons/InvitationCode.jsx": () => __vitePreload(() => import("./InvitationCode-QrMHpi7S-2024_8_30_15_11.js"), true ? __vite__mapDeps([26, 1, 2]) : void 0), "/src/icons/FunIcons/Ios.jsx": () => __vitePreload(() => import("./Ios-C3dMEWJB-2024_8_30_15_11.js"), true ? __vite__mapDeps([27, 1, 2]) : void 0), "/src/icons/FunIcons/Language.jsx": () => __vitePreload(() => Promise.resolve().then(() => Language$2), true ? void 0 : void 0), "/src/icons/FunIcons/Linha.jsx": () => __vitePreload(() => Promise.resolve().then(() => Linha), true ? void 0 : void 0), "/src/icons/FunIcons/LinhaSelectIcon.jsx": () => __vitePreload(() => Promise.resolve().then(() => LinhaSelectIcon$1), true ? void 0 : void 0), "/src/icons/FunIcons/LinhaSelectedIcon.jsx": () => __vitePreload(() => import("./LinhaSelectedIcon-Bi4d-rqs-2024_8_30_15_11.js"), true ? __vite__mapDeps([28, 1, 2]) : void 0), "/src/icons/FunIcons/Lock.jsx": () => __vitePreload(() => import("./Lock-Bwwwc1Wc-2024_8_30_15_11.js"), true ? __vite__mapDeps([29, 1, 2]) : void 0), "/src/icons/FunIcons/Login.jsx": () => __vitePreload(() => Promise.resolve().then(() => Login$5), true ? void 0 : void 0), "/src/icons/FunIcons/Maya.jsx": () => __vitePreload(() => Promise.resolve().then(() => Maya), true ? void 0 : void 0), "/src/icons/FunIcons/Message.jsx": () => __vitePreload(() => import("./Message-CQUzCq3b-2024_8_30_15_11.js"), true ? __vite__mapDeps([30, 1, 2]) : void 0), "/src/icons/FunIcons/MessageSet.jsx": () => __vitePreload(() => import("./MessageSet-B9Um2_sV-2024_8_30_15_11.js"), true ? __vite__mapDeps([31, 1, 2]) : void 0), "/src/icons/FunIcons/MessageTwo.jsx": () => __vitePreload(() => Promise.resolve().then(() => MessageTwo), true ? void 0 : void 0), "/src/icons/FunIcons/MessageVolum.jsx": () => __vitePreload(() => import("./MessageVolum-DhM4RQbH-2024_8_30_15_11.js"), true ? __vite__mapDeps([32, 1, 2]) : void 0), "/src/icons/FunIcons/MoreInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => MoreInMine), true ? void 0 : void 0), "/src/icons/FunIcons/NotReceived.jsx": () => __vitePreload(() => Promise.resolve().then(() => NotReceived$1), true ? void 0 : void 0), "/src/icons/FunIcons/Notify.jsx": () => __vitePreload(() => import("./Notify-CumUEJzR-2024_8_30_15_11.js"), true ? __vite__mapDeps([33, 1, 2]) : void 0), "/src/icons/FunIcons/Password.jsx": () => __vitePreload(() => import("./Password-DmF5SOze-2024_8_30_15_11.js"), true ? __vite__mapDeps([34, 1, 2]) : void 0), "/src/icons/FunIcons/PasswordFull.jsx": () => __vitePreload(() => Promise.resolve().then(() => PasswordFull), true ? void 0 : void 0), "/src/icons/FunIcons/Phone.jsx": () => __vitePreload(() => Promise.resolve().then(() => Phone), true ? void 0 : void 0), "/src/icons/FunIcons/Pix.jsx": () => __vitePreload(() => Promise.resolve().then(() => Pix$1), true ? void 0 : void 0), "/src/icons/FunIcons/PixAccount.jsx": () => __vitePreload(() => Promise.resolve().then(() => PixAccount), true ? void 0 : void 0), "/src/icons/FunIcons/PopClose.jsx": () => __vitePreload(() => Promise.resolve().then(() => PopClose), true ? void 0 : void 0), "/src/icons/FunIcons/PriceTip.jsx": () => __vitePreload(() => import("./PriceTip-CRoGaEWW-2024_8_30_15_11.js"), true ? __vite__mapDeps([35, 1, 2]) : void 0), "/src/icons/FunIcons/Rebate.jsx": () => __vitePreload(() => Promise.resolve().then(() => Rebate$1), true ? void 0 : void 0), "/src/icons/FunIcons/RebateInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => RebateInMine), true ? void 0 : void 0), "/src/icons/FunIcons/Received.jsx": () => __vitePreload(() => Promise.resolve().then(() => Received$1), true ? void 0 : void 0), "/src/icons/FunIcons/Recommend.jsx": () => __vitePreload(() => import("./Recommend-CAGl3UTw-2024_8_30_15_11.js"), true ? __vite__mapDeps([36, 1, 2]) : void 0), "/src/icons/FunIcons/RecordesDeApostas.jsx": () => __vitePreload(() => Promise.resolve().then(() => RecordesDeApostas), true ? void 0 : void 0), "/src/icons/FunIcons/RectCopy.jsx": () => __vitePreload(() => Promise.resolve().then(() => RectCopy), true ? void 0 : void 0), "/src/icons/FunIcons/Recycle.jsx": () => __vitePreload(() => import("./Recycle-BCjZalcR-2024_8_30_15_11.js"), true ? __vite__mapDeps([37, 1, 2]) : void 0), "/src/icons/FunIcons/Register.jsx": () => __vitePreload(() => Promise.resolve().then(() => Register$4), true ? void 0 : void 0), "/src/icons/FunIcons/RegistroDeRetiradas.jsx": () => __vitePreload(() => Promise.resolve().then(() => RegistroDeRetiradas), true ? void 0 : void 0), "/src/icons/FunIcons/RelatorioPessoal.jsx": () => __vitePreload(() => import("./RelatorioPessoal-Cbuuxcm8-2024_8_30_15_11.js"), true ? __vite__mapDeps([38, 1, 2]) : void 0), "/src/icons/FunIcons/RoundDown.jsx": () => __vitePreload(() => import("./RoundDown-CHyu9tEr-2024_8_30_15_11.js"), true ? __vite__mapDeps([39, 1, 2]) : void 0), "/src/icons/FunIcons/Sair.jsx": () => __vitePreload(() => Promise.resolve().then(() => Sair), true ? void 0 : void 0), "/src/icons/FunIcons/Saque.jsx": () => __vitePreload(() => Promise.resolve().then(() => Saque), true ? void 0 : void 0), "/src/icons/FunIcons/SearchTool.jsx": () => __vitePreload(() => Promise.resolve().then(() => SearchTool), true ? void 0 : void 0), "/src/icons/FunIcons/SearchToolS.jsx": () => __vitePreload(() => import("./SearchToolS-BBajhuVB-2024_8_30_15_11.js"), true ? __vite__mapDeps([40, 1, 2]) : void 0), "/src/icons/FunIcons/Select.jsx": () => __vitePreload(() => import("./Select-BL-vF3FW-2024_8_30_15_11.js"), true ? __vite__mapDeps([41, 1, 2]) : void 0), "/src/icons/FunIcons/ShareInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => ShareInMine), true ? void 0 : void 0), "/src/icons/FunIcons/SiderMenuIcon.jsx": () => __vitePreload(() => import("./SiderMenuIcon-C-dPct6p-2024_8_30_15_11.js"), true ? __vite__mapDeps([42, 1, 2]) : void 0), "/src/icons/FunIcons/Suporte.jsx": () => __vitePreload(() => Promise.resolve().then(() => Suporte), true ? void 0 : void 0), "/src/icons/FunIcons/SuporteInMine.jsx": () => __vitePreload(() => Promise.resolve().then(() => SuporteInMine), true ? void 0 : void 0), "/src/icons/FunIcons/Triangle.jsx": () => __vitePreload(() => import("./Triangle-Et9Bhd3y-2024_8_30_15_11.js"), true ? __vite__mapDeps([43, 1, 2]) : void 0), "/src/icons/FunIcons/Tudo.jsx": () => __vitePreload(() => import("./Tudo-DV5ETPvZ-2024_8_30_15_11.js"), true ? __vite__mapDeps([44, 1, 2]) : void 0), "/src/icons/FunIcons/Tudos.jsx": () => __vitePreload(() => import("./Tudos-Bq9UPBqF-2024_8_30_15_11.js"), true ? __vite__mapDeps([45, 1, 2]) : void 0), "/src/icons/FunIcons/User.jsx": () => __vitePreload(() => import("./User-ClatpqvK-2024_8_30_15_11.js"), true ? __vite__mapDeps([46, 1, 2]) : void 0), "/src/icons/FunIcons/UserFull.jsx": () => __vitePreload(() => Promise.resolve().then(() => UserFull), true ? void 0 : void 0), "/src/icons/FunIcons/VIP.jsx": () => __vitePreload(() => Promise.resolve().then(() => VIP$1), true ? void 0 : void 0), "/src/icons/FunIcons/Wallet.jsx": () => __vitePreload(() => Promise.resolve().then(() => Wallet), true ? void 0 : void 0), "/src/icons/GameTypeIcons/BetRecords.jsx": () => __vitePreload(() => Promise.resolve().then(() => BetRecords), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Blockchain.jsx": () => __vitePreload(() => Promise.resolve().then(() => Blockchain), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Cartas.jsx": () => __vitePreload(() => Promise.resolve().then(() => Cartas), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Cassino.jsx": () => __vitePreload(() => Promise.resolve().then(() => Cassino), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Convidar.jsx": () => __vitePreload(() => Promise.resolve().then(() => Convidar), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Esporte.jsx": () => __vitePreload(() => Promise.resolve().then(() => Esporte), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Esports.jsx": () => __vitePreload(() => Promise.resolve().then(() => Esports), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Favoritos.jsx": () => __vitePreload(() => Promise.resolve().then(() => Favoritos$1), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Hot.jsx": () => __vitePreload(() => Promise.resolve().then(() => Hot), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Jogar.jsx": () => __vitePreload(() => import("./Jogar-CzcHlXHR-2024_8_30_15_11.js"), true ? __vite__mapDeps([47, 1, 2]) : void 0), "/src/icons/GameTypeIcons/Loteria.jsx": () => __vitePreload(() => Promise.resolve().then(() => Loteria), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Pescaria.jsx": () => __vitePreload(() => Promise.resolve().then(() => Pescaria), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Recente.jsx": () => __vitePreload(() => Promise.resolve().then(() => Recente$1), true ? void 0 : void 0), "/src/icons/GameTypeIcons/Slots.jsx": () => __vitePreload(() => Promise.resolve().then(() => Slots), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveBlockchaim.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveBlockchaim$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveCartas.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveCartas$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveCassinoAoVivo.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveCassinoAoVivo$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveEsporte.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveEsporte$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveEsports.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveEsports$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveFavoritos.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveFavoritos$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveLoteria.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveLoteria$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActivePescaria.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActivePescaria$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActivePopular.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActivePopular$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveRecente.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveRecente$1), true ? void 0 : void 0), "/src/icons/PlatformTypeIcons/ActiveSlots.jsx": () => __vitePreload(() => Promise.resolve().then(() => ActiveSlots$1), true ? void 0 : void 0) });
  const modules = Object.keys(files).map((c2) => {
    return {
      fileFun: files[c2],
      name: c2
    };
  });
  set2(modules);
}
const initGoogleSDK = () => {
  return new Promise((reslove) => {
    if (!window.google) {
      const script = document.createElement("script");
      script.src = "https://accounts.google.com/gsi/client";
      script.async = true;
      script.defer = true;
      script.onload = () => {
        reslove();
      };
      document.body.appendChild(script);
    } else {
      setTimeout(() => {
        reslove();
      }, 0.3 * 1e3);
    }
  });
};
const renderGoogleBtn = (id2) => {
  return new Promise((reslove) => {
    window.google.accounts.id.initialize({
      client_id: id2,
      prompt_parent_id: "g_id_signIn",
      ux_mode: "popup",
      auto_select: true,
      // 登录成功后的回调
      callback: async (res) => {
        reslove(res);
        const googleDom = document.getElementById("g_id_signIn");
        if (googleDom)
          googleDom.innerHTML = "";
      }
    });
    window.google.accounts.id.renderButton(
      document.getElementById("g_id_signIn"),
      {
        theme: "filled_blue",
        logo_alignment: "center"
      }
    );
  });
};
const initFacebookSDK = () => {
  return new Promise((reslove) => {
    if (!window.FB) {
      const script = document.createElement("script");
      script.src = "https://connect.facebook.net/en_US/sdk.js";
      script.async = true;
      script.defer = true;
      script.crossorigin = "anonymous";
      script.onload = () => {
        reslove();
      };
      document.body.appendChild(script);
    } else {
      setTimeout(() => {
        reslove();
      }, 0.3 * 1e3);
    }
  });
};
const facebookLogin = (appid) => {
  return new Promise((reslove) => {
    FB.init({
      appId: appid,
      xfbml: true,
      version: "v20.0"
    });
    FB.login(function (response) {
      if (response.authResponse) {
        console.log("Welcome!  Fetching your information.... ");
        reslove(response.authResponse);
      } else {
        console.log("User cancelled login or did not fully authorize.");
      }
    });
  });
};
function loadScript(url2) {
  return new Promise((resolve, reject) => {
    const script = document.createElement("script");
    script.src = url2;
    script.onload = () => {
      resolve();
    };
    script.onerror = () => {
      reject("Failed to load script: ".concat(url2));
      console.error("Failed to load script: ".concat(url2));
    };
    document.head.appendChild(script);
  });
}
const saveImgByElement = async (element, fileName = "google_account") => {
  if (!(window == null ? void 0 : window.html2canvas)) {
    await loadScript("/js/html2canvas.min.js");
  }
  if (window == null ? void 0 : window.html2canvas) {
    const canvas2 = await window.html2canvas(element);
    canvas2.style.borderRadius = "20rem";
    const imgData = canvas2.toDataURL("image/png");
    const link = document.createElement("a");
    link.href = imgData;
    link.download = fileName + ".png";
    link.click();
  }
};
const ActionRecordes = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(className), width: "35", height: "34", viewBox: "0 0 35 34", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_2006_189153)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M7.29401 3.40625C6.04217 3.40625 5.02734 4.42107 5.02734 5.67292V29.4729C5.02734 30.7248 6.04217 31.7396 7.29401 31.7396H17.8639L18.2328 28.1505L25.817 20.5663C26.0463 20.3371 26.2961 20.141 26.5607 19.9782V5.67292C26.5607 4.42107 25.5459 3.40625 24.294 3.40625H7.29401Z", fill: "url(#paint0_linear_2006_189153)" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.56641 10.7656H22.0331", stroke: "#4885EA", strokeWidth: "2.26667", strokeLinecap: "round" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.56641 16.4336H22.0331", stroke: "#4885EA", strokeWidth: "2.26667", strokeLinecap: "round" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.56641 22.1016H15.2331", stroke: "#4885EA", strokeWidth: "2.26667", strokeLinecap: "round" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M25.9168 22.1653C26.8019 21.2801 28.2371 21.2801 29.1223 22.1653C30.0075 23.0505 30.0075 24.4856 29.1223 25.3708L22.8055 31.6876L18.7043 32.5833L19.5999 28.4821L25.9168 22.1653Z", fill: "#4885EA" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("defs", {
      children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("linearGradient", {
        id: "paint0_linear_2006_189153", x1: "15.794", y1: "3.40625", x2: "15.794", y2: "31.7396", gradientUnits: "userSpaceOnUse", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("stop", { stopColor: "white" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("stop", { offset: "1", stopColor: "#CCF4F9" })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_2006_189153", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "34", height: "34", fill: "white", transform: "translate(0.5)" }) })
      ]
    })
    ]
  });
};
const ActionRecordes$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActionRecordes,
  default: ActionRecordes
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1v = "_svg_theme_fill_color_1k1lw_3";
const defaultCss$1 = "_defaultCss_1k1lw_55";
const SecColor = "_SecColor_1k1lw_226";
const FAQIcon$1 = "_FAQIcon_1k1lw_251";
const css$1r = {
  svg_theme_fill_color: svg_theme_fill_color$1v,
  defaultCss: defaultCss$1,
  SecColor,
  FAQIcon: FAQIcon$1
};
const AddIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_257_191418)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "0.75", y: "0.75", width: "46.5", height: "46.5", rx: "8.85", fill: "black", fillOpacity: "0.05", stroke: "#EAB700", strokeWidth: "1.5" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { stroke: "#EAB700", fillRule: "evenodd", clipRule: "evenodd", d: "M25.1998 10.4998C25.1998 9.83706 24.6625 9.2998 23.9998 9.2998C23.3371 9.2998 22.7998 9.83706 22.7998 10.4998L22.7998 22.7998H10.4998C9.83706 22.7998 9.2998 23.3371 9.2998 23.9998C9.2998 24.6625 9.83706 25.1998 10.4998 25.1998H22.7998L22.7998 37.4998C22.7998 38.1625 23.3371 38.6998 23.9998 38.6998C24.6625 38.6998 25.1998 38.1625 25.1998 37.4998L25.1998 25.1998H37.4998C38.1625 25.1998 38.6998 24.6625 38.6998 23.9998C38.6998 23.3371 38.1625 22.7998 37.4998 22.7998H25.1998L25.1998 10.4998Z" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_191418", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "48", height: "48", rx: "9.6", fill: "white" }) }) })
    ]
  });
};
const Add = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AddIcon,
  default: AddIcon
}, Symbol.toStringTag, { value: "Module" }));
const AlreadyGetBonusIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "40",
      height: "30",
      viewBox: "0 0 40 30",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillOpacity: isSelect ? "1" : "0.6",
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M28.48 2.07006C27.04 0.640059 24.72 0.640059 23.29 2.07006V2.08006L23.05 2.32006C22.53 2.83006 22.19 3.45006 22.01 4.11006L19.51 1.61006C19.12 1.22006 18.49 1.22006 18.1 1.61006L16.69 3.02006C16.3 3.41006 16.3 4.04006 16.69 4.43006L26.3657 14.1001H10C9.45 14.1001 9 14.5501 9 15.1001V25.1001C9 26.7601 10.34 28.1001 12 28.1001H28C29.66 28.1001 31 26.7601 31 25.1001V18.7317L33.67 21.4001C34.06 21.7901 34.69 21.7901 35.08 21.4001L36.49 19.9901C36.88 19.6001 36.88 18.9701 36.49 18.5801L33.99 16.0801C34.64 15.9001 35.26 15.5601 35.78 15.0401L36.02 14.8001C37.45 13.3601 37.45 11.0401 36.02 9.61006C34.44 8.03006 32.23 7.46006 30.19 7.90006C30.63 5.87006 30.06 3.65006 28.48 2.07006ZM27.29 9.37006L24.47 6.55006L24.46 6.56006C23.68 5.78006 23.68 4.51006 24.46 3.73006L24.7 3.49006C25.35 2.84006 26.41 2.84006 27.06 3.49006C28.68 5.10006 28.75 7.67006 27.29 9.37006ZM31.54 13.6201L28.72 10.8001L28.73 10.7901C30.43 9.33006 33 9.41006 34.61 11.0201C35.26 11.6701 35.26 12.7301 34.61 13.3801L34.37 13.6201C33.59 14.4001 32.32 14.4001 31.54 13.6201Z",
          fill: "#C4FFD9"
        }
      )
    }
  );
};
const AlreadyGetBonus = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AlreadyGetBonusIcon,
  default: AlreadyGetBonusIcon
}, Symbol.toStringTag, { value: "Module" }));
const ArrowIcon = ({ className, isSelect = false, style: style2 = {} } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "30",
      height: "80",
      viewBox: "0 0 30 80",
      fill: "none",
      style: style2,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M12.5 76.6621C12.5 78.0428 13.6193 79.1621 15 79.1621C16.3807 79.1621 17.5 78.0428 17.5 76.6621L12.5 76.6621ZM15 0.662109L0.566241 25.6621L29.4338 25.6621L15 0.662109ZM17.5 76.6621L17.5 23.1621L12.5 23.1621L12.5 76.6621L17.5 76.6621Z",
          fill: "#FED39D"
        }
      )
    }
  );
};
const Arrow$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowIcon,
  default: ArrowIcon
}, Symbol.toStringTag, { value: "Module" }));
const ArrowLeftInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "11", height: "40", viewBox: "0 0 11 40", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
      clipPath: "url(#clip0_1623_194566)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M10.0449 10.9844C9.75204 10.6915 9.27717 10.6915 8.98428 10.9844L-0.0313359 20L8.98428 29.0156C9.27717 29.3085 9.75204 29.3085 10.0449 29.0156C10.3378 28.7227 10.3378 28.2478 10.0449 27.955L2.08998 20L10.0449 12.045C10.3378 11.7522 10.3378 11.2773 10.0449 10.9844Z",
          fill: "#2FA33F"
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1623_194566", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "11", height: "40", rx: "5.5", fill: "white" }) }) })
    ]
  });
};
const ArrowLeftInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowLeftInMineIcon,
  default: ArrowLeftInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const ArrowRightBicolor = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_1310_79176)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M10.8667 21.2271C11.2572 21.6176 11.8904 21.6176 12.2809 21.2271L21.4733 12.0347L12.2809 2.84228C11.8904 2.45176 11.2572 2.45176 10.8667 2.84228C10.4762 3.2328 10.4762 3.86597 10.8667 4.25649L18.6449 12.0347L10.8667 19.8128C10.4762 20.2034 10.4762 20.8365 10.8667 21.2271Z",
          fill: "#2FA33F"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          opacity: "0.5",
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M3.8667 21.2271C4.25723 21.6176 4.89039 21.6176 5.28092 21.2271L14.4733 12.0347L5.28092 2.84228C4.89039 2.45176 4.25723 2.45176 3.8667 2.84228C3.47618 3.2328 3.47618 3.86597 3.8667 4.25649L11.6449 12.0347L3.8667 19.8128C3.47618 20.2034 3.47618 20.8365 3.8667 21.2271Z",
          fill: "#2FA33F"
        }
      )
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1310_79176", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "24", height: "24", rx: "4.8", fill: "white" }) }) })
    ]
  });
};
const ArrowRightBicolor$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowRightBicolor,
  default: ArrowRightBicolor
}, Symbol.toStringTag, { value: "Module" }));
const ArrowRightInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "11", height: "40", viewBox: "0 0 11 40", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_1623_194385)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M0.669908 10.9844C0.962801 10.6915 1.43768 10.6915 1.73057 10.9844L10.7462 20L1.73057 29.0156C1.43768 29.3085 0.962801 29.3085 0.669908 29.0156C0.377015 28.7227 0.377015 28.2478 0.669908 27.955L8.62486 20L0.669908 12.045C0.377015 11.7522 0.377015 11.2773 0.669908 10.9844Z", fill: "#2FA33F" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1623_194385", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "11", height: "40", rx: "5.5", fill: "white" }) }) })
    ]
  });
};
const ArrowRightInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowRightInMineIcon,
  default: ArrowRightInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const ArrowXIcon = ({
  className,
  isSelect = false,
  style: style2 = {}
} = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      style: style2,
      xmlns: "http://www.w3.org/2000/svg",
      width: "223",
      height: "30",
      viewBox: "0 0 223 30",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M3 12.5C1.61929 12.5 0.5 13.6193 0.5 15C0.5 16.3807 1.61929 17.5 3 17.5L3 12.5ZM223 15L198 0.566243V29.4338L223 15ZM3 17.5L200.5 17.5V12.5L3 12.5L3 17.5Z",
          fill: "#FED39D"
        }
      )
    }
  );
};
const ArrowX$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowXIcon,
  default: ArrowXIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioDeleteIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2.92935 5.99857H11.9869L11.988 5.99952H21.0456C21.0668 5.99952 21.088 5.99964 21.1093 5.99976C21.2003 6.00027 21.2915 6.00079 21.3815 5.99187C21.6833 5.96128 21.9195 5.79541 21.9677 5.54636C22.1797 4.4474 21.3243 3.58554 20.1784 3.58601C20.0509 3.5861 19.9234 3.58622 19.7959 3.58634C19.2223 3.58687 18.6486 3.5874 18.075 3.58506C17.7375 3.58382 17.5994 3.59971 17.5434 3.53938C17.4915 3.48349 17.51 3.3622 17.5057 3.1013C17.4877 1.98274 16.4018 1.01763 15.1078 1.00855C13.1519 0.994523 11.1954 1.00061 9.23951 1.0067L9.10663 1.00711C8.56423 1.00855 8.08522 1.18541 7.6651 1.4727C6.97967 1.94259 6.69641 2.56975 6.71997 3.30351C6.72726 3.52292 6.64256 3.59318 6.38398 3.58936C5.65404 3.57887 4.92324 3.58164 4.19271 3.58442C4.0913 3.5848 3.9899 3.58519 3.8885 3.58554C2.78183 3.58936 2.00778 4.25285 2.00105 5.19932C1.99656 5.81453 2.21026 5.99857 2.92935 5.99857ZM13.4739 3.58506H12.1008C11.7909 3.58506 11.4811 3.58462 11.1712 3.58418C10.3133 3.58297 9.45544 3.58176 8.59789 3.58984C8.32192 3.59223 8.24732 3.51049 8.25237 3.28582C8.26639 2.64097 8.63378 2.31688 9.39213 2.31688C11.2229 2.31544 13.0537 2.31497 14.8845 2.31688C15.6412 2.31736 16.1068 2.81497 15.9632 3.45073C15.932 3.58804 15.8298 3.58631 15.724 3.58451C15.7119 3.58431 15.6998 3.5841 15.6878 3.5841C15.0973 3.58525 14.5071 3.58517 13.9167 3.5851C13.7691 3.58508 13.6215 3.58506 13.4739 3.58506Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5.5 20V7H3.5V20C3.5 21.6569 4.84315 23 6.5 23H17.5C19.1569 23 20.5 21.6569 20.5 20V7H18.5V20C18.5 20.5523 18.0523 21 17.5 21H6.5C5.94772 21 5.5 20.5523 5.5 20Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.5 11C10.5 10.4477 10.0523 10 9.5 10C8.94772 10 8.5 10.4477 8.5 11L8.5 18C8.5 18.5523 8.94771 19 9.5 19C10.0523 19 10.5 18.5523 10.5 18V11Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.5 10C15.0523 10 15.5 10.4477 15.5 11V18C15.5 18.5523 15.0523 19 14.5 19C13.9477 19 13.5 18.5523 13.5 18V11C13.5 10.4477 13.9477 10 14.5 10Z", fill: "white" })
    ]
  });
};
const AudioDelete = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioDeleteIcon,
  default: AudioDeleteIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioLoopIcon = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M23.1499 7.52929C23.7499 7.18288 23.7499 6.31685 23.1499 5.97044L19.0999 3.63217C18.4999 3.28576 17.7499 3.71878 17.7499 4.4116V5.87487H5.84072C4.18387 5.87487 2.84072 7.21801 2.84072 8.87487V11.8749H4.84072V8.87487C4.84072 8.32258 5.28844 7.87487 5.84072 7.87487H17.7499V9.08814C17.7499 9.78096 18.4999 10.214 19.0999 9.86756L23.1499 7.52929ZM21.1532 17.4374V14.4374H23.1532V17.4374C23.1532 19.0942 21.8101 20.4374 20.1532 20.4374H8.2499V21.5882C8.2499 22.281 7.4999 22.714 6.8999 22.3676L2.8499 20.0293C2.2499 19.6829 2.2499 18.8169 2.8499 18.4705L6.8999 16.1322C7.4999 15.7858 8.2499 16.2188 8.2499 16.9116V18.4374H20.1532C20.7055 18.4374 21.1532 17.9896 21.1532 17.4374Z", fill: "#FFDC82" }) });
};
const AudioLoop = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioLoopIcon,
  default: AudioLoopIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioMenuIcon = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "22", height: "16", viewBox: "0 0 22 16", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M18.5 0C16.8431 0 15.5 1.34315 15.5 3V9.33682C15.0454 9.12085 14.5368 9 14 9C12.067 9 10.5 10.567 10.5 12.5C10.5 14.433 12.067 16 14 16C15.933 16 17.5 14.433 17.5 12.5C17.5 12.3899 17.4949 12.2811 17.485 12.1736C17.4949 12.1172 17.5 12.0592 17.5 12V3C17.5 2.44772 17.9477 2 18.5 2C19.0523 2 19.5 1.55228 19.5 1C19.5 0.447715 19.0523 0 18.5 0ZM0.5 3C0.5 2.44772 0.947715 2 1.5 2H12.5C13.0523 2 13.5 2.44772 13.5 3C13.5 3.55228 13.0523 4 12.5 4H1.5C0.947715 4 0.5 3.55228 0.5 3ZM0.5 8C0.5 7.44772 0.947715 7 1.5 7H9.5C10.0523 7 10.5 7.44772 10.5 8C10.5 8.55229 10.0523 9 9.5 9H1.5C0.947715 9 0.5 8.55229 0.5 8ZM1.5 12C0.947715 12 0.5 12.4477 0.5 13C0.5 13.5523 0.947715 14 1.5 14H7.5C8.05228 14 8.5 13.5523 8.5 13C8.5 12.4477 8.05228 12 7.5 12H1.5ZM14 14C14.8284 14 15.5 13.3284 15.5 12.5C15.5 11.6716 14.8284 11 14 11C13.1716 11 12.5 11.6716 12.5 12.5C12.5 13.3284 13.1716 14 14 14Z", fill: "#FFDC82" }) });
};
const AudioMenu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioMenuIcon,
  default: AudioMenuIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioMusicIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M21.5 2.64218C21.5 2.03739 20.9673 1.57102 20.3678 1.65096L7.36784 3.38429C6.87103 3.45053 6.5 3.87431 6.5 4.37552V16.6707C6.18722 16.5602 5.85064 16.5 5.5 16.5C3.84315 16.5 2.5 17.8431 2.5 19.5C2.5 21.1569 3.84315 22.5 5.5 22.5C7.15685 22.5 8.5 21.1569 8.5 19.5L8.5 7.23333L19.5 5.76667V13.6707C19.1872 13.5602 18.8506 13.5 18.5 13.5C16.8431 13.5 15.5 14.8431 15.5 16.5C15.5 18.1569 16.8431 19.5 18.5 19.5C20.1569 19.5 21.5 18.1569 21.5 16.5V2.64218Z",
          fill: "#EAB700"
        }
      )
    }
  );
};
const AudioMusic = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioMusicIcon,
  default: AudioMusicIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioNextIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M18.5 5.40039C19.0523 5.40039 19.5 5.84811 19.5 6.40039L19.5 19.4004C19.5 19.9527 19.0523 20.4004 18.5 20.4004C17.9477 20.4004 17.5 19.9527 17.5 19.4004V15.7098L9.5 20.3286C8.16667 21.0984 6.5 20.1361 6.5 18.5965V8.20424C6.5 6.66464 8.16667 5.70239 9.5 6.47219L17.5 11.091V6.40039C17.5 5.84811 17.9477 5.40039 18.5 5.40039Z", fill: "#FFDC82" }) });
};
const AudioNext = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioNextIcon,
  default: AudioNextIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioNoVolumIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6.99748 8.72871L12.0257 4.51457C12.1415 4.41752 12.2812 4.35661 12.4287 4.33889C12.5762 4.32116 12.7255 4.34734 12.8594 4.4144C12.9933 4.48145 13.1063 4.58667 13.1854 4.71789C13.2644 4.84913 13.3064 5.00102 13.3064 5.15607V20.8448C13.3063 20.9996 13.2643 21.1513 13.1854 21.2822C13.1065 21.4133 12.9937 21.5185 12.86 21.5856C12.7265 21.6526 12.5774 21.6791 12.4301 21.6616C12.2827 21.6442 12.1431 21.5836 12.0273 21.4871L6.86044 17.1809H2.95462C2.74572 17.1809 2.54539 17.0942 2.39768 16.9399C2.24998 16.7857 2.16699 16.5765 2.16699 16.3584V9.55114C2.16699 9.33301 2.24998 9.12382 2.39768 8.96959C2.54539 8.81535 2.74572 8.72871 2.95462 8.72871H6.99748Z", fill: "#FFDC82" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M23.2755 10.0814C23.5831 9.76021 23.5831 9.23947 23.2755 8.91829C22.9679 8.59711 22.4692 8.59711 22.1616 8.91829L15.8497 15.5091C15.5422 15.8303 15.5422 16.3511 15.8497 16.6722C16.1573 16.9934 16.656 16.9934 16.9636 16.6722L23.2755 10.0814Z", fill: "#FFDC82" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M16.9648 9.30827C16.6572 8.98709 16.1585 8.98709 15.8509 9.30827C15.5433 9.62944 15.5433 10.1502 15.8509 10.4714L22.1628 17.0622C22.4704 17.3834 22.9691 17.3834 23.2767 17.0622C23.5843 16.741 23.5843 16.2203 23.2767 15.8991L16.9648 9.30827Z", fill: "#FFDC82" })
    ]
  });
};
const AudioNoVolum = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioNoVolumIcon,
  default: AudioNoVolumIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioOneceIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.5 6H16.5C19.5376 6 22 8.46243 22 11.5C22 14.5376 19.5376 17 16.5 17H9.5625V19H16.5C20.6421 19 24 15.6421 24 11.5C24 7.35786 20.6421 4 16.5 4H9.5C5.35786 4 2 7.35786 2 11.5C2 13.1699 2.54577 14.7124 3.46866 15.9587L5.14143 14.855C4.4257 13.9265 4 12.763 4 11.5C4 8.46243 6.46243 6 9.5 6Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.438 8V16H12.7466V9.60547H12.6997L10.8677 10.7539V9.25391L12.8481 8H14.438Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M4.38999 17.1653C3.79098 17.5606 3.79098 18.4394 4.38999 18.8347L8.13676 21.3069C8.80161 21.7456 9.6875 21.2688 9.6875 20.4722V15.5278C9.6875 14.7312 8.80161 14.2544 8.13676 14.6931L4.38999 17.1653Z", fill: "#FEE004" })
    ]
  });
};
const AudioOnce = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioOneceIcon,
  default: AudioOneceIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioPausedIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M16.4784 23.9998C15.971 23.9998 15.4845 23.7983 15.1257 23.4395C14.7669 23.0807 14.5654 22.5941 14.5654 22.0868V3.91258C14.5654 3.4052 14.7669 2.91861 15.1257 2.55984C15.4845 2.20107 15.971 1.99951 16.4784 1.99951H18.3915C18.8989 1.99951 19.3855 2.20107 19.7442 2.55984C20.103 2.91861 20.3046 3.4052 20.3046 3.91258V22.0868C20.3046 22.5941 20.103 23.0807 19.7442 23.4395C19.3855 23.7983 18.8989 23.9998 18.3915 23.9998H16.4784ZM6.91307 23.9998C6.40569 23.9998 5.9191 23.7983 5.56033 23.4395C5.20156 23.0807 5 22.5941 5 22.0868V3.91258C5 3.4052 5.20156 2.91861 5.56033 2.55984C5.9191 2.20107 6.40569 1.99951 6.91307 1.99951H8.82614C9.33352 1.99951 9.82012 2.20107 10.1789 2.55984C10.5377 2.91861 10.7392 3.4052 10.7392 3.91258V22.0868C10.7392 22.5941 10.5377 23.0807 10.1789 23.4395C9.82012 23.7983 9.33352 23.9998 8.82614 23.9998H6.91307Z", fill: "#FFDC82" }) });
};
const AudioPaused = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioPausedIcon,
  default: AudioPausedIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioPlayerIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M20.5 10.402C22.5 11.5567 22.5 14.4434 20.5 15.5981L8.5 22.5263C6.5 23.681 4 22.2377 4 19.9283V6.07186C4 3.76246 6.5 2.31908 8.5 3.47378L20.5 10.402Z", fill: "#FFDC82" }) });
};
const AudioPlayer = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioPlayerIcon,
  default: AudioPlayerIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioPreIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M7.5 5.40039C6.94771 5.40039 6.5 5.84811 6.5 6.40039V19.4004C6.5 19.9527 6.94772 20.4004 7.5 20.4004C8.05229 20.4004 8.5 19.9527 8.5 19.4004V15.7098L16.5 20.3286C17.8333 21.0984 19.5 20.1361 19.5 18.5965V8.20424C19.5 6.66464 17.8333 5.70239 16.5 6.47219L8.5 11.091V6.40039C8.5 5.84811 8.05229 5.40039 7.5 5.40039Z", fill: "#FFDC82" }) });
};
const AudioPre = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioPreIcon,
  default: AudioPreIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioRandomIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M19.5522 4.29289C19.9427 3.90237 20.5759 3.90237 20.9664 4.29289L23.9664 7.29289C24.3569 7.68342 24.3569 8.31658 23.9664 8.70711L20.9664 11.7071C20.5759 12.0976 19.9427 12.0976 19.5522 11.7071C19.1616 11.3166 19.1616 10.6834 19.5522 10.2929L20.8451 9H20.1569C19.3612 9 18.5981 9.31607 18.0355 9.87868L10.3787 17.5355C9.441 18.4732 8.16923 19 6.84315 19H4C3.44772 19 3 18.5523 3 18C3 17.4477 3.44772 17 4 17H6.84315C7.6388 17 8.40186 16.6839 8.96447 16.1213L16.6213 8.46446C17.559 7.52678 18.8308 7 20.1569 7H20.8451L19.5522 5.70711C19.1616 5.31658 19.1616 4.68342 19.5522 4.29289Z", fill: "#FFAA09" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6.84315 7C8.16923 7 9.441 7.52678 10.3787 8.46447L11.7071 9.79289C12.0976 10.1834 12.0976 10.8166 11.7071 11.2071C11.3166 11.5976 10.6834 11.5976 10.2929 11.2071L8.96447 9.87868C8.40186 9.31607 7.6388 9 6.84315 9H4C3.44772 9 3 8.55228 3 8C3 7.44772 3.44772 7 4 7H6.84315Z", fill: "#FFAA09" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M15.2929 16.2071C14.9024 15.8166 14.9024 15.1834 15.2929 14.7929C15.6834 14.4024 16.3166 14.4024 16.7071 14.7929L18.0355 16.1213C18.5981 16.6839 19.3612 17 20.1569 17H20.8451L19.5522 15.7071C19.1616 15.3166 19.1616 14.6834 19.5522 14.2929C19.9427 13.9024 20.5759 13.9024 20.9664 14.2929L23.9664 17.2929C24.3569 17.6834 24.3569 18.3166 23.9664 18.7071L20.9664 21.7071C20.5759 22.0976 19.9427 22.0976 19.5522 21.7071C19.1616 21.3166 19.1616 20.6834 19.5522 20.2929L20.8451 19H20.1569C18.8308 19 17.559 18.4732 16.6213 17.5355L15.2929 16.2071Z", fill: "#FFAA09" })
    ]
  });
};
const AudioRandom = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioRandomIcon,
  default: AudioRandomIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioStarIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "23", height: "21", viewBox: "0 0 23 21", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.55801 1.42379C10.1168 -0.29599 12.5498 -0.295991 13.1086 1.42379L14.3717 5.31126C14.6216 6.08037 15.3384 6.6011 16.147 6.6011H20.2346C22.0429 6.6011 22.7947 8.91505 21.3318 9.97793L18.0249 12.3805C17.3707 12.8559 17.0969 13.6984 17.3468 14.4675L18.6099 18.355C19.1687 20.0748 17.2003 21.5049 15.7374 20.442L12.4305 18.0394C11.7763 17.5641 10.8904 17.5641 10.2361 18.0394L6.92924 20.442C5.4663 21.5049 3.49794 20.0748 4.05673 18.355L5.31985 14.4675C5.56975 13.6984 5.29599 12.8559 4.64174 12.3805L1.33486 9.97793C-0.128073 8.91505 0.623775 6.6011 2.43206 6.6011H6.51959C7.32828 6.6011 8.045 6.08037 8.2949 5.31126L9.55801 1.42379Z", fill: "#FFDC82" }) });
};
const AudioStar = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioStarIcon,
  default: AudioStarIcon
}, Symbol.toStringTag, { value: "Module" }));
const AudioVolumIcon = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M12.3454 5.28169C13.212 4.77596 14.3006 5.40108 14.3006 6.4045V19.5957C14.3006 20.5991 13.212 21.2243 12.3454 20.7186L5.86502 16.937C5.85877 16.9333 5.85492 16.9266 5.85492 16.9194C5.85492 16.9081 5.84581 16.899 5.83457 16.899L3.90102 16.8997C3.18288 16.8999 2.60059 16.3178 2.60059 15.5997V10.3997C2.60059 9.6819 3.18234 9.0999 3.90015 9.09966L5.83596 9.09901C5.84643 9.09901 5.85492 9.09056 5.85492 9.08008C5.85492 9.07333 5.85851 9.06708 5.86433 9.06367L12.3454 5.28169ZM15.8541 8.2272C16.3363 7.77255 17.0958 7.79489 17.5504 8.2771C18.6997 9.49604 19.4003 11.1687 19.4003 13.0003C19.4003 14.8319 18.6997 16.5045 17.5505 17.7235C17.0958 18.2057 16.3364 18.2281 15.8541 17.7735C15.3719 17.3188 15.3495 16.5594 15.8042 16.0771C16.537 15.2998 17.0003 14.2148 17.0003 13.0003C17.0003 11.7858 16.537 10.7007 15.8042 9.92352C15.3496 9.44132 15.3719 8.68185 15.8541 8.2272ZM21.0782 5.71739C20.6458 5.2151 19.8882 5.15839 19.3859 5.59074C18.8836 6.02309 18.8269 6.78077 19.2592 7.28306C20.7395 9.00286 21.5445 10.9568 21.5445 13.0002C21.5445 15.0436 20.7395 16.9976 19.2592 18.7174C18.8269 19.2197 18.8836 19.9774 19.3859 20.4097C19.8882 20.8421 20.6458 20.7854 21.0782 20.2831C22.8692 18.2023 23.9445 15.7095 23.9445 13.0002C23.9445 10.291 22.8692 7.79815 21.0782 5.71739Z", fill: "#FFDC82" }) });
};
const AudioVolum = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AudioVolumIcon,
  default: AudioVolumIcon
}, Symbol.toStringTag, { value: "Module" }));
const BaixarAppIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_1_342047)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M13 26C20.1797 26 26 20.1797 26 13C26 5.8203 20.1797 0 13 0C5.8203 0 0 5.8203 0 13C0 20.1797 5.8203 26 13 26ZM15 12.5V7H11V12.5H9L13 17L17 12.5H15ZM7 19V18H19V19H7Z", fillOpacity: isSelect ? "1" : "0.6" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1_342047", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "26", height: "26", fill: "white" }) }) })
    ]
  });
};
const BaixarApp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaixarAppIcon,
  default: BaixarAppIcon
}, Symbol.toStringTag, { value: "Module" }));
const BaixarAppInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M7.46967 13.067C7.17678 13.3599 7.17678 13.8347 7.46967 14.1276L11.0252 17.6832C11.5636 18.2215 12.4364 18.2215 12.9748 17.6832L16.5303 14.1276C16.8232 13.8347 16.8232 13.3599 16.5303 13.067C16.2374 12.7741 15.7626 12.7741 15.4697 13.067L12.75 15.7866L12.75 6.66309C12.75 6.24887 12.4142 5.91309 12 5.91309C11.5858 5.91309 11.25 6.24887 11.25 6.66309L11.25 15.7866L8.53033 13.067C8.23744 12.7741 7.76256 12.7741 7.46967 13.067Z",
        fill: "#FFD205"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM20.5 12C20.5 16.6944 16.6944 20.5 12 20.5C7.30558 20.5 3.5 16.6944 3.5 12C3.5 7.30558 7.30558 3.5 12 3.5C16.6944 3.5 20.5 7.30558 20.5 12Z",
        fill: "#FFD205"
      }
    )
    ]
  });
};
const BaixarAppInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaixarAppInMineIcon,
  default: BaixarAppInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const BlacCentralIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "56", height: "46", viewBox: "0 0 56 46", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M0.833374 6.50006C0.833374 3.18635 3.51967 0.500061 6.83337 0.500061H49.8334C53.1471 0.500061 55.8334 3.18635 55.8334 6.50006V11.4998H38.8339C33.311 11.4998 28.8339 15.977 28.8339 21.4998C28.8339 27.0227 33.311 31.4998 38.8339 31.4998H55.8334V39.5001C55.8334 42.8138 53.1471 45.5001 49.8334 45.5001H6.83337C3.51966 45.5001 0.833374 42.8138 0.833374 39.5001V6.50006Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M38.8339 13.9998H55.8334V28.9998H38.8339C34.6917 28.9998 31.3339 25.642 31.3339 21.4998C31.3339 17.3577 34.6917 13.9998 38.8339 13.9998ZM39.3344 25.2501C41.4054 25.2501 43.0844 23.5712 43.0844 21.5001C43.0844 19.4291 41.4054 17.7501 39.3344 17.7501C37.2633 17.7501 35.5844 19.4291 35.5844 21.5001C35.5844 23.5712 37.2633 25.2501 39.3344 25.2501Z", fill: "white" })
    ]
  });
};
const BlacCentral = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BlacCentralIcon,
  default: BlacCentralIcon
}, Symbol.toStringTag, { value: "Module" }));
const BonusIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M14.6667 2C12.6416 2 11 3.64162 11 5.66667V6C11 6.72857 11.1948 7.41165 11.5351 8H8C7.44772 8 7 8.44772 7 9V11C7 11.5523 7.44772 12 8 12H32C32.5523 12 33 11.5523 33 11V9C33 8.44772 32.5523 8 32 8H28.4649C28.8052 7.41165 29 6.72857 29 6V5.66667C29 3.64162 27.3584 2 25.3333 2C23.094 2 21.1262 3.16216 20 4.91624C18.8738 3.16216 16.906 2 14.6667 2ZM18.9874 8H15C13.8954 8 13 7.10457 13 6V5.66667C13 4.74619 13.7462 4 14.6667 4C16.9477 4 18.8172 5.76252 18.9874 8ZM25 8H21.0126C21.1828 5.76252 23.0523 4 25.3333 4C26.2538 4 27 4.74619 27 5.66667V6C27 7.10457 26.1046 8 25 8Z", fill: "white", fillOpacity: "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10 14C9.44772 14 9 14.4477 9 15V25C9 26.6569 10.3431 28 12 28H28C29.6569 28 31 26.6569 31 25V15C31 14.4477 30.5523 14 30 14H10Z", fill: "white", fillOpacity: "0.6" })
    ]
  });
};
const Bonus$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BonusIcon,
  default: BonusIcon
}, Symbol.toStringTag, { value: "Module" }));
const CardIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "32", height: "32", viewBox: "0 0 32 32", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M1.3335 6.21789C1.3335 4.86786 2.42791 3.77344 3.77794 3.77344H28.2224C29.5724 3.77344 30.6668 4.86785 30.6668 6.21788V9.88433H1.3335V6.21789Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M1.3335 12.3288H30.6668V25.7734C30.6668 27.1235 29.5724 28.2179 28.2224 28.2179H3.77794C2.42791 28.2179 1.3335 27.1235 1.3335 25.7734V12.3288Z",
        fill: "#717E97"
      }
    )
    ]
  });
};
const Card$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CardIcon,
  default: CardIcon
}, Symbol.toStringTag, { value: "Module" }));
const CloseIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "32", height: "32", viewBox: "0 0 32 32", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_257_191562)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2.99827 1.7675C2.60775 1.37698 1.97458 1.37698 1.58406 1.7675C1.19354 2.15803 1.19354 2.79119 1.58406 3.18172L14.4023 16L1.58406 28.8183C1.19354 29.2088 1.19354 29.842 1.58406 30.2325C1.97458 30.623 2.60775 30.623 2.99827 30.2325L15.8166 17.4142L28.8188 30.4165C29.2093 30.807 29.8425 30.807 30.233 30.4165C30.6236 30.026 30.6236 29.3928 30.233 29.0023L17.2308 16L30.233 2.99773C30.6236 2.60721 30.6236 1.97404 30.233 1.58352C29.8425 1.193 29.2093 1.193 28.8188 1.58352L15.8166 14.5858L2.99827 1.7675Z", fill: "white" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_191562", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "32", height: "32", fill: "white" }) }) })
    ]
  });
};
const CloseIcon$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CloseIcon,
  default: CloseIcon
}, Symbol.toStringTag, { value: "Module" }));
const CloseIconInLogin = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "65", height: "65", viewBox: "0 0 65 65", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
      clipPath: "url(#clip0_432_25123)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M61.3 32.5C61.3 48.4058 48.4058 61.3 32.5 61.3C16.5942 61.3 3.7 48.4058 3.7 32.5C3.7 16.5942 16.5942 3.7 32.5 3.7C48.4058 3.7 61.3 16.5942 61.3 32.5ZM64.5 32.5C64.5 50.1731 50.1731 64.5 32.5 64.5C14.8269 64.5 0.5 50.1731 0.5 32.5C0.5 14.8269 14.8269 0.5 32.5 0.5C50.1731 0.5 64.5 14.8269 64.5 32.5ZM21.5855 21.0138C22.6269 19.9724 24.3154 19.9725 25.3568 21.0138L32.5004 28.1575L39.871 20.787C40.9124 19.7456 42.6008 19.7456 43.6422 20.787C44.6836 21.8284 44.6836 23.5168 43.6422 24.5582L36.2717 31.9288L44.2129 39.87C45.2543 40.9114 45.2543 42.5999 44.2129 43.6413C43.1715 44.6827 41.4831 44.6827 40.4417 43.6413L32.5004 35.7L24.786 43.4144C23.7446 44.4558 22.0562 44.4558 21.0148 43.4144C19.9734 42.373 19.9734 40.6845 21.0148 39.6431L28.7292 31.9288L21.5855 24.7851C20.5441 23.7437 20.5441 22.0552 21.5855 21.0138Z",
          fill: "white"
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_432_25123", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "0.5", y: "0.5", width: "64", height: "64", rx: "8.53333", fill: "white" }) }) })
    ]
  });
};
const CloseIconInLogin$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CloseIconInLogin,
  default: CloseIconInLogin
}, Symbol.toStringTag, { value: "Module" }));
const CloseIconInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "56", height: "56", viewBox: "0 0 56 56", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_4140_105184)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M22.0387 20.3755C21.6481 19.985 21.015 19.985 20.6245 20.3755C20.2339 20.7661 20.2339 21.3992 20.6245 21.7898L26.8347 28L20.6245 34.2102C20.2339 34.6008 20.2339 35.2339 20.6245 35.6245C21.015 36.015 21.6481 36.015 22.0387 35.6245L28.2489 29.4142L34.553 35.7183C34.9436 36.1089 35.5767 36.1089 35.9672 35.7183C36.3578 35.3278 36.3578 34.6946 35.9672 34.3041L29.6631 28L35.9672 21.6959C36.3578 21.3054 36.3578 20.6722 35.9672 20.2817C35.5767 19.8911 34.9436 19.8911 34.553 20.2817L28.2489 26.5858L22.0387 20.3755Z", fill: "#A7B7D7" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_4140_105184", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "56", height: "56", rx: "8", fill: "white" }) }) })
    ]
  });
};
const CloseIconInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CloseIconInMineIcon,
  default: CloseIconInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const CloseModal = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(className, css$1r.defaultCss),
      xmlns: "http://www.w3.org/2000/svg",
      width: "60",
      height: "61",
      viewBox: "0 0 60 61",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
        clipPath: "url(#clip0_901_1622)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M57 30.5C57 45.4117 44.9117 57.5 30 57.5C15.0883 57.5 3 45.4117 3 30.5C3 15.5883 15.0883 3.5 30 3.5C44.9117 3.5 57 15.5883 57 30.5ZM60 30.5C60 47.0685 46.5685 60.5 30 60.5C13.4315 60.5 0 47.0685 0 30.5C0 13.9315 13.4315 0.5 30 0.5C46.5685 0.5 60 13.9315 60 30.5ZM19.768 19.732C20.7443 18.7557 22.3272 18.7557 23.3035 19.732L30.0005 26.4289L36.9101 19.5193C37.8865 18.543 39.4694 18.543 40.4457 19.5193C41.422 20.4956 41.422 22.0785 40.4457 23.0548L33.536 29.9645L40.9812 37.4097C41.9575 38.386 41.9575 39.9689 40.9812 40.9452C40.0049 41.9215 38.422 41.9215 37.4457 40.9452L30.0005 33.5L22.768 40.7325C21.7917 41.7088 20.2088 41.7088 19.2325 40.7325C18.2562 39.7562 18.2562 38.1733 19.2325 37.1969L26.465 29.9645L19.768 23.2675C18.7917 22.2912 18.7917 20.7083 19.768 19.732Z",
            fill: "white"
          }
        )
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_901_1622", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { y: "0.5", width: "60", height: "60", rx: "8", fill: "white" }) }) })
      ]
    }
  );
};
const CloseModal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CloseModal,
  default: CloseModal
}, Symbol.toStringTag, { value: "Module" }));
const ConfiguraDeSaqueIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "73", height: "60", viewBox: "0 0 73 60", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_257_305993)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M4.25 11.1841C4.25 7.87037 6.93629 5.18408 10.25 5.18408H55.25C58.5637 5.18408 61.25 7.87037 61.25 11.1841V15.6841H4.25V11.1841Z", fill: "#2FA33F" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.25 21.0002H47.9054C39.4784 24.2506 33.5 32.4272 33.5 42.0002C33.5 46.4119 34.7697 50.5271 36.9637 54.0002H10.25C6.93629 54.0002 4.25 51.3139 4.25 48.0002V21.0002ZM12.875 28.1252C11.6324 28.1252 10.625 29.1325 10.625 30.3752C10.625 31.6178 11.6324 32.6252 12.875 32.6252H21.875C23.1176 32.6252 24.125 31.6178 24.125 30.3752C24.125 29.1325 23.1176 28.1252 21.875 28.1252H12.875Z", fill: "#2FA33F" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M46.3688 30.9951L41.6695 30.1866C40.166 31.9137 38.9864 33.9303 38.2256 36.1417L41.2806 39.8134C41.1703 40.5253 41.113 41.2547 41.113 41.9976C41.113 42.7419 41.1705 43.4728 41.2813 44.1861L38.2256 47.8587C38.9864 50.0701 40.1659 52.0866 41.6695 53.8137L46.3741 53.0043C47.5055 53.9184 48.7807 54.6616 50.1604 55.1947L51.811 59.6719C52.9244 59.8873 54.0744 60.0002 55.2507 60.0002C56.4266 60.0002 57.5762 59.8874 58.6892 59.6721L60.338 55.1999C61.7221 54.6667 63.0011 53.9222 64.1357 53.0059L68.8318 53.8139C70.3352 52.087 71.5147 50.0707 72.2755 47.8596L69.2286 44.1977C69.3406 43.4807 69.3987 42.746 69.3987 41.9976C69.3987 41.2507 69.3408 40.5174 69.2293 39.8018L72.2755 36.1407C71.5146 33.9296 70.3352 31.9133 68.8317 30.1864L64.1409 30.9935C63.0045 30.0747 61.7228 29.3285 60.3358 28.7945L58.6892 24.3282C57.5762 24.1129 56.4266 24.0002 55.2507 24.0002C54.0744 24.0002 52.9244 24.113 51.811 24.3285L50.1626 28.7996C48.7799 29.3336 47.5021 30.0786 46.3688 30.9951ZM64.7088 41.9979C64.7088 47.2216 60.4742 51.4562 55.2505 51.4562C50.0269 51.4562 45.7922 47.2216 45.7922 41.9979C45.7922 36.7742 50.0269 32.5396 55.2505 32.5396C60.4742 32.5396 64.7088 36.7742 64.7088 41.9979Z", fill: "#2FA33F" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_305993", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "72", height: "60", fill: "white", transform: "translate(0.5)" }) }) })
    ]
  });
};
const ConfiguraDeSaque = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ConfiguraDeSaqueIcon,
  default: ConfiguraDeSaqueIcon
}, Symbol.toStringTag, { value: "Module" }));
const ConvidarInMenuIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "40", height: "40", viewBox: "0 0 40 40", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M8 6.24976C6.75736 6.24976 5.75 7.25712 5.75 8.49976V31.4998C5.75 32.7424 6.75736 33.7498 8 33.7498H32C33.2426 33.7498 34.25 32.7424 34.25 31.4998V20.9998C34.25 20.0333 35.0335 19.2498 36 19.2498C36.9665 19.2498 37.75 20.0333 37.75 20.9998V31.4998C37.75 34.6754 35.1756 37.2498 32 37.2498H8C4.82436 37.2498 2.25 34.6754 2.25 31.4998V8.49976C2.25 5.32412 4.82436 2.74976 8 2.74976H21C21.9665 2.74976 22.75 3.53326 22.75 4.49976C22.75 5.46625 21.9665 6.24976 21 6.24976H8ZM28.2629 4.26227C28.9463 3.57886 30.0543 3.57886 30.7377 4.26227L35.2103 8.73485C35.3351 8.73998 35.4604 8.74562 35.5861 8.75177L35.5693 9.09386L36.2377 9.76224C36.9211 10.4457 36.9211 11.5537 36.2377 12.2371L31.1752 17.2996C30.4918 17.983 29.3838 17.983 28.7004 17.2996C28.0169 16.6162 28.0169 15.5081 28.7004 14.8247L31.2614 12.2637C27.6482 12.4968 24.8562 13.3374 22.8621 14.7223C20.2727 16.5207 18.7505 19.4358 18.7505 23.9996C18.7505 24.9661 17.967 25.7496 17.0005 25.7496C16.034 25.7496 15.2505 24.9661 15.2505 23.9996C15.2505 18.5636 17.1294 14.4424 20.8656 11.8476C23.3822 10.0998 26.6028 9.14478 30.3484 8.82272L28.2629 6.73715C27.5794 6.05373 27.5794 4.94569 28.2629 4.26227Z",
        fill: "#FFDC82"
      }
    )
  });
};
const ConvidarInMenu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ConvidarInMenuIcon,
  default: ConvidarInMenuIcon
}, Symbol.toStringTag, { value: "Module" }));
const CpfIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1 4.66683C1 3.65431 1.82081 2.8335 2.83333 2.8335H21.1667C22.1792 2.8335 23 3.65431 23 4.66683V7.41667H1V4.66683Z", fill: "#C1E9FF" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M11.7721 14.5339H12.5378C12.7548 14.5339 12.9336 14.4965 13.0742 14.4219C13.2166 14.3455 13.3225 14.2405 13.3919 14.1068C13.4631 13.9714 13.4987 13.816 13.4987 13.6406C13.4987 13.4635 13.4631 13.309 13.3919 13.1771C13.3225 13.0434 13.2166 12.9401 13.0742 12.8672C12.9319 12.7925 12.7513 12.7552 12.5326 12.7552H11.7721V14.5339Z", fill: "#C1E9FF" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M1 9.25H23V19.3335C23 20.346 22.1792 21.1668 21.1667 21.1668H2.83333C1.82081 21.1668 1 20.346 1 19.3335V9.25ZM8.69531 13.7005H9.83594C9.79948 13.3915 9.71615 13.1172 9.58594 12.8776C9.45747 12.638 9.2908 12.4358 9.08594 12.2708C8.88108 12.1042 8.64583 11.9774 8.38021 11.8906C8.11632 11.8038 7.82986 11.7604 7.52083 11.7604C7.05208 11.7604 6.63021 11.8681 6.25521 12.0833C5.88021 12.2969 5.58333 12.6076 5.36458 13.0156C5.14583 13.4236 5.03646 13.9184 5.03646 14.5C5.03646 15.0799 5.1441 15.5738 5.35938 15.9818C5.57639 16.3898 5.87153 16.7014 6.24479 16.9167C6.61979 17.1319 7.04514 17.2396 7.52083 17.2396C7.86285 17.2396 8.16927 17.1884 8.4401 17.0859C8.71267 16.9818 8.94705 16.8411 9.14323 16.6641C9.34115 16.4852 9.49826 16.283 9.61458 16.0573C9.73264 15.8299 9.80642 15.5938 9.83594 15.349L8.69531 15.3438C8.66927 15.4861 8.6224 15.6128 8.55469 15.724C8.48872 15.8351 8.40538 15.9297 8.30469 16.0078C8.20399 16.0842 8.08854 16.1424 7.95833 16.1823C7.82986 16.2222 7.6901 16.2422 7.53906 16.2422C7.26997 16.2422 7.03299 16.1762 6.82812 16.0443C6.62326 15.9123 6.46354 15.717 6.34896 15.4583C6.23611 15.1997 6.17969 14.8802 6.17969 14.5C6.17969 14.1302 6.23611 13.816 6.34896 13.5573C6.46181 13.2969 6.62066 13.099 6.82552 12.9635C7.03038 12.8264 7.27083 12.7578 7.54688 12.7578C7.69965 12.7578 7.84115 12.7795 7.97135 12.8229C8.1033 12.8663 8.21962 12.9288 8.32031 13.0104C8.42101 13.092 8.50347 13.191 8.56771 13.3073C8.63194 13.4219 8.67448 13.553 8.69531 13.7005ZM12.7487 11.8333H10.6445V17.1667H11.7721V15.4375H12.7201C13.1298 15.4375 13.4787 15.362 13.7669 15.2109C14.0569 15.0599 14.2782 14.849 14.431 14.5781C14.5838 14.3073 14.6602 13.9948 14.6602 13.6406C14.6602 13.2865 14.5846 12.974 14.4336 12.7031C14.2843 12.4306 14.0673 12.2179 13.7826 12.0651C13.4978 11.9106 13.1532 11.8333 12.7487 11.8333ZM18.9238 11.8333H15.3926V17.1667H16.5202V14.9635H18.6895V14.0339H16.5202V12.763H18.9238V11.8333Z", fill: "#C1E9FF" })
    ]
  });
};
const Cpf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CpfIcon,
  default: CpfIcon
}, Symbol.toStringTag, { value: "Module" }));
const DepositItemTipIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), viewBox: "0 0 8 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M0 0H8V6.85714L0 12V0Z" }) });
};
const DepositItemTip = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DepositItemTipIcon,
  default: DepositItemTipIcon
}, Symbol.toStringTag, { value: "Module" }));
const DepositSuccess = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "55", height: "56", viewBox: "0 0 55 56", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_3410_2495)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "27.9995", cy: "28.3662", r: "27.5", fill: "#1CC245" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.2495 28.3662L25.8923 40.009L44.1111 21.7903", stroke: "white", strokeWidth: "5.5", strokeLinecap: "round", strokeLinejoin: "round" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_3410_2495", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { y: "0.366699", width: "55", height: "55", rx: "27.5", fill: "white" }) }) })
    ]
  });
};
const DepositSuccess$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DepositSuccess,
  default: DepositSuccess
}, Symbol.toStringTag, { value: "Module" }));
const DepositTabIcon = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className, css$1r.SecColor),
      xmlns: "http://www.w3.org/2000/svg",
      width: "28",
      height: "28",
      viewBox: "0 0 28 28",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
        clipPath: "url(#clip0_257_236278)", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M5.47732 0.727051C4.22212 0.727051 3.20459 1.74459 3.20459 2.99978V25.7271C3.20459 26.9822 4.22213 27.9998 5.47732 27.9998H17.8207C16.2834 26.9777 15.1847 25.3484 14.867 23.4543H6.0455C5.4179 23.4543 4.90914 22.9456 4.90914 22.318V4.13614C4.90914 3.50855 5.4179 2.99978 6.0455 2.99978H20.8182C21.4458 2.99978 21.9546 3.50855 21.9546 4.13614V15.5093C22.5459 15.5404 23.1172 15.6468 23.6591 15.8191V2.99978C23.6591 1.74459 22.6416 0.727051 21.3864 0.727051H5.47732ZM10.9943 1.52245C10.8374 1.52245 10.7102 1.64964 10.7102 1.80654C10.7102 1.96344 10.8374 2.09063 10.9943 2.09063H16.108C16.2649 2.09063 16.3921 1.96344 16.3921 1.80654C16.3921 1.64964 16.2649 1.52245 16.108 1.52245H10.9943ZM13.1875 27.4316C14.1289 27.4316 14.8921 26.6684 14.8921 25.727C14.8921 24.7856 14.1289 24.0225 13.1875 24.0225C12.2461 24.0225 11.483 24.7856 11.483 25.727C11.483 26.6684 12.2461 27.4316 13.1875 27.4316Z",
            fill: "#373638"
          }
        ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M21.5908 27.9996C24.7287 27.9996 27.2726 25.4558 27.2726 22.3178C27.2726 19.1798 24.7287 16.636 21.5908 16.636C18.4528 16.636 15.9089 19.1798 15.9089 22.3178C15.9089 25.4558 18.4528 27.9996 21.5908 27.9996ZM19.8959 24.2117C20.2697 24.2117 20.6097 24.0674 20.8633 23.8314C20.8282 24.1515 20.6859 24.3916 20.3694 24.6852V25.1587H22.2633V24.6852C21.9776 24.4483 21.8476 24.2206 21.8032 23.8619C22.0529 24.0798 22.3794 24.2117 22.7368 24.2117C23.5213 24.2117 24.1573 23.5758 24.1573 22.7913C24.1573 21.9169 22.8906 20.8397 21.9887 20.0727C21.7163 19.8411 21.4773 19.6378 21.3164 19.4769C21.0928 19.7365 20.742 20.0298 20.3623 20.3474C19.4946 21.0731 18.4755 21.9255 18.4755 22.7913C18.4755 23.5758 19.1114 24.2117 19.8959 24.2117Z",
            fill: "#373638"
          }
        )
        ]
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", {
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", {
          id: "clip0_257_236278", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "rect",
            {
              width: "27.2727",
              height: "27.2727",
              fill: "white",
              transform: "translate(0 0.727051)"
            }
          )
        })
      })
      ]
    }
  );
};
const DepositTab = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DepositTabIcon,
  default: DepositTabIcon
}, Symbol.toStringTag, { value: "Module" }));
const DepositoIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "56", height: "46", viewBox: "0 0 56 46", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.02838 0.50156V2.0625L8.52838 2.0625V0.5H49.1666C52.4803 0.5 55.1666 3.18629 55.1666 6.5V8.99976H35.6671C31.5249 8.99976 28.1671 12.3576 28.1671 16.4998C28.1671 20.6419 31.5249 23.9998 35.6671 23.9998H55.1666V39.5C55.1666 42.8137 52.4803 45.5 49.1666 45.5H8.52838V44.25H6.02838V45.4984C2.7785 45.425 0.166565 42.7675 0.166565 39.5V6.5C0.166565 3.23248 2.7785 0.575003 6.02838 0.50156ZM6.02838 6.75V11.4375H8.52838V6.75H6.02838ZM6.02838 16.125L6.02838 20.8125H8.52838L8.52838 16.125H6.02838ZM6.02838 25.5V30.1875H8.52838V25.5H6.02838ZM6.02838 34.875V39.5625H8.52838V34.875H6.02838Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M39.9175 16.4998C39.9175 18.5708 38.2386 20.2498 36.1675 20.2498C34.0965 20.2498 32.4175 18.5708 32.4175 16.4998C32.4175 14.4287 34.0965 12.7498 36.1675 12.7498C38.2386 12.7498 39.9175 14.4287 39.9175 16.4998Z", fill: "white" })
    ]
  });
};
const Deposito = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DepositoIcon,
  default: DepositoIcon
}, Symbol.toStringTag, { value: "Module" }));
const DetailInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, css$1r.SecColor, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M3.8252 3.62799C3.8252 3.31044 4.12981 2.93799 4.65414 2.93799H16.4962C17.0206 2.93799 17.3252 3.31044 17.3252 3.62799V10.3594C17.3252 10.7736 17.661 11.1094 18.0752 11.1094C18.4894 11.1094 18.8252 10.7736 18.8252 10.3594V3.62799C18.8252 2.35496 17.716 1.43799 16.4962 1.43799H4.65414C3.43442 1.43799 2.3252 2.35496 2.3252 3.62799V18.748C2.3252 20.021 3.43442 20.938 4.65414 20.938H10.3677C10.782 20.938 11.1177 20.6022 11.1177 20.188C11.1177 19.7738 10.782 19.438 10.3677 19.438H4.65414C4.12981 19.438 3.8252 19.0655 3.8252 18.748V3.62799Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6.00612 5.6331C5.59191 5.6331 5.25612 5.96888 5.25612 6.3831C5.25612 6.79731 5.59191 7.1331 6.00612 7.1331H15.0061C15.4203 7.1331 15.7561 6.79731 15.7561 6.3831C15.7561 5.96888 15.4203 5.6331 15.0061 5.6331H6.00612Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5.10127 9.98813C5.10127 9.57392 5.43706 9.23813 5.85127 9.23813H11.8513C12.2655 9.23813 12.6013 9.57392 12.6013 9.98813C12.6013 10.4023 12.2655 10.7381 11.8513 10.7381H5.85127C5.43706 10.7381 5.10127 10.4023 5.10127 9.98813Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M15.4514 21.3881C16.57 21.3881 17.5993 21.0054 18.4154 20.3639L20.3942 22.3427C20.6871 22.6356 21.162 22.6356 21.4549 22.3427C21.7478 22.0498 21.7478 21.5749 21.4549 21.282L19.4369 19.264C19.9512 18.4995 20.2514 17.5788 20.2514 16.5881C20.2514 13.9371 18.1023 11.7881 15.4514 11.7881C12.8004 11.7881 10.6514 13.9371 10.6514 16.5881C10.6514 19.2391 12.8004 21.3881 15.4514 21.3881ZM15.4514 19.8881C17.2739 19.8881 18.7514 18.4106 18.7514 16.5881C18.7514 14.7655 17.2739 13.2881 15.4514 13.2881C13.6288 13.2881 12.1514 14.7655 12.1514 16.5881C12.1514 18.4106 13.6288 19.8881 15.4514 19.8881Z", fill: "#FEE004" })
    ]
  });
};
const DetailInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DetailInMineIcon,
  default: DetailInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const DetalhesDaContaIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "63", height: "56", viewBox: "0 0 63 56", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M0.60791 4.11938C0.60791 2.04832 2.28684 0.369385 4.35791 0.369385H34.9579C37.029 0.369385 38.7079 2.04832 38.7079 4.11938C38.7079 6.19045 37.029 7.86938 34.9579 7.86938H4.35791C2.28684 7.86938 0.60791 6.19045 0.60791 4.11938Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M0.60791 14.6194C0.60791 12.5483 2.28684 10.8694 4.35791 10.8694H34.9579C37.029 10.8694 38.7079 12.5483 38.7079 14.6194C38.7079 15.0758 38.6264 15.5131 38.4771 15.9177C36.4416 16.4708 34.5208 17.3026 32.7582 18.3694H4.35791C2.28684 18.3694 0.60791 16.6905 0.60791 14.6194Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M25.5078 49.8694C24.0442 47.6155 22.9733 45.0832 22.3917 42.3694H4.35791C2.28684 42.3694 0.60791 44.0483 0.60791 46.1194C0.60791 48.1905 2.28684 49.8694 4.35791 49.8694H25.5078Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M21.8921 37.6321C21.8921 35.6401 22.1509 33.7086 22.6368 31.8694H4.35791C2.28684 31.8694 0.60791 33.5483 0.60791 35.6194C0.60791 37.6905 2.28684 39.3694 4.35791 39.3694H21.9582C21.9144 38.796 21.8921 38.2167 21.8921 37.6321Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M23.6622 28.8694C24.8673 26.0222 26.6418 23.4746 28.8429 21.3694H4.35791C2.28684 21.3694 0.60791 23.0483 0.60791 25.1194C0.60791 27.1905 2.28684 28.8694 4.35791 28.8694H23.6622Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M62.3921 37.6306C62.3921 47.5717 54.3332 55.6306 44.3921 55.6306C34.451 55.6306 26.3921 47.5717 26.3921 37.6306C26.3921 27.6895 34.451 19.6306 44.3921 19.6306C54.3332 19.6306 62.3921 27.6895 62.3921 37.6306ZM42.9584 42.4256C42.1549 43.1733 41.0776 43.6306 39.8936 43.6306C37.4083 43.6306 35.3936 41.6159 35.3936 39.1306C35.3936 36.3878 38.6221 33.6875 41.371 31.3885C42.574 30.3823 43.6851 29.453 44.3936 28.6306C44.9033 29.1403 45.6606 29.7844 46.5233 30.518C49.3806 32.9479 53.3936 36.3605 53.3936 39.1306C53.3936 41.6159 51.3788 43.6306 48.8936 43.6306C47.7613 43.6306 46.7268 43.2125 45.9359 42.5222C46.0764 43.6586 46.4884 44.3802 47.3936 45.1306V46.6306H41.3936V45.1306C42.3961 44.2005 42.8469 43.4398 42.9584 42.4256Z", fill: "#2FA33F" })
    ]
  });
};
const DetalhesDaConta = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DetalhesDaContaIcon,
  default: DetalhesDaContaIcon
}, Symbol.toStringTag, { value: "Module" }));
const DownIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className, width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M18 9L12 15L6 9", stroke: "#FFF0C1", strokeWidth: "1.5", strokeLinecap: "round" }) });
};
const Down = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DownIcon,
  default: DownIcon
}, Symbol.toStringTag, { value: "Module" }));
const DropDownIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M4.70711 8.20711C4.07714 7.57714 4.52331 6.5 5.41421 6.5H14.5856C15.4765 6.5 15.9227 7.57714 15.2927 8.20711L10.707 12.7928C10.3165 13.1833 9.68332 13.1833 9.2928 12.7928L4.70711 8.20711Z",
        fill: "white",
        fillOpacity: "0.6"
      }
    )
  });
};
const DropDown = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DropDownIcon,
  default: DropDownIcon
}, Symbol.toStringTag, { value: "Module" }));
const EditString = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(className, css$1r.defaultCss),
      xmlns: "http://www.w3.org/2000/svg",
      width: "22",
      height: "23",
      viewBox: "0 0 22 23",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M3.66667 2.4375C2.71167 2.4375 1.9375 3.21167 1.9375 4.16667V18.8333C1.9375 19.7883 2.71167 20.5625 3.66667 20.5625H18.3333C19.2883 20.5625 20.0625 19.7883 20.0625 18.8333V11.5C20.0625 10.9822 20.4822 10.5625 21 10.5625C21.5178 10.5625 21.9375 10.9822 21.9375 11.5V18.8333C21.9375 20.8239 20.3239 22.4375 18.3333 22.4375H3.66667C1.67614 22.4375 0.0625 20.8239 0.0625 18.8333V4.16667C0.0625 2.17614 1.67614 0.5625 3.66667 0.5625H11C11.5178 0.5625 11.9375 0.982233 11.9375 1.5C11.9375 2.01777 11.5178 2.4375 11 2.4375H3.66667Z",
          fill: "#2FA33F"
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M20.2429 5.94445L11.8535 14.3339L7.33461 15.3207C6.90078 15.4155 6.51455 15.0293 6.6093 14.5954L7.59618 10.0765L15.9856 1.68713C17.1612 0.511505 19.0673 0.511505 20.2429 1.68713C21.4185 2.86276 21.4185 4.76882 20.2429 5.94445ZM12.9555 10.5802L18.9171 4.61862C19.3605 4.17523 19.3605 3.45635 18.9171 3.01296C18.4737 2.56956 17.7548 2.56956 17.3114 3.01296L11.3499 8.97451L12.9555 10.5802ZM10.024 10.3003L11.6297 11.906L10.9164 12.6193L8.86208 13.068L9.31072 11.0137L10.024 10.3003Z",
          fill: "#2FA33F"
        }
      )
      ]
    }
  );
};
const EditString$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EditString,
  default: EditString
}, Symbol.toStringTag, { value: "Module" }));
const EditUserIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M5.65807 6.66979C5.65807 3.89745 7.90549 1.65002 10.6778 1.65002C13.4502 1.65002 15.6976 3.89745 15.6976 6.66979C15.6976 9.20084 13.8244 11.2944 11.3887 11.6396C14.1706 11.8502 16.6103 13.2865 18.1684 15.4071C18.4136 15.7409 18.3419 16.2103 18.0081 16.4556C17.6743 16.7008 17.2049 16.6291 16.9596 16.2953C15.5405 14.3639 13.2554 13.1128 10.6778 13.1128C7.12679 13.1128 4.12892 15.4896 3.19196 18.7407C3.08792 19.1017 3.18451 19.4283 3.42301 19.6885C3.67232 19.9606 4.0774 20.1524 4.5383 20.1524H13.7894C14.2036 20.1524 14.5394 20.4881 14.5394 20.9024C14.5394 21.3166 14.2036 21.6524 13.7894 21.6524H4.5383C3.67371 21.6524 2.86176 21.2962 2.31716 20.702C1.76176 20.096 1.48759 19.2379 1.75062 18.3253C2.80467 14.6679 6.04503 11.9363 9.96693 11.6396C7.53126 11.2943 5.65807 9.20081 5.65807 6.66979ZM10.6778 3.15002C8.73392 3.15002 7.15807 4.72588 7.15807 6.66979C7.15807 8.61371 8.73392 10.1896 10.6778 10.1896C12.6217 10.1896 14.1976 8.61371 14.1976 6.66979C14.1976 4.72588 12.6217 3.15002 10.6778 3.15002Z",
        fill: "#2FA33F"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M21.6532 16.1875C21.1846 15.7189 20.4248 15.7189 19.9562 16.1875L16.612 19.5317L16.1378 21.7029L18.309 21.2288L21.6532 17.8846C22.1218 17.4159 22.1218 16.6561 21.6532 16.1875Z",
        fill: "#2FA33F"
      }
    )
    ]
  });
};
const EditUser = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EditUserIcon,
  default: EditUserIcon
}, Symbol.toStringTag, { value: "Module" }));
const EventosIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M18.0625 3.3125C18.0625 3.03636 18.2864 2.8125 18.5625 2.8125C18.8386 2.8125 19.0625 3.03636 19.0625 3.3125V5.375C19.0625 5.65114 18.8386 5.875 18.5625 5.875C18.2864 5.875 18.0625 5.65114 18.0625 5.375V3.3125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.5 4.4375V5.4375C10.5 5.98978 10.9477 6.4375 11.5 6.4375C12.0523 6.4375 12.5 5.98978 12.5 5.4375V4.4375H14V5.4375C14 5.98978 14.4477 6.4375 15 6.4375C15.5523 6.4375 16 5.98978 16 5.4375V4.4375H17.5V5.4375C17.5 5.98978 17.9477 6.4375 18.5 6.4375C19.0523 6.4375 19.5 5.98978 19.5 5.4375V4.4375H21V5.4375C21 5.98978 21.4477 6.4375 22 6.4375C22.5523 6.4375 23 5.98978 23 5.4375V4.4375H24.5V5.4375C24.5 5.98978 24.9477 6.4375 25.5 6.4375C26.0523 6.4375 26.5 5.98978 26.5 5.4375V4.4375H28V5.4375C28 5.98978 28.4477 6.4375 29 6.4375C29.5523 6.4375 30 5.98978 30 5.4375V4.4375H31.5C32.0523 4.4375 32.5 4.88522 32.5 5.4375V11.4375C32.5 11.9898 32.0523 12.4375 31.5 12.4375H8.5C7.94772 12.4375 7.5 11.9898 7.5 11.4375V5.4375C7.5 4.88522 7.94772 4.4375 8.5 4.4375H10.5Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22.0625 2.8125C21.7864 2.8125 21.5625 3.03636 21.5625 3.3125V5.375C21.5625 5.65114 21.7864 5.875 22.0625 5.875C22.3386 5.875 22.5625 5.65114 22.5625 5.375V3.3125C22.5625 3.03636 22.3386 2.8125 22.0625 2.8125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M25.0625 3.3125C25.0625 3.03636 25.2864 2.8125 25.5625 2.8125C25.8386 2.8125 26.0625 3.03636 26.0625 3.3125V5.375C26.0625 5.65114 25.8386 5.875 25.5625 5.875C25.2864 5.875 25.0625 5.65114 25.0625 5.375V3.3125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M29.0625 2.8125C28.7864 2.8125 28.5625 3.03636 28.5625 3.3125V5.375C28.5625 5.65114 28.7864 5.875 29.0625 5.875C29.3386 5.875 29.5625 5.65114 29.5625 5.375V3.3125C29.5625 3.03636 29.3386 2.8125 29.0625 2.8125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.5625 3.3125C14.5625 3.03636 14.7864 2.8125 15.0625 2.8125C15.3386 2.8125 15.5625 3.03636 15.5625 3.3125V5.375C15.5625 5.65114 15.3386 5.875 15.0625 5.875C14.7864 5.875 14.5625 5.65114 14.5625 5.375V3.3125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M11.5625 2.8125C11.2864 2.8125 11.0625 3.03636 11.0625 3.3125V5.375C11.0625 5.65114 11.2864 5.875 11.5625 5.875C11.8386 5.875 12.0625 5.65114 12.0625 5.375V3.3125C12.0625 3.03636 11.8386 2.8125 11.5625 2.8125Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.25 13.6875V24.4375C10.25 25.1279 10.8096 25.6875 11.5 25.6875H28.5C29.1904 25.6875 29.75 25.1279 29.75 24.4375V13.6875H31.25V24.4375C31.25 25.9563 30.0188 27.1875 28.5 27.1875H11.5C9.98122 27.1875 8.75 25.9563 8.75 24.4375V13.6875H10.25Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M20.4374 14.0061C20.1537 13.2474 19.0806 13.2474 18.7969 14.0061L18.0535 15.9943C17.9304 16.3234 17.6226 16.5471 17.2715 16.5624L15.1509 16.6551C14.3417 16.6905 14.0101 17.7111 14.644 18.2153L16.3051 19.5367C16.5801 19.7555 16.6977 20.1174 16.6038 20.456L16.0366 22.5015C15.8202 23.282 16.6884 23.9128 17.3638 23.4657L19.1339 22.2943C19.4269 22.1003 19.8075 22.1003 20.1005 22.2943L21.8706 23.4657C22.546 23.9128 23.4142 23.282 23.1977 22.5015L22.6306 20.456C22.5367 20.1174 22.6543 19.7555 22.9293 19.5367L24.5904 18.2153C25.2243 17.7111 24.8927 16.6905 24.0835 16.6551L21.9629 16.5624C21.6118 16.5471 21.3039 16.3234 21.1809 15.9943L20.4374 14.0061Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" })
    ]
  });
};
const Eventos = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EventosIcon,
  default: EventosIcon
}, Symbol.toStringTag, { value: "Module" }));
const EyeCloseIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", viewBox: "0 0 24 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_257_405611)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M19.866 2.14885C20.1422 1.67056 19.9783 1.05897 19.5 0.782823C19.0217 0.506681 18.4101 0.670556 18.134 1.14885L15.9267 4.97194C14.7794 4.67445 13.4769 4.49992 11.9999 4.49992C3.47831 4.50002 0.766132 10.3094 0.150458 12.0271C0.0396913 12.3361 0.0396911 12.6637 0.150457 12.9728C0.636474 14.3287 2.42897 18.2346 7.35448 19.8195L5.60401 22.8514C5.32787 23.3297 5.49174 23.9413 5.97004 24.2174C6.44833 24.4935 7.05992 24.3297 7.33606 23.8514L19.866 2.14885ZM8.44003 17.9392L9.44246 16.203C8.26882 15.3909 7.5 14.0352 7.5 12.4999C7.5 10.0146 9.51472 7.99992 12 7.99992C12.6901 7.99992 13.344 8.15528 13.9285 8.43294L14.9309 6.69666C14.0503 6.25101 13.0545 5.99992 12 5.99992C8.41015 5.99992 5.5 8.91007 5.5 12.4999C5.5 14.7755 6.66939 16.778 8.44003 17.9392Z", fill: "white", fillOpacity: "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M11.9999 20.4999C11.8604 20.4999 11.7224 20.4984 11.5859 20.4953L12.4585 18.984C15.8344 18.7488 18.5 15.9356 18.5 12.4999C18.5 11.4791 18.2647 10.5133 17.8453 9.65368L19.6045 6.60682C22.3362 8.44901 23.4768 10.9875 23.8494 12.0271C23.9602 12.3361 23.9602 12.6637 23.8494 12.9728C23.2338 14.6904 20.5216 20.4999 11.9999 20.4999Z", fill: "white", fillOpacity: "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M16.5 12.4999C16.5 14.3347 15.4019 15.913 13.8271 16.6136L16.4754 12.0265C16.4917 12.1821 16.5 12.34 16.5 12.4999Z", fill: "white", fillOpacity: "0.6" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_405611", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "24", height: "24", fill: "white", transform: "translate(0 0.5)" }) }) })
    ]
  });
};
const EyeClose = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EyeCloseIcon,
  default: EyeCloseIcon
}, Symbol.toStringTag, { value: "Module" }));
const EyeOpenIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "25", viewBox: "0 0 25 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_1_342658)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M24.5184 12.4728C23.9027 14.1905 21.1905 20 12.6689 20C4.14725 20 1.43507 14.1905 0.819402 12.4728C0.708636 12.1638 0.708637 11.8362 0.819404 11.5272C1.43508 9.80948 4.14725 4.0001 12.6689 4C21.1905 4 23.9027 9.80947 24.5184 11.5272C24.6291 11.8362 24.6291 12.1638 24.5184 12.4728ZM19.1689 12C19.1689 15.5899 16.2588 18.5 12.6689 18.5C9.07909 18.5 6.16895 15.5899 6.16895 12C6.16895 8.41015 9.07909 5.5 12.6689 5.5C16.2588 5.5 19.1689 8.41015 19.1689 12ZM12.6689 16.5C15.1542 16.5 17.1689 14.4853 17.1689 12C17.1689 9.51472 15.1542 7.5 12.6689 7.5C10.1837 7.5 8.16895 9.51472 8.16895 12C8.16895 14.4853 10.1837 16.5 12.6689 16.5Z", fill: "#FFDC82" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1_342658", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "24", height: "24", fill: "white", transform: "translate(0.586914)" }) }) })
    ]
  });
};
const EyeOpen = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EyeOpenIcon,
  default: EyeOpenIcon
}, Symbol.toStringTag, { value: "Module" }));
const FAQIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, css$1r.FAQIcon, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_1_342069)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M13 26C20.1797 26 26 20.1797 26 13C26 5.8203 20.1797 0 13 0C5.8203 0 0 5.8203 0 13C0 20.1797 5.8203 26 13 26ZM13.94 18.944C13.6467 18.6507 13.302 18.504 12.906 18.504C12.51 18.504 12.1653 18.6507 11.872 18.944C11.5787 19.2373 11.432 19.582 11.432 19.978C11.432 20.374 11.5787 20.7187 11.872 21.012C12.1653 21.3053 12.51 21.452 12.906 21.452C13.302 21.452 13.6467 21.3053 13.94 21.012C14.2333 20.7187 14.38 20.374 14.38 19.978C14.38 19.582 14.2333 19.2373 13.94 18.944ZM16.514 5.92C15.766 5.172 14.7247 4.798 13.39 4.798C12.0407 4.798 10.948 5.216 10.112 6.052C9.26133 6.90267 8.836 7.87067 8.836 8.956C8.836 9.49867 9.11467 9.77 9.672 9.77C10.2147 9.77 10.4933 9.47667 10.508 8.89C10.552 8.186 10.8233 7.59933 11.322 7.13C11.8207 6.646 12.488 6.404 13.324 6.404C14.16 6.404 14.8127 6.624 15.282 7.064C15.766 7.48933 16.008 8.098 16.008 8.89C16.008 9.49133 15.9127 9.95333 15.722 10.276C15.634 10.4373 15.4653 10.6647 15.216 10.958C14.9667 11.2513 14.6293 11.596 14.204 11.992C12.7667 13.4 12.048 14.7933 12.048 16.172C12.048 16.5387 12.0993 16.7953 12.202 16.942C12.3047 17.074 12.5613 17.14 12.972 17.14C13.4707 17.14 13.72 16.8173 13.72 16.172C13.72 15.8493 13.7567 15.5047 13.83 15.138L13.808 15.16C13.8813 14.8813 14.0647 14.5367 14.358 14.126C14.6513 13.7153 15.106 13.2167 15.722 12.63C16.382 11.97 16.866 11.3687 17.174 10.826C17.4967 10.2833 17.658 9.682 17.658 9.022C17.658 7.68733 17.2767 6.65333 16.514 5.92Z", fill: "#C1E9FF" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1_342069", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "26", height: "26", fill: "white" }) }) })
    ]
  });
};
const FAQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FAQIcon,
  default: FAQIcon
}, Symbol.toStringTag, { value: "Module" }));
const GcashIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "32", height: "32", viewBox: "0 0 32 32", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M5 4C2.79086 4 1 5.79086 1 8V24C1 26.2091 2.79086 28 5 28H27C29.2091 28 31 26.2091 31 24V8C31 5.79086 29.2091 4 27 4H5ZM9.60346 16C9.60346 13.1222 11.9364 10.7892 14.8143 10.7892C15.9691 10.7892 17.0341 11.1639 17.8974 11.7986C18.2541 12.0609 18.7559 11.9843 19.0181 11.6276C19.2804 11.2709 19.2038 10.7691 18.8471 10.5068C17.7179 9.67661 16.3222 9.18589 14.8143 9.18589C11.051 9.18589 8.00014 12.2366 8.00014 16C8.00014 19.7633 11.051 22.8141 14.8143 22.8141C16.3222 22.8141 17.7179 22.3233 18.8471 21.4931C19.2038 21.2308 19.2804 20.7291 19.0181 20.3724C18.7559 20.0156 18.2541 19.9391 17.8974 20.2013C17.0341 20.836 15.9691 21.2107 14.8143 21.2107C11.9364 21.2107 9.60346 18.8778 9.60346 16ZM21.0547 13.2592C20.8764 12.8539 20.4034 12.6699 19.9981 12.8481C19.5928 13.0263 19.4088 13.4994 19.587 13.9046C19.8685 14.5448 20.0252 15.253 20.0252 16C20.0252 16.7469 19.8685 17.4551 19.587 18.0953C19.4088 18.5006 19.5928 18.9736 19.9981 19.1518C20.4034 19.3301 20.8764 19.146 21.0547 18.7407C21.4239 17.901 21.6285 16.9733 21.6285 16C21.6285 15.0266 21.4239 14.0989 21.0547 13.2592ZM12.1204 16.0065C12.1204 14.5222 13.3237 13.3188 14.8081 13.3188C15.3332 13.3188 15.8208 13.4686 16.2335 13.7273C16.6086 13.9626 17.1033 13.8492 17.3386 13.4741C17.5738 13.099 17.4604 12.6042 17.0853 12.369C16.4248 11.9548 15.6432 11.7155 14.8081 11.7155C12.4383 11.7155 10.5171 13.6366 10.5171 16.0065C10.5171 18.3764 12.4383 20.2975 14.8081 20.2975C17.1466 20.2975 19.0481 18.4271 19.0982 16.1004C19.109 15.601 18.705 15.2049 18.2212 15.2049H15.6134C15.1706 15.2049 14.8117 15.5638 14.8117 16.0065C14.8117 16.4493 15.1706 16.8082 15.6134 16.8082H17.3743C17.0333 17.9009 16.0133 18.6942 14.8081 18.6942C13.3237 18.6942 12.1204 17.4909 12.1204 16.0065ZM21.9306 11.3377C22.3058 11.1454 22.7659 11.2937 22.9583 11.6689C23.6246 12.9688 24.0002 14.4418 24.0002 16.0004C24.0002 17.559 23.6246 19.032 22.9583 20.3319C22.7659 20.7071 22.3058 20.8554 21.9306 20.6631C21.5553 20.4707 21.4071 20.0106 21.5994 19.6354C22.1578 18.546 22.4732 17.3112 22.4732 16.0004C22.4732 14.6896 22.1578 13.4548 21.5994 12.3654C21.4071 11.9902 21.5553 11.5301 21.9306 11.3377Z", fill: "white", fillOpacity: "0.6" }) });
};
const Gcash = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  GcashIcon,
  default: GcashIcon
}, Symbol.toStringTag, { value: "Module" }));
const InputClearIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", viewBox: "0 0 24 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_257_405704)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M12 24.5C18.6274 24.5 24 19.1274 24 12.5C24 5.87258 18.6274 0.5 12 0.5C5.37258 0.5 0 5.87258 0 12.5C0 19.1274 5.37258 24.5 12 24.5ZM6.22451 6.57549C6.61503 6.18497 7.24819 6.18497 7.63872 6.57549L12.149 11.0858L16.7301 6.5047C17.1206 6.11418 17.7538 6.11418 18.1443 6.50471C18.5348 6.89523 18.5348 7.52839 18.1443 7.91892L13.5632 12.5L18.1443 17.0811C18.5348 17.4716 18.5348 18.1048 18.1443 18.4953C17.7538 18.8858 17.1206 18.8858 16.7301 18.4953L12.149 13.9142L7.63872 18.4245C7.24819 18.815 6.61503 18.815 6.22451 18.4245C5.83398 18.034 5.83398 17.4008 6.22451 17.0103L10.7348 12.5L6.22451 7.98971C5.83398 7.59918 5.83398 6.96602 6.22451 6.57549Z", fill: "white", fillOpacity: "0.6" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_405704", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { y: "0.5", width: "24", height: "24", rx: "5.76", fill: "white" }) }) })
    ]
  });
};
const InputClear = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  InputClearIcon,
  default: InputClearIcon
}, Symbol.toStringTag, { value: "Module" }));
const Language$1 = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_2_385325)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M12.6429 0.505004C12.5954 0.501675 12.5478 0.5 12.5 0.5C12.388 0.5 12.2768 0.509208 12.1667 0.527337C5.65164 0.956159 0.5 6.37646 0.5 13C0.5 19.6235 5.65164 25.0438 12.1667 25.4727C12.2768 25.4908 12.388 25.5 12.5 25.5C12.5478 25.5 12.5954 25.4983 12.6429 25.495C12.7615 25.4983 12.8806 25.5 13 25.5C19.9036 25.5 25.5 19.9036 25.5 13C25.5 6.09644 19.9036 0.5 13 0.5C12.8806 0.5 12.7615 0.501675 12.6429 0.505004ZM12.541 23.4901C12.5548 23.4852 12.5734 23.4775 12.5968 23.4655C12.679 23.4235 12.8155 23.3313 12.9931 23.1435C13.3597 22.7559 13.7819 22.0876 14.1786 21.0961C14.9268 19.2254 15.4446 16.5544 15.4958 13.5H9.50419C9.55545 16.5544 10.0732 19.2254 10.8214 21.0961C11.2181 22.0876 11.6403 22.7559 12.0069 23.1435C12.1845 23.3313 12.321 23.4235 12.4032 23.4655C12.4205 23.4744 12.4352 23.4809 12.4473 23.4857C12.4785 23.4873 12.5097 23.4888 12.541 23.4901ZM9.53805 11.5H15.4619C15.3271 8.86388 14.844 6.56746 14.1786 4.90395C13.7819 3.91237 13.3597 3.24415 12.9931 2.85653C12.8155 2.66866 12.679 2.57655 12.5968 2.53449C12.5734 2.52251 12.5548 2.5148 12.541 2.50985C12.5097 2.5112 12.4785 2.51268 12.4473 2.5143C12.4352 2.5191 12.4205 2.52562 12.4032 2.53449C12.321 2.57655 12.1845 2.66866 12.0069 2.85653C11.6403 3.24415 11.2181 3.91237 10.8214 4.90395C10.156 6.56746 9.67293 8.86388 9.53805 11.5ZM15.3736 23.2306C16.6088 21.0583 17.4328 17.5234 17.4961 13.5H23.4883C23.2652 18.2599 19.8727 22.1909 15.3736 23.2306ZM17.4644 11.5H23.3937C22.7781 7.19682 19.5535 3.73531 15.3736 2.76942C16.5053 4.75982 17.2919 7.89409 17.4644 11.5ZM9.43661 3.12011C8.40716 5.11797 7.69831 8.09923 7.53563 11.5H2.60633C3.16205 7.61491 5.84454 4.41588 9.43661 3.12011ZM9.43661 22.8799C5.54066 21.4745 2.7147 17.8302 2.5117 13.5H7.50393C7.56394 17.3137 8.3074 20.6884 9.43661 22.8799Z", fill: "#87D1A2" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_2_385325", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "26", height: "26", fill: "white" }) }) })
    ]
  });
};
const Language$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Language: Language$1,
  default: Language$1
}, Symbol.toStringTag, { value: "Module" }));
const LinhaIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, css$1r.line, className), width: "26", height: "26", viewBox: "0 0 26 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6 10L6 14", stroke: "white", strokeOpacity: "0.6", strokeWidth: "3", strokeLinecap: "round" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: css$1r.strokeCss, d: "M6 10L6 14", stroke: "#313131", strokeWidth: "3", strokeLinecap: "round" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: css$1r.strokeCss, d: "M13 6L13 14", stroke: "#313131", strokeWidth: "3", strokeLinecap: "round" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: css$1r.strokeCss, d: "M20 2L20 14", stroke: "#313131", strokeWidth: "3", strokeLinecap: "round" })
    ]
  });
};
const Linha = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  LinhaIcon,
  default: LinhaIcon
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1u = "_svg_theme_fill_color_ppkvj_3";
const lineStrong = "_lineStrong_ppkvj_55";
const line$3 = "_line_ppkvj_55";
const tool_line_t$1 = "_tool_line_t_ppkvj_61";
const lineMiddle = "_lineMiddle_ppkvj_65";
const lineWeak = "_lineWeak_ppkvj_69";
const lineCyIcon = "_lineCyIcon_ppkvj_76";
const lineIconG = "_lineIconG_ppkvj_91";
const lineIconCy = "_lineIconCy_ppkvj_94";
const lineCss = {
  svg_theme_fill_color: svg_theme_fill_color$1u,
  lineStrong,
  line: line$3,
  tool_line_t: tool_line_t$1,
  lineMiddle,
  lineWeak,
  lineCyIcon,
  lineIconG,
  lineIconCy
};
const LinhaSelectIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(lineCss.lineCyIcon), width: "24", height: "25", viewBox: "0 0 24 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_537_58415)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { className: lineCss.lineIconCy, cx: "12", cy: "12.5", r: "12", fill: "#2FA33F" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "12", cy: "12.5", r: "11.6", stroke: "#2FA33F", strokeOpacity: "0.3", strokeWidth: "0.8" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: lineCss.lineIconG, d: "M6 12.5L11.0805 17.5805L19.0305 9.63051", stroke: "white", strokeWidth: "2.4", strokeLinecap: "round", strokeLinejoin: "round" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_537_58415", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { y: "0.5", width: "24", height: "24", rx: "12", fill: "white" }) }) })
    ]
  });
};
const LinhaSelectIcon$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  LinhaSelectIcon,
  default: LinhaSelectIcon
}, Symbol.toStringTag, { value: "Module" }));
const Login$4 = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "27",
      height: "26",
      viewBox: "0 0 27 26",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
        clipPath: "url(#clip0_1094_162866)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M17.5978 7.81868C17.5978 10.9403 15.0672 13.4709 11.9456 13.4709C8.82398 13.4709 6.29342 10.9403 6.29342 7.81868C6.29342 4.69707 8.82398 2.1665 11.9456 2.1665C15.0672 2.1665 17.5978 4.69707 17.5978 7.81868ZM18.2982 14.4784C17.5914 13.8921 16.7879 13.4183 15.9151 13.0846C14.8109 13.9182 13.4362 14.4124 11.9461 14.4124C10.3279 14.4124 8.84582 13.8295 7.6984 12.8623C4.16625 13.8857 1.58398 17.1446 1.58398 21.0067V21.9487C1.58398 22.9892 2.42751 23.8327 3.46804 23.8327H19.4825L19.5138 23.8325C17.7964 22.7479 16.6558 20.8329 16.6558 18.6516C16.6558 17.039 17.2792 15.572 18.2982 14.4784ZM21.8364 22.42C21.3161 22.42 20.8944 21.9982 20.8944 21.4779V19.1227H18.5393C18.0191 19.1227 17.5973 18.701 17.5973 18.1807C17.5973 17.6605 18.0191 17.2387 18.5393 17.2387H20.8944V14.8837C20.8944 14.3635 21.3161 13.9417 21.8364 13.9417C22.3567 13.9417 22.7784 14.3635 22.7784 14.8837V17.2387H25.1335C25.6538 17.2387 26.0756 17.6605 26.0756 18.1807C26.0756 18.701 25.6538 19.1227 25.1335 19.1227H22.7784V21.4779C22.7784 21.9982 22.3567 22.42 21.8364 22.42Z",
            fill: "#EAB700"
          }
        )
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", {
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", {
          id: "clip0_1094_162866", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "rect",
            {
              width: "26",
              height: "26",
              fill: "white",
              transform: "translate(0.5)"
            }
          )
        })
      })
      ]
    }
  );
};
const Login$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Login: Login$4,
  default: Login$4
}, Symbol.toStringTag, { value: "Module" }));
const MayaIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "32", height: "32", viewBox: "0 0 32 32", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M5 4C2.79086 4 1 5.79086 1 8V24C1 26.2091 2.79086 28 5 28H27C29.2091 28 31 26.2091 31 24V8C31 5.79086 29.2091 4 27 4H5ZM4.00035 16.9592L4.00035 16.9588V16.9587C3.99993 16.6556 3.9995 16.3525 4.00157 16.0493C4.00361 15.7415 4.07832 15.4488 4.20468 15.1683C4.31061 14.9337 4.45214 14.7222 4.6316 14.5386C4.96544 14.1978 5.36553 13.9757 5.84294 13.9156C6.44525 13.8397 6.97986 14.011 7.44881 14.3901C7.63266 14.5386 7.78498 14.7163 7.90959 14.9177C7.91181 14.9212 7.91365 14.9257 7.91555 14.9303C7.92244 14.9469 7.93011 14.9654 7.95891 14.9501C8.00968 14.9229 8.02369 14.8975 8.00356 14.859L7.97618 14.8062L7.97616 14.8062C7.93174 14.7204 7.8873 14.6346 7.83985 14.5506C7.81708 14.51 7.81592 14.484 7.85298 14.4502C8.16697 14.1622 8.53466 13.985 8.95401 13.915C9.36897 13.8455 9.76701 13.9025 10.1446 14.0869C10.4548 14.2383 10.7072 14.4604 10.9101 14.7385C11.1412 15.0551 11.2789 15.41 11.3314 15.7975C11.3449 15.897 11.3533 15.9974 11.3533 16.0983V18.6567C11.3533 18.783 11.2918 18.844 11.1645 18.844H10.3754C10.2462 18.844 10.182 18.7795 10.182 18.6491C10.182 17.7836 10.182 16.9183 10.1814 16.0528C10.1814 15.8561 10.14 15.6676 10.0451 15.4946C9.87878 15.1908 9.62227 15.0318 9.27355 15.0183C9.01821 15.0084 8.7903 15.0767 8.59332 15.2387C8.38321 15.4117 8.26386 15.6349 8.23351 15.9063C8.22803 15.9563 8.22977 16.0055 8.23151 16.0547C8.23236 16.0789 8.23322 16.103 8.23322 16.1272C8.23438 16.8115 8.23409 17.4961 8.23351 18.1804C8.23351 18.2038 8.23147 18.2277 8.2268 18.2508C8.20929 18.3366 8.1553 18.3812 8.06746 18.3815C7.80745 18.3821 7.54774 18.3821 7.28773 18.3815C7.17946 18.3815 7.11935 18.3196 7.11935 18.2099V16.6239C7.11935 16.5632 7.11985 16.5026 7.12036 16.4419L7.12036 16.4417V16.4417V16.4417V16.4417V16.4416C7.12153 16.301 7.12269 16.1603 7.1176 16.0199C7.10738 15.7318 7.01838 15.4718 6.80389 15.2687C6.63639 15.1103 6.43416 15.028 6.20246 15.0192C6.05305 15.0134 5.90656 15.0259 5.76648 15.0825C5.49918 15.1905 5.33197 15.391 5.23567 15.6568C5.18372 15.8007 5.16446 15.9504 5.16446 16.1018C5.1633 16.9531 5.16213 17.8043 5.16534 18.6555C5.16592 18.7976 5.09093 18.8531 4.96603 18.8525C4.82596 18.852 4.68597 18.852 4.54598 18.8521H4.54543H4.54433C4.42822 18.8521 4.3121 18.8522 4.19592 18.8519C4.17724 18.8519 4.15798 18.8504 4.1396 18.8469C4.04885 18.8297 4.00011 18.7714 4.00011 18.6791V17.3339H4.0004L4.00069 17.3333C4.00069 17.2086 4.00052 17.0839 4.00035 16.9592ZM27.9978 16.4126L27.9975 16.9504C27.9972 17.5185 27.9969 18.0866 27.9998 18.6546C28.0004 18.7734 27.9309 18.8496 27.806 18.8461C27.64 18.8414 27.4738 18.8424 27.3076 18.8433C27.2328 18.8437 27.158 18.8441 27.0832 18.844C26.9644 18.844 26.9026 18.7795 26.8999 18.6596C26.8988 18.6091 26.9093 18.5651 26.9367 18.5216C26.9842 18.4469 27.0302 18.3713 27.0761 18.2956C27.1004 18.2556 27.1246 18.2156 27.1491 18.1758C27.1632 18.153 27.174 18.1343 27.1448 18.1119C27.1153 18.0891 27.0987 18.0993 27.0779 18.1224C26.9011 18.3194 26.6995 18.4863 26.4689 18.6173C26.1681 18.7883 25.8459 18.8954 25.5007 18.9289C25.0092 18.9768 24.5444 18.8834 24.1078 18.6558C23.6622 18.4235 23.3161 18.0865 23.0692 17.6482C22.9032 17.3534 22.7984 17.0377 22.7643 16.7024C22.694 16.0161 22.8658 15.3954 23.2937 14.8503C23.6033 14.4557 23.9999 14.1817 24.4741 14.0206C24.6955 13.9454 24.9237 13.9036 25.1587 13.894C25.6831 13.8724 26.1608 14.0136 26.5973 14.2993C26.7718 14.4134 26.9282 14.55 27.066 14.707C27.0673 14.7085 27.0686 14.7102 27.07 14.712C27.0708 14.7131 27.0717 14.7142 27.0725 14.7154C27.0841 14.731 27.0979 14.7496 27.1214 14.7254C27.1258 14.7208 27.1308 14.7166 27.1358 14.7124C27.1567 14.6947 27.1773 14.6772 27.1509 14.6378C27.0712 14.5191 26.9954 14.3974 26.9201 14.2757C26.8751 14.203 26.895 14.0802 26.9557 14.023C26.9889 13.9915 27.0298 13.9818 27.073 13.9818C27.3266 13.9813 27.5802 13.9807 27.8338 13.9818C27.9411 13.9824 27.9975 14.0428 27.9975 14.1517V16.4123L27.9978 16.4126ZM25.2783 14.9813C24.5062 14.9731 23.8458 15.5953 23.8399 16.4033C23.8341 17.1994 24.465 17.8469 25.2751 17.8501C26.089 17.8533 26.712 17.1883 26.7132 16.4164C26.7146 15.6303 26.0683 14.9731 25.2783 14.9816V14.9813ZM22.2874 16.9878L22.2872 16.382L22.2869 16.3818V14.1867C22.2869 14.0411 22.2265 13.9807 22.0797 13.9807H21.3805C21.3473 13.9807 21.3146 13.9833 21.2819 13.9886C21.1783 14.0052 21.1345 14.0557 21.1345 14.1605C21.1348 14.9597 21.1351 15.759 21.1351 16.5583C21.1351 16.6117 21.1345 16.6651 21.1264 16.7182C21.0546 17.179 20.8013 17.4965 20.3691 17.6698C20.1543 17.7562 19.929 17.7612 19.7043 17.7264C19.3259 17.6681 19.0559 17.4594 18.8928 17.1136C18.7985 16.9134 18.7647 16.6995 18.7641 16.4807C18.7631 15.9235 18.7632 15.3662 18.7634 14.8088V14.8088V14.8087L18.7635 14.1821V14.1301C18.7629 14.0913 18.7466 14.061 18.716 14.037C18.671 14.002 18.6208 13.9813 18.5636 13.9813C18.385 13.9811 18.2064 13.9812 18.0279 13.9812H18.0279L17.7603 13.9813C17.699 13.9813 17.65 14.0055 17.6164 14.0572C17.593 14.0931 17.5916 14.1342 17.5916 14.1756L17.5915 14.6927C17.5914 15.296 17.5913 15.8993 17.5925 16.5026C17.5925 16.598 17.6006 16.6943 17.6126 16.7891C17.6546 17.125 17.7641 17.4378 17.9432 17.7253C18.2073 18.1496 18.5698 18.4609 19.0317 18.6529C19.3956 18.8044 19.7741 18.8642 20.1683 18.8164C20.4756 18.779 20.7648 18.6894 21.0371 18.5435C21.1847 18.4641 21.3216 18.3693 21.4503 18.2625C21.4531 18.2602 21.4558 18.2575 21.4586 18.2547C21.4719 18.2416 21.4865 18.2271 21.5098 18.2488C21.5335 18.2707 21.5205 18.287 21.5081 18.3027L21.5028 18.3095C21.4838 18.3356 21.4651 18.362 21.4463 18.3883L21.4463 18.3884L21.4463 18.3884C21.3957 18.4596 21.3451 18.5308 21.2889 18.5972C21.2087 18.692 21.169 18.7921 21.1804 18.9191C21.1935 19.0653 21.1302 19.1884 21.0301 19.2929C20.8264 19.5059 20.5655 19.6037 20.2856 19.6644C20.1498 19.6939 20.0128 19.693 19.8757 19.6921C19.8367 19.6919 19.7976 19.6916 19.7586 19.6921C19.653 19.6933 19.5797 19.7531 19.578 19.857C19.5739 20.1088 19.5745 20.3603 19.5777 20.6122C19.5792 20.707 19.6466 20.7768 19.7329 20.7782C20.0528 20.7835 20.372 20.7858 20.6866 20.7111C21.047 20.6253 21.3735 20.4733 21.6479 20.2214C21.9219 19.9699 22.0955 19.6565 22.1947 19.3002C22.2618 19.0589 22.2855 18.8117 22.2863 18.5628C22.288 18.0378 22.2877 17.5128 22.2874 16.9878ZM17.0337 16.407V18.6347C17.0337 18.7817 16.9741 18.8424 16.8282 18.8424H16.1147C16.0467 18.8424 15.982 18.8281 15.9461 18.7666C15.9038 18.6939 15.8982 18.6119 15.9408 18.5375C15.9866 18.4572 16.0354 18.3787 16.0841 18.3003L16.0841 18.3002L16.0842 18.3001C16.1093 18.2597 16.1344 18.2192 16.1591 18.1786C16.1609 18.1756 16.1629 18.1727 16.1649 18.1697C16.175 18.1549 16.1855 18.1394 16.1716 18.1187C16.1486 18.0843 16.1238 18.082 16.0923 18.1179C15.9586 18.2705 15.8054 18.4003 15.6385 18.5142C15.333 18.7228 14.9962 18.8527 14.6308 18.9081C14.0764 18.9924 13.573 18.8442 13.1026 18.562C12.6941 18.3169 12.3865 17.9749 12.1705 17.552C12.0252 17.2675 11.9385 16.9652 11.9102 16.646C11.8653 16.1417 11.9601 15.6652 12.1991 15.2196C12.4349 14.7798 12.774 14.4399 13.2117 14.1985C13.4881 14.0462 13.7831 13.9522 14.0948 13.9076C14.3968 13.8644 14.691 13.907 14.9799 13.9937C15.3977 14.1192 15.7549 14.3441 16.0549 14.6602C16.0657 14.6716 16.0765 14.6832 16.0864 14.6952C16.1293 14.7478 16.1299 14.7472 16.176 14.7008L16.1781 14.6987C16.2029 14.6739 16.1927 14.6561 16.1781 14.6333L16.1399 14.5739L16.1399 14.5738C16.0761 14.4744 16.0123 14.3751 15.951 14.2744C15.9087 14.2049 15.9204 14.1305 15.9539 14.0622C15.9849 13.9992 16.0456 13.9805 16.113 13.9805L16.3587 13.9805C16.5225 13.9804 16.6863 13.9803 16.8501 13.9805C16.9724 13.9808 17.0331 14.0421 17.0331 14.1638V16.4058L17.0337 16.407ZM14.295 14.9812C13.5135 14.9712 12.8592 15.6138 12.856 16.4073C12.8528 17.1975 13.4872 17.8488 14.2909 17.8497C15.0966 17.8503 15.7278 17.2051 15.7295 16.416C15.731 15.6129 15.0762 14.9742 14.295 14.9812Z",
        fill: "white",
        "fill-opacity": "0.6"
      }
    )
  });
};
const Maya = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  MayaIcon,
  default: MayaIcon
}, Symbol.toStringTag, { value: "Module" }));
const MessageTwoIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "44", height: "38", viewBox: "0 0 44 38", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M4 1C1.79086 1 0 2.79086 0 5V5.59788L22.2529 18.4944L44 5.59788V5C44 2.79086 42.2091 1 40 1H4Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M44 6.37949L27.9734 18.103L44 30.4025L25.8629 19.6468L22.2529 22.2875L18.5589 19.6468L0 30.4025L16.3993 18.103L0 6.37949V30.4025V33C0 35.2091 1.79086 37 4 37H40C42.2091 37 44 35.2091 44 33V30.4025V6.37949Z", fill: "white" })
    ]
  });
};
const MessageTwo = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  MessageTwoIcon,
  default: MessageTwoIcon
}, Symbol.toStringTag, { value: "Module" }));
const MoreInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 16 16", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.14014 8.63572L3.69287 3.6582L2.80859 4.4657L7.37091 8.6353L2.80859 12.7999L3.69321 13.6082L9.14014 8.63572ZM13.4038 8.63572L7.95654 3.6582L7.07227 4.4657L11.6346 8.6353L7.07227 12.7999L7.95688 13.6082L13.4038 8.63572Z", fill: "#FFDC82" }) });
};
const MoreInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  MoreInMineIcon,
  default: MoreInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const NotReceived = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "55", height: "56", viewBox: "0 0 55 56", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", { clipPath: "url(#clip0_3161_55481)", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M27.5 55.3667C42.6878 55.3667 55 43.0545 55 27.8667C55 12.6789 42.6878 0.366699 27.5 0.366699C12.3122 0.366699 0 12.6789 0 27.8667C0 43.0545 12.3122 55.3667 27.5 55.3667ZM29.4643 10.1881C29.4643 9.10328 28.5848 8.22384 27.5 8.22384C26.4152 8.22384 25.5357 9.10328 25.5357 10.1881V27.8667C25.5357 28.9515 26.4152 29.831 27.5 29.831H41.25C42.3348 29.831 43.2143 28.9515 43.2143 27.8667C43.2143 26.7819 42.3348 25.9024 41.25 25.9024H29.4643V10.1881Z", fill: "#CB3034" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_3161_55481", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "55", height: "55", fill: "white", transform: "translate(0 0.366699)" }) }) })
    ]
  });
};
const NotReceived$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  NotReceived,
  default: NotReceived
}, Symbol.toStringTag, { value: "Module" }));
const PasswordFullIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "25",
      viewBox: "0 0 24 25",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M6 7.5C6 4.18629 8.68629 1.5 12 1.5C15.3137 1.5 18 4.18629 18 7.5V9.5H19C20.1046 9.5 21 10.3954 21 11.5V21.5C21 22.6046 20.1046 23.5 19 23.5H5C3.89543 23.5 3 22.6046 3 21.5V11.5C3 10.3954 3.89543 9.5 5 9.5H6V7.5ZM16 7.5V9.5H8V7.5C8 5.29086 9.79086 3.5 12 3.5C14.2091 3.5 16 5.29086 16 7.5ZM14 15.2998C14 16.0625 13.5731 16.7255 12.9451 17.0628L13.5612 18.6029C13.7714 19.1284 13.3843 19.7 12.8184 19.7H11.1816C10.6157 19.7 10.2286 19.1284 10.4388 18.6029L11.0549 17.0628C10.4269 16.7255 10 16.0625 10 15.2998C10 14.1952 10.8954 13.2998 12 13.2998C13.1046 13.2998 14 14.1952 14 15.2998Z",
          fill: "#9D9D9D"
        }
      )
    }
  );
};
const PasswordFull = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PasswordFullIcon,
  default: PasswordFullIcon
}, Symbol.toStringTag, { value: "Module" }));
const PhoneIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2.5 2C2.5 0.89543 3.39543 0 4.5 0H18.5C19.6046 0 20.5 0.895431 20.5 2V22C20.5 23.1046 19.6046 24 18.5 24H4.5C3.39543 24 2.5 23.1046 2.5 22V2ZM4 3C4 2.44772 4.44772 2 5 2H18C18.5523 2 19 2.44772 19 3V19C19 19.5523 18.5523 20 18 20H5C4.44772 20 4 19.5523 4 19V3ZM9.10498 1C9.10498 0.723858 9.32884 0.5 9.60498 0.5H13.605C13.8811 0.5 14.105 0.723858 14.105 1C14.105 1.27614 13.8811 1.5 13.605 1.5H9.60498C9.32884 1.5 9.10498 1.27614 9.10498 1ZM13.105 22C13.105 22.8284 12.4334 23.5 11.605 23.5C10.7766 23.5 10.105 22.8284 10.105 22C10.105 21.1716 10.7766 20.5 11.605 20.5C12.4334 20.5 13.105 21.1716 13.105 22Z", fill: "#C1E9FF" }) });
};
const Phone = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PhoneIcon,
  default: PhoneIcon
}, Symbol.toStringTag, { value: "Module" }));
const PixIcon = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, css$1r.SecColor, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "40",
      height: "40",
      viewBox: "0 0 40 40",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M1.66536 8.33333C1.66536 6.49238 3.15775 5 4.9987 5H31.6654C33.5063 5 34.9987 6.49238 34.9987 8.33333V11.6667H1.66536V8.33333ZM20.9634 15H1.66406V30C1.66406 31.8409 3.15645 33.3333 4.99739 33.3333H18.3933C16.586 31.1656 15.4987 28.3766 15.4987 25.3337C15.4987 21.0391 17.6645 17.2503 20.9634 15ZM38.0013 25.3336C38.0013 30.8565 33.5241 35.3336 28.0013 35.3336C22.4785 35.3336 18.0013 30.8565 18.0013 25.3336C18.0013 19.8108 22.4785 15.3336 28.0013 15.3336C33.5241 15.3336 38.0013 19.8108 38.0013 25.3336ZM29.0182 20.9269C29.0182 20.3516 28.5519 19.8852 27.9766 19.8852C27.4013 19.8852 26.9349 20.3516 26.9349 20.9269V24.2635H23.595C23.0198 24.2635 22.5534 24.7299 22.5534 25.3052C22.5534 25.8804 23.0198 26.3468 23.595 26.3468H26.9349V29.7405C26.9349 30.3158 27.4013 30.7821 27.9766 30.7821C28.5519 30.7821 29.0182 30.3158 29.0182 29.7405V26.3468H32.4086C32.9839 26.3468 33.4503 25.8804 33.4503 25.3052C33.4503 24.7299 32.9839 24.2635 32.4086 24.2635H29.0182V20.9269Z",
          fill: "#CB3034"
        }
      )
    }
  );
};
const Pix$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PixIcon,
  default: PixIcon
}, Symbol.toStringTag, { value: "Module" }));
const PixAccountIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2.83333 2.8335C1.82081 2.8335 1 3.65431 1 4.66683V19.3335C1 20.346 1.82081 21.1668 2.83333 21.1668H21.1667C22.1792 21.1668 23 20.346 23 19.3335V4.66683C23 3.65431 22.1792 2.8335 21.1667 2.8335H2.83333ZM4.77887 9.71687C4.77887 11.072 5.61904 12.2309 6.8069 12.7011C4.88194 13.1629 3.3865 14.7289 3.02782 16.6918C2.93683 17.1898 3.35594 17.6039 3.86221 17.6039H12.1122C12.6185 17.6039 13.0376 17.1898 12.9466 16.6918C12.5879 14.7289 11.0925 13.1629 9.16751 12.7011C10.3554 12.2309 11.1955 11.072 11.1955 9.71687C11.1955 7.94496 9.75912 6.50854 7.9872 6.50854C6.21529 6.50854 4.77887 7.94496 4.77887 9.71687ZM19.9207 9.64957C20.427 9.64957 20.8374 10.06 20.8374 10.5662C20.8374 11.0725 20.427 11.4829 19.9207 11.4829H14.4207C13.9145 11.4829 13.5041 11.0725 13.5041 10.5662C13.5041 10.06 13.9145 9.64957 14.4207 9.64957H19.9207ZM20.8374 15.1496C20.8374 14.6433 20.427 14.2329 19.9207 14.2329H14.4207C13.9145 14.2329 13.5041 14.6433 13.5041 15.1496C13.5041 15.6558 13.9145 16.0662 14.4207 16.0662H19.9207C20.427 16.0662 20.8374 15.6558 20.8374 15.1496Z", fill: "#C1E9FF" }) });
};
const PixAccount = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PixAccountIcon,
  default: PixAccountIcon
}, Symbol.toStringTag, { value: "Module" }));
const PopCloseIcon = ({ className, isSelect = false, onClick } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { onClick, className: joinClass(css$1r.defaultCss, className), viewBox: "0 0 60 60", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M23.6128 21.8309C23.1943 21.4125 22.516 21.4125 22.0975 21.8309C21.6791 22.2493 21.6791 22.9277 22.0975 23.3462L28.7514 30L22.0975 36.6538C21.6791 37.0723 21.6791 37.7507 22.0975 38.1691C22.516 38.5875 23.1943 38.5875 23.6128 38.1691L30.2666 31.5152L37.021 38.2696C37.4394 38.688 38.1178 38.688 38.5362 38.2696C38.9547 37.8512 38.9547 37.1728 38.5362 36.7544L31.7818 30L38.5362 23.2456C38.9547 22.8272 38.9547 22.1488 38.5362 21.7304C38.1178 21.312 37.4394 21.312 37.021 21.7304L30.2666 28.4848L23.6128 21.8309Z" }) });
};
const PopClose = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PopCloseIcon,
  default: PopCloseIcon
}, Symbol.toStringTag, { value: "Module" }));
const RebateIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22.5165 2.00267C24.2314 2.03733 25.8738 2.35623 27.3586 3.26816C27.9554 3.63496 28.4741 4.09124 28.8062 4.72462C29.2776 5.62332 29.1396 6.57055 28.435 7.37661C27.8249 8.07427 27.0542 8.53371 26.2059 8.86899C25.0519 9.32464 23.8488 9.54333 22.6073 9.54018H22.6026C22.4431 9.5402 22.2984 9.54021 22.2203 9.35111C21.6613 7.99549 20.5559 7.22788 19.2791 6.65815C18.3028 6.22267 17.2705 5.98381 16.2086 5.88802C15.9137 5.86155 15.8286 5.76134 15.8796 5.47333C16.0088 4.73911 16.4191 4.18262 16.9712 3.72067C18.0772 2.79486 19.395 2.36442 20.7916 2.13565C21.3613 2.043 21.9361 1.98502 22.5165 2.00267Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.0608 12.9993C11.5588 13.9131 13.2144 14.22 14.8341 14.261C15.9093 14.2497 16.8659 14.1324 17.7987 13.8621C18.9539 13.5274 20.0246 13.0377 20.8502 12.1239C21.7256 11.1559 21.7653 10.0038 20.9675 8.97529C20.5465 8.43203 20.007 8.02869 19.3995 7.73437C16.7223 6.43674 13.9801 6.38632 11.209 7.39027C10.2713 7.72996 9.42927 8.24675 8.81795 9.0673C8.14361 9.97168 8.14928 10.9952 8.82299 11.8945C9.16079 12.3451 9.58115 12.7069 10.0608 12.9993Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M25.0729 28.0003C28.7162 27.9946 31.6871 24.9992 31.6846 21.335C31.6821 17.6615 28.6973 14.6698 25.03 14.6792C21.4125 14.6887 18.3912 17.5871 18.3717 21.3458C18.3521 25.0194 21.3886 28.006 25.0729 28.0003ZM23.1721 22.9516V22.9528L23.0354 22.9531C22.9446 22.9534 22.8535 22.9537 22.7625 22.9528C22.5992 22.9509 22.5463 23.0322 22.552 23.1911C22.5835 24.0772 23.162 24.8492 24.0059 25.1404C24.0793 25.1656 24.1612 25.1763 24.2426 25.187C24.4009 25.2077 24.5571 25.2281 24.645 25.3546C24.7314 25.4792 24.717 25.6397 24.7025 25.8012C24.6954 25.8799 24.6883 25.9589 24.6928 26.034L24.693 26.0364C24.6999 26.1438 24.7058 26.2372 24.8397 26.2767C25.2676 26.4027 25.4674 26.2609 25.4687 25.8191C25.4695 25.48 25.6355 25.271 25.9665 25.192C27.4362 24.8416 28.0312 23.1072 27.0909 21.9205C26.7363 21.4734 26.2358 21.2584 25.7358 21.0437L25.6439 21.0042C25.5357 20.9575 25.4257 20.9154 25.3156 20.8734C25.0632 20.777 24.8107 20.6806 24.5826 20.5284C24.0998 20.2057 23.9303 19.7437 24.096 19.1891C24.2271 18.7511 24.6109 18.4927 25.1409 18.4858C25.6382 18.4795 26.0378 18.7908 26.2029 19.3133C26.3281 19.7107 26.6045 19.9088 27.0322 19.9076C27.0703 19.9076 27.1085 19.9069 27.1468 19.9063C27.1927 19.9055 27.2386 19.9047 27.2843 19.9051C27.4331 19.9051 27.4936 19.8263 27.4797 19.6851C27.3997 18.8727 27.1602 18.0932 26.3428 17.7957C25.7214 17.5694 25.4554 17.2783 25.584 16.6367C25.6023 16.546 25.5796 16.4521 25.4655 16.4073C25.0836 16.2567 24.8101 16.43 24.8094 16.8302V16.9877C24.8094 17.4778 24.8082 17.4781 24.3601 17.6095L24.3418 17.6148C23.6284 17.8234 23.1047 18.2463 22.9238 18.9931C22.7335 19.7765 22.857 20.4931 23.4608 21.0823C23.8553 21.4677 24.3522 21.6581 24.8489 21.8484C24.9005 21.8682 24.9521 21.8879 25.0035 21.9079L25.0568 21.9286C25.4118 22.0663 25.7669 22.204 26.0352 22.4921C26.5709 23.0675 26.3472 23.9814 25.6073 24.2442C24.713 24.5618 23.9341 24.1213 23.7746 23.193C23.7418 23.002 23.6605 22.9415 23.4866 22.9503C23.4135 22.9538 23.3401 22.9531 23.2667 22.9523C23.2353 22.9519 23.2035 22.9516 23.1721 22.9516Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.0479 15.7964C11.544 16.7109 13.1921 17.0424 14.9227 17.0468C15.396 17.0487 15.8674 17.0386 16.3363 16.9699C17.8539 16.7475 19.292 16.3183 20.4819 15.2954C21.1342 14.7345 21.5798 14.0526 21.5357 13.1419C21.5345 13.118 21.537 13.0917 21.5395 13.065C21.5464 12.9913 21.5535 12.9153 21.4846 12.881C21.4045 12.8414 21.3532 12.9057 21.3055 12.9655C21.291 12.9837 21.2767 13.0016 21.2621 13.0159C20.8071 13.4602 20.2884 13.8144 19.72 14.0942C17.6308 15.124 15.4162 15.3168 13.1473 15.008C11.4104 14.7717 9.80461 14.1969 8.5158 12.9352L8.50404 12.9234C8.47073 12.8896 8.43408 12.8525 8.38282 12.8722C8.32311 12.895 8.32435 12.9482 8.32552 12.999C8.32581 13.0114 8.32609 13.0237 8.32547 13.0354C8.30278 13.4722 8.3595 13.8906 8.56685 14.2864C8.90969 14.9406 9.43026 15.4189 10.0479 15.7964Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M18.5699 17.4206C18.518 17.4273 18.4777 17.4323 18.4457 17.4357C18.3911 17.4415 18.3593 17.4449 18.3292 17.454C16.8645 17.8914 15.3728 18.0395 13.8501 17.8958C11.8738 17.7092 10.0411 17.1698 8.54615 15.7795C8.5377 15.7716 8.52931 15.7629 8.5208 15.754C8.48431 15.716 8.44568 15.6758 8.39049 15.6931C8.31813 15.7161 8.32125 15.7766 8.32422 15.8344C8.32508 15.8511 8.32593 15.8676 8.32494 15.8828C8.28965 16.4021 8.40687 16.8811 8.69552 17.3185C9.26839 18.1863 10.099 18.7245 11.0337 19.1102C12.9817 19.9138 14.994 20.0398 17.0574 19.6591C17.5231 19.5734 17.7916 19.3951 17.8981 18.9054C18 18.436 18.2403 18.008 18.5044 17.5374L18.5699 17.4206Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.3907 24.4136C11.8024 25.1712 13.3282 25.4491 14.859 25.4812L14.8602 25.4806C15.9902 25.4655 17.0446 25.3174 18.0757 24.9966C18.3044 24.9254 18.3586 24.8378 18.2408 24.6191C18.0561 24.2769 17.9118 23.9139 17.8192 23.5357C17.7605 23.2956 17.6433 23.2534 17.4114 23.3C16.2644 23.5313 15.1092 23.6158 13.9376 23.5111C11.9253 23.3315 10.0604 22.7996 8.54033 21.3822C8.53251 21.3751 8.52476 21.3672 8.51692 21.3592C8.47993 21.3216 8.44091 21.2819 8.38214 21.3053C8.32506 21.3282 8.32584 21.3807 8.32659 21.431C8.32679 21.4445 8.32699 21.4579 8.32605 21.4705C8.28446 22.0364 8.42248 22.5545 8.75146 23.017C9.18001 23.6195 9.74406 24.067 10.3907 24.4136Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.922 22.6621C12.9431 22.6218 11.0574 22.2563 9.46294 20.9794C8.73566 20.3977 8.25669 19.6648 8.32539 18.6766C8.32661 18.66 8.32554 18.6421 8.32446 18.624C8.32108 18.5673 8.31759 18.5088 8.384 18.4825C8.44124 18.4596 8.48043 18.5024 8.51648 18.5418C8.52409 18.5501 8.53156 18.5583 8.53903 18.5657C9.75474 19.753 11.2679 20.3076 12.9002 20.583C14.3188 20.8225 15.7438 20.8124 17.1599 20.5408C17.441 20.4866 17.5286 20.5421 17.5097 20.8433C17.4838 21.2504 17.4971 21.6626 17.5286 22.0697C17.5462 22.2928 17.4637 22.3659 17.267 22.4101C16.495 22.584 15.7154 22.6741 14.922 22.6621Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22.5587 10.5729C22.4425 10.699 22.4425 10.9321 22.4425 11.3904L22.4413 11.391C22.4413 11.4555 22.4425 11.5202 22.4437 11.5849C22.4463 11.7305 22.449 11.8762 22.4381 12.0206C22.4186 12.2878 22.5364 12.3798 22.7898 12.3609L22.9459 12.3492C23.4484 12.3116 23.9503 12.274 24.446 12.1769C25.7399 11.9235 26.9613 11.4963 27.9835 10.6303C28.6578 10.06 29.1204 9.36672 29.0895 8.43461C29.089 8.41479 29.0907 8.39312 29.0924 8.37099C29.0984 8.29463 29.1047 8.21281 29.0202 8.18252C28.9404 8.15381 28.888 8.21601 28.8387 8.27457C28.8242 8.29186 28.8099 8.30884 28.7952 8.32306C28.3862 8.72199 27.9217 9.04215 27.4175 9.30873C26.1722 9.96732 24.8393 10.3032 23.4402 10.3934L23.4223 10.3945C22.9239 10.4266 22.679 10.4424 22.5587 10.5729Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22.4425 13.7132C22.4425 13.4798 22.4425 13.3626 22.5011 13.3017C22.5602 13.2402 22.6789 13.2362 22.9175 13.228L22.9366 13.2273C24.7851 13.1624 26.5321 12.7509 28.0906 11.7041C28.3704 11.5163 28.6232 11.2944 28.8677 11.0644C28.8771 11.0557 28.8863 11.0457 28.8956 11.0357C28.9308 10.9979 28.9677 10.9582 29.0215 10.9736C29.0954 10.9956 29.0929 11.0584 29.0906 11.1173C29.09 11.1328 29.0894 11.148 29.0902 11.1621C29.1412 12.1591 28.6364 12.8782 27.9186 13.4882C27.8935 13.5094 27.8669 13.5288 27.8404 13.5483C27.8075 13.5724 27.7746 13.5965 27.7446 13.6237C27.3722 13.9615 26.982 14.0611 26.4571 13.9439C25.283 13.6817 24.0994 13.7548 22.9373 14.0857C22.607 14.1798 22.4425 14.0557 22.4425 13.7132Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M29.0907 14.2052C29.0903 14.1946 29.0898 14.1841 29.0898 14.1736H29.0917C29.0917 14.1579 29.0921 14.1421 29.0924 14.1264C29.0932 14.0896 29.094 14.0528 29.0905 14.0166C29.0884 13.9962 29.0893 13.974 29.0903 13.9517C29.0932 13.8871 29.0961 13.8211 29.0249 13.7916C28.9533 13.762 28.9088 13.8119 28.8657 13.8603C28.8511 13.8766 28.8366 13.8928 28.8214 13.9057C28.6613 14.0412 28.5037 14.1792 28.3468 14.3179C28.3425 14.3217 28.3381 14.3255 28.3336 14.3294C28.2733 14.382 28.1972 14.4482 28.304 14.5139C28.3491 14.5416 28.3951 14.5739 28.4417 14.6067C28.5964 14.7152 28.7576 14.8284 28.914 14.795C29.0604 14.7638 29.0698 14.5819 29.0786 14.4119C29.0812 14.3615 29.0838 14.3122 29.0898 14.2681C29.0924 14.2475 29.0915 14.2264 29.0907 14.2052Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" })
    ]
  });
};
const Rebate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  RebateIcon,
  default: RebateIcon
}, Symbol.toStringTag, { value: "Module" }));
const RebateInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M14.7797 8.28719L15.4058 8.76211C15.8988 9.13605 16.3611 9.57791 16.7847 10.0694C17.6126 10.1556 18.3979 10.385 19.1153 10.7326C18.6434 9.96201 18.0953 9.24442 17.4853 8.61272C17.1159 8.23023 16.7239 7.87923 16.3123 7.56703C16.7867 7.32042 17.1873 6.97991 17.479 6.57557C17.8093 6.11767 18 5.57792 18 5C18 3.4547 16.6369 2.18229 14.8851 2.01796C14.254 1.1011 13.1972 0.5 12 0.5C10.8028 0.5 9.74599 1.1011 9.11491 2.01795C7.3631 2.18229 6 3.4547 6 5C6 5.57792 6.19065 6.11767 6.52098 6.57557C6.81267 6.97991 7.21328 7.32042 7.68771 7.56703C7.27612 7.87923 6.88406 8.23023 6.51469 8.61272C4.37728 10.8261 3 14.094 3 17C3 21.9706 7.02944 23 12 23C12.0751 23 12.1499 22.9998 12.2246 22.9993C11.5797 22.5821 11.0073 22.0625 10.5304 21.4634C8.7739 21.3698 7.35924 21.0893 6.34826 20.5438C5.74226 20.2169 5.30544 19.8069 5.00903 19.2892C4.70928 18.7656 4.5 18.0385 4.5 17C4.5 14.0554 6.17931 10.5939 8.59422 8.76211L9.22033 8.28719C9.29891 8.31226 9.38542 8.33762 9.48027 8.36264C10.0239 8.50604 10.8389 8.63745 12 8.63745C13.1611 8.63745 13.9761 8.50604 14.5197 8.36264C14.6146 8.33762 14.7011 8.31226 14.7797 8.28719ZM14.047 3.44592L13.6495 2.86843C13.2863 2.3408 12.6828 2 12 2C11.3172 2 10.7137 2.3408 10.3505 2.86842L9.95301 3.44592L9.255 3.51139C8.07152 3.62242 7.5 4.41664 7.5 5C7.5 5.42582 7.76614 5.91725 8.37953 6.23609L9.20773 6.66659C9.26891 6.68425 9.32877 6.71004 9.38581 6.74429L9.38799 6.74545C9.39657 6.74997 9.41854 6.76112 9.45517 6.77692C9.52834 6.80849 9.6608 6.85895 9.86287 6.91226C10.267 7.01886 10.952 7.13745 12 7.13745C13.048 7.13745 13.733 7.01886 14.1371 6.91226C14.3392 6.85895 14.4717 6.80849 14.5448 6.77692C14.5815 6.76112 14.6034 6.74997 14.612 6.74545L14.6142 6.74429C14.6712 6.71004 14.7311 6.68425 14.7923 6.66659L15.6205 6.23609C16.2339 5.91725 16.5 5.42582 16.5 5C16.5 4.41664 15.9285 3.62242 14.745 3.5114L14.047 3.44592Z",
        fill: "#2FA33F"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M15.8729 20.2926V19.7228C15.5473 19.7049 15.2581 19.6438 15.0053 19.5394C14.7021 19.4135 14.4651 19.227 14.2944 18.9801C14.1254 18.7315 14.0367 18.4241 14.0284 18.0579H15.07C15.0816 18.2286 15.1304 18.3711 15.2166 18.4854C15.3045 18.5981 15.4213 18.6835 15.5671 18.7415C15.6613 18.7774 15.7632 18.8019 15.8729 18.8149V17.5052L15.5497 17.424C15.1205 17.3196 14.7816 17.1564 14.533 16.9343C14.2844 16.7122 14.161 16.4131 14.1626 16.0369C14.161 15.7287 14.243 15.4594 14.4087 15.229C14.5761 14.9987 14.8056 14.8189 15.0973 14.6896C15.3304 14.5863 15.5889 14.5243 15.8729 14.5036V13.929H16.2805V14.5014C16.5804 14.5196 16.8472 14.5824 17.081 14.6896C17.3643 14.8189 17.5848 14.9987 17.7422 15.229C17.8996 15.4594 17.9808 15.7262 17.9858 16.0295H16.9542C16.9343 15.829 16.849 15.6732 16.6982 15.5621C16.5878 15.4809 16.4486 15.4294 16.2805 15.4076V16.6462L16.5291 16.7056C16.7512 16.7553 16.955 16.8216 17.1406 16.9045C17.3262 16.9873 17.487 17.0893 17.6229 17.2102C17.7588 17.3312 17.864 17.4737 17.9386 17.6378C18.0148 17.8018 18.0537 17.9899 18.0554 18.2021C18.0537 18.5136 17.9742 18.7837 17.8168 19.0124C17.661 19.2395 17.4356 19.416 17.1406 19.5419C16.896 19.6456 16.6093 19.706 16.2805 19.7232V20.2926H15.8729ZM16.5415 18.7464C16.4628 18.7776 16.3758 18.7995 16.2805 18.8124V17.6098C16.3912 17.6418 16.4889 17.676 16.5739 17.7124C16.7031 17.767 16.8009 17.8333 16.8672 17.9112C16.9351 17.9891 16.9691 18.0852 16.9691 18.1996C16.9691 18.3222 16.9318 18.4308 16.8572 18.5252C16.7827 18.6197 16.6774 18.6934 16.5415 18.7464ZM15.8729 15.4094V16.5443C15.8338 16.5325 15.7957 16.52 15.7585 16.5067C15.6607 16.4703 15.5746 16.428 15.5 16.38C15.4254 16.3303 15.3666 16.2714 15.3235 16.2035C15.2821 16.1355 15.263 16.056 15.2663 15.9648C15.2663 15.8555 15.2978 15.7577 15.3608 15.6715C15.4254 15.5853 15.5182 15.5182 15.6392 15.4702C15.7082 15.4418 15.7861 15.4215 15.8729 15.4094Z",
        fill: "#2FA33F"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M16 12.625C14.7708 12.625 13.6609 13.1311 12.8654 13.948C12.0972 14.7368 11.625 15.8126 11.625 17C11.625 17.3452 11.3452 17.625 11 17.625C10.6548 17.625 10.375 17.3452 10.375 17C10.375 15.4739 10.9836 14.0887 11.9699 13.0759C12.991 12.0274 14.4198 11.375 16 11.375C19.1066 11.375 21.625 13.8934 21.625 17C21.625 20.1066 19.1066 22.625 16 22.625C14.8671 22.625 13.8114 22.2895 12.9281 21.7128L12.2815 22.5015L11.1524 19.4764L14.3401 19.9909L13.7267 20.7389C14.3891 21.1426 15.1669 21.375 16 21.375C18.4162 21.375 20.375 19.4162 20.375 17C20.375 14.5838 18.4162 12.625 16 12.625Z",
        fill: "#2FA33F"
      }
    )
    ]
  });
};
const RebateInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  RebateInMineIcon,
  default: RebateInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const Received = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "51", height: "50", viewBox: "0 0 51 50", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_3161_55509)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "25.75", cy: "25.3662", r: "24.75", fill: "#E94D3E" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M25.5 11.3667C23.9812 11.3667 22.75 12.5979 22.75 14.1167V27.8667C22.75 29.3855 23.9812 30.6167 25.5 30.6167C27.0188 30.6167 28.25 29.3855 28.25 27.8667V14.1167C28.25 12.5979 27.0188 11.3667 25.5 11.3667ZM25.5 38.8654C27.0188 38.8654 28.25 37.6341 28.25 36.1154C28.25 34.5966 27.0188 33.3654 25.5 33.3654C23.9812 33.3654 22.75 34.5966 22.75 36.1154C22.75 37.6341 23.9812 38.8654 25.5 38.8654Z", fill: "white" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_3161_55509", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "0.75", y: "0.366699", width: "49.5", height: "49.5", rx: "24.75", fill: "white" }) }) })
    ]
  });
};
const Received$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Received,
  default: Received
}, Symbol.toStringTag, { value: "Module" }));
const RecordesDeApostasIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "73", height: "60", viewBox: "0 0 73 60", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_257_305987)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M23.321 16.4528C23.321 19.1938 21.099 21.4159 18.3579 21.4159C15.6169 21.4159 13.3948 19.1938 13.3948 16.4528C13.3948 13.7117 15.6169 11.4897 18.3579 11.4897C21.099 11.4897 23.321 13.7117 23.321 16.4528Z", fill: "#2FA33F" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M57.2044 11.9459C56.3487 7.09676 52.1353 3.56177 47.2113 3.56177H16.0375C11.1134 3.56177 6.90001 7.09676 6.04429 11.9459L2.0151 34.7779C0.918551 40.9917 5.69851 46.689 12.0083 46.689H12.6106C17.2384 46.689 21.2799 43.5581 22.4363 39.0771L23.336 35.5907C23.9142 33.3502 25.935 31.7848 28.2489 31.7848H34.9998C37.3137 31.7848 39.3345 33.3502 39.9127 35.5907L40.8124 39.0771C41.5052 41.7615 43.2334 43.9615 45.5028 45.294C45.5009 45.1964 45.5 45.0985 45.5 45.0004C45.5 36.7526 52.1567 30.0596 60.3906 30.0008L57.2044 11.9459ZM45.4686 14.0262C46.8697 14.0262 48.0055 12.8904 48.0055 11.4893C48.0055 10.0882 46.8697 8.95239 45.4686 8.95239C44.0675 8.95239 42.9317 10.0882 42.9317 11.4893C42.9317 12.8904 44.0675 14.0262 45.4686 14.0262ZM45.4686 24.1738C46.8697 24.1738 48.0055 23.038 48.0055 21.6369C48.0055 20.2358 46.8697 19.1 45.4686 19.1C44.0675 19.1 42.9317 20.2358 42.9317 21.6369C42.9317 23.038 44.0675 24.1738 45.4686 24.1738ZM42.9317 16.5631C42.9317 17.9642 41.7959 19.1 40.3948 19.1C38.9937 19.1 37.8579 17.9642 37.8579 16.5631C37.8579 15.162 38.9937 14.0262 40.3948 14.0262C41.7959 14.0262 42.9317 15.162 42.9317 16.5631ZM50.5424 19.1C51.9435 19.1 53.0793 17.9642 53.0793 16.5631C53.0793 15.162 51.9435 14.0262 50.5424 14.0262C49.1413 14.0262 48.0055 15.162 48.0055 16.5631C48.0055 17.9642 49.1413 19.1 50.5424 19.1ZM25.8579 16.4528C25.8579 20.5949 22.5 23.9528 18.3579 23.9528C14.2158 23.9528 10.8579 20.5949 10.8579 16.4528C10.8579 12.3106 14.2158 8.95276 18.3579 8.95276C22.5 8.95276 25.8579 12.3106 25.8579 16.4528Z", fill: "#2FA33F" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M72.5 44.7004C72.5 51.3279 67.1274 56.7004 60.5 56.7004C53.8726 56.7004 48.5 51.3279 48.5 44.7004C48.5 38.073 53.8726 32.7004 60.5 32.7004C67.1274 32.7004 72.5 38.073 72.5 44.7004ZM59.5444 47.8971C59.0088 48.3955 58.2906 48.7004 57.5012 48.7004C55.8444 48.7004 54.5012 47.3573 54.5012 45.7004C54.5012 43.8719 56.6536 42.0717 58.4861 40.539C59.2882 39.8682 60.0289 39.2487 60.5012 38.7004C60.841 39.0402 61.3459 39.4696 61.9211 39.9587C63.8259 41.5786 66.5012 43.8537 66.5012 45.7004C66.5012 47.3573 65.1581 48.7004 63.5012 48.7004C62.7464 48.7004 62.0567 48.4217 61.5295 47.9615C61.6231 48.7191 61.8978 49.2001 62.5012 49.7004V50.7004H58.5012V49.7004C59.1696 49.0803 59.4701 48.5732 59.5444 47.8971Z", fill: "#2FA33F" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_257_305987", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "72", height: "60", fill: "white", transform: "translate(0.5)" }) }) })
    ]
  });
};
const RecordesDeApostas = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  RecordesDeApostasIcon,
  default: RecordesDeApostasIcon
}, Symbol.toStringTag, { value: "Module" }));
const RectCopyIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, css$1r.SecColor, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9 3.00806V5.00806H7V2.00806C7 1.45577 7.44772 1.00806 8 1.00806H21C21.5523 1.00806 22 1.45577 22 2.00806V17.0081C22 17.5603 21.5523 18.0081 21 18.0081H18.2502V16.0081H20V3.00806H9Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2 7.00806C2 6.45577 2.44772 6.00806 3 6.00806H16C16.5523 6.00806 17 6.45577 17 7.00806V22.0081C17 22.5603 16.5523 23.0081 16 23.0081H3C2.44772 23.0081 2 22.5603 2 22.0081V7.00806ZM4 21.0081V8.00806H15V21.0081H4Z", fill: "#FEE004" })
    ]
  });
};
const RectCopy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  RectCopyIcon,
  default: RectCopyIcon
}, Symbol.toStringTag, { value: "Module" }));
const Register$3 = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "25",
      viewBox: "0 0 24 25",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
        clipPath: "url(#clip0_1094_159623)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M15.042 1.55108C14.4425 1.34485 13.8182 1.7903 13.8182 2.42435V23.2886C13.8182 23.9226 14.4425 24.3681 15.042 24.1619L21.3769 21.9828C21.7497 21.8546 22 21.5038 22 21.1096V4.60337C22 4.20911 21.7497 3.85834 21.3769 3.7301L15.042 1.55108ZM8.36364 11.4493H2V13.3255H8.36364V15.2017L12 12.3874L8.36364 9.57309V11.4493ZM4.71288 3.02094H5.63636H12V4.86792H6.55985V10.5112H4.71288V3.94443V3.02094ZM4.71288 20.8304V14.2636H6.55985V19.9069H12V21.7539H5.63636H4.71288V20.8304Z",
            fill: "#717E97"
          }
        )
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", {
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", {
          id: "clip0_1094_159623", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "rect",
            {
              width: "24",
              height: "24",
              fill: "white",
              transform: "translate(0 0.5)"
            }
          )
        })
      })
      ]
    }
  );
};
const Register$4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Register: Register$3,
  default: Register$3
}, Symbol.toStringTag, { value: "Module" }));
const RegistroDeRetiradasIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "59", height: "58", viewBox: "0 0 59 58", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M15.0731 0.649414C13.4163 0.649414 12.0731 1.99256 12.0731 3.64941C12.0731 5.30627 13.4163 6.64941 15.0731 6.64941H27.0731C28.73 6.64941 30.0731 5.30627 30.0731 3.64941C30.0731 1.99256 28.73 0.649414 27.0731 0.649414H15.0731Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.07312 3.64941H9.07361C9.07361 6.96312 11.7599 9.64941 15.0736 9.64941H27.0736C30.3873 9.64941 33.0736 6.96312 33.0736 3.64941H36.0731C39.3868 3.64941 42.0731 6.33571 42.0731 9.64941V21.3897C41.6713 21.3629 41.2659 21.3493 40.8573 21.3493C30.9162 21.3493 22.8573 29.4082 22.8573 39.3493C22.8573 45.809 26.26 51.4739 31.3707 54.6494H6.07312C2.75941 54.6494 0.0731201 51.9631 0.0731201 48.6494V9.64941C0.0731201 6.33571 2.75941 3.64941 6.07312 3.64941ZM7.14539 16.2119C5.90275 16.2119 4.89539 17.2193 4.89539 18.4619C4.89539 19.7046 5.90275 20.7119 7.14539 20.7119H31.1454C32.388 20.7119 33.3954 19.7046 33.3954 18.4619C33.3954 17.2193 32.388 16.2119 31.1454 16.2119H7.14539ZM4.89539 28.0273C4.89539 26.7847 5.90275 25.7773 7.14539 25.7773H21.0731C22.3158 25.7773 23.3231 26.7847 23.3231 28.0273C23.3231 29.27 22.3158 30.2773 21.0731 30.2773H7.14539C5.90275 30.2773 4.89539 29.27 4.89539 28.0273Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M40.2573 53.8273C43.6132 53.8273 46.701 52.6794 49.1494 50.7547L55.0858 56.6912C55.9645 57.5698 57.3891 57.5698 58.2678 56.6912C59.1465 55.8125 59.1465 54.3879 58.2678 53.5092L52.2138 47.4551C53.7568 45.1615 54.6573 42.3996 54.6573 39.4273C54.6573 31.4744 48.2102 25.0273 40.2573 25.0273C32.3044 25.0273 25.8573 31.4744 25.8573 39.4273C25.8573 47.3802 32.3044 53.8273 40.2573 53.8273ZM40.2573 49.3273C45.7249 49.3273 50.1573 44.895 50.1573 39.4273C50.1573 33.9597 45.7249 29.5273 40.2573 29.5273C34.7897 29.5273 30.3573 33.9597 30.3573 39.4273C30.3573 44.895 34.7897 49.3273 40.2573 49.3273Z", fill: "#2FA33F" })
    ]
  });
};
const RegistroDeRetiradas = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  RegistroDeRetiradasIcon,
  default: RegistroDeRetiradasIcon
}, Symbol.toStringTag, { value: "Module" }));
const SairIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5.0166 6.4C5.0166 5.48873 5.75533 4.75 6.6666 4.75H16.8666C17.7779 4.75 18.5166 5.48873 18.5166 6.4V7.19971C18.5166 7.61392 18.8524 7.94971 19.2666 7.94971C19.6808 7.94971 20.0166 7.61392 20.0166 7.19971V6.4C20.0166 4.6603 18.6063 3.25 16.8666 3.25H6.6666C4.9269 3.25 3.5166 4.6603 3.5166 6.4V17.6C3.5166 19.3397 4.9269 20.75 6.6666 20.75H16.8666C18.6063 20.75 20.0166 19.3397 20.0166 17.6V16.1997C20.0166 15.7855 19.6808 15.4497 19.2666 15.4497C18.8524 15.4497 18.5166 15.7855 18.5166 16.1997V17.6C18.5166 18.5113 17.7779 19.25 16.8666 19.25H6.6666C5.75533 19.25 5.0166 18.5113 5.0166 17.6V6.4Z", fill: "#FF5851" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M16.6647 8.75483C16.9576 8.46193 17.4325 8.46193 17.7254 8.75483L20.1389 11.1683C20.5984 11.6278 20.5984 12.3728 20.1389 12.8323L17.7254 15.2458C17.4325 15.5387 16.9576 15.5387 16.6647 15.2458C16.3718 14.9529 16.3718 14.4781 16.6647 14.1852L18.0996 12.7503H10.0166C9.60239 12.7503 9.2666 12.4145 9.2666 12.0003C9.2666 11.5861 9.60239 11.2503 10.0166 11.2503H18.0996L16.6647 9.81549C16.3718 9.52259 16.3718 9.04772 16.6647 8.75483Z", fill: "#FF5851" })
    ]
  });
};
const Sair = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SairIcon,
  default: SairIcon
}, Symbol.toStringTag, { value: "Module" }));
const SaqueIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "56", height: "46", viewBox: "0 0 56 46", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M40.5 19.0107C39.0092 18.4306 37.8886 17.1096 37.5903 15.5H18.2925C18.0021 17.0671 16.9322 18.3607 15.5 18.9632V27.0368C16.9322 27.6393 18.0021 28.9329 18.2925 30.5H37.5903C37.8886 28.8904 39.0092 27.5694 40.5 26.9893V19.0107ZM32.6875 23C32.6875 25.5888 30.5888 27.6875 28 27.6875C25.4112 27.6875 23.3125 25.5888 23.3125 23C23.3125 20.4112 25.4112 18.3125 28 18.3125C30.5888 18.3125 32.6875 20.4112 32.6875 23Z", fill: "white" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.5 0.5C3.18629 0.5 0.5 3.18629 0.5 6.5V14.581C4.07626 15.7083 6.66943 19.0513 6.66943 23C6.66943 26.9487 4.07626 30.2917 0.5 31.419V39.5C0.5 42.8137 3.18629 45.5 6.5 45.5H49.5C52.8137 45.5 55.5 42.8137 55.5 39.5V31.4666C51.8433 30.3886 49.1743 27.006 49.1743 23C49.1743 18.994 51.8433 15.6114 55.5 14.5334V6.5C55.5 3.18629 52.8137 0.5 49.5 0.5H6.5ZM24.3953 11.6719H40.4688L39.7304 8.3067L24.3953 11.6719ZM43 33H13V13H43V33Z", fill: "white" })
    ]
  });
};
const Saque = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SaqueIcon,
  default: SaqueIcon
}, Symbol.toStringTag, { value: "Module" }));
const SearchToolIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "25", viewBox: "0 0 24 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
      clipPath: "url(#clip0_1818_371261)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M14.0781 9.28536C14.0781 12.0893 11.8051 14.3623 9.00118 14.3623C6.19728 14.3623 3.92426 12.0893 3.92426 9.28536C3.92426 6.48146 6.19728 4.20844 9.00118 4.20844C11.8051 4.20844 14.0781 6.48146 14.0781 9.28536ZM13.5492 15.6797C12.2663 16.5938 10.6965 17.1315 9.00118 17.1315C4.66787 17.1315 1.15503 13.6187 1.15503 9.28536C1.15503 4.95205 4.66787 1.43921 9.00118 1.43921C13.3345 1.43921 16.8473 4.95205 16.8473 9.28536C16.8473 11.2575 16.1198 13.0596 14.9184 14.4381L16.419 15.9387C17.2633 15.5708 18.2827 15.7322 18.9734 16.4228L22.1713 19.6208C23.0725 20.522 23.0725 21.9832 22.1713 22.8844C21.2701 23.7856 19.809 23.7856 18.9078 22.8844L15.7098 19.6864C15.0626 19.0392 14.8802 18.1031 15.1626 17.2931L13.5492 15.6797Z",
          fill: "#2FE6FF"
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1818_371261", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "24", height: "24", fill: "white", transform: "translate(0 0.5)" }) }) })
    ]
  });
};
const SearchTool = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SearchToolIcon,
  default: SearchToolIcon
}, Symbol.toStringTag, { value: "Module" }));
const ShareInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M23.3733 7.02046L16.923 1.18164L16.923 4.03049C10.8701 4.30215 6.51262 10.0704 8.00014 16.0205C9.19452 12.4374 12.5477 10.0205 16.3247 10.0205H16.923L16.923 13.0205L23.3733 7.02046Z", fill: "#FEE004" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M4 5.4C4 4.6268 4.6268 4 5.4 4H10C10.5523 4 11 3.55228 11 3C11 2.44772 10.5523 2 10 2H5.4C3.52223 2 2 3.52223 2 5.4V18.6C2 20.4778 3.52223 22 5.4 22H18.6C20.4778 22 22 20.4778 22 18.6V14C22 13.4477 21.5523 13 21 13C20.4477 13 20 13.4477 20 14V18.6C20 19.3732 19.3732 20 18.6 20H5.4C4.6268 20 4 19.3732 4 18.6V5.4Z", fill: "#FEE004" })
    ]
  });
};
const ShareInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ShareInMineIcon,
  default: ShareInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const SuporteIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "26", height: "26", viewBox: "0 0 26 26", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M13 26C20.1797 26 26 20.1797 26 13C26 5.8203 20.1797 0 13 0C5.8203 0 0 5.8203 0 13C0 20.1797 5.8203 26 13 26ZM13 6C15.7614 6 18 8.23858 18 11H17C16.4477 11 16 11.4477 16 12V15C16 15.5523 16.4477 16 17 16H18C18.5523 16 19 15.5523 19 15V11C19 7.68629 16.3137 5 13 5C9.68629 5 7 7.68629 7 11V15C7 15.5523 7.44772 16 8 16V17C8 18.1046 8.89543 19 10 19H11.0854C11.2913 19.5826 11.8469 20 12.5 20H13.5C14.3284 20 15 19.3284 15 18.5C15 17.6716 14.3284 17 13.5 17H12.5C11.8469 17 11.2913 17.4174 11.0854 18L10 18C9.49149 18 9.07163 17.6204 9.00827 17.1292C9.00335 17.0911 9.00058 17.0523 9.00008 17.0129L9 17V16C9.55228 16 10 15.5523 10 15V12C10 11.4477 9.55228 11 9 11H8C8 8.23858 10.2386 6 13 6ZM4 13.2C4 12.5373 4.53726 12 5.2 12C5.36569 12 5.5 12.1343 5.5 12.3V14.7C5.5 14.8657 5.36569 15 5.2 15C4.53726 15 4 14.4627 4 13.8V13.2ZM20.3 12C20.9627 12 21.5 12.5373 21.5 13.2V13.8C21.5 14.4627 20.9627 15 20.3 15C20.1343 15 20 14.8657 20 14.7V12.3C20 12.1343 20.1343 12 20.3 12Z", fill: "#C1E9FF" }) });
};
const Suporte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SuporteIcon,
  default: SuporteIcon
}, Symbol.toStringTag, { value: "Module" }));
const SuporteInMineIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M3.75309 10.1827C3.87691 5.73454 7.52171 2.16663 11.9998 2.16663C16.478 2.16663 20.1228 5.73454 20.2466 10.1827C21.4491 10.5104 22.3332 11.6103 22.3332 12.9166V14.1666C22.3332 15.4718 21.4507 16.5708 20.2498 16.8996V18.25L16.9998 18.25C15.6652 18.25 14.5832 17.168 14.5832 15.8333V12.0833C14.5832 10.7486 15.6651 9.66663 16.9998 9.66663H18.7086C18.3356 6.29166 15.4743 3.66663 11.9998 3.66663C8.52542 3.66663 5.66412 6.29166 5.29103 9.66663H6.99984C8.33452 9.66663 9.4165 10.7486 9.4165 12.0833V15.8333C9.4165 17.168 8.33453 18.25 6.99984 18.25H6.70112C7.0695 19.0843 7.90416 19.6666 8.87484 19.6666H9.63818C9.91763 18.9823 10.5899 18.5 11.3748 18.5H12.6248C13.6603 18.5 14.4998 19.3395 14.4998 20.375C14.4998 21.4105 13.6603 22.25 12.6248 22.25H11.3748C10.6221 22.25 9.97302 21.8065 9.67457 21.1666H8.87484C7.06551 21.1666 5.54581 19.9266 5.11926 18.25H3.74984V16.8996C2.549 16.5708 1.6665 15.4718 1.6665 14.1666V12.9166C1.6665 11.6103 2.55059 10.5104 3.75309 10.1827ZM20.2498 15.2692V11.8141C20.602 12.0541 20.8332 12.4583 20.8332 12.9166V14.1666C20.8332 14.6249 20.602 15.0292 20.2498 15.2692ZM3.74984 11.8141C3.39771 12.0541 3.1665 12.4583 3.1665 12.9166V14.1666C3.1665 14.6249 3.39771 15.0292 3.74984 15.2692V11.8141ZM18.7498 11.1666V16.75H16.9998C16.4936 16.75 16.0832 16.3396 16.0832 15.8333V12.0833C16.0832 11.577 16.4936 11.1666 16.9998 11.1666H18.7498ZM5.24984 16.75H6.99984C7.5061 16.75 7.9165 16.3396 7.9165 15.8333V12.0833C7.9165 11.577 7.5061 11.1666 6.99984 11.1666H5.24984V16.75Z",
        fill: "#EAB700"
      }
    )
  });
};
const SuporteInMine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SuporteInMineIcon,
  default: SuporteInMineIcon
}, Symbol.toStringTag, { value: "Module" }));
const UserFullIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(css$1r.defaultCss, className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 32 32",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M15.334 15.3333C19.0159 15.3333 22.0007 12.3486 22.0007 8.66667C22.0007 4.98477 19.0159 2 15.334 2C11.6521 2 8.66732 4.98477 8.66732 8.66667C8.66732 12.3486 11.6521 15.3333 15.334 15.3333Z",
          fill: "#87D1A2"
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M2.08228 27.8541C2.64592 22.7469 6.09401 18.5088 10.7616 16.8047C12.113 17.5657 13.673 17.9998 15.3345 17.9998C16.996 17.9998 18.556 17.5657 19.9074 16.8047C24.575 18.5088 28.0231 22.7469 28.5867 27.8541C28.6765 28.6673 28.0046 29.3332 27.1864 29.3332H3.48265C2.66445 29.3332 1.99253 28.6673 2.08228 27.8541Z",
          fill: "#87D1A2"
        }
      )
      ]
    }
  );
};
const UserFull = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  UserFullIcon,
  default: UserFullIcon
}, Symbol.toStringTag, { value: "Module" }));
const VIPIcon$1 = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className: joinClass(css$1r.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M20 28C27.1797 28 33 22.1797 33 15C33 7.8203 27.1797 2 20 2C12.8203 2 7 7.8203 7 15C7 22.1797 12.8203 28 20 28ZM28.6655 10.2007C28.0213 10.2007 27.5013 10.7207 27.5013 11.3649C27.5013 11.5201 27.5323 11.6676 27.5893 11.8021L23.5206 13.0404C23.0273 13.1906 22.5008 12.941 22.3046 12.4641L20.599 8.31736C21.1138 8.14662 21.4864 7.66801 21.4864 7.09627C21.4864 6.38224 20.9069 5.80273 20.1928 5.80273C19.4788 5.80273 18.8993 6.38224 18.8993 7.09627C18.8993 7.65507 19.2537 8.12592 19.7479 8.30701L17.8437 12.497C17.6342 12.9581 17.113 13.1897 16.6304 13.0362L12.4394 11.7038C12.473 11.5952 12.4963 11.4839 12.4963 11.3649C12.4963 10.7207 11.9763 10.2007 11.3321 10.2007C10.688 10.2007 10.168 10.7207 10.168 11.3649C10.168 12.0091 10.688 12.5291 11.3321 12.5291C11.64 12.5291 11.9194 12.4075 12.1264 12.2109L14.1622 19.2065C14.2865 19.6335 14.6777 19.9271 15.1224 19.9271H25.0648C25.503 19.9271 25.8901 19.6419 26.0199 19.2234L28.1377 12.3972C28.2981 12.4799 28.4766 12.5291 28.6681 12.5291C29.3122 12.5291 29.8322 12.0091 29.8322 11.3649C29.8322 10.7207 29.3122 10.2007 28.6681 10.2007H28.6655ZM24.6899 20.7012H15.5332C14.9809 20.7012 14.5332 21.1489 14.5332 21.7012C14.5332 22.2535 14.9809 22.7012 15.5332 22.7012H24.6899C25.2422 22.7012 25.6899 22.2535 25.6899 21.7012C25.6899 21.1489 25.2422 20.7012 24.6899 20.7012Z", fill: "white", fillOpacity: isSelect ? "1" : "0.6" }) });
};
const VIP$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  VIPIcon: VIPIcon$1,
  default: VIPIcon$1
}, Symbol.toStringTag, { value: "Module" }));
const WalletIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1r.defaultCss, className), width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_1_342514)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5.78174 3.57371L5.78412 3.57184C5.89458 3.57968 5.9895 3.54494 6.08374 3.51045C6.11379 3.49945 6.14378 3.48847 6.17417 3.47891C6.93866 3.24141 7.72659 3.14967 8.51962 3.10584C9.30246 3.06303 10.0812 3.14559 10.8498 3.29543C11.8263 3.48604 12.7539 3.8214 13.6295 4.29538C15.0646 5.0721 16.2389 6.13932 17.1604 7.48584C17.2664 7.63976 17.2654 7.64281 17.1063 7.7478C17.008 7.81296 16.9096 7.8779 16.8113 7.94281C16.5989 8.08303 16.3868 8.22304 16.1757 8.36449C16.1662 8.37072 16.1544 8.37572 16.1425 8.38081C16.1094 8.39485 16.075 8.40949 16.084 8.45215C16.0907 8.4836 16.1244 8.4914 16.1572 8.49898C16.169 8.50172 16.1807 8.50443 16.191 8.50821C16.2104 8.51535 16.2307 8.52147 16.2511 8.52758C16.4382 8.5843 16.6253 8.64062 16.8124 8.69692C17.143 8.79644 17.4735 8.89593 17.8036 8.99749C18.715 9.27958 19.6255 9.56371 20.5359 9.84784L20.5384 9.84861C20.6189 9.8741 20.6729 9.87614 20.6831 9.76401C20.7141 9.41166 20.7674 9.06256 20.8207 8.71326C20.8463 8.54519 20.872 8.37708 20.8951 8.20854L20.8994 8.17753C20.9938 7.4947 21.0883 6.81091 21.1918 6.12811C21.2099 6.00737 21.2259 5.88631 21.2419 5.76524C21.2762 5.50612 21.3105 5.2469 21.3661 4.99055C21.367 4.98595 21.3683 4.98116 21.3697 4.97632C21.3754 4.95546 21.3815 4.93365 21.3599 4.92124C21.335 4.90676 21.3158 4.92275 21.2973 4.93815C21.2923 4.94227 21.2874 4.94634 21.2825 4.94978C21.2088 4.99984 21.135 5.04962 21.0611 5.09942C20.8478 5.24328 20.6342 5.38725 20.4252 5.53793C20.3233 5.61132 20.2723 5.59399 20.2051 5.49614C19.9125 5.07006 19.5751 4.68068 19.2122 4.31271C18.1725 3.25874 16.9596 2.47183 15.5712 1.95299C14.4785 1.54425 13.3471 1.35262 12.1881 1.31388C11.6081 1.29452 11.0343 1.37708 10.4624 1.46678C9.65718 1.59317 8.88148 1.82762 8.1333 2.14666C7.43099 2.44634 6.78067 2.84082 6.15889 3.28218C6.06709 3.34723 5.97889 3.41741 5.89064 3.48762C5.85522 3.51579 5.81979 3.54398 5.78412 3.57184L5.78174 3.57167V3.57371Z", fill: "#EAB700" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M8.00489 20.4309C7.97866 20.4161 7.95282 20.4015 7.92627 20.3891C6.82949 19.8662 5.83158 19.1975 4.98351 18.325C3.92546 17.2364 3.14058 15.9765 2.64723 14.5362C2.42298 13.8818 2.27315 13.2111 2.18446 12.5282C2.08967 11.8065 2.07744 11.0858 2.15694 10.356C2.27009 9.32648 2.52797 8.33978 2.9143 7.38366C2.95711 7.27765 3.00807 7.17572 3.06413 7.07583C3.10287 7.0055 3.09471 6.96574 3.0254 6.92191C2.85478 6.8128 2.68545 6.7011 2.51601 6.58934C2.42429 6.52884 2.33253 6.46832 2.24053 6.40818C2.23353 6.40358 2.2259 6.39917 2.2182 6.39473C2.18665 6.37651 2.15387 6.35759 2.15796 6.32154C2.16286 6.28305 2.1937 6.28347 2.22442 6.28389C2.23845 6.28409 2.25247 6.28428 2.26397 6.28076L3.59622 5.871C3.97165 5.75545 4.34709 5.63961 4.72258 5.52376C5.34391 5.33205 5.96604 5.1401 6.58791 4.94954C6.74488 4.90163 6.76221 4.91998 6.7775 5.07797C6.80652 5.39204 6.85463 5.70352 6.90274 6.015C6.92223 6.14124 6.94173 6.2675 6.95996 6.39391C7.00877 6.73208 7.05493 7.07058 7.10108 7.40903C7.13589 7.66431 7.1707 7.91959 7.20663 8.17465C7.25707 8.52939 7.31028 8.88413 7.36341 9.2383L7.39725 9.46409C7.41152 9.5599 7.42477 9.65572 7.43802 9.75255C7.43897 9.75898 7.44081 9.76569 7.44268 9.77247C7.44879 9.7947 7.4551 9.81769 7.43088 9.8341C7.40592 9.85074 7.38571 9.83545 7.36581 9.8204C7.36134 9.81702 7.35689 9.81365 7.3524 9.81065C7.21384 9.71743 7.07527 9.62446 6.93671 9.53149C6.79802 9.43844 6.65933 9.34538 6.52064 9.25207C6.30556 9.10733 6.29944 9.1114 6.19038 9.34992C5.77144 10.2642 5.51457 11.2255 5.38716 12.2193C5.26688 13.1581 5.29644 14.0948 5.44424 15.0326C5.68174 16.5432 6.24338 17.9163 7.10776 19.171C7.41254 19.6144 7.75299 20.0283 8.14135 20.4024C8.14602 20.4069 8.15091 20.4113 8.15583 20.4157C8.18205 20.4393 8.20959 20.464 8.21474 20.5155L8.21372 20.5135C8.13192 20.5027 8.06728 20.4662 8.00489 20.4309Z", fill: "#EAB700" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22.0998 10.776C22.1021 10.7123 22.1044 10.6459 22.0827 10.5723L22.0817 10.5713C22.0384 10.6094 22.0267 10.6468 22.0161 10.6809C22.0142 10.6869 22.0123 10.6929 22.0103 10.6987C21.7912 11.3256 21.5465 11.9412 21.2285 12.5263C20.6373 13.6129 19.8636 14.5497 18.9289 15.3539C18.2174 15.9665 17.4254 16.4578 16.5702 16.8493C15.5448 17.3181 14.4664 17.5801 13.3502 17.6994C13.1779 17.7177 13.1708 17.7065 13.1708 17.5342C13.1703 17.3522 13.1703 17.1705 13.1703 16.9888C13.1703 16.8071 13.1703 16.6255 13.1698 16.4436C13.1698 16.4373 13.1704 16.4304 13.1711 16.4234C13.1737 16.3962 13.1765 16.3662 13.1433 16.3549C13.1188 16.3457 13.1035 16.3635 13.0884 16.3812C13.0833 16.387 13.0783 16.3929 13.073 16.3977C13.022 16.4425 12.971 16.4874 12.9211 16.5322C12.5946 16.8262 12.2678 17.1199 11.941 17.4135C11.6139 17.7075 11.2868 18.0014 10.9599 18.2957L9.71533 19.4149C9.71243 19.4175 9.70953 19.4201 9.70664 19.4226C9.65068 19.4724 9.60067 19.5168 9.68985 19.5963C10.3348 20.1739 10.9778 20.7525 11.6209 21.331C11.9425 21.6203 12.264 21.9095 12.5857 22.1986C12.7123 22.3121 12.8394 22.4247 12.9732 22.5433C13.0376 22.6004 13.1036 22.6589 13.1718 22.7195V22.5595C13.1718 22.4601 13.172 22.3607 13.1721 22.2613C13.1725 21.9631 13.1729 21.665 13.1698 21.3669C13.1688 21.271 13.2004 21.2201 13.2962 21.2221C13.4003 21.2244 13.5005 21.2052 13.6009 21.1859C13.6372 21.179 13.6735 21.172 13.71 21.1661C14.5061 21.0356 15.2767 20.8144 16.0157 20.4933C17.3113 19.9306 18.4529 19.1468 19.4131 18.104C20.0074 17.4588 20.5099 16.7524 20.9207 15.9798C21.4517 14.9819 21.7983 13.9208 21.9716 12.8056C22.0715 12.1624 22.1245 11.5142 22.099 10.8618C22.0977 10.8335 22.0987 10.805 22.0998 10.776Z", fill: "#EAB700" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1_342514", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "20", height: "21.4087", fill: "white", transform: "translate(2.10547 1.31006)" }) }) })
    ]
  });
};
const Wallet = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  WalletIcon,
  default: WalletIcon
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1t = "_svg_theme_fill_color_1w9sc_3";
const defaultCss = "_defaultCss_1w9sc_55";
const css$1q = {
  svg_theme_fill_color: svg_theme_fill_color$1t,
  defaultCss
};
const BetRecordsIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "31", height: "30", viewBox: "0 0 31 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
      clipPath: "url(#clip0_8435_152506)", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M11.6433 0C9.74975 0 8.21473 1.53503 8.21473 3.42858V11.2138C10.6934 11.4245 12.5009 12.0805 12.5009 12.8572L12.5007 12.8699V20.7971C13.0438 20.7432 13.6192 20.7143 14.2148 20.7143C17.5284 20.7143 20.2147 21.6097 20.2148 22.7142L20.215 28.2857H26.2147C28.1083 28.2857 29.6433 26.7507 29.6433 24.8572V3.42857C29.6433 1.53503 28.1083 0 26.2147 0H11.6433ZM11.6436 4.28567C11.6436 3.81228 12.0273 3.42853 12.5007 3.42853H25.3579C25.8313 3.42853 26.215 3.81228 26.215 4.28567C26.215 4.75906 25.8313 5.14282 25.3579 5.14282H12.5007C12.0273 5.14282 11.6436 4.75906 11.6436 4.28567ZM11.6436 9.42854C11.6436 8.95515 12.0273 8.57139 12.5007 8.57139H25.3579C25.8313 8.57139 26.215 8.95515 26.215 9.42854C26.215 9.90192 25.8313 10.2857 25.3579 10.2857H12.5007C12.0273 10.2857 11.6436 9.90192 11.6436 9.42854ZM17.6437 13.7143C17.1703 13.7143 16.7866 14.098 16.7866 14.5714C16.7866 15.0448 17.1703 15.4285 17.6437 15.4285L25.358 15.4285C25.8314 15.4285 26.2151 15.0448 26.2151 14.5714C26.2151 14.098 25.8314 13.7143 25.358 13.7143L17.6437 13.7143Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6.50044 15.4286C9.34077 15.4286 11.6433 14.6611 11.6433 13.7143C11.6433 12.7675 9.34077 12 6.50044 12C3.66012 12 1.35758 12.7675 1.35758 13.7143C1.35758 14.6611 3.66012 15.4286 6.50044 15.4286Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M11.643 14.5714C11.643 15.5182 9.34045 16.2857 6.50012 16.2857C3.67916 16.2857 1.38867 15.5286 1.35758 14.5908V17.1292L1.35742 17.1429C1.35742 18.0897 3.65996 18.8572 6.50028 18.8572C9.34061 18.8572 11.6431 18.0897 11.6431 17.1429L11.643 14.5714Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6.50012 19.7143C9.34045 19.7143 11.643 18.9468 11.643 18L11.6433 20.5714C11.6433 20.6924 11.6055 20.8106 11.534 20.9245C10.0505 21.1718 8.91742 21.6181 8.44938 22.1584C7.84826 22.2405 7.19013 22.2858 6.50028 22.2858C3.65996 22.2858 1.35742 21.5183 1.35742 20.5715L1.35758 20.5578V18.0194C1.38867 18.9572 3.67916 19.7143 6.50012 19.7143Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M8.21478 23.0453C7.67848 23.1085 7.10135 23.1429 6.50012 23.1429C3.67916 23.1429 1.38867 22.3858 1.35758 21.4479V23.9863L1.35742 24C1.35742 24.9468 3.65996 25.7143 6.50028 25.7143C7.10145 25.7143 7.67853 25.6799 8.21478 25.6167V23.0453Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M8.21478 26.4738C7.67848 26.537 7.10135 26.5714 6.50012 26.5714C3.67916 26.5714 1.38867 25.8143 1.35758 24.8765V27.4149L1.35742 27.4286C1.35742 28.3753 3.65996 29.1429 6.50028 29.1429C7.13042 29.1429 7.73408 29.1051 8.29201 29.0359C8.24119 28.9312 8.21478 28.8237 8.21478 28.7142V26.4738Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M19.3574 23.1429C19.3574 24.0897 17.0548 24.8572 14.2145 24.8572C11.3742 24.8572 9.07166 24.0897 9.07166 23.1429C9.07166 22.1961 11.3742 21.4286 14.2145 21.4286C17.0548 21.4286 19.3574 22.1961 19.3574 23.1429Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.07208 24.0001L9.07187 25.7144C9.07187 26.6611 11.3744 27.4286 14.2147 27.4286C17.0551 27.4286 19.3576 26.6611 19.3576 25.7144V24.0157C19.3323 24.9553 17.0395 25.7143 14.2149 25.7143C11.3747 25.7143 9.07218 24.9468 9.07208 24.0001Z", fillOpacity: isSelect ? "1" : "0.6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9.07187 26.5714C9.07187 27.5182 11.3746 28.2858 14.2149 28.2858C17.0395 28.2858 19.3323 27.5267 19.3576 26.5872V28.2857C19.3576 29.2325 17.0551 30 14.2147 30C11.3744 30 9.07187 29.2325 9.07187 28.2857V26.5714Z", fillOpacity: isSelect ? "1" : "0.6" })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_8435_152506", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "30", height: "30", fill: "white", transform: "translate(0.5)" }) }) })
    ]
  });
};
const BetRecords = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BetRecordsIcon,
  default: BetRecordsIcon
}, Symbol.toStringTag, { value: "Module" }));
const BlockchainIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg", className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M20.4998 2L26.1289 5.25V11.75L26.0671 11.7857C26.8903 12.7426 27.4909 13.8964 27.7888 15.1668L33.1289 18.25V24.75L27.4998 28L21.9073 24.7712C21.296 24.9207 20.6571 25 19.9998 25C19.3424 25 18.7035 24.9207 18.0923 24.7712L12.4998 28L6.87061 24.75V18.25L12.2108 15.1668C12.6124 13.4537 13.5646 11.9526 14.8706 10.8604V5.25L20.4998 2ZM20.4998 15L16.0863 12.4519C15.0673 13.3294 14.3465 14.5436 14.0964 15.9218L18.1289 18.25V22.7026C18.7176 22.8956 19.3465 23 19.9998 23C20.653 23 21.2819 22.8956 21.8706 22.7026V18.25L25.9032 15.9218C25.6855 14.7222 25.1111 13.6468 24.2939 12.8095L20.4998 15Z",
        fill: "#A7B7D7"
      }
    )
  });
};
const Blockchain = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BlockchainIcon,
  default: BlockchainIcon
}, Symbol.toStringTag, { value: "Module" }));
const CartasIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M7.22189 9.85691C6.82375 8.82659 7.33624 7.66859 8.36655 7.27045L19.7931 2.85495C20.8234 2.45681 21.9814 2.96929 22.3796 3.99961L28.6178 20.143C29.0159 21.1733 28.5034 22.3313 27.4731 22.7295L16.0466 27.145C15.0162 27.5431 13.8582 27.0306 13.4601 26.0003L7.22189 9.85691ZM19.8449 17.9708C22.7944 18.3522 24.1131 16.8437 23.1882 14.4505C22.1928 11.8747 16.3269 10.5668 16.3269 10.5668C16.3269 10.5668 12.8651 15.4795 13.8606 18.0553C14.7744 20.4199 17.0515 20.5475 18.7127 18.4619L18.977 19.742C19.0937 20.3072 18.7848 20.8738 18.2465 21.0819L18.4267 21.5482L22.1578 20.1063L21.9776 19.6399C21.4393 19.8479 20.8295 19.6363 20.5359 19.1396L19.8449 17.9708ZM10.6879 9.00327C10.8966 9.54337 10.599 9.88383 9.93333 9.79775L10.0893 10.0615C10.1556 10.1736 10.2932 10.2214 10.4146 10.1744L10.4553 10.2797L9.61329 10.6051L9.57261 10.4999C9.69409 10.4529 9.76382 10.325 9.73748 10.1975L9.67782 9.90859C9.30292 10.3793 8.78902 10.3505 8.58278 9.81682C8.35813 9.23552 9.1394 8.1268 9.1394 8.1268C9.1394 8.1268 10.4632 8.42196 10.6879 9.00327ZM26.9333 20.7978C27.599 20.8838 27.8966 20.5434 27.6879 20.0033C27.4632 19.422 26.1394 19.1268 26.1394 19.1268C26.1394 19.1268 25.3581 20.2355 25.5828 20.8168C25.789 21.3505 26.3029 21.3793 26.6778 20.9086L26.7375 21.1975C26.7638 21.325 26.6941 21.4529 26.5726 21.4999L26.6133 21.6051L27.4553 21.2797L27.4146 21.1744C27.2932 21.2214 27.1556 21.1736 27.0893 21.0615L26.9333 20.7978Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M30.9129 24.0712H26.6604L28.6721 23.2938C29.8214 22.8497 30.3931 21.5579 29.949 20.4086L27.8296 14.9238C28.8218 13.8681 29.6629 12.6391 29.6629 11.5065C29.6629 9.06038 28.0505 8.09943 25.6351 9.24495L23.1309 2.7644H30.9129C32.0174 2.7644 32.9129 3.65983 32.9129 4.7644V22.0712C32.9129 23.1758 32.0174 24.0712 30.9129 24.0712Z",
        fill: "#A7B7D7"
      }
    )
    ]
  });
};
const Cartas = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CartasIcon,
  default: CartasIcon
}, Symbol.toStringTag, { value: "Module" }));
const CassinoIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M28.6487 3.89655C28.6487 5.1116 28.2514 5.78161 27.7917 5.96552C27.9296 4.95402 27.4606 2.87586 24.4813 2.65517C22.495 2.50804 20.0575 4.10702 17.7339 5.63134C17.3053 5.91251 16.8805 6.19114 16.4632 6.45581C14.2897 8.17336 11.8602 10.7435 11.8602 12.7931C12.7797 10.7931 15.3084 7.55172 18.3429 6.65517C14.9912 9.24802 12.3354 13.1167 11.9175 16.2936C12.6895 11.665 21.1851 3 24.3437 3C26.9919 3 27.4696 4.93585 27.0328 5.94734C26.8029 5.53355 26.3436 4.7931 24.3437 4.7931C22.938 4.7931 20.8107 6.61838 18.9039 8.96149C18.9295 8.95765 18.9548 8.95438 18.9795 8.95176C19.6668 8.87887 20.5596 9.24623 20.9176 9.41064C21.0012 9.44902 21.0255 9.55397 20.9699 9.62726C20.9299 9.67999 20.8601 9.70001 20.7979 9.67731C20.5 9.5685 19.6236 9.26657 18.9473 9.21742C18.8735 9.21206 18.7909 9.20889 18.7062 9.20725C18.3567 9.64682 18.0159 10.1026 17.6896 10.5662C17.8466 10.6028 18.0545 10.564 18.2248 10.5118C18.5332 10.2895 18.9441 10.1539 19.3954 10.1539C20.2069 10.1539 20.8882 10.5925 21.0767 11.1848C20.8079 10.8323 20.3711 10.5702 19.8547 10.4689C19.9563 10.5748 20.0187 10.7186 20.0187 10.8769C20.0187 11.2025 19.7548 11.4664 19.4293 11.4664C19.1037 11.4664 18.8398 11.2025 18.8398 10.8769C18.8398 10.708 18.9109 10.5557 19.0247 10.4482C18.493 10.5244 18.0348 10.7692 17.7405 11.1107C17.7801 11.0107 17.834 10.9157 17.9003 10.8271C17.798 10.8089 17.7022 10.7258 17.639 10.6384C15.9204 13.0963 14.6198 15.7631 14.6198 17.4138C14.6198 20.3931 16.4128 22.0575 17.3094 22.5172C15.5059 22.1292 11.9117 20.4852 11.8617 17.0044C11.8607 17.0491 11.8602 17.0936 11.8602 17.1379C11.6303 16.4943 11.1844 15 11.2395 14.1724C10.1668 13.6361 9.94172 10.8838 12.7811 8.19643C12.607 8.22585 12.4381 8.24138 12.2748 8.24138C9.73691 8.24138 9.60818 5.34483 9.86105 3.89655C10.0909 4.81609 10.8955 6.27427 12.2748 6.38462C13.05 6.44663 14.9981 5.36441 17.1763 4.15432C19.8429 2.67297 22.8545 1 24.4813 1C27.4372 1 28.6487 2.44712 28.6487 3.89655Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M21.2403 15.3448C20.9755 15.3448 20.8468 15.4337 20.7087 15.5291C20.5488 15.6395 20.3764 15.7586 19.9656 15.7586C19.9656 15.7586 20.3943 17.2883 21.9299 17.2883C23.4656 17.2883 23.9367 15.7585 23.9367 15.7585C23.5698 15.7585 23.3719 15.6415 23.1865 15.5319C23.0234 15.4355 22.8699 15.3448 22.6196 15.3448C22.3055 15.3448 21.9299 15.7586 21.9299 15.7586C21.9299 15.7586 21.5557 15.3448 21.2403 15.3448Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M30.0678 11.7586C29.3552 11.023 27.8334 9.62069 27.4472 9.89655V6.58621C28.6426 7.3908 30.8402 9.55172 30.0678 11.7586Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M25.6541 17.2069C26.8539 15.3358 27.2167 13.9189 27.4472 10.7931C27.9069 11.4828 28.7437 13.2345 28.4127 14.7241C28.0816 16.2138 26.4357 17 25.6541 17.2069Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M29.8264 12.8276C29.9368 13.5448 29.2517 14.092 28.8954 14.2759C29.0885 12.9517 28.0104 11.1724 27.4472 10.4483C28.1943 10.9425 29.7161 12.1103 29.8264 12.8276Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M22.6243 19.6444C24.762 18.7479 25.4127 17.5862 25.4127 17.5862C25.4127 18.7563 25.13 19.3045 24.818 19.9095C24.6427 20.2494 24.4582 20.6073 24.3093 21.1034C23.9783 22.2069 24.3323 23.2644 24.5507 23.6552C24.5507 23.6552 20.9053 20.3654 22.6243 19.6444Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillOpacity: isSelect ? "1" : "0.6", d: "M17.1031 13.5516C17.1031 13.5387 17.1 13.5433 17.0964 13.5652L17.1031 13.5516Z", fill: "#A7B7D7" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M16.6851 14.2086C16.0651 15.0838 15.2317 16.2603 15.7238 19.2068C16.1448 21.7273 21.9469 24.6225 24.2064 25.4136C26.4658 26.2048 26.5511 28.5171 26.5511 28.9999C27.1948 28.8159 28.4808 28.0829 28.4808 26.9309C28.4808 26.282 27.2647 25.51 25.6504 24.4852C23.49 23.1138 20.6163 21.2895 18.9897 18.7016C16.982 15.5075 17.0624 13.7708 17.0964 13.5652C16.9913 13.7764 16.8453 13.9825 16.6851 14.2086Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M25.7743 8.95176C26.251 8.99514 26.8945 9.21742 26.8945 9.21742C26.8945 9.21742 26.2314 9.19125 25.8118 9.21742C25.0024 9.26791 23.947 9.58515 23.6288 9.68577C23.571 9.70404 23.508 9.68685 23.4678 9.64143C23.4002 9.5649 23.4266 9.44588 23.5217 9.40851C23.9424 9.24308 24.977 8.87919 25.7743 8.95176Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M26.8536 11.1106C26.5593 10.7691 26.1011 10.5243 25.5694 10.4481C25.6832 10.5556 25.7543 10.7079 25.7543 10.8769C25.7543 11.2024 25.4904 11.4663 25.1649 11.4663C24.8393 11.4663 24.5754 11.2024 24.5754 10.8769C24.5754 10.7185 24.6378 10.5748 24.7394 10.4688C24.2231 10.5701 23.7862 10.8322 23.5174 11.1847C23.7059 10.5925 24.3872 10.1538 25.1987 10.1538C25.5955 10.1538 25.961 10.2587 26.2532 10.435L26.2523 10.4328C26.4501 10.5218 26.8997 10.6634 27.1155 10.5179C27.0677 10.6579 26.8765 10.8747 26.6908 10.8229C26.7585 10.9127 26.8134 11.0091 26.8536 11.1106Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M26.5924 11.2911C26.2356 11.4624 25.7512 11.5677 25.2175 11.5677C24.681 11.5677 24.1941 11.4612 23.8368 11.2883C24.1082 11.636 24.6241 11.8708 25.2157 11.8708C25.8058 11.8708 26.3204 11.6373 26.5924 11.2911Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M18.0021 11.2909C18.3589 11.4623 18.8434 11.5676 19.3772 11.5676C19.9133 11.5676 20.3998 11.4614 20.757 11.2886C20.4854 11.636 19.9699 11.8705 19.3786 11.8705C18.7887 11.8705 18.2741 11.637 18.0021 11.2909Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M21.7832 14.5288C21.7832 14.6032 21.6777 14.6635 21.5476 14.6635C21.4175 14.6635 21.312 14.6032 21.312 14.5288C21.312 14.4545 21.4175 14.3942 21.5476 14.3942C21.6777 14.3942 21.7832 14.4545 21.7832 14.5288Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M22.5909 14.5288C22.5909 14.6032 22.4854 14.6635 22.3553 14.6635C22.2252 14.6635 22.1197 14.6032 22.1197 14.5288C22.1197 14.4545 22.2252 14.3942 22.3553 14.3942C22.4854 14.3942 22.5909 14.4545 22.5909 14.5288Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M26.6783 10.3968C26.3154 10.0819 25.7943 9.88458 25.2154 9.88458C24.5716 9.88458 23.9993 10.1287 23.6365 10.5071C23.9167 10.079 24.5107 9.78362 25.1981 9.78362C25.8249 9.78362 26.3739 10.0291 26.6783 10.3968Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M17.8976 10.3977C18.2606 10.0823 18.7821 9.88458 19.3615 9.88458C20.0048 9.88458 20.5766 10.1283 20.9395 10.5061C20.659 10.0785 20.0654 9.78362 19.3785 9.78362C18.7512 9.78362 18.2018 10.0295 17.8976 10.3977Z",
        fill: "#A7B7D7"
      }
    )
    ]
  });
};
const Cassino = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CassinoIcon,
  default: CassinoIcon
}, Symbol.toStringTag, { value: "Module" }));
const ConvidarIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "37", height: "37", viewBox: "0 0 37 37", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M35.4442 11.0307L25.7688 2.27246L25.7688 6.54574C16.6895 6.95323 10.1532 15.6056 12.3845 24.5308C14.1761 19.156 19.2059 15.5308 24.8713 15.5308H25.7688L25.7688 20.0307L35.4442 11.0307Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M6.38428 8.6C6.38428 7.4402 7.32448 6.5 8.48428 6.5H15.3843C16.2127 6.5 16.8843 5.82843 16.8843 5C16.8843 4.17157 16.2127 3.5 15.3843 3.5H8.48428C5.66763 3.5 3.38428 5.78335 3.38428 8.6V28.4C3.38428 31.2167 5.66762 33.5 8.48428 33.5H28.2843C31.1009 33.5 33.3843 31.2167 33.3843 28.4V21.5C33.3843 20.6716 32.7127 20 31.8843 20C31.0559 20 30.3843 20.6716 30.3843 21.5V28.4C30.3843 29.5598 29.4441 30.5 28.2843 30.5H8.48428C7.32448 30.5 6.38428 29.5598 6.38428 28.4V8.6Z",
        fill: "#A7B7D7"
      }
    )
    ]
  });
};
const Convidar = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ConvidarIcon,
  default: ConvidarIcon
}, Symbol.toStringTag, { value: "Module" }));
const EsporteIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M18.9336 2.00024C19.6613 2.00024 20.3895 2.00024 21.1172 2.00024C21.2924 2.02563 21.4671 2.05356 21.6428 2.07591C24.4748 2.44103 26.9306 3.60544 28.9989 5.57017C30.7164 7.20177 31.8889 9.16903 32.5455 11.4456C32.7806 12.2601 32.902 13.0944 33 13.9333V16.0661C32.9685 16.3261 32.9431 16.5867 32.9045 16.8451C32.5653 19.1267 31.7091 21.1895 30.2827 23.0079C28.5983 25.155 26.4518 26.6352 23.8492 27.4533C22.9423 27.7387 22.0099 27.8987 21.0664 27.9997H18.9336C18.666 27.9667 18.3968 27.9408 18.1302 27.9002C15.8898 27.5569 13.8555 26.7246 12.0588 25.3327C9.81785 23.5965 8.29543 21.3682 7.48445 18.6509C7.23207 17.8054 7.10207 16.9391 7 16.0661C7 15.3552 7 14.6443 7 13.9333C7.00965 13.8754 7.02336 13.8175 7.02895 13.7592C7.13508 12.6247 7.37375 11.5207 7.78762 10.4568C9.33086 6.49134 12.1375 3.86188 16.1762 2.54056C17.072 2.24755 17.9992 2.10181 18.9336 2.00024ZM21.7865 22.8556C23.0489 22.7982 24.2255 22.688 25.3986 22.5149C25.8165 22.4529 26.0516 22.2772 26.242 21.9131C27.0307 20.4069 27.8432 18.9129 28.6521 17.4174C28.7334 17.2671 28.7359 17.1452 28.6587 16.9919C28.057 15.795 27.3364 14.6697 26.6021 13.5525C26.5152 13.4204 26.405 13.3874 26.2557 13.4032C24.4906 13.5885 22.7254 13.7729 20.9593 13.9516C20.7947 13.9684 20.6998 14.0445 20.6271 14.1832C19.9954 15.3897 19.3647 16.5973 18.7239 17.7988C18.6289 17.977 18.6279 18.1121 18.731 18.2878C19.5384 19.6675 20.3443 21.0488 21.1319 22.4407C21.3061 22.7484 21.4904 22.946 21.7865 22.8561V22.8556ZM22.9174 4.75106C22.3938 4.74396 21.9546 4.77188 21.5168 4.81454C20.8775 4.877 20.2392 4.94657 19.6004 5.01005C19.4439 5.02528 19.3596 5.1111 19.3124 5.2538C18.8386 6.68329 18.3648 8.11228 17.887 9.54024C17.8372 9.68802 17.8667 9.79415 17.9759 9.90384C18.8879 10.823 19.7111 11.8229 20.5672 12.7928C20.7617 13.0137 20.9527 13.0716 21.2289 13.0391C22.1521 12.9309 23.0779 12.842 24.0026 12.7476C24.7089 12.675 25.4158 12.6064 26.1217 12.5328C26.2862 12.5155 26.4238 12.4683 26.497 12.2855C26.891 11.3044 27.3023 10.3304 27.6172 9.31884C27.6675 9.15786 27.6339 9.05427 27.5268 8.93392C26.4731 7.75376 25.3965 6.59239 24.3885 5.37415C23.9528 4.84704 23.4866 4.62513 22.9179 4.75157L22.9174 4.75106ZM18.768 25.546C18.9417 25.5805 19.0341 25.4688 19.122 25.3495C19.5765 24.7289 20.0284 24.1068 20.4875 23.4893C20.585 23.3583 20.5672 23.2527 20.4905 23.1207C19.6674 21.7013 18.8478 20.28 18.0312 18.8571C17.9495 18.7149 17.8525 18.6347 17.6808 18.6088C16.2589 18.395 14.8447 18.1436 13.4558 17.7653C13.272 17.715 13.1791 17.7826 13.0861 17.9303C12.4321 18.9673 11.775 20.0027 11.1092 21.0326C11.0056 21.193 11.0148 21.3235 11.1021 21.4769C11.6846 22.4996 12.3107 23.4934 13.0582 24.4059C13.1435 24.51 13.241 24.5649 13.3761 24.5883C14.4918 24.7827 15.6059 24.9849 16.7211 25.1839C17.4036 25.3058 18.0861 25.4251 18.7686 25.5455L18.768 25.546ZM9.80109 9.64993C9.77469 9.80888 9.90418 9.85052 10.0017 9.90841C10.8081 10.3873 11.6186 10.8606 12.4229 11.343C12.5763 11.4349 12.6997 11.4232 12.8439 11.3333C14.115 10.5381 15.4409 9.84849 16.8343 9.29192C16.9978 9.22692 17.0907 9.11978 17.1415 8.95118C17.2421 8.61958 17.3589 8.29306 17.4686 7.9645C17.792 6.99407 18.116 6.02415 18.437 5.05321C18.472 4.94708 18.5233 4.8506 18.3821 4.74599C17.7316 4.26458 17.0176 3.90911 16.2686 3.61306C16.1173 3.55313 15.9842 3.54856 15.8298 3.60392C14.3877 4.12341 13.0998 4.90239 11.9568 5.91802C11.6114 6.22474 11.2504 6.52384 10.9909 6.91739C10.5877 7.5288 10.3328 8.20978 10.0697 8.88669C9.97172 9.13806 9.85035 9.38181 9.8016 9.65044L9.80109 9.64993ZM7.87648 14.8652C7.8775 15.3664 7.88918 15.7706 7.92777 16.1758C8.01867 17.1229 8.2218 18.0441 8.52293 18.9454C8.55645 19.0455 8.6184 19.1217 8.69051 19.1948C9.15008 19.6615 9.67262 20.0469 10.2155 20.4095C10.3546 20.5024 10.4191 20.4547 10.4963 20.3338C11.1676 19.2781 11.8425 18.2243 12.5179 17.1711C12.5996 17.0437 12.6276 16.9157 12.5971 16.7624C12.3198 15.3577 12.168 13.9394 12.1655 12.5069C12.1655 12.3058 12.0944 12.1814 11.9182 12.0803C11.2362 11.6893 10.5587 11.2907 9.88539 10.8849C9.28008 10.5203 9.27348 10.5076 8.88094 11.0952C8.59555 11.5222 8.26293 11.9366 8.14461 12.4459C7.95367 13.2706 7.8582 14.1106 7.87648 14.8652ZM26.7737 22.949C26.7818 22.9856 26.7935 23.0526 26.8118 23.1171C26.9443 23.5808 27.0566 24.05 27.1205 24.5278C27.1515 24.7579 27.2252 24.7528 27.3882 24.6263C28.1326 24.049 28.8085 23.4005 29.4011 22.6687C30.9037 20.8127 31.7838 18.6941 32.0545 16.3221C32.0611 16.2642 32.0864 16.1931 32.0352 16.154C31.9757 16.1083 31.9239 16.1708 31.8787 16.2027C31.2293 16.6669 30.5285 17.0411 29.8114 17.387C29.6921 17.4443 29.6048 17.5292 29.5428 17.6454C28.6526 19.308 27.7609 20.9701 26.8707 22.6332C26.823 22.722 26.7732 22.8124 26.7737 22.949ZM30.889 9.80735C30.9291 9.66872 30.857 9.60728 30.822 9.53466C30.2776 8.41493 29.5545 7.42114 28.6892 6.52942C27.6106 5.41782 26.3644 4.54438 24.9456 3.9213C24.8593 3.88372 24.7313 3.77556 24.6734 3.86849C24.5998 3.98731 24.5668 4.15438 24.6384 4.30267C24.6668 4.36208 24.7191 4.41083 24.7638 4.4611C25.7561 5.58185 26.762 6.6904 27.7345 7.82841C28.1509 8.3154 28.5978 8.72419 29.2219 8.91005C29.3102 8.93646 29.3905 8.98825 29.4753 9.02685C29.9592 9.24622 30.4132 9.52247 30.8895 9.80685L30.889 9.80735ZM14.3684 25.6755L14.3557 25.7445C16.1828 26.684 18.1196 27.1598 20.1859 27.0999C19.9787 26.9892 19.7669 26.8942 19.5506 26.8094C19.2215 26.6804 18.9255 26.4763 18.5664 26.4149C17.4843 26.229 16.4042 26.033 15.3236 25.8415C15.0052 25.7852 14.6868 25.7308 14.3684 25.676V25.6755Z",
        fill: "#A7B7D7"
      }
    )
  });
};
const Esporte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EsporteIcon,
  default: EsporteIcon
}, Symbol.toStringTag, { value: "Module" }));
const EsportsIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M16.149 11.9781C16.149 13.2492 15.1185 14.2797 13.8474 14.2797C12.5762 14.2797 11.5458 13.2492 11.5458 11.9781C11.5458 10.7069 12.5762 9.67647 13.8474 9.67647C15.1185 9.67647 16.149 10.7069 16.149 11.9781Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M32.3428 11.6097C31.6682 7.78686 28.3465 5 24.4646 5H15.5353C11.6534 5 8.33168 7.78686 7.65706 11.6097L6.29824 19.3097C5.77438 22.2782 8.05791 25 11.0723 25C13.2831 25 15.2139 23.5042 15.7663 21.3636L16.1561 19.8532C16.4242 18.8142 17.3613 18.0882 18.4344 18.0882H21.5651C22.6382 18.0882 23.5753 18.8142 23.8434 19.8532L24.2331 21.3634C24.7856 23.5042 26.7165 25 28.9274 25C31.9419 25 34.2255 22.2781 33.7016 19.3095L32.3428 11.6097ZM26.4198 10.8528C27.0695 10.8528 27.5962 10.3261 27.5962 9.67635C27.5962 9.0266 27.0695 8.49988 26.4198 8.49988C25.77 8.49988 25.2433 9.0266 25.2433 9.67635C25.2433 10.3261 25.77 10.8528 26.4198 10.8528ZM26.4198 15.5587C27.0695 15.5587 27.5962 15.032 27.5962 14.3822C27.5962 13.7325 27.0695 13.2057 26.4198 13.2057C25.77 13.2057 25.2433 13.7325 25.2433 14.3822C25.2433 15.032 25.77 15.5587 26.4198 15.5587ZM25.2427 12.0293C25.2427 12.6791 24.716 13.2058 24.0663 13.2058C23.4165 13.2058 22.8898 12.6791 22.8898 12.0293C22.8898 11.3796 23.4165 10.8529 24.0663 10.8529C24.716 10.8529 25.2427 11.3796 25.2427 12.0293ZM28.7716 13.2058C29.4214 13.2058 29.9481 12.6791 29.9481 12.0293C29.9481 11.3796 29.4214 10.8529 28.7716 10.8529C28.1219 10.8529 27.5951 11.3796 27.5951 12.0293C27.5951 12.6791 28.1219 13.2058 28.7716 13.2058ZM17.3254 11.9781C17.3254 13.899 15.7683 15.4562 13.8474 15.4562C11.9265 15.4562 10.3693 13.899 10.3693 11.9781C10.3693 10.0572 11.9265 8.5 13.8474 8.5C15.7683 8.5 17.3254 10.0572 17.3254 11.9781Z",
        fill: "#A7B7D7"
      }
    )
    ]
  });
};
const Esports = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EsportsIcon,
  default: EsportsIcon
}, Symbol.toStringTag, { value: "Module" }));
const Favoritos = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", className: joinClass(css$1q.defaultCss, className), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
      clipPath: "url(#clip0_1177_253395)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillOpacity: isSelect ? "1" : "0.6",
          d: "M18.0979 4.3541C18.6966 2.51148 21.3034 2.51148 21.9021 4.3541L23.2555 8.51925C23.5232 9.3433 24.2911 9.90122 25.1576 9.90122H29.5371C31.4745 9.90122 32.2801 12.3805 30.7126 13.5193L27.1695 16.0935C26.4686 16.6027 26.1753 17.5055 26.443 18.3295L27.7963 22.4947C28.395 24.3373 26.2861 25.8695 24.7187 24.7307L21.1756 22.1565C20.4746 21.6473 19.5254 21.6473 18.8244 22.1565L15.2813 24.7307C13.7139 25.8695 11.605 24.3373 12.2037 22.4947L13.557 18.3295C13.8247 17.5055 13.5314 16.6027 12.8305 16.0935L9.28736 13.5193C7.71994 12.3805 8.52549 9.90122 10.4629 9.90122H14.8424C15.7089 9.90122 16.4768 9.3433 16.7445 8.51925L18.0979 4.3541Z",
          fill: "#A7B7D7"
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1177_253395", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "40", height: "30", fill: "white" }) }) })
    ]
  });
};
const Favoritos$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Favoritos,
  default: Favoritos
}, Symbol.toStringTag, { value: "Module" }));
const HotIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M17.2972 1.75L17.7361 3.65229C18.0463 4.99613 17.6422 6.40494 16.667 7.38015L12.2398 11.8074C8.82504 15.2221 9.19124 20.8608 13.0189 23.8052L18.7972 28.25L18.4012 24.9503C18.2956 24.0705 18.5844 23.189 19.1901 22.5422L23.5026 17.9374C26.6471 14.5797 26.3189 9.26814 22.7849 6.32315L17.2972 1.75Z",
        fill: "#A7B7D7",
        fillOpacity: isSelect ? "1" : "0.6"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M27.4223 11.1875C27.4223 11.1875 27.8099 14.9625 26.2349 17.4375C25.4741 18.6329 24.1673 19.6907 22.9303 20.692C21.6063 21.7637 20.3622 22.7707 19.9533 23.8125C19.6968 24.4661 19.9534 26.7812 19.9534 26.7812C20.0992 26.0521 22.3594 24.2625 23.6094 23.8125C25.1719 23.25 29.5468 21.125 29.9843 18.5C30.4218 15.875 29.6723 14.5625 27.4223 11.1875Z",
        fill: "#A7B7D7",
        fillOpacity: isSelect ? "1" : "0.6"
      }
    )
    ]
  });
};
const Hot = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  HotIcon,
  default: HotIcon
}, Symbol.toStringTag, { value: "Module" }));
const LoteriaIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    className: joinClass(css$1q.defaultCss, className), width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M24.7209 13.257C24.7209 9.04543 21.3068 5.63129 17.0953 5.63129C14.975 5.63129 14.9981 2 17.168 2C22.0212 2 25.9555 5.93439 25.9555 10.7877C25.9555 12.778 25.2938 14.6138 24.1785 16.0871C24.5284 15.212 24.7209 14.257 24.7209 13.257ZM20.8503 10.0403C17.2031 7.93456 12.5393 9.18422 10.4336 12.8315C9.37345 14.6678 6.24023 12.8322 7.32518 10.953C9.75179 6.7499 15.1262 5.30982 19.3292 7.73647C21.0528 8.73163 22.3118 10.2226 23.03 11.9251C22.4471 11.1846 21.7163 10.5403 20.8503 10.0403ZM13.3386 22.2003C11.2329 18.5529 12.4825 13.8891 16.1298 11.7834C16.9958 11.2834 17.9191 10.9725 18.8519 10.8381C17.0183 10.6087 15.0977 10.9536 13.3741 11.9488C9.17104 14.3754 7.73098 19.7499 10.1576 23.953C11.2425 25.8322 14.3988 24.0365 13.3386 22.2003ZM15.2799 16.743C15.2799 20.9546 18.6939 24.3687 22.9054 24.3687C25.0257 24.3687 25.0027 28 22.8328 28C17.9796 28 14.0452 24.0656 14.0452 19.2123C14.0452 17.222 14.7069 15.3862 15.8223 13.9129C15.4723 14.788 15.2799 15.743 15.2799 16.743ZM26.661 7.79957C28.7668 11.4469 27.5171 16.1107 23.8699 18.2165C23.0039 18.7165 22.0806 19.0273 21.1478 19.1618C22.9813 19.3911 24.902 19.0462 26.6256 18.0511C30.8286 15.6244 32.2687 10.2499 29.8421 6.04682C28.7571 4.16761 25.6009 5.96331 26.661 7.79957ZM19.1494 19.9595C22.7966 22.0653 27.4603 20.8156 29.5661 17.1683C30.6262 15.332 33.7594 17.1676 32.6745 19.0468C30.2479 23.2499 24.8735 24.69 20.6705 22.2633C18.9468 21.2682 17.6879 19.7773 16.9697 18.0747C17.5525 18.8153 18.2834 19.4595 19.1494 19.9595Z",
        fill: "#A7B7D7"
      }
    )
  });
};
const Loteria = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  LoteriaIcon,
  default: LoteriaIcon
}, Symbol.toStringTag, { value: "Module" }));
const PescariaIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", className: joinClass(css$1q.defaultCss, className), children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M20.5324 16.8161L19.2312 17.8216L20.9464 19.5368H18.6989C18.5215 20.3845 18.6398 22.1155 20.5324 22.2575C21.7745 21.8434 25.6189 21.7252 26.7427 22.5532C25.8555 22.5926 23.7263 23.0737 22.3068 24.6824C20.8873 26.2912 20.5324 28.2311 20.5324 29C20.0198 28.0931 19.1129 25.7115 19.5861 23.4404C18.7186 23.0461 17.0547 21.7133 17.3386 19.5368C17.6935 16.8161 19.4087 14.746 22.6617 13.9771C23.6376 13.7465 24.4804 13.569 25.1917 13.4193L25.1917 13.4193C26.8515 13.0699 27.7955 12.8711 28.0439 12.4985C27.827 11.6311 26.9201 9.93162 25.0275 10.0736C26.0527 9.40325 28.5762 8.59493 30.4688 10.7242C31.7109 10.0538 34.1713 8.42933 34.0767 7.29374C33.9821 6.15816 27.6102 6.584 24.436 6.93887C23.6108 7.2729 21.9044 8.36278 21.6587 10.0563C21.6658 9.98829 21.6496 9.88645 21.6268 9.74265C21.5616 9.33183 21.4421 8.5786 21.6562 7.29374C21.0253 7.84576 19.7872 9.37565 19.8819 11.079C19.665 10.3299 19.3614 8.64225 19.8819 7.88519C19.389 8.4175 18.3914 9.89613 18.3441 11.5522C18.0681 11.0199 17.5989 9.81332 17.9301 9.24553C17.1612 9.79755 15.5288 11.4339 15.1503 13.5631C14.9595 14.6361 15.0011 15.9946 15.1296 17.2523C15.544 19.1677 16.704 21.9682 18.6875 23.625C17.6438 22.8795 15.5563 21.1268 14.7341 19.5485C14.248 19.3055 13.6166 19.2054 12.9027 19.5368C12.9816 19.0636 13.2694 18.0582 13.7899 17.8216L13.3759 14.3912L4.74072 16.1655C6.37707 14.1928 10.4778 10.2717 13.7899 10.3693C14.2236 9.10752 15.8126 6.28828 18.6989 5.10537L16.8655 1.08351C18.4032 0.827212 22.4606 1.01253 26.3878 3.80418C28.5762 4.08019 33.4143 5.09354 35.2596 6.93887C34.7076 8.08234 33.0949 10.6887 31.0603 11.9662C29.0257 13.2437 26.6638 14.1151 25.7372 14.3912C26.8018 15.6529 28.931 19.1464 28.931 23.0263C27.5313 21.4689 23.8918 18.0463 20.5324 16.8161ZM21.6587 10.0563L21.6578 10.064L21.6562 10.0736L21.6587 10.0563ZM27.7405 5.47922L25.3174 4.5V4.64234C25.3174 5.31902 25.9341 5.82803 26.5985 5.69973L27.7405 5.47922Z",
        fill: "#A7B7D7",
        fillOpacity: isSelect ? "1" : "0.6"
      }
    )
  });
};
const Pescaria = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PescariaIcon,
  default: PescariaIcon
}, Symbol.toStringTag, { value: "Module" }));
const Recente = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "40", height: "30", className: joinClass(css$1q.defaultCss, className), viewBox: "0 0 40 30", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M18.375 17.2008C18.375 17.2481 18.4018 17.2914 18.4441 17.3126L22.9969 19.589C23.5526 19.8669 24.2284 19.6416 24.5062 19.0859C24.7841 18.5302 24.5588 17.8544 24.0031 17.5765L20.625 15.8875V11.0828C20.625 10.4614 20.1213 9.95776 19.5 9.95776C18.8787 9.95776 18.375 10.4614 18.375 11.0828V17.2008ZM10.3267 7.78028L10.0345 5.27899C9.96238 4.66187 9.40365 4.22004 8.78653 4.29215C8.16941 4.36425 7.72758 4.92298 7.79969 5.5401L8.45154 11.1191C8.52364 11.7362 9.08237 12.178 9.69949 12.1059L15.2785 11.4541C15.8956 11.382 16.3374 10.8232 16.2653 10.2061C16.1932 9.589 15.6345 9.14718 15.0174 9.21929L11.8032 9.59483C13.5692 6.89737 16.6158 5.11865 20.0766 5.11865C25.5338 5.11865 29.9578 9.54263 29.9578 14.9999C29.9578 20.4571 25.5338 24.8811 20.0766 24.8811C15.6051 24.8811 11.8246 21.9102 10.6069 17.8321C10.4291 17.2367 9.80241 16.8982 9.20706 17.076C8.61171 17.2538 8.2732 17.8805 8.45097 18.4758C9.9454 23.4807 14.5832 27.1311 20.0766 27.1311C26.7765 27.1311 32.2078 21.6998 32.2078 14.9999C32.2078 8.29999 26.7765 2.86865 20.0766 2.86865C16.0799 2.86865 12.5359 4.80178 10.3267 7.78028Z",
        fill: "#A7B7D7",
        stroke: "#A7B7D7",
        strokeWidth: "0.25",
        strokeLinecap: "round",
        strokeLinejoin: "round"
      }
    )
  });
};
const Recente$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Recente,
  default: Recente
}, Symbol.toStringTag, { value: "Module" }));
const SlotsIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className: joinClass(css$1q.defaultCss, className), xmlns: "http://www.w3.org/2000/svg", width: "40", height: "30", viewBox: "0 0 40 30", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        d: "M27.5 14V11H36.5V12C34 13.5 33.352 18.5201 33.5 20H28.5C28.5 18 31.5 14.8333 33 13.5H29.5V14H27.5Z",
        fill: "#A7B7D7"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillOpacity: isSelect ? "1" : "0.6", d: "M16 11V14H18V13.5H21.5C20 14.8333 17 18 17 20H22C21.852 18.5201 22.5 13.5 25 12V11H16Z", fill: "#A7B7D7" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillOpacity: isSelect ? "1" : "0.6", d: "M4 14V11H13V12C10.5 13.5 9.85201 18.5201 10 20H5C5 18 8 14.8333 9.5 13.5H6V14H4Z", fill: "#A7B7D7" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillOpacity: isSelect ? "1" : "0.6",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M1 9C1 6.79086 2.79086 5 5 5H35C37.2091 5 39 6.79086 39 9V21C39 23.2091 37.2091 25 35 25H5C2.79086 25 1 23.2091 1 21V9ZM27 7H35C36.1046 7 37 7.89543 37 9V21C37 22.1046 36.1046 23 35 23H27V7ZM26 7H15L15 23H26V7ZM14 7H5C3.89543 7 3 7.89543 3 9V21C3 22.1046 3.89543 23 5 23H14L14 7Z",
        fill: "#A7B7D7"
      }
    )
    ]
  });
};
const Slots = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SlotsIcon,
  default: SlotsIcon
}, Symbol.toStringTag, { value: "Module" }));
const ActiveBlockchaim = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Blockchaim.webp" });
};
const ActiveBlockchaim$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveBlockchaim,
  default: ActiveBlockchaim
}, Symbol.toStringTag, { value: "Module" }));
const ActiveCartas = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Cartas.webp" });
};
const ActiveCartas$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveCartas,
  default: ActiveCartas
}, Symbol.toStringTag, { value: "Module" }));
const ActiveCassinoAoVivo = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/CassinoAoVivo.webp" });
};
const ActiveCassinoAoVivo$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveCassinoAoVivo,
  default: ActiveCassinoAoVivo
}, Symbol.toStringTag, { value: "Module" }));
const ActiveEsporte = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Esporte.webp" });
};
const ActiveEsporte$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveEsporte,
  default: ActiveEsporte
}, Symbol.toStringTag, { value: "Module" }));
const ActiveEsports = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Esports.webp" });
};
const ActiveEsports$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveEsports,
  default: ActiveEsports
}, Symbol.toStringTag, { value: "Module" }));
const ActiveFavoritos = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Favoritos.webp" });
};
const ActiveFavoritos$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveFavoritos,
  default: ActiveFavoritos
}, Symbol.toStringTag, { value: "Module" }));
const ActiveLoteria = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Loteria.webp" });
};
const ActiveLoteria$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveLoteria,
  default: ActiveLoteria
}, Symbol.toStringTag, { value: "Module" }));
const ActivePescaria = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Pescaria.webp" });
};
const ActivePescaria$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActivePescaria,
  default: ActivePescaria
}, Symbol.toStringTag, { value: "Module" }));
const ActivePopular = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Popular.webp" });
};
const ActivePopular$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActivePopular,
  default: ActivePopular
}, Symbol.toStringTag, { value: "Module" }));
const ActiveRecente = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Recente.webp" });
};
const ActiveRecente$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveRecente,
  default: ActiveRecente
}, Symbol.toStringTag, { value: "Module" }));
const ActiveSlots = ({ className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className, src: "/platform-type/Slots.webp" });
};
const ActiveSlots$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ActiveSlots,
  default: ActiveSlots
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1s = "_svg_theme_fill_color_1xwyw_3";
const h5PageContentBox = "_h5PageContentBox_1xwyw_55";
const googleTipBnt = "_googleTipBnt_1xwyw_129";
const css$1p = {
  svg_theme_fill_color: svg_theme_fill_color$1s,
  h5PageContentBox,
  googleTipBnt
};
const svg_theme_fill_color$1r = "_svg_theme_fill_color_sbg1y_3";
const gameStartBox = "_gameStartBox_sbg1y_55";
const goHomeBox = "_goHomeBox_sbg1y_68";
const index$2 = "_index_sbg1y_86";
const btn$2 = "_btn_sbg1y_89";
const back$2 = "_back_sbg1y_92";
const cz = "_cz_sbg1y_95";
const tx = "_tx_sbg1y_101";
const full = "_full_sbg1y_104";
const showBack = "_showBack_sbg1y_107";
const showTx = "_showTx_sbg1y_110";
const showCz = "_showCz_sbg1y_113";
const showCz2 = "_showCz2_sbg1y_119";
const showFull = "_showFull_sbg1y_125";
const showFull2 = "_showFull2_sbg1y_128";
const css$1o = {
  svg_theme_fill_color: svg_theme_fill_color$1r,
  gameStartBox,
  goHomeBox,
  index: index$2,
  btn: btn$2,
  back: back$2,
  cz,
  tx,
  full,
  showBack,
  showTx,
  showCz,
  showCz2,
  showFull,
  showFull2
};
const cacheState$3 = {
  x: 0,
  y: 0,
  startX: 0,
  startY: 0,
  minLeft: 30 * minPxChip(),
  minTop: 120 * minPxChip()
};
const GameStart = () => {
  const navigate = useNavigate();
  const { getUserBalanceByStore } = useUserInfoStore();
  const dom = reactExports.useRef(null);
  const state2 = useReactive({
    position: "right",
    isOpen: false,
    isShowGame: false,
    url: "",
    x: 0,
    y: 0
  });
  reactExports.useLayoutEffect(() => {
    state2.url = Cache$1.get("gameStart") || "";
  }, []);
  reactExports.useEffect(() => {
    if (dom.current) {
      const onTouchStart = (e2) => {
        const touch = e2.targetTouches[0] || {};
        cacheState$3.startX = touch.clientX || 0;
        cacheState$3.startY = touch.clientY || 0;
      };
      dom.current.addEventListener("touchstart", onTouchStart, {
        passive: true
      });
      const onTouchMove = (e2) => {
        state2.isOpen = false;
        const touch = e2.targetTouches[0] || {};
        state2.x = touch.clientX - cacheState$3.startX + cacheState$3.x;
        state2.y = touch.clientY - cacheState$3.startY + cacheState$3.y;
      };
      dom.current.addEventListener("touchmove", onTouchMove, {
        passive: true
      });
      const onTouchend = (e2) => {
        cacheState$3.x = state2.x;
        cacheState$3.y = state2.y;
        const rect = dom.current.getBoundingClientRect();
        if (rect.x < cacheState$3.minLeft) {
          state2.x = 0;
        }
        if (rect.x > window.innerWidth - cacheState$3.minLeft * 2 - rect.width) {
          state2.x = window.innerWidth - cacheState$3.minLeft * 2 - rect.width;
        }
        if (rect.y < cacheState$3.minTop) {
          state2.y = 0;
        }
        if (rect.y > window.innerHeight - cacheState$3.minTop * 2 - rect.height) {
          state2.y = window.innerHeight - cacheState$3.minTop * 2 - rect.height;
        }
        cacheState$3.x = state2.x;
        cacheState$3.y = state2.y;
      };
      dom.current.addEventListener("touchend", onTouchend, {
        passive: true
      });
      return () => {
        if (!dom.current)
          return;
        dom.current.removeEventListener("touchstart", onTouchStart, {
          passive: true
        });
        dom.current.removeEventListener("touchmove", onTouchMove, {
          passive: true
        });
        dom.current.removeEventListener("touchend", onTouchStart, {
          passive: true
        });
      };
    }
  }, [dom]);
  reactExports.useEffect(() => {
    return () => {
      if (Cache$1.get("token")) {
        postRecallbalance().then(() => {
          getUserBalanceByStore();
        });
      }
    };
  }, []);
  const { x, y, url: url2, isShowGame, isOpen, position: position2 } = state2;
  const isHtml = () => {
    return url2.indexOf("html") > -1 && url2.indexOf(">") > -1 && url2.indexOf("<") > -1;
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$1o.gameStartBox, children: [
      isShowGame ? null : /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        id: "fullScreen", children: isHtml() ? /* @__PURE__ */ jsxRuntimeExports.jsx("iframe", {
          srcdoc: url2, onLoad: (e2) => {
            state2.isShowGame = true;
          }
        }) : /* @__PURE__ */ jsxRuntimeExports.jsx("iframe", {
          src: url2, onLoad: (e2) => {
            state2.isShowGame = true;
          }
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          ref: dom,
          className: css$1o.goHomeBox,
          style: { transform: "translate(".concat(x, "px, ").concat(y, "px)") },
          children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            className: css$1o.index, src: "/gamestart/".concat(isOpen ? "close" : "menu", ".webp"), onClick: (e2) => {
              const rect = e2.target.getBoundingClientRect();
              if (rect.x < window.innerWidth / 2) {
                state2.position = "left";
              } else {
                state2.position = "right";
              }
              state2.isOpen = !isOpen;
            }
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            className: joinClass(css$1o.btn, css$1o.cz, isOpen ? position2 === "right" ? css$1o.showCz : css$1o.showCz2 : ""), src: "/gamestart/cz.webp", onClick: () => {
              navigate("/deposit");
            }
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            className: joinClass(css$1o.btn, css$1o.tx, isOpen ? css$1o.showTx : ""), src: "/gamestart/tx.webp", onClick: () => {
              navigate("/withdraw");
            }
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            className: joinClass(css$1o.btn, css$1o.back, isOpen ? css$1o.showBack : ""), src: "/gamestart/back.webp", onClick: () => {
              navigate("/");
            }
          }),
            !isH5$1 && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
              className: joinClass(css$1o.btn, css$1o.full, isOpen ? position2 === "right" ? css$1o.showFull : css$1o.showFull2 : ""), src: "/gamestart/fullPC.webp", onClick: async () => {
                const el = document.getElementById("fullScreen");
                el.requestFullscreen();
              }
            })
          ]
        }
      )
    ]
  });
};
const svg_theme_fill_color$1q = "_svg_theme_fill_color_r1apq_3";
const recycle = "_recycle_r1apq_55";
const txt$2 = "_txt_r1apq_125";
const css$1n = {
  svg_theme_fill_color: svg_theme_fill_color$1q,
  recycle,
  txt: txt$2
};
const svg_theme_fill_color$1p = "_svg_theme_fill_color_f9rhy_3";
const actSkeleton = "_actSkeleton_f9rhy_55";
const item$f = "_item_f9rhy_62";
const css$1m = {
  svg_theme_fill_color: svg_theme_fill_color$1p,
  actSkeleton,
  item: item$f
};
const ActSkeleton = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(css$1m.actSkeleton, "skeletonBoxLightBg2"), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1m.item, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
    ]
  });
};
const svg_theme_fill_color$1o = "_svg_theme_fill_color_h2p1g_3";
const depositSkeletonBox = "_depositSkeletonBox_h2p1g_55";
const box1 = "_box1_h2p1g_61";
const itemBox1 = "_itemBox1_h2p1g_69";
const empty$4 = "_empty_h2p1g_74";
const box2 = "_box2_h2p1g_77";
const itemBox2 = "_itemBox2_h2p1g_85";
const btnBox = "_btnBox_h2p1g_90";
const btnBox2 = "_btnBox2_h2p1g_97";
const css$1l = {
  svg_theme_fill_color: svg_theme_fill_color$1o,
  depositSkeletonBox,
  box1,
  itemBox1,
  empty: empty$4,
  box2,
  itemBox2,
  btnBox,
  btnBox2
};
const DepositSkeleton = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$1l.depositSkeletonBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1l.box1, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1l.box1, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1l.empty }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1l.box2, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1l.box2, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1l.box2, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.itemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.btnBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1l.btnBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
    ]
  });
};
const svg_theme_fill_color$1n = "_svg_theme_fill_color_1whkr_3";
const innerPageWithBackContainer = "_innerPageWithBackContainer_1whkr_55";
const scroll = "_scroll_1whkr_67";
const css$1k = {
  svg_theme_fill_color: svg_theme_fill_color$1n,
  innerPageWithBackContainer,
  scroll
};
const svg_theme_fill_color$1m = "_svg_theme_fill_color_6ln0c_3";
const headerContainer = "_headerContainer_6ln0c_55";
const back$1 = "_back_6ln0c_153";
const ico$1 = "_ico_6ln0c_159";
const title$a = "_title_6ln0c_230";
const operate = "_operate_6ln0c_250";
const css$1j = {
  svg_theme_fill_color: svg_theme_fill_color$1m,
  headerContainer,
  back: back$1,
  ico: ico$1,
  title: title$a,
  operate
};
const BaseHeader = ({ title: title2 = "-", right: right2 }) => {
  const navigate = useNavigate();
  useUserInfoStore();
  const { isApp } = useFlutterApp();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("header", {
    className: css$1j.headerContainer, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$1j.back, onClick: () => {
        if (isApp) {
          sendMessage("onChatSystemMessage", "back");
          return;
        } else {
          navigate(-1);
        }
      }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1j.ico, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {}) })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1j.title, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: title2 }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1j.operate, children: right2 })
    ]
  });
};
const InnerPageWithBackContext = reactExports.createContext("innerPageWithBack");
const InnerPageWithBack = ({ title: title2 = "", right: right2, children }) => {
  const [_title, setTitle] = reactExports.useState(title2);
  const { isApp } = useFlutterApp();
  reactExports.useEffect(() => {
    setTitle(title2);
  }, [title2]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBackContext.Provider, {
    value: {
      title: _title,
      setTitle
    }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1k.innerPageWithBackContainer, children: [
        !isApp && /* @__PURE__ */ jsxRuntimeExports.jsx(BaseHeader, { title: _title || title2, right: right2 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1k.scroll, children })
      ]
    })
  });
};
const index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: InnerPageWithBack
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1l = "_svg_theme_fill_color_17z67_3";
const tabsComponent2 = "_tabsComponent2_17z67_55";
const tabItemContainer2 = "_tabItemContainer2_17z67_59";
const scrollX = "_scrollX_17z67_73";
const wrap$1 = "_wrap_17z67_83";
const tabItem$2 = "_tabItem_17z67_59";
const text$2 = "_text_17z67_106";
const active$g = "_active_17z67_132";
const tabsComponent = "_tabsComponent_17z67_55";
const tabItemContainer = "_tabItemContainer_17z67_59";
const css$1i = {
  svg_theme_fill_color: svg_theme_fill_color$1l,
  tabsComponent2,
  tabItemContainer2,
  scrollX,
  wrap: wrap$1,
  tabItem: tabItem$2,
  text: text$2,
  active: active$g,
  tabsComponent,
  tabItemContainer
};
const _Tab = reactExports.memo(({
  children,
  active: active2,
  items: items2 = [],
  type: type4 = "line",
  onChange = () => {
  }
}) => {
  const itemRefs = Array.from({ length: items2.length }).map(() => reactExports.useRef(null));
  const handleTabClick = (value2) => {
    onChange(value2);
    const index2 = items2.findIndex((item2) => item2.value === value2);
    const ref = itemRefs[index2];
    if (ref && ref.current) {
      ref.current.scrollIntoView({
        behavior: "smooth",
        inline: "center",
        block: "center"
      });
    }
  };
  const renderNav = () => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: joinClass(type4 === "line" ? css$1i.tabItemContainer : css$1i.tabItemContainer2), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: joinClass(css$1i.scrollX), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: joinClass(css$1i.wrap), children: items2.map((item2, index2) => {
            const { value: value2, label: label2 } = item2;
            return /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                ref: itemRefs[index2],
                className: joinClass(
                  css$1i.tabItem,
                  active2 === value2 ? css$1i.active : ""
                ),
                onClick: () => handleTabClick(value2),
                children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1i.text, children: [
                    active2 === value2 ? item2.activeIcon : item2.icon,
                    label2
                  ]
                })
              },
              value2
            );
          })
        })
      })
    });
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
    className: joinClass(type4 === "line" ? css$1i.tabsComponent : css$1i.tabsComponent2), children: [
      renderNav(),
      children && (Array.isArray(children) ? children.filter((child) => child.props.value === active2) : children.props.value === active2 && children)
    ]
  });
});
const TabPane = reactExports.memo(({
  children,
  value: value2
}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("section", { className: css$1i.tabsPaneComponent, children });
});
const Tab = Object.assign(_Tab, {
  Pane: TabPane
});
const svg_theme_fill_color$1k = "_svg_theme_fill_color_mqmkx_3";
const radioGroup = "_radioGroup_mqmkx_55";
const radioItem = "_radioItem_mqmkx_63";
const active$f = "_active_mqmkx_175";
const activeTip = "_activeTip_mqmkx_310";
const css$1h = {
  svg_theme_fill_color: svg_theme_fill_color$1k,
  radioGroup,
  radioItem,
  active: active$f,
  activeTip
};
const RadioContext = reactExports.createContext({});
const checkMaps = {
  black: "/home/icons/checkd.webp",
  blue: "/home/icons/checkd_blue.webp",
  // blue: '/home/icons/checkd_bluenew.webp',
  whiteGreen: "/home/icons/checkd_white_green.webp",
  purple: "/home/icons/checkd_purple.webp",
  whiteRed: "/home/icons/checkd_white_red.webp",
  oilyGreen: "/home/icons/checkd_oily_green.webp",
  versaceYellow: "/home/icons/checkd_versaceYellow.webp",
  lancomePeach: "/home/icons/checkd_lancomePeach.webp",
  hermesOrange: "/home/icons/checkd_hermesOrange.webp",
  whiteBlue: "/home/icons/checkd_whiteBlue.webp",
  sk2: "/home/icons/checkd_sk2.webp",
  whiteYellow: "/home/icons/checkd_whiteYellow.webp",
  lightBrown: "/home/icons/checkd_lightBrown.webp",
  whiteOrange: "/home/icons/checkd_whiteOrange.webp",
  furlaBlue: "/home/icons/checkd_furlaBlue.webp",
  whitePink: "/home/icons/check_whitePink.webp",
  bvGreen: "/home/icons/check_bvGreen.webp",
  whiteBrown: "/home/icons/check_whiteBrown.webp",
  AnnaSuiPurple: "/home/icons/check_AnnaSuiPurple.webp",
  whitePurple: "/home/icons/check_whitePurple.webp",
  burgundyRed: "/home/icons/check_burgundyRed.webp",
  whiteDarkGreen: "/home/icons/check_whiteDarkGreen.webp"
};
const _Radio = reactExports.memo((props) => {
  const { theme } = useUserInfoStore();
  const { parent, ...context2 } = reactExports.useContext(RadioContext);
  const checked = reactExports.useMemo(() => {
    return parent ? props.value === context2.checked : props.checked;
  }, [context2.checked]);
  const toggle = () => {
    if (props.onClick) {
      props.onClick();
      return;
    }
    const emitter = parent ? context2.toggle : () => {
    };
    emitter(props.value);
  };
  const gapLength = reactExports.useMemo(() => {
    return context2.rowLength - 1;
  }, [context2.rowLength]);
  const widthPercentage = reactExports.useMemo(() => {
    return "calc((100% - calc(100vw / 750 * ".concat(18 * gapLength, ")) / ").concat(context2.rowLength, ")");
  }, [context2.rowLength]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      onClick: toggle,
      className: joinClass(css$1h.radioItem, checked && css$1h.active, "button"),
      style: {
        "--radio-item-width": widthPercentage
      },
      children: [
        props.children,
        checked && context2.checkMark && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1h.activeTip, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: checkMaps[theme] || "/home/icons/checkd.webp" }) })
      ]
    }
  );
});
const RadioGroup = reactExports.memo((props) => {
  var _a;
  const [checked, setChecked] = reactExports.useState(props.defaultValue);
  const toggle = (value2) => {
    var _a2;
    setChecked(value2);
    (_a2 = props.onChange) == null ? void 0 : _a2.call(props, value2);
  };
  reactExports.useEffect(() => {
    setChecked(props.defaultValue);
  }, [props.defaultValue]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    RadioContext.Provider,
    {
      value: {
        parent: { props },
        toggle,
        checked,
        /** 一行显示多少条 */
        rowLength: props.rowLength || 2,
        /** 是否显示勾选图标 */
        checkMark: (_a = props.checkMark) != null ? _a : true
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "section",
        {
          className: joinClass(css$1h.radioGroup),
          style: {
            "--radio-row-length": props.rowLength
          },
          children: props.children
        }
      )
    }
  );
});
const Radio = Object.assign(_Radio, { Group: RadioGroup });
const svg_theme_fill_color$1j = "_svg_theme_fill_color_1w5c0_3";
const buttonComponent = "_buttonComponent_1w5c0_55";
const round = "_round_1w5c0_69";
const block$1 = "_block_1w5c0_72";
const largeRound = "_largeRound_1w5c0_76";
const disabled$1 = "_disabled_1w5c0_219";
const loading$4 = "_loading_1w5c0_225";
const css$1g = {
  svg_theme_fill_color: svg_theme_fill_color$1j,
  buttonComponent,
  round,
  block: block$1,
  largeRound,
  "type-primary": "_type-primary_1w5c0_79",
  "type-warning": "_type-warning_1w5c0_178",
  "type-borderBtn": "_type-borderBtn_1w5c0_182",
  disabled: disabled$1,
  loading: loading$4
};
const Button$1 = reactExports.memo((props) => {
  const type4 = reactExports.useMemo(() => {
    var _a;
    return "type-".concat((_a = props.type) != null ? _a : "primary");
  }, [props.type]);
  const block2 = reactExports.useMemo(() => {
    var _a;
    return (_a = props.block) != null ? _a : false;
  }, [props.block]);
  const round2 = reactExports.useMemo(() => {
    var _a;
    return (_a = props.round) != null ? _a : true;
  }, [props.round]);
  const largeRound2 = reactExports.useMemo(() => {
    var _a;
    return (_a = props.largeRound) != null ? _a : false;
  }, [props.largeRound]);
  const disabled2 = reactExports.useMemo(() => {
    var _a;
    return (_a = props.disabled) != null ? _a : false;
  }, [props.disabled]);
  const loading2 = reactExports.useMemo(() => {
    var _a;
    return (_a = props.loading) != null ? _a : false;
  }, [props.loading]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "button",
    {
      onClick: props.onClick,
      type: props.htmlType || "button",
      style: props.style,
      className: joinClass(
        css$1g.buttonComponent,
        css$1g[type4],
        block2 ? css$1g.block : "",
        round2 ? css$1g.round : "",
        largeRound2 ? css$1g.largeRound : "",
        disabled2 || loading2 ? css$1g.disabled : "",
        "button",
        props.className
      ),
      children: [
        props.children,
        loading2 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1g.loading })
      ]
    }
  );
});
const svg_theme_fill_color$1i = "_svg_theme_fill_color_8k6wr_3";
const inputContainer = "_inputContainer_8k6wr_55";
const focusBorder = "_focusBorder_8k6wr_64";
const noBg$3 = "_noBg_8k6wr_157";
const noBorder = "_noBorder_8k6wr_160";
const disabled = "_disabled_8k6wr_163";
const small$4 = "_small_8k6wr_211";
const error$3 = "_error_8k6wr_214";
const input$5 = "_input_8k6wr_55";
const content$a = "_content_8k6wr_221";
const enter = "_enter_8k6wr_226";
const prefix$3 = "_prefix_8k6wr_325";
const suffix$4 = "_suffix_8k6wr_336";
const eye = "_eye_8k6wr_342";
const clear = "_clear_8k6wr_360";
const radius = "_radius_8k6wr_369";
const searchHeight = "_searchHeight_8k6wr_373";
const colorWhite = "_colorWhite_8k6wr_377";
const required4 = "_required_8k6wr_381";
const svgIcon$1 = "_svgIcon_8k6wr_398";
const openStyle$1 = "_openStyle_8k6wr_408";
const css$1f = {
  svg_theme_fill_color: svg_theme_fill_color$1i,
  inputContainer,
  focusBorder,
  noBg: noBg$3,
  noBorder,
  disabled,
  "default": "_default_8k6wr_208",
  small: small$4,
  error: error$3,
  input: input$5,
  content: content$a,
  enter,
  prefix: prefix$3,
  suffix: suffix$4,
  eye,
  clear,
  radius,
  searchHeight,
  colorWhite,
  required: required4,
  svgIcon: svgIcon$1,
  openStyle: openStyle$1
};
const FormContext = reactExports.createContext({});
const FormItemContext = reactExports.createContext({});
const Input = (props) => {
  var _a;
  useUserInfoStore();
  const defaultProp = {
    value: "",
    type: "text",
    disabled: false
  };
  props = Object.assign({}, defaultProp, props);
  const [value2, setValue] = reactExports.useState(props.value);
  const [isShowPassword, setIsShowPassword] = reactExports.useState(false);
  const [isFocus, setIsFocus] = reactExports.useState(false);
  const formContext = reactExports.useContext(FormContext);
  const formItemContext = reactExports.useContext(FormItemContext);
  const inputType = reactExports.useMemo(() => {
    if (props.type === "password") {
      return isShowPassword ? "text" : "password";
    }
    return props.type;
  }, [props.type, isShowPassword]);
  const showClear = reactExports.useMemo(() => {
    if (props.disabled) {
      return false;
    }
    if (props.clearable) {
      if (value2 && value2.length > 0) {
        return true;
      }
    }
    return false;
  });
  reactExports.useMemo(() => {
    return formItemContext.errorShow;
  }, [formItemContext.errorShow]);
  reactExports.useEffect(() => {
    setValue(props.value);
  }, [props.value]);
  const onChangeHandler = (inputValue) => {
    if (inputValue !== void 0) {
      setValue(inputValue);
    }
    props.onChange && props.onChange(inputValue);
  };
  const size2 = reactExports.useMemo(() => {
    var _a2;
    return (_a2 = formContext.size) != null ? _a2 : "default";
  }, [formContext.size]);
  const isShowRequired = reactExports.useMemo(() => {
    if (value2) {
      return false;
    }
    return props.required;
  }, [props.required, value2]);
  function handleFocus() {
    setIsFocus(true);
  }
  function handleBlur() {
    setIsFocus(false);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(
      "globalInputContainer",
      css$1f.inputContainer,
      css$1f[size2],
      props.noBorder ? css$1f.noBorder : "",
      props.noBg ? css$1f.noBg : "",
      props.disabled ? css$1f.disabled : "",
      props.radius ? css$1f.radius : "",
      props.searchHeight ? css$1f.searchHeight : "",
      props.focusBorder && isFocus ? css$1f.focusBorder : "",
      props.className
    ), children: [
      props.prefix && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1f.prefix, children: props.prefix }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1f.input, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1f.content, children: [
            isShowRequired && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1f.required, children: "*" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                value: value2,
                inputMode: (_a = props.inputMode) != null ? _a : "text",
                className: css$1f.enter,
                type: inputType,
                readOnly: props.readOnly,
                placeholder: props.placeholder,
                disabled: props.disabled,
                onChange: (e2) => onChangeHandler(e2.currentTarget.value),
                onKeyDown: props.onKeyDown,
                onFocus: handleFocus,
                onBlur: handleBlur
              }
            )
          ]
        })
      }),
      showClear && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1f.clear, onClick: () => {
          onChangeHandler("");
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(InputClearIcon, { className: css$1f.svgIcon })
      }),
      props.type === "password" && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1f.eye, onClick: () => {
          setIsShowPassword(!isShowPassword);
        }, children: isShowPassword ? /* @__PURE__ */ jsxRuntimeExports.jsx(EyeOpenIcon, { className: joinClass(css$1f.svgIcon, css$1f.openStyle) }) : /* @__PURE__ */ jsxRuntimeExports.jsx(EyeCloseIcon, { className: css$1f.svgIcon })
      }),
      props.suffix && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1f.suffix, children: props.suffix })
    ]
  });
};
const svg_theme_fill_color$1h = "_svg_theme_fill_color_1og5b_3";
const deposit = "_deposit_1og5b_55";
const deposit_tab = "_deposit_tab_1og5b_59";
const line1 = "_line1_1og5b_149";
const lineHeight$1 = "_lineHeight_1og5b_187";
const radioText = "_radioText_1og5b_191";
const type1 = "_type1_1og5b_231";
const tips$4 = "_tips_1og5b_242";
const quick = "_quick_1og5b_254";
const desc$1 = "_desc_1og5b_322";
const before$1 = "_before_1og5b_394";
const depositBtn = "_depositBtn_1og5b_435";
const displayNone = "_displayNone_1og5b_441";
const depositTrio = "_depositTrio_1og5b_445";
const discountedPrice = "_discountedPrice_1og5b_452";
const depositItemTip = "_depositItemTip_1og5b_481";
const depositImg = "_depositImg_1og5b_509";
const css$1e = {
  svg_theme_fill_color: svg_theme_fill_color$1h,
  deposit,
  deposit_tab,
  line1,
  lineHeight: lineHeight$1,
  radioText,
  type1,
  tips: tips$4,
  quick,
  desc: desc$1,
  before: before$1,
  depositBtn,
  displayNone,
  depositTrio,
  discountedPrice,
  depositItemTip,
  depositImg
};
const tyList = [
  {
    ty: 1,
    label: "PIX",
    tip: "EMAIL",
    value: "1",
    img: "/home/icons/deposit_pix.webp"
  },
  {
    ty: 2,
    label: "PIX",
    tip: "TELEFONE",
    value: "2",
    img: "/home/icons/deposit_pix.webp"
  },
  {
    ty: 3,
    label: "PIX",
    tip: "CPF",
    value: "3",
    img: "/home/icons/deposit_pix.webp"
  },
  {
    ty: 4,
    label: "PIX",
    tip: "CNPJ",
    value: "4",
    img: "/home/icons/deposit_pix.webp"
  }
];
const payTypePH = [
  {
    ty: 7,
    label: "GCash",
    tip: "",
    value: "7",
    img: "/home/icons/deposit_gcash.webp"
  },
  {
    ty: 8,
    label: "Maya",
    tip: "",
    value: "8",
    img: "/home/icons/deposit_maya.webp"
  },
  {
    ty: 10,
    label: "Bank Card",
    tip: "",
    value: "10"
  }
];
const getTyLabelOrTip = (ty) => {
  let arr = tyList;
  const item2 = arr.find((item22) => item22.ty === ty);
  if (!item2)
    return {};
  return {
    label: item2.label,
    tip: item2.tip,
    img: item2.img
  };
};
const Deposit = () => {
  useUserInfoStore();
  const [active2, setActive] = reactExports.useState("1");
  const [amount2, setAmount] = reactExports.useState("");
  const [type4, setType] = reactExports.useState("");
  const [typeData, setTypeData] = reactExports.useState([]);
  const [channel, setChannel] = reactExports.useState("");
  const [channelData, setChannelData] = reactExports.useState([]);
  const [depositImg2, setDepositImg] = reactExports.useState([]);
  const [depositTo, setDepositTo] = reactExports.useState([]);
  const [depositLoading, setDepositLoading] = reactExports.useState(false);
  const [threeSomeUrl, setThreeSomeUrl] = reactExports.useState("");
  const navigate = useNavigate();
  getWebType();
  const [items2] = reactExports.useState([
    {
      label: trans("线上支付"),
      value: "1",
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/icons/deposit_small_icon.webp" }),
      activeIcon: /* @__PURE__ */ jsxRuntimeExports.jsx(DepositTabIcon, { className: css$1e.deposit_tab })
    }
  ]);
  async function getChannelType() {
    const [res, err] = await getFinanceChannelType();
    if (err) {
      return;
    }
    if (Array.isArray(res)) {
      setType(res[0].id);
      console.log("res :", res);
      setTypeData(res);
    }
  }
  async function getChannelList(params) {
    const [res, err] = await getFinanceChannelList(params);
    if (err) {
      return;
    }
    if (res && Array.isArray(res)) {
      setChannel(res[0].id);
      setChannelData(res);
    }
  }
  async function getMemberWebsetList(params) {
    const [res, err] = await memberWebsetList(params);
    if (err) {
      return;
    }
    if (res) {
      setDepositImg(res.deposit_img_h5);
      setDepositTo(res.deposit_to);
    }
  }
  async function financeThirdDeposit(params) {
    setDepositLoading(true);
    const [res, err] = await postFinanceThirdDeposit(params);
    setDepositLoading(false);
    if (err) {
      return;
    }
    if (res) {
      location.href = res.url;
    }
  }
  async function getThreeSomeUrl() {
    const [res, err] = await getPromoList();
    if (!err && res) {
      const _deposit = res.find((_item) => _item.flag === "deposit");
      if (_deposit) {
        setThreeSomeUrl("/activity-detail/".concat(_deposit.id, "/").concat(_deposit.flag));
      }
    }
  }
  const amountList = reactExports.useMemo(() => {
    const currentChannel = channelData.find((_item) => _item.id === channel);
    if (currentChannel) {
      const list = currentChannel.bonus_list;
      return list;
    }
    return [];
  }, [channel]);
  const pageRenderData = reactExports.useMemo(() => {
    const currentChannel = channelData.find((_item) => _item.id === channel);
    if (currentChannel) {
      return {
        min: currentChannel.fmin,
        max: currentChannel.fmax,
        /** is_fast = 1 是开启了快捷 */
        is_fast: currentChannel.is_fast === 1,
        /** is_zone = 1 是开启了区间 */
        is_zone: currentChannel.is_zone === 1
      };
    }
    return {
      min: 0,
      max: 0,
      is_fast: false,
      is_zone: false
    };
  }, [channel]);
  const submit = () => {
    if (amount2 < pageRenderData.min || amount2 > pageRenderData.max) {
      Message$1.error("".concat(trans("请输入")).concat(pageRenderData.min, "~").concat(pageRenderData.max).concat(trans("之间的金额")));
      return;
    }
    financeThirdDeposit({
      amount: Math.floor(amount2),
      third_id: channel
    });
  };
  reactExports.useEffect(() => {
    if (type4) {
      setChannel("");
      setChannelData([]);
      getChannelList({
        channel_type: type4
      });
    }
  }, [type4]);
  reactExports.useEffect(() => {
    getChannelType();
    getThreeSomeUrl();
    getMemberWebsetList();
    const urlParams = getUrlParams();
    const localUrlParams = location.search || "";
    if (urlParams) {
      if (localUrlParams.indexOf("click_id") === -1 || localUrlParams.indexOf("fbclid") === -1) {
        navigate("/deposit" + urlParams, { replace: true });
      }
    }
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$1e.deposit, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab, {
      items: items2, active: active2, ...items2, onChange: (_active) => {
        setActive(_active);
      }
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
      type4 && /* @__PURE__ */ jsxRuntimeExports.jsx(Radio.Group, {
        defaultValue: type4, rowLength: 3, onChange: (_value) => {
          console.log("支付方式", _value);
          setType(_value);
        }, children: typeData.map((_item, index2) => {
          var _a;
          return /* @__PURE__ */ jsxRuntimeExports.jsx(Radio, {
            value: _item.id, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$1e.type1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/icons/deposit_".concat((_a = _item.name) == null ? void 0 : _a.toLocaleLowerCase(), ".webp") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1e.radioText, children: _item.name })
              ]
            })
          }, _item.id);
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.line1 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
      channel && /* @__PURE__ */ jsxRuntimeExports.jsx(Radio.Group, {
        defaultValue: channel, rowLength: 3, onChange: (_value) => {
          console.log("支付通道", _value);
          setChannel(_value);
        }, children: channelData.map((_item, index2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(Radio, { value: _item.id, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1e.radioText, children: _item.show_name }) }, _item.id);
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
      (pageRenderData.is_zone || pageRenderData.is_fast && amountList && channelData.length) && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.quick, children: trans("存款金额") }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
      pageRenderData.is_fast && amountList && channelData.length > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Radio.Group, {
        defaultValue: amount2, rowLength: 4, onChange: (_value) => {
          console.log("快捷金额", _value);
          setAmount(_value);
        }, children: amountList.map((item2, index2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsxs(Radio, {
            value: item2.deposit_amount, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1e.radioText, children: item2.deposit_amount }),
              item2.bonus_amount > 0 && /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                className: css$1e.discountedPrice, children: [
                  "+",
                  item2.bonus_amount,
          /* @__PURE__ */ jsxRuntimeExports.jsx(DepositItemTipIcon, { className: css$1e.depositItemTip })
                ]
              })
            ]
          }, index2);
        })
      }, amount2),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
      pageRenderData.is_zone && /* @__PURE__ */ jsxRuntimeExports.jsx(
        Input,
        {
          type: "number",
          inputMode: "numeric",
          value: amount2,
          clearable: true,
          placeholder: "".concat(trans("最低"), " ").concat(pageRenderData.min, ", ").concat(trans("最大"), " ").concat(pageRenderData.max),
          onChange: (_value) => {
            _value = _value.replace(/[^\d]/g, "");
            setAmount(_value);
          },
          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.before, children: getMoneyUnit(true) })
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.desc, children: trans("使用条款：请求充值后，快速完成付款") }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1e.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button$1, { block: true, largeRound: true, disabled: amount2 < pageRenderData.min || amount2 > pageRenderData.max || !channel, loading: depositLoading, onClick: submit, className: css$1e.depositBtn, children: trans("立即充值") }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1e.depositImg, onClick: () => {
          if (depositTo) {
            navigate(depositTo);
          } else {
            if (threeSomeUrl) {
              navigate(threeSomeUrl);
            }
          }
        }, children: depositImg2 ? /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: depositImg2, remote: true, isGame: true }) : /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/deposit-trio.webp" })
      })
    ]
  });
};
const svg_theme_fill_color$1g = "_svg_theme_fill_color_m4aos_3";
const header$4 = "_header_m4aos_55";
const imgBg = "_imgBg_m4aos_127";
const img$7 = "_img_m4aos_127";
const name$1 = "_name_m4aos_143";
const coin$1 = "_coin_m4aos_190";
const content$9 = "_content_m4aos_327";
const lineHeight = "_lineHeight_m4aos_331";
const withTip = "_withTip_m4aos_335";
const withItem = "_withItem_m4aos_449";
const bankIco = "_bankIco_m4aos_455";
const right$3 = "_right_m4aos_463";
const title$9 = "_title_m4aos_471";
const phone$1 = "_phone_m4aos_590";
const accountContainer = "_accountContainer_m4aos_656";
const addAccount = "_addAccount_m4aos_662";
const addText = "_addText_m4aos_723";
const toLink = "_toLink_m4aos_773";
const rsContainer = "_rsContainer_m4aos_872";
const before = "_before_m4aos_894";
const suffix$3 = "_suffix_m4aos_941";
const bindNum = "_bindNum_m4aos_1006";
const error$2 = "_error_m4aos_1120";
const negative$1 = "_negative_m4aos_1162";
const positive$1 = "_positive_m4aos_1205";
const opera$1 = "_opera_m4aos_1254";
const detail = "_detail_m4aos_1261";
const pickerContainer$2 = "_pickerContainer_m4aos_1315";
const normalBtn$1 = "_normalBtn_m4aos_1321";
const payPsdContainer = "_payPsdContainer_m4aos_1326";
const tip$1 = "_tip_m4aos_1451";
const close$7 = "_close_m4aos_1514";
const btnContainer = "_btnContainer_m4aos_1522";
const btn$1 = "_btn_m4aos_1522";
const orderTitle = "_orderTitle_m4aos_1529";
const withdrawOrder = "_withdrawOrder_m4aos_1583";
const listItem = "_listItem_m4aos_1597";
const value = "_value_m4aos_1980";
const special$2 = "_special_m4aos_2033";
const withdrawFee = "_withdrawFee_m4aos_2097";
const det1 = "_det1_m4aos_2152";
const det2 = "_det2_m4aos_2209";
const withdrawInput = "_withdrawInput_m4aos_2246";
const withdrawTips = "_withdrawTips_m4aos_2258";
const redTips = "_redTips_m4aos_2308";
const values$4 = "_values_m4aos_2313";
const css$1d = {
  svg_theme_fill_color: svg_theme_fill_color$1g,
  header: header$4,
  imgBg,
  img: img$7,
  name: name$1,
  coin: coin$1,
  content: content$9,
  lineHeight,
  withTip,
  withItem,
  bankIco,
  right: right$3,
  title: title$9,
  phone: phone$1,
  accountContainer,
  addAccount,
  addText,
  toLink,
  rsContainer,
  before,
  suffix: suffix$3,
  bindNum,
  error: error$2,
  negative: negative$1,
  positive: positive$1,
  opera: opera$1,
  detail,
  pickerContainer: pickerContainer$2,
  normalBtn: normalBtn$1,
  payPsdContainer,
  tip: tip$1,
  close: close$7,
  btnContainer,
  btn: btn$1,
  orderTitle,
  withdrawOrder,
  listItem,
  value,
  special: special$2,
  withdrawFee,
  det1,
  det2,
  withdrawInput,
  withdrawTips,
  redTips,
  values: values$4
};
const svg_theme_fill_color$1f = "_svg_theme_fill_color_82i79_3";
const flex$4 = "_flex_82i79_55";
const flex1 = "_flex1_82i79_59";
const flexCenter = "_flexCenter_82i79_63";
const flexItemCenter = "_flexItemCenter_82i79_69";
const flexJustifyCenter = "_flexJustifyCenter_82i79_74";
const flexColumn = "_flexColumn_82i79_79";
const mine = "_mine_82i79_84";
const linearBg = "_linearBg_82i79_84";
const ProgressAndTabs = "_ProgressAndTabs_82i79_167";
const vipProgressContainer = "_vipProgressContainer_82i79_239";
const vipProgress = "_vipProgress_82i79_239";
const vipImg = "_vipImg_82i79_248";
const ico = "_ico_82i79_248";
const rightIco = "_rightIco_82i79_252";
const progressContent = "_progressContent_82i79_256";
const progressVip = "_progressVip_82i79_262";
const progress$1 = "_progress_82i79_256";
const title1 = "_title1_82i79_336";
const special$1 = "_special_82i79_343";
const normal = "_normal_82i79_410";
const material = "_material_82i79_480";
const item$e = "_item_82i79_484";
const text$1 = "_text_82i79_562";
const header$3 = "_header_82i79_611";
const info = "_info_82i79_614";
const avatar$1 = "_avatar_82i79_617";
const img$6 = "_img_82i79_625";
const name = "_name_82i79_629";
const content$8 = "_content_82i79_634";
const message = "_message_82i79_641";
const container$7 = "_container_82i79_711";
const msgIco = "_msgIco_82i79_728";
const msg = "_msg_82i79_728";
const userName = "_userName_82i79_805";
const nameIco = "_nameIco_82i79_820";
const userId = "_userId_82i79_842";
const idIco = "_idIco_82i79_866";
const phone = "_phone_82i79_904";
const balance = "_balance_82i79_908";
const line$2 = "_line_82i79_84";
const balanceNum = "_balanceNum_82i79_931";
const refresh = "_refresh_82i79_991";
const imgAmount = "_imgAmount_82i79_1019";
const amountEntry = "_amountEntry_82i79_1024";
const split_line = "_split_line_82i79_1077";
const linkContainer = "_linkContainer_82i79_1085";
const linkItem = "_linkItem_82i79_1156";
const yellow$4 = "_yellow_82i79_1319";
const red$2 = "_red_82i79_1322";
const to = "_to_82i79_1362";
const linkItemContainer = "_linkItemContainer_82i79_1394";
const linkItemMarginTop = "_linkItemMarginTop_82i79_1398";
const progressComponent = "_progressComponent_82i79_1402";
const num = "_num_82i79_1499";
const mineBox = "_mineBox_82i79_1601";
const ubalance = "_ubalance_82i79_1627";
const uid = "_uid_82i79_1631";
const fullLevel = "_fullLevel_82i79_1651";
const tips$3 = "_tips_82i79_1702";
const amount$2 = "_amount_82i79_1024";
const bestImg = "_bestImg_82i79_1741";
const mineCss = {
  svg_theme_fill_color: svg_theme_fill_color$1f,
  flex: flex$4,
  flex1,
  flexCenter,
  flexItemCenter,
  flexJustifyCenter,
  flexColumn,
  mine,
  linearBg,
  ProgressAndTabs,
  vipProgressContainer,
  vipProgress,
  vipImg,
  ico,
  rightIco,
  progressContent,
  progressVip,
  progress: progress$1,
  title1,
  special: special$1,
  normal,
  material,
  item: item$e,
  text: text$1,
  header: header$3,
  info,
  avatar: avatar$1,
  img: img$6,
  name,
  content: content$8,
  message,
  container: container$7,
  msgIco,
  msg,
  userName,
  nameIco,
  userId,
  idIco,
  phone,
  balance,
  line: line$2,
  balanceNum,
  refresh,
  imgAmount,
  amountEntry,
  split_line,
  linkContainer,
  linkItem,
  yellow: yellow$4,
  red: red$2,
  to,
  linkItemContainer,
  linkItemMarginTop,
  progressComponent,
  num,
  mineBox,
  ubalance,
  uid,
  fullLevel,
  tips: tips$3,
  amount: amount$2,
  bestImg
};
const svg_theme_fill_color$1e = "_svg_theme_fill_color_uql4u_3";
const passwordInputContent = "_passwordInputContent_uql4u_55";
const wrap = "_wrap_uql4u_58";
const item$d = "_item_uql4u_67";
const dot = "_dot_uql4u_176";
const password = "_password_uql4u_55";
const customCursor = "_customCursor_uql4u_244";
const blink = "_blink_uql4u_1";
const desc = "_desc_uql4u_309";
const error$1 = "_error_uql4u_315";
const errorIme = "_errorIme_uql4u_320";
const errorTips = "_errorTips_uql4u_325";
const switchStatus = "_switchStatus_uql4u_370";
const title$8 = "_title_uql4u_378";
const eyeName = "_eyeName_uql4u_449";
const inputWidth = "_inputWidth_uql4u_454";
const svgIcon = "_svgIcon_uql4u_459";
const openStyle = "_openStyle_uql4u_463";
const css$1c = {
  svg_theme_fill_color: svg_theme_fill_color$1e,
  passwordInputContent,
  wrap,
  item: item$d,
  dot,
  password,
  customCursor,
  blink,
  desc,
  error: error$1,
  errorIme,
  errorTips,
  switchStatus,
  title: title$8,
  eyeName,
  inputWidth,
  svgIcon,
  openStyle
};
const tipsImg$2 = {
  sk2: "/home/icons/warning_icon_sk2.webp",
  furlaBlue: "/home/icons/warning_icon_furlaBlue.webp"
};
const PasswordInput = reactExports.forwardRef((props, ref) => {
  const { i18n } = useTranslation();
  const [inputValue, setInputValue] = reactExports.useState("");
  const [left2, setLeft] = reactExports.useState(0);
  const [isFocus, setIsFocus] = reactExports.useState(false);
  const [isShowPassword, setIsShowPassword] = reactExports.useState(false);
  const inputRef = reactExports.useRef(null);
  const sectionRef = reactExports.useRef(null);
  const itemRefs = Array.from({ length: 6 }).map(() => reactExports.useRef(null));
  const { theme } = useUserInfoStore();
  const isVerify = reactExports.useMemo(() => {
    return props.isVerify || false;
  });
  function getLeft() {
    if (!sectionRef.current)
      return 0;
    const currentItem = itemRefs[inputValue.length];
    if (!currentItem) {
      return;
    }
    const { left: secLeft } = sectionRef.current.getBoundingClientRect();
    const { left: itemLeft, width } = currentItem.current.getBoundingClientRect();
    const offset = itemLeft - secLeft;
    const width2 = width / 2;
    return inputValue.length === 0 ? width2 : offset + width2;
  }
  function renderPwd() {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$1c.switchStatus, onClick: () => {
        setIsShowPassword(!isShowPassword);
      }, children: isShowPassword ? /* @__PURE__ */ jsxRuntimeExports.jsx(EyeOpenIcon, { className: joinClass(css$1c.svgIcon, css$1c.openStyle) }) : /* @__PURE__ */ jsxRuntimeExports.jsx(EyeCloseIcon, { className: css$1c.svgIcon })
    });
  }
  reactExports.useEffect(() => {
    const left22 = getLeft();
    if (left22) {
      setLeft(left22);
    }
  }, [inputValue]);
  reactExports.useImperativeHandle(ref, () => ({
    clear() {
      setInputValue("");
    }
  }), []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
      className: joinClass(css$1c.passwordInputComponent), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$1c.desc), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1c.title), children: props.title }),
          renderPwd()
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: joinClass(css$1c.inputContainer), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          ref: sectionRef, className: css$1c.passwordInputContent, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              ref: inputRef,
              value: inputValue,
              className: css$1c.password,
              type: "number",
              maxLength: 6,
              onFocus: () => {
                setIsFocus(true);
              },
              onBlur: () => {
                setIsFocus(false);
              },
              onChange: (e2) => {
                var _a;
                const value2 = e2.target.value;
                if (value2.length > 6)
                  return;
                setInputValue(value2);
                (_a = props.onChange) == null ? void 0 : _a.call(props, value2);
              }
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: joinClass(css$1c.wrap), onClick: () => {
              inputRef.current.focus();
            }, children: Array.from({ length: 6 }).map((_, index2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1c.item, props.inputWidth ? css$1c.inputWidth : ""), ref: itemRefs[index2], children: inputValue[index2] && (isShowPassword ? inputValue[index2] : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1c.dot) })) }, index2);
            })
          }),
            isFocus && inputValue.length < 6 && /* @__PURE__ */ jsxRuntimeExports.jsx(
              "span",
              {
                className: joinClass(css$1c.customCursor),
                style: {
                  "--input-left": "".concat(left2, "px")
                }
              }
            )
          ]
        })
      })
      ]
    }),
      (inputValue.length < 6 && inputValue.length != 0 || isVerify && inputValue.length === 0) && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$1c.error), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: tipsImg$2[theme] || "/home/icons/warning_icon.webp", className: joinClass(css$1c.errorIme) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$1c.errorTips), children: i18n.t("6个数字") })
        ]
      })
    ]
  });
});
const svg_theme_fill_color$1d = "_svg_theme_fill_color_sssfl_3";
const depositContainer$1 = "_depositContainer_sssfl_55";
const depositContent = "_depositContent_sssfl_65";
const depositHeader = "_depositHeader_sssfl_138";
const leftArrow = "_leftArrow_sssfl_145";
const depositTitle = "_depositTitle_sssfl_163";
const depositRecord = "_depositRecord_sssfl_228";
const css$1b = {
  svg_theme_fill_color: svg_theme_fill_color$1d,
  depositContainer: depositContainer$1,
  depositContent,
  depositHeader,
  leftArrow,
  depositTitle,
  depositRecord
};
const svg_theme_fill_color$1c = "_svg_theme_fill_color_vkzez_3";
const more = "_more_vkzez_55";
const css$1a = {
  svg_theme_fill_color: svg_theme_fill_color$1c,
  more
};
const LoadMore = reactExports.forwardRef((props, ref) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      ref,
      ...props,
      onClick: () => {
        if (!props.disabled) {
          props.onClick();
        }
      },
      className: "".concat(css$1a.more, " ").concat(props.className || ""),
      style: {
        opacity: props.disabled ? 0.5 : 1
      },
      children: [
        instance.t("加载更多"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(MoreInMineIcon, {})
      ]
    }
  );
});
const svg_theme_fill_color$1b = "_svg_theme_fill_color_cgdro_3";
const depositContainer = "_depositContainer_cgdro_55";
const filter = "_filter_cgdro_62";
const total = "_total_cgdro_69";
const content$7 = "_content_cgdro_106";
const item$c = "_item_cgdro_113";
const column$1 = "_column_cgdro_234";
const pix$2 = "_pix_cgdro_243";
const amount$1 = "_amount_cgdro_255";
const orderContent = "_orderContent_cgdro_259";
const order$1 = "_order_cgdro_259";
const pagamento = "_pagamento_cgdro_340";
const details = "_details_cgdro_405";
const close$6 = "_close_cgdro_503";
const list1 = "_list1_cgdro_519";
const listIcon = "_listIcon_cgdro_523";
const success = "_success_cgdro_530";
const notReceived = "_notReceived_cgdro_533";
const received = "_received_cgdro_599";
const list2 = "_list2_cgdro_605";
const successText = "_successText_cgdro_677";
const list3 = "_list3_cgdro_681";
const list4 = "_list4_cgdro_693";
const copy$6 = "_copy_cgdro_704";
const css$19 = {
  svg_theme_fill_color: svg_theme_fill_color$1b,
  depositContainer,
  filter,
  total,
  content: content$7,
  item: item$c,
  column: column$1,
  pix: pix$2,
  amount: amount$1,
  orderContent,
  order: order$1,
  pagamento,
  details,
  close: close$6,
  list1,
  listIcon,
  success,
  notReceived,
  received,
  list2,
  successText,
  list3,
  list4,
  copy: copy$6
};
const useTimeRangeOptions = () => {
  return [
    { label: trans("昨日"), value: "2" },
    { label: trans("今日"), value: "1" },
    { label: trans("本周"), value: "3" },
    { label: trans("上周"), value: "4" },
    { label: trans("本月"), value: "5" },
    { label: trans("上个月"), value: "6" }
  ];
};
const getTimeRange = (value2) => {
  const startFormat = "YYYY-MM-DD 00:00:00";
  const endFormat = "YYYY-MM-DD 23:59:59";
  const now2 = dayjs();
  let start_time = "";
  let end_time = "";
  switch (value2) {
    case "1":
      start_time = now2.format(startFormat);
      end_time = now2.format(endFormat);
      break;
    case "2":
      start_time = now2.subtract(1, "day").format(startFormat);
      end_time = now2.subtract(1, "day").format(endFormat);
      break;
    case "3":
      start_time = now2.subtract(3, "day").format(startFormat);
      end_time = now2.format(endFormat);
      break;
    case "4":
      start_time = now2.subtract(7, "day").format(startFormat);
      end_time = now2.format(endFormat);
      break;
    case "5":
      start_time = now2.subtract(30, "day").format(startFormat);
      end_time = now2.format(endFormat);
      break;
  }
  return [start_time, end_time];
};
const customFormatTimer = (timer2, format3 = "DD/MM/YYYY HH:mm:ss") => {
  if (timer2 === "0")
    return "";
  if (!timer2)
    return timer2;
  if (Number.isNaN(Number(timer2))) {
    timer2 = new Date(timer2).getTime();
  }
  if ("".concat(timer2).length !== 13) {
    timer2 = timer2 * 1e3;
  }
  return dayjs.tz(Number(timer2)).format(format3);
};
const beiormatTimer = (timer2, format3 = "DD/MM/YYYY HH:mm:ss") => {
  if (timer2 === "0")
    return "";
  if (!timer2)
    return timer2;
  if (Number.isNaN(Number(timer2))) {
    timer2 = new Date(timer2).getTime();
  }
  if ("".concat(timer2).length !== 13) {
    timer2 = timer2 * 1e3;
  }
  return dayjs(Number(timer2)).format(format3);
};
const copy$5 = (value2) => {
  try {
    navigator.clipboard.writeText(value2);
    Message$1.success(trans("复制成功"));
  } catch (error2) {
    Message$1.error(trans("复制失败"));
  }
};
const DepositList = () => {
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [dataSource, setDataSource] = reactExports.useState([]);
  const [t2, setT] = reactExports.useState(0);
  const [page, setPage] = reactExports.useState(1);
  const [detailsStatus, setDetailsStatus] = reactExports.useState(false);
  const [detailsData, setDetailsData] = reactExports.useState({});
  const [depositTotal, setDepositTotal] = reactExports.useState(0);
  const getList = async () => {
    if (page === 1) {
      setT(0);
    }
    if (!start_time || !end_time) {
      return;
    }
    const [res, error2] = await getMemberRecordTrade({
      ty,
      start_time,
      end_time,
      flag: "271",
      page,
      page_size: 10
    });
    if (error2)
      return;
    if (page === 1) {
      setT(res.t);
    }
    const _data = res.d || [];
    if (_data.length) {
      if (page > 1) {
        setDataSource([...dataSource, ..._data]);
      } else {
        setDataSource(_data);
      }
    } else {
      if (page === 1) {
        setDataSource([]);
      }
    }
  };
  const transformTime = (value2) => {
    const v2 = value2.split(" ");
    return v2 ? v2[1] : "";
  };
  const showDetails = (item2) => {
    setDetailsData(item2);
    setDetailsStatus(true);
  };
  function stateToText(state2) {
    switch (state2) {
      case 361:
        return trans("待付款");
      case 362:
        return trans("付款确认成功");
      case 363:
        return trans("付款已取消");
      case 364:
        return trans("付款分析");
      default:
        return "--";
    }
  }
  async function getDepositTotal() {
    const [res, error2] = await getMemberShortInfo();
    if (error2)
      return;
    setDepositTotal(res.total_dept_amount);
  }
  function getIconStyle(state2) {
    switch (state2) {
      case 363:
        return css$19.received;
      case 362:
        return css$19.success;
      default:
        return css$19.notReceived;
    }
  }
  function renderIcon(state2) {
    switch (state2) {
      case 363:
        return /* @__PURE__ */ jsxRuntimeExports.jsx(Received, {});
      case 362:
        return /* @__PURE__ */ jsxRuntimeExports.jsx(DepositSuccess, {});
      default:
        return /* @__PURE__ */ jsxRuntimeExports.jsx(NotReceived, {});
    }
  }
  reactExports.useEffect(() => {
    getList();
  }, [page, ty, start_time, end_time]);
  reactExports.useEffect(() => {
    getDepositTotal();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$19.depositContainer, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$19.filter, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$19.total, children: [
            trans("存款总额"),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              children: [
                getMoneyUnit(true),
                " ",
                customToFixed(depositTotal)
              ]
            })
          ]
        })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$19.content, children: [
          dataSource.map((item2, index2) => {
            var _a;
            return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$19.item, onClick: () => showDetails(item2), children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$19.column, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$19.pix, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/icons/deposit_".concat((_a = item2.channel_type_name) == null ? void 0 : _a.toLocaleLowerCase(), ".webp") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: item2.channel_type_name })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$19.amount, children: [
                    getMoneyUnit(true),
                    " ",
                    customToFixed(item2.amount)
                  ]
                })
                ]
              }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: joinClass(css$19.column), children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$19.orderContent, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                    className: css$19.time, children: [
                      trans("今天"),
                      " ",
                      transformTime(customFormatTimer(item2.created_at))
                    ]
                  }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                    className: css$19.order, onClick: (e2) => {
                      e2.stopPropagation();
                      copy$5(item2.bill_no);
                    }, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: item2.bill_no }),
                      " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$19.copy })
                    ]
                  })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$19.pagamento, [363, 364].includes(item2.state) ? css$19.error : ""), children: stateToText(item2.state) })
                ]
              })
              ]
            }, item2.bill_no);
          }),
          t2 > dataSource.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
            LoadMore,
            {
              onClick: () => {
                setPage(page + 1);
              }
            }
          )
        ]
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
      isOpen: detailsStatus, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$19.details, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$19.close, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            PopCloseIcon,
            {
              onClick: () => {
                setDetailsStatus(false);
              }
            }
          )
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$19.list1, children: trans("存款详情") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$19.listIcon, getIconStyle(detailsData.state)), children: renderIcon(detailsData.state) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$19.list2, +detailsData.state === 362 ? css$19.successText : ""), children: stateToText(detailsData.state) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$19.list3, children: [
            getMoneyUnit(true),
            " ",
            customToFixed(detailsData.amount)
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$19.list4, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("交易类型") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("充值") })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("充值方式") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: detailsData.channel_name || detailsData.channel_type_name })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("充值通道") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: detailsData.pay_name })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("创建时间") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customFormatTimer(detailsData.created_at) })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("订单号1") }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              onClick: () => copy$5(detailsData.bill_no), children: [
                detailsData.bill_no,
            /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$19.copy })
              ]
            })
            ]
          })
          ]
        })
        ]
      })
    })
    ]
  });
};
const DepositDialog = ({ setDepositStatus }) => {
  const [depositRecordStatus, setDepositRecordStatus] = reactExports.useState(false);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$1b.depositContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$1b.depositContent, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1b.depositHeader, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$1b.leftArrow, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              onClick: () => {
                setDepositStatus(false);
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1b.depositTitle, children: trans("充值") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
            "span",
            {
              className: css$1b.depositRecord,
              onClick: () => {
                setDepositRecordStatus(true);
              },
              children: trans("充值记录")
            }
          )
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Deposit, {})
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
      isOpen: depositRecordStatus, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1b.depositContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1b.depositContent, style: {
            overflowY: "hidden"
          }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$1b.depositHeader, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$1b.leftArrow, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                onClick: () => {
                  setDepositRecordStatus(false);
                }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
              })
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1b.depositTitle, children: trans("充值记录") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1b.depositRecord })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(DepositList, {})
          ]
        })
      })
    })
    ]
  });
};
const UserBalance = () => {
  const { info: info2, getUserBalanceByStore } = useUserInfoStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
    className: joinClass(mineCss.balance), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: mineCss.ico, src: getCountryFlag(true) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.line }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.balanceNum, "ellipsis"), children: customToFixed(info2.balance) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Fresh, {
      className: mineCss.refresh, onClick: async () => {
        getUserBalanceByStore();
      }
    })
    ]
  });
};
const UserName = ({ showIco = true }) => {
  const { info: info2, theme } = useUserInfoStore();
  const navigate = useNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(mineCss.userName, mineCss.flexItemCenter), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
      children: [
        trans("会员账号"),
        ":",
        info2.username
      ]
    }),
      showIco && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: joinClass(mineCss.nameIco, "button"), onClick: () => {
          navigate("/personal-information");
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(EditUserIcon, {})
      })
    ]
  });
};
const formatStr = (str2) => {
  if (!str2)
    return "";
  const len = str2.length;
  if (len < 4)
    return str2;
  str2.substr(0, len - 4);
  const end = str2.substr(len - 4, 4);
  return "****".concat(end);
};
const CopyText = ({ value: value2 = "-", className, encryption = false, disableCopy = false }) => {
  useUserInfoStore();
  const copy2 = () => {
    try {
      navigator.clipboard.writeText(value2);
      Message$1.success(trans("复制成功"));
    } catch (error2) {
      Message$1.error(trans("复制失败"));
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(mineCss.userId, mineCss.flexItemCenter, "button", className), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: encryption ? formatStr(value2) : value2 }),
      !disableCopy ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        onClick: (e2) => {
          e2.stopPropagation();
          copy2();
        }, className: joinClass(mineCss.idIco, "button"), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, {})
      }) : null
    ]
  });
};
const MineInfo = () => {
  const navigate = useNavigate();
  const { info: info2 } = useUserInfoStore();
  const { num: num2 } = useMessageStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsx("section", {
    className: joinClass(mineCss.header), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: joinClass(mineCss.info, mineCss.flexCenter), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: mineCss.avatar, onClick: () => {
          navigate("/personal-information");
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: mineCss.img, src: "/home/avatar/avatar".concat(info2 == null ? void 0 : info2.avatar, ".webp") })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: mineCss.name, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: mineCss.content, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: mineCss.uid, children: [
              "ID:",
        /* @__PURE__ */ jsxRuntimeExports.jsx(CopyText, { value: info2.uid })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(UserName, { showIco: false }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.ubalance, children: /* @__PURE__ */ jsxRuntimeExports.jsx(UserBalance, {}) })
          ]
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(mineCss.message, "button"), onClick: () => {
          navigate("/message");
        }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.container, num2 == 0 ? mineCss.msg : ""), children: /* @__PURE__ */ jsxRuntimeExports.jsx(MessageTwoIcon, { className: mineCss.msgIco }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("信息") })
        ]
      })
      ]
    })
  });
};
const MineAmountEntry = (props) => {
  const navigate = useNavigate();
  const { isSetWithdrawPassword } = useUserInfoStore();
  const [depositStatus, setDepositStatus] = reactExports.useState(false);
  const list = [
    {
      title: trans("中心钱包"),
      // icon: centerWallent[theme] || '/home/icons/center_wallent.webp',
      com: /* @__PURE__ */ jsxRuntimeExports.jsx(BlacCentralIcon, {}),
      onClick: () => {
        navigate("/central-wallet");
      }
    },
    {
      title: trans("提现"),
      // icon: withdrawMaps[theme] || '/home/icons/withdraw.webp',
      com: /* @__PURE__ */ jsxRuntimeExports.jsx(SaqueIcon, {}),
      onClick: () => {
        if (isSetWithdrawPassword) {
          navigate("/withdraw");
        } else {
          navigate("/withdraw-set?to=withdraw");
        }
      }
    },
    {
      title: trans("充值"),
      // icon: depositeMaps[theme] || '/home/icons/deposite.webp',
      com: /* @__PURE__ */ jsxRuntimeExports.jsx(DepositoIcon, {}),
      onClick: () => {
        setDepositStatus(true);
      }
    }
    // {
    //   title: trans('利息宝'),
    //   com: <InterestIcon />,
    //   onClick: () => {
    //     Message.info(trans('功能维护中'))
    //   },
    // },
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("section", {
      className: joinClass(mineCss.amountEntry), children: list.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs(reactExports.Fragment, {
        children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: joinClass(mineCss.item, mineCss.flexColumn, mineCss.flexCenter, "button"),
            onClick: item2.onClick,
            children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.ico, mineCss.flexColumn, mineCss.flexCenter), children: item2.com }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: mineCss.text, children: item2.title })
            ]
          }
        ),
          index2 != list.length - 1 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.split_line })
        ]
      }, index2))
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, { showType: "bottom", isOpen: depositStatus, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(DepositDialog, { setDepositStatus }) })
    ]
  });
};
const Progress$2 = ({ progress: progress2 = 0 }) => {
  const { info: info2 } = useUserInfoStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: mineCss.progressComponent, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
      className: mineCss.num, children: [
        customToFixed(info2 == null ? void 0 : info2.now),
        "/",
        customToFixed(info2 == null ? void 0 : info2.next)
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.content, style: { width: "".concat(progress2, "%") } })
    ]
  });
};
const VipProgress = () => {
  const { info: info2 } = useUserInfoStore();
  const navigate = useNavigate();
  const isRender = reactExports.useMemo(() => {
    return info2.next_level;
  }, [info2]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: isRender && /* @__PURE__ */ jsxRuntimeExports.jsx("section", {
      className: joinClass(mineCss.vipProgressContainer), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(mineCss.vipProgress, (info2 == null ? void 0 : info2.level) != 15 ? mineCss.flexCenter : ""), onClick: () => {
          navigate("/vip");
        }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.vipImg, children: (info2 == null ? void 0 : info2.level) != 15 ? /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: mineCss.ico, src: "/home/vip/vip".concat(info2.level, ".webp") }) : /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/home/vip/vip_best.webp", className: mineCss.bestImg }) }),
          (info2 == null ? void 0 : info2.level) != 15 ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(mineCss.progressContent, mineCss.flex1), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: joinClass(mineCss.title1), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                className: joinClass(mineCss.normal, mineCss.flex1), children: [
                  " ",
                  trans("下一个等级")
                ]
              }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                className: mineCss.progressVip, children: [
                  trans("VIP"),
                  info2.next_level
                ]
              }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: mineCss.normal, children: trans("投注更多") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: mineCss.special, children: customToFixed(info2.next - info2.now) })
              ]
            }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: mineCss.progress, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: mineCss.normal, children: trans("需要下注") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Progress$2, { progress: info2.now / info2.next * 100 })
              ]
            })
            ]
          }) : /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: mineCss.fullLevel, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                trans("有效累积投注"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: mineCss.amount, children: customToFixed(info2 == null ? void 0 : info2.now) })
              ]
            }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: mineCss.tips, children: [
                trans("恭喜您，您已达到最高等级"),
                "！"
              ]
            })
            ]
          }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightInMineIcon, { className: mineCss.to })
        ]
      })
    })
  });
};
const MineMaterial = (props) => {
  const navigate = useNavigate();
  const { isSetWithdrawPassword } = useUserInfoStore();
  useUserInfoStore();
  const list = [
    {
      title: trans("账户详情资料"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(DetalhesDaContaIcon, {}),
      onClick: () => {
        navigate("/record-betting");
      }
    },
    {
      title: trans("投注记录"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(RecordesDeApostasIcon, {}),
      onClick: () => {
        navigate("/record-betting?tag=2");
      }
    },
    {
      title: trans("提现记录"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(RegistroDeRetiradasIcon, {}),
      onClick: () => {
        if (isSetWithdrawPassword) {
          navigate("/withdraw?tag=2");
        } else {
          navigate("/withdraw-set?to=withdraw?tag=2");
        }
      }
    },
    {
      title: trans("提款设置"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(ConfiguraDeSaqueIcon, {}),
      onClick: () => {
        console.log("提款设置");
        if (isSetWithdrawPassword) {
          navigate("/withdraw?tag=3");
        } else {
          navigate("/withdraw-set?to=withdraw?tag=3");
        }
      }
    }
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsx("section", {
    className: joinClass(mineCss.material), children: list.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        className: joinClass(mineCss.item, mineCss.flexColumn, mineCss.flexCenter, "button"),
        onClick: item2.onClick,
        children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.ico, mineCss.flexColumn, mineCss.flexCenter), children: item2.IconCom }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: mineCss.text, children: item2.title })
        ]
      },
      index2
    ))
  });
};
const LinkItem = ({ title: title2, icon: icon3, onClick, IconCom, yellow: yellow2, red: red2 }) => {
  useUserInfoStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(mineCss.linkItem, mineCss.flexCenter, "button"), onClick, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.ico, yellow2 ? mineCss.yellow : "", red2 ? mineCss.red : ""), children: IconCom }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(mineCss.text, mineCss.flex1), children: title2 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(mineCss.to), children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightInMineIcon, {}) })
    ]
  });
};
const LinkContainer = ({ list, className }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: joinClass(mineCss.linkContainer, className), children: (list != null ? list : []).map((item2, index2) => {
      if (item2.isHiden)
        return;
      return /* @__PURE__ */ jsxRuntimeExports.jsx(LinkItem, { ...item2 }, index2);
    })
  });
};
const Mine$1 = () => {
  const { exit, info: info2, theme } = useUserInfoStore();
  const navigate = useNavigate();
  const { appUrl, isHiddenDownloadApp } = useUserInfoStore();
  const linkList1 = [
    {
      title: trans("推广"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(ConvidarInMenuIcon, {}),
      onClick: () => {
        navigate("/agent");
      }
    },
    {
      title: trans("个人信息"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(EditUserIcon, {}),
      onClick: () => {
        navigate("/personal-information");
      }
    },
    {
      title: trans("返水"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(RebateInMineIcon, {}),
      onClick: () => {
        navigate("/back-rate");
      }
    },
    // {
    //   title: trans('帮助中心'),
    //   icon: '/home/header_menu_icon.webp',
    //   onClick: () => {
    //     navigate('/help-center')
    //   },
    // },
    {
      title: trans("客服"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(SuporteInMineIcon, {}),
      onClick: () => {
        navigate("/message?service=1");
      }
    },
    {
      title: trans("下载应用程序"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(BaixarAppInMineIcon, {}),
      yellow: true,
      isHiden: isHiddenDownloadApp,
      onClick: () => {
        window.open(appUrl, "_blank");
      }
    },
    {
      title: trans("退出"),
      IconCom: /* @__PURE__ */ jsxRuntimeExports.jsx(SairIcon, {}),
      red: true,
      onClick: () => {
        console.log("Sair");
        navigate("/");
        exit();
      }
    }
  ];
  const linkList2 = [
    // {
    //   title: 'Sair',
    //   IconCom: <SairIcon />,
    //   red: true,
    //   onClick: async () => {
    //     console.log('Sair')
    //     await exit()
    //     navigate('/')
    //   },
    // },
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: info2 && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: mineCss.mineBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: mineCss.mine, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: mineCss.linearBg, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(MineInfo, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(MineAmountEntry, {})
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: mineCss.ProgressAndTabs, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(VipProgress, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(MineMaterial, {})
          ]
        })
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: mineCss.linkItemContainer, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(LinkContainer, { className: mineCss.linkItemMarginTop, list: linkList1 }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(LinkContainer, { className: mineCss.linkItemMarginTop, list: linkList2 })
        ]
      })
      ]
    })
  });
};
const index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CopyText,
  UserName,
  default: Mine$1
}, Symbol.toStringTag, { value: "Module" }));
const svg_theme_fill_color$1a = "_svg_theme_fill_color_z34ls_3";
const pix$1 = "_pix_z34ls_55";
const title$7 = "_title_z34ls_125";
const img1$b = "_img1_z34ls_179";
const empty$3 = "_empty_z34ls_203";
const empty1$1 = "_empty1_z34ls_206";
const close$5 = "_close_z34ls_209";
const hidden$1 = "_hidden_z34ls_216";
const loading$3 = "_loading_z34ls_220";
const css$18 = {
  svg_theme_fill_color: svg_theme_fill_color$1a,
  pix: pix$1,
  title: title$7,
  img1: img1$b,
  empty: empty$3,
  empty1: empty1$1,
  close: close$5,
  hidden: hidden$1,
  loading: loading$3
};
const svg_theme_fill_color$19 = "_svg_theme_fill_color_1fcj0_3";
const selectContainer$2 = "_selectContainer_1fcj0_55";
const noBg$2 = "_noBg_1fcj0_157";
const small$3 = "_small_1fcj0_163";
const select$3 = "_select_1fcj0_55";
const content$6 = "_content_1fcj0_176";
const prefix$2 = "_prefix_1fcj0_231";
const suffix$2 = "_suffix_1fcj0_239";
const up$2 = "_up_1fcj0_316";
const down$2 = "_down_1fcj0_320";
const options$2 = "_options_1fcj0_324";
const option$2 = "_option_1fcj0_324";
const active$e = "_active_1fcj0_586";
const css$17 = {
  svg_theme_fill_color: svg_theme_fill_color$19,
  selectContainer: selectContainer$2,
  noBg: noBg$2,
  "default": "_default_1fcj0_160",
  small: small$3,
  select: select$3,
  content: content$6,
  prefix: prefix$2,
  suffix: suffix$2,
  up: up$2,
  down: down$2,
  options: options$2,
  option: option$2,
  active: active$e
};
const Select$1 = (props) => {
  const [value2, setValue] = reactExports.useState(props.value);
  const [showOptions, setShowOptions] = reactExports.useState(false);
  const formContext = reactExports.useContext(FormContext);
  const renderValue = reactExports.useMemo(() => {
    if (props.items === void 0)
      return "";
    const item2 = props.items.find((_) => _.value === value2);
    return item2 ? item2.label : "";
  }, [value2, props.items]);
  const size2 = reactExports.useMemo(() => {
    var _a;
    return (_a = formContext.size) != null ? _a : "default";
  }, [formContext.size]);
  reactExports.useEffect(() => {
    setValue(props.value);
  }, [props.value]);
  const clickHandler = (_value) => {
    setValue(_value);
    setShowOptions(false);
    props.onChange && props.onChange(_value);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass("globalSelect", css$17.selectContainer, css$17[size2], props.noBg ? css$17.noBg : ""), onClick: () => setShowOptions(!showOptions), children: [
      props.prefix && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$17.prefix, children: props.prefix }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$17.select, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$17.content, children: renderValue }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$17.suffix, children: /* @__PURE__ */ jsxRuntimeExports.jsx(DownIcon, { className: joinClass(showOptions ? css$17.up : css$17.down) }) }),
      showOptions && props.items && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: joinClass(css$17.options, css$17[size2]), children: props.items.map((_, index2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: joinClass(css$17.option, value2 === _.value ? css$17.active : ""),
              onClick: (e2) => {
                e2.stopPropagation();
                clickHandler(_.value);
              },
              children: _.renderLabel ? _.renderLabel(_) : _.label
            },
            index2
          );
        })
      })
    ]
  });
};
const svg_theme_fill_color$18 = "_svg_theme_fill_color_19kh3_3";
const error = "_error_19kh3_55";
const errIcon = "_errIcon_19kh3_61";
const small$2 = "_small_19kh3_67";
const defaultError = "_defaultError_19kh3_128";
const errText = "_errText_19kh3_134";
const formItem = "_formItem_19kh3_138";
const css$16 = {
  svg_theme_fill_color: svg_theme_fill_color$18,
  error,
  errIcon,
  "default": "_default_19kh3_64",
  small: small$2,
  defaultError,
  errText,
  formItem
};
const tipsImg$1 = {
  sk2: "/home/icons/warning_icon_sk2.webp",
  furlaBlue: "/home/icons/warning_icon_furlaBlue.webp"
};
const Item = ({ children, className, defaultShowError, ...rest }) => {
  const { theme } = useUserInfoStore();
  const formContext = reactExports.useContext(FormContext);
  const [errorShow, setErrorShow] = reactExports.useState(false);
  const error2 = reactExports.useMemo(() => {
    var _a;
    if (!formContext.errorFields)
      return "";
    if (!formContext.errorFields.length)
      return "";
    if (!rest.name)
      return "";
    return ((_a = formContext.errorFields.find((item2) => item2.name[0] === rest.name)) == null ? void 0 : _a.errors[0]) || "";
  }, [formContext.errorFields]);
  const size2 = reactExports.useMemo(() => {
    var _a;
    return (_a = formContext.size) != null ? _a : "default";
  }, [formContext.size]);
  const showError = reactExports.useMemo(() => {
    if (defaultShowError) {
      return true;
    }
    return errorShow;
  }, [defaultShowError, errorShow]);
  reactExports.useEffect(() => {
    setErrorShow(!!error2);
  }, [formContext.errorFields]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    WrapperField$1,
    {
      ...rest,
      onReset: () => {
        setErrorShow(false);
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$16.formItem, css$16[size2], !error2 ? className : ""), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(FormItemContext.Provider, {
          value: {
            errorShow
          }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(WrapperField$1, { ...rest, children })
        }),
          showError && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(
              css$16.error,
              defaultShowError ? css$16.defaultError : "",
              css$16[size2]
            ), children: [
              error2 && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$16.errIcon, src: tipsImg$1[theme] || "/home/icons/warning_icon.webp" }),
              error2 && /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                className: css$16.errText, children: [
                  error2,
                  " "
                ]
              })
            ]
          })
        ]
      })
    }
  );
};
const Form3 = ({ children, className, onFinishFailed, onFieldsChange, ...rest }) => {
  const [errorFields, setErrorFields] = reactExports.useState([]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    RcForm,
    {
      ...rest,
      onFinish: (values2) => {
        setErrorFields([]);
        rest.onFinish && rest.onFinish(values2);
      },
      onFinishFailed: ({ values: values2, errorFields: errorFields2, outOfDate }) => {
        setErrorFields(errorFields2);
        onFinishFailed && onFinishFailed({ values: values2, errorFields: errorFields2, outOfDate });
      },
      onFieldsChange: (changedFields, allFields) => {
        setErrorFields(
          allFields.filter((item2) => item2.errors.length > 0)
        );
        onFieldsChange && onFieldsChange(changedFields, allFields);
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(FormContext.Provider, {
        value: {
          errorFields,
          size: rest.size
        }, children
      })
    }
  );
};
Form3.useForm = RcForm.useForm;
Object.assign(Form3, {
  Field: Item
});
const svg_theme_fill_color$17 = "_svg_theme_fill_color_6ul76_3";
const loading$2 = "_loading_6ul76_55";
const laDark = "_laDark_6ul76_67";
const css$15 = {
  svg_theme_fill_color: svg_theme_fill_color$17,
  loading: loading$2,
  laDark,
  "ball-beat": "_ball-beat_6ul76_1"
};
const LoadingImg = (props = {}) => {
  const { className = "" } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: joinClass(css$15.loading, css$15.laDark), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {})
      ]
    })
  });
};
const Pix = ({ onClose, bankList }) => {
  const [form] = Form3.useForm();
  const [ty, setTy] = reactExports.useState("1");
  const { info: info2, getUserInfoByStore, theme } = useUserInfoStore();
  const [loading2, setLoading] = reactExports.useState(false);
  const [typeList, setTypeList] = reactExports.useState([]);
  const [isFetchPixTypeList, setIsFetchPixTypeList] = reactExports.useState(false);
  const [contentList, setContentList] = reactExports.useState(tyList.map((item2) => {
    return {
      label: item2.label + "-" + item2.tip,
      value: item2.value
    };
  }));
  const contentText = reactExports.useMemo(() => {
    switch (ty) {
      case "1":
        return {
          placeholder: trans("请输入邮箱地址"),
          rules: [
            {
              type: "email",
              message: trans("PIX邮箱格式不正确")
            }
          ]
        };
      case "2":
        return {
          placeholder: trans("请输入手机号"),
          rules: [
            {
              pattern: /^\d{8,11}$/,
              message: trans("手机号格式不正确")
            }
          ]
        };
      case "4":
        return {
          placeholder: trans("请输入CNPJ"),
          rules: []
        };
      default:
        return {
          placeholder: "",
          requiredError: "",
          formatError: "",
          regexp: /^.*$/
        };
    }
  }, [ty]);
  const cpfInputContent = reactExports.useMemo(() => {
    const obj = {
      disabled: false,
      value: "",
      bankMunber: ""
    };
    if (bankList.length === 0) {
      return obj;
    }
    const isExistTy3 = bankList.filter((item2) => item2.ty.toString() === "3");
    if (isExistTy3.length > 0) {
      let bank_card = isExistTy3[0].bank_card;
      obj.disabled = true;
      obj.value = bank_card;
      obj.bankMunber = isExistTy3[0].bank_card;
      return obj;
    } else {
      const item2 = bankList[0];
      let bank_card = item2.bank_card;
      obj.disabled = true;
      obj.value = bank_card;
      obj.bankMunber = item2.bank_card;
      return obj;
    }
  }, [bankList]);
  const submit = async (params) => {
    let paramsData = { ...params };
    setLoading(true);
    const [, error2] = await postMemberBankcardInsert(paramsData);
    setLoading(false);
    if (!error2) {
      Message$1.success(trans("添加成功"));
      getUserInfoByStore();
      onClose && onClose();
    }
  };
  const getPixTypeList = async () => {
    const [data, error2] = await getMemberBankcardPixTypeList();
    setIsFetchPixTypeList(true);
    if (!error2) {
      setTypeList(data);
    }
  };
  reactExports.useEffect(() => {
    getPixTypeList();
  }, []);
  reactExports.useEffect(() => {
    if (typeList.length) {
      const _list = tyList.map((item2) => {
        return {
          label: item2.label + "-" + item2.tip,
          value: item2.value
        };
      }).filter((item2) => {
        const _pix = typeList.find((type4) => "".concat(type4.ty) === "".concat(item2.value));
        return _pix ? _pix.enable : false;
      });
      setContentList(_list);
    }
  }, [typeList, bankList]);
  reactExports.useEffect(() => {
    var _a;
    if (contentList.length) {
      const value0 = (_a = contentList[0]) == null ? void 0 : _a.value;
      setTy(value0);
      form.setFieldsValue({
        ty: value0
      });
    }
  }, [contentList]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$18.pix, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      PopCloseIcon,
      {
        className: css$18.close,
        onClick: () => {
          onClose && onClose();
        }
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        onClick: (e2) => {
          e2.stopPropagation();
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$18.title, children: trans("添加PIX") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$18.empty1 }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: isFetchPixTypeList ? "" : css$18.hidden, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            Form3,
            {
              form,
              size: "small",
              initialValues: {
                ty,
                bank_card: cpfInputContent.value,
                realname: info2.realname,
                content: "",
                bank_number: cpfInputContent.bankMunber
              },
              onFinish: (values2) => {
                submit(values2);
              },
              onFinishFailed: ({ values: values2, errorFields, outOfDate, bank_number }) => {
                console.log("Failed:", values2, errorFields, outOfDate, bank_number);
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "realname",
                  rules: [{ required: true, message: trans("全名字段不能为空") }],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: "".concat(trans("输入您的真实姓名")),
                      disabled: !!info2.realname,
                      clearable: true,
                      noBg: true,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$18.img1 })
                    }
                  )
                }
              ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "ty",
                  rules: [{ required: true, message: trans("请选择类型") }],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Select$1,
                    {
                      items: contentList,
                      noBg: true,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: css$18.img1 }),
                      onChange: (value2) => {
                        setTy(value2);
                        if (value2 === "3") {
                          form.setFieldsValue({
                            bank_card: ""
                          });
                        } else {
                          form.setFieldsValue({
                            bank_card: cpfInputContent.value
                          });
                        }
                      }
                    }
                  )
                }
              ),
                ty !== "3" && /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Form3.Field,
                  {
                    name: "content",
                    rules: [
                      {
                        required: true,
                        message: trans("PIX 帐户字段不能为空")
                      },
                      ...contentText.rules
                    ],
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Input,
                      {
                        placeholder: trans("输入您的 PIX 帐户"),
                        clearable: true,
                        noBg: true,
                        prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$18.img1, src: "/home/icons/pix_1.webp" })
                      }
                    )
                  },
                  ty
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Form3.Field,
                  {
                    name: "bank_card",
                    rules: !cpfInputContent.disabled && [
                      { required: true, message: trans("CPF 字段不能为空") },
                      {
                        pattern: /^\d{11}$/,
                        message: trans("输入{{num}}位数字", { num: 11 })
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Input,
                      {
                        placeholder: trans("输入11位CPF号码"),
                        clearable: true,
                        noBg: true,
                        prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(CpfIcon, { className: css$18.img1 })
                      }
                    )
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$18.empty }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Button$1,
                    {
                      block: true,
                      loading: loading2,
                      onClick: () => {
                        form.submit();
                      },
                      children: trans("确认")
                    }
                  )
                })
              ]
            }
          )
        }),
          !isFetchPixTypeList && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$18.loading, children: /* @__PURE__ */ jsxRuntimeExports.jsx(LoadingImg, {}) })
        ]
      }
    )
    ]
  });
};
const svg_theme_fill_color$16 = "_svg_theme_fill_color_uu6jy_3";
const pix = "_pix_uu6jy_55";
const title$6 = "_title_uu6jy_125";
const img1$a = "_img1_uu6jy_179";
const empty$2 = "_empty_uu6jy_203";
const empty1 = "_empty1_uu6jy_206";
const close$4 = "_close_uu6jy_209";
const hidden = "_hidden_uu6jy_216";
const loading$1 = "_loading_uu6jy_220";
const bank_items = "_bank_items_uu6jy_227";
const bank_items_icon = "_bank_items_icon_uu6jy_231";
const css$14 = {
  svg_theme_fill_color: svg_theme_fill_color$16,
  pix,
  title: title$6,
  img1: img1$a,
  empty: empty$2,
  empty1,
  close: close$4,
  hidden,
  loading: loading$1,
  bank_items,
  bank_items_icon
};
const PHPay = ({ onClose, bankList }) => {
  const [form] = Form3.useForm();
  const [ty, setTy] = reactExports.useState("1");
  const { info: info2, getUserInfoByStore, theme } = useUserInfoStore();
  const [loading2, setLoading] = reactExports.useState(false);
  const [typeList, setTypeList] = reactExports.useState([]);
  const [isFetchPHTypeList, setIsFetchPHTypeList] = reactExports.useState(false);
  const [contentList, setContentList] = reactExports.useState(
    payTypePH.map((item2) => {
      return {
        label: item2.label,
        value: item2.value
      };
    })
  );
  const [bank_list, setBank_list] = reactExports.useState([]);
  const cpfInputContent = reactExports.useMemo(() => {
    const obj = {
      disabled: false,
      value: "",
      bankMunber: ""
    };
    return obj;
  }, [bankList]);
  const submit = async (params) => {
    let paramsData = { ...params, content: params.bank_card };
    setLoading(true);
    const [, error2] = await postMemberBankcardInsertPH(paramsData);
    setLoading(false);
    if (!error2) {
      Message$1.success(trans("添加成功"));
      getUserInfoByStore();
      onClose && onClose();
    }
  };
  const getPixTypeList = async () => {
    const [data, error2] = await getMemberBankcardPHTypeList();
    console.log("data :", data);
    setIsFetchPHTypeList(true);
    if (!error2) {
      const bankPay = data == null ? void 0 : data.find((item2) => {
        return +item2.ty === 10 && item2.enable;
      });
      if (bankPay) {
        const [bankList2, err] = await getMemberBankcardListPh();
        const newBankList = bankList2 == null ? void 0 : bankList2.map((bank) => {
          return {
            label: bank.bank_name,
            value: bank.id,
            renderLabel: () => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$14.bank_items, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$14.bank_items_icon, src: "/bank/".concat(bank.id, ".webp") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: bank.bank_name })
                ]
              });
            }
          };
        });
        setBank_list(newBankList);
      }
      setTypeList(data);
    }
  };
  reactExports.useEffect(() => {
    getPixTypeList();
  }, []);
  reactExports.useEffect(() => {
    if (typeList.length) {
      const _list = payTypePH.map((item2) => {
        return {
          label: item2.label,
          value: item2.value
        };
      }).filter((item2) => {
        const _card = typeList.find((type4) => "".concat(type4.ty) === "".concat(item2.value));
        return _card ? _card.enable : false;
      });
      setContentList(_list);
    }
  }, [typeList, bankList]);
  const getTyIcon = () => {
    switch (ty) {
      case "7":
        return /* @__PURE__ */ jsxRuntimeExports.jsx(GcashIcon, { className: css$14.img1 });
      case "8":
        return /* @__PURE__ */ jsxRuntimeExports.jsx(MayaIcon, { className: css$14.img1 });
      case "10":
        return /* @__PURE__ */ jsxRuntimeExports.jsx(MayaIcon, { className: css$14.img1 });
    }
  };
  const getCardRule = () => {
    if (+ty === 10) {
      return [
        { required: true, message: trans("请输入有效账号") },
        {
          pattern: /^\d{16}$/,
          message: trans("输入{{num}}位数字", { num: 16 })
        }
      ];
    } else {
      return [
        { required: true, message: trans("请输入有效账号") },
        {
          pattern: /^\d{11}$/,
          message: trans("输入{{num}}位数字", { num: 11 })
        }
      ];
    }
  };
  reactExports.useEffect(() => {
    var _a;
    if (contentList.length) {
      const value0 = (_a = contentList[0]) == null ? void 0 : _a.value;
      setTy(value0);
      form.setFieldsValue({
        ty: value0
      });
    }
  }, [contentList]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$14.pix, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      PopCloseIcon,
      {
        className: css$14.close,
        onClick: () => {
          onClose && onClose();
        }
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        onClick: (e2) => {
          e2.stopPropagation();
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$14.title, children: trans("加上") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$14.empty1 }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: isFetchPHTypeList ? "" : css$14.hidden, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            Form3,
            {
              form,
              size: "small",
              initialValues: {
                ty,
                bank_card: cpfInputContent.value,
                realname: info2.realname,
                bank_ty: "1"
              },
              onFinish: (values2) => {
                submit(values2);
              },
              onFinishFailed: ({ values: values2, errorFields, outOfDate, bank_number }) => {
                console.log("Failed:", values2, errorFields, outOfDate, bank_number);
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, { name: "realname", rules: [{ required: true, message: trans("全名字段不能为空") }], children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "".concat(trans("输入您的真实姓名")), disabled: !!info2.realname, clearable: true, noBg: true, prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$14.img1 }) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                name: "ty", rules: [{ required: true, message: trans("请选择类型") }], children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Select$1,
                  {
                    items: contentList,
                    noBg: true,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(CardIcon, { className: css$14.img1 }),
                    onChange: (value2) => {
                      const oldValue = ty;
                      setTy(value2);
                      if (+value2 === 10) {
                        form.setFieldsValue({
                          bank_id: bank_list[0].value,
                          bank_card: ""
                        });
                      } else {
                        form.setFieldsValue({
                          bank_id: ""
                        });
                        if (+oldValue === 10) {
                          form.setFieldsValue({
                            bank_card: ""
                          });
                        }
                      }
                    }
                  }
                )
              }),
                ty === "10" && /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, { name: "bank_id", rules: [{ required: true, message: trans("请选择类型") }], children: /* @__PURE__ */ jsxRuntimeExports.jsx(Select$1, { items: bank_list, noBg: true, prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(CardIcon, { className: css$14.img1 }) }) }),
                (() => {
                  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, { name: "bank_card", rules: getCardRule(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: trans("请输入账号"), clearable: true, noBg: true, prefix: getTyIcon() }) });
                })(),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$14.empty }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Button$1,
                    {
                      block: true,
                      loading: loading2,
                      onClick: () => {
                        form.submit();
                      },
                      children: trans("确认")
                    }
                  )
                })
              ]
            }
          )
        }),
          !isFetchPHTypeList && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$14.loading, children: /* @__PURE__ */ jsxRuntimeExports.jsx(LoadingImg, {}) })
        ]
      }
    )
    ]
  });
};
const svg_theme_fill_color$15 = "_svg_theme_fill_color_14qwr_3";
const tableContainer = "_tableContainer_14qwr_55";
const textCenter = "_textCenter_14qwr_61";
const cell = "_cell_14qwr_309";
const tip = "_tip_14qwr_380";
const border = "_border_14qwr_453";
const empty$1 = "_empty_14qwr_788";
const emptyText = "_emptyText_14qwr_808";
const css$13 = {
  svg_theme_fill_color: svg_theme_fill_color$15,
  tableContainer,
  textCenter,
  cell,
  tip,
  border,
  empty: empty$1,
  emptyText
};
const emptyImg$1 = {
  black: "/home/icons/table_empty.webp",
  blue: "/home/icons/table_empty.webp",
  whiteGreen: "/home/icons/table_empty_white_green.webp",
  whiteRed: "/home/icons/table_empty_white_red.webp",
  lancomePeach: "/home/icons/table_empty_lancomePeach.webp",
  hermesOrange: "/home/icons/table_empty_hermesOrange.webp",
  whiteBlue: "/home/icons/table_empty_white_red.webp",
  sk2: "/home/icons/table_empty_sk2.webp",
  whiteYellow: "/home/icons/table_empty_white_red.webp",
  whiteOrange: "/home/icons/table_empty_white_red.webp",
  furlaBlue: "/home/icons/table_empty_furlaBlue.webp",
  whitePink: "/home/icons/table_empty_whitePink.webp",
  bvGreen: "/home/icons/table_empty_bvGreen.webp",
  whiteBrown: "/home/icons/table_empty_whiteBrwon.webp",
  AnnaSuiPurple: "/home/icons/table_empty_AnnaSuiPurple.webp",
  whitePurple: "/home/icons/table_empty_whiteBrwon.webp",
  whiteDarkGreen: "/home/icons/table_empty_whiteBrwon.webp",
  greenGold: "/home/icons/table_empty_greenGold.webp"
};
const tovwJs = (num2) => {
  if (num2 === void 0)
    return;
  if (typeof num2 === "string") {
    num2 = num2.replace("px", "");
  }
  if (isNaN(Number(num2))) {
    return num2;
  }
  return "".concat(minPxChip() * num2, "rem");
};
const Table = reactExports.memo((props) => {
  const { theme } = useUserInfoStore();
  const { columns, dataSource } = props;
  const renderTd = (text2, index2, columnsIndex, column2) => {
    if (column2.render && typeof column2.render === "function") {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: column2.render(text2, dataSource[index2]) }, columnsIndex);
    }
    return /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: text2 }, columnsIndex);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: dataSource.length === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$13.empty, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: emptyImg$1[theme] || "/home/icons/table_empty.webp" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$13.emptyText, children: trans("没有记录") })
      ]
    }) : /* @__PURE__ */ jsxRuntimeExports.jsx("section", {
      className: joinClass(css$13.tableContainer, css$13.textCenter), children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "table",
        {
          className: joinClass(css$13.table, css$13.border),
          cellSpacing: "0",
          cellPadding: "0",
          children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("colgroup", {
            children: columns.map((item2, index2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: tovwJs(item2.width) } }, index2);
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("thead", {
            children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", {
              children: columns.map((item2, index2) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsx("th", {
                  children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$13.cell, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        style: {
                          opacity: item2.opacity,
                          fontWeight: item2.fontWeight
                        },
                        dangerouslySetInnerHTML: {
                          __html: item2.title
                        }
                      }
                    ),
                      item2.tip && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$13.tip, children: item2.tip })
                    ]
                  })
                }, index2);
              })
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", {
            children: dataSource.map((item2, index2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("tr", {
                children: columns.map((column2, columnsIndex) => {
                  return renderTd(
                    item2[column2.dataIndex],
                    index2,
                    columnsIndex,
                    column2
                  );
                })
              }, index2);
            })
          })
          ]
        }
      )
    })
  });
});
const bgMaps$3 = {
  black: "/home/withdraw_bg_black.webp",
  blue: "/home/withdraw_bg_blue.webp",
  whiteGreen: "/home/withdraw_bg_white_green.webp",
  purple: "/home/withdraw_bg_purple.webp",
  whiteRed: "/home/centarl_bg_white_red.webp",
  oilyGreen: "/home/centarl_bg_oilyGreen.webp",
  versaceYellow: "/home/centarl_bg.webp",
  lancomePeach: "/home/centarl_bg_lancomePeach.webp",
  hermesOrange: "/home/centarl_bg_hermesOrange.webp",
  whiteBlue: "/home/centarl_bg_whiteBlue.webp",
  sk2: "/home/centarl_bg_sk2.webp",
  whiteYellow: "/home/centarl_bg_whiteYellow.webp",
  lightBrown: "/home/centarl_bg_lightBrown.webp",
  whiteOrange: "/home/centarl_bg_whiteOrange.webp",
  furlaBlue: "/home/centarl_bg_furlaBlue2.webp",
  whitePink: "/home/centarl_bg.webp",
  bvGreen: "/home/centarl_bg_bvGreens.webp",
  whiteBrown: "/home/centarl_bg_whiteBrown2.webp",
  AnnaSuiPurple: "/home/centarl_bg_AnnaSuiPurple2.webp",
  whitePurple: "/home/centarl_bg_whitePurple2.webp",
  burgundyRed: "/home/centarl_bg_burgundyRed.webp",
  whiteDarkGreen: "/home/centarl_bg_whiteDarkGreen.webp"
};
const centerWallentMaps = {
  black: "/home/icons/center_wallent_black.webp",
  blue: "/home/icons/center_wallent_blue.webp",
  whiteGreen: "/home/icons/center_wallent_white_green.webp",
  purple: "/home/icons/center_wallent_purple.webp",
  whiteRed: "/home/icons/center_wallent_white_red.webp",
  oilyGreen: "/home/icons/center_wallent_oilyGreen.webp",
  versaceYellow: "/home/icons/center_wallent_versace_yellow.webp",
  lancomePeach: "/home/icons/center_wallent_lancome_peach.webp",
  hermesOrange: "/home/icons/center_wallent_hermes_orange.webp",
  whiteBlue: "/home/icons/center_wallent_whiteBlue.webp",
  sk2: "/home/icons/center_wallent_sk2.webp",
  whiteYellow: "/home/icons/center_wallent_whiteYellow.webp",
  lightBrown: "/home/icons/centarl_wallent_lightBrown.webp",
  whiteOrange: "/home/icons/centarl_wallent_whiteOrange.webp",
  furlaBlue: "/home/icons/center_wallent_furlaBlue.webp",
  whitePink: "/home/icons/center_wallent_whitePink.webp",
  bvGreen: "/home/icons/center_wallent_bvGreen.webp",
  whiteBrown: "/home/icons/center_wallent_whiteBrown.webp",
  AnnaSuiPurple: "/home/icons/center_wallent_AnnaSuiPurple.webp",
  whitePurple: "/home/icons/center_wallent_whitePurple.webp",
  burgundyRed: "/home/icons/center_wallent_burgundyRed.webp",
  whiteDarkGreen: "/home/icons/center_wallent_whiteDarkGreen.webp"
};
const tipsImg = {
  sk2: "/home/icons/warning_icon_sk2.webp",
  furlaBlue: "/home/icons/warning_icon_furlaBlue.webp"
};
const Header = () => {
  const { info: info2, theme } = useUserInfoStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(css$1d.header, mineCss.flexItemCenter), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Image,
      {
        className: css$1d.img,
        src: centerWallentMaps[theme] || "/home/icons/center_wallent.webp"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1d.name, children: trans("中心钱包") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
      className: joinClass(css$1d.coin), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$1d.img, src: getCountryFlag(true) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customToFixed(info2 && info2.balance) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Image,
      {
        className: css$1d.imgBg,
        src: bgMaps$3[theme] || "/home/withdraw_bg.webp"
      }
    )
    ]
  });
};
const AccountItem = ({
  rowLength = 2,
  onChange,
  lengthChange,
  addPixHandle,
  typeList,
  canAddBankCard = 4
}) => {
  useUserInfoStore();
  const [checkPsdLoading, setCheckPsdLoading] = reactExports.useState(false);
  const [defaultValue, setDefaultValue] = reactExports.useState("");
  const [verifyPayPwdShow, setVerifyPayPwdShow] = reactExports.useState(false);
  const [payPwd, setPayPwd] = reactExports.useState("");
  const [isVerify, setIsVerify] = reactExports.useState(false);
  const showState = useReactive({
    addPixShow: false,
    addPHPayShow: false
  });
  const { data, loading: loading2, error: error2, runAsync } = useRequest(getMemberBankcardList, {
    onSuccess(res) {
      var _a, _b;
      const d0 = (res == null ? void 0 : res[0]) || [];
      setDefaultValue((_a = d0[0]) == null ? void 0 : _a.id);
      if ((_b = d0[0]) == null ? void 0 : _b.id) {
        onChange && onChange(d0[0].id, bankList.length);
      }
    }
  });
  const bankList = reactExports.useMemo(() => {
    if (data && data[0]) {
      const d0 = data[0].sort((a, b2) => {
        return new Date(b2.created_at) - new Date(a.created_at);
      });
      const arr = [];
      const PayTy = {
        "BR": [1, 2, 3, 4],
        "PH": [7, 8, 10]
        //7 gcash 8 maya 10 菲律宾银行卡
      };
      const filterPayTy = PayTy["BR"];
      d0.forEach((item2, index2) => {
        if (typeList.length) {
          const _pItem = typeList.find((i) => +i.ty === item2.ty);
          console.log("_pItem :", _pItem);
          const _pItemNum = (_pItem == null ? void 0 : _pItem.num) || 0;
          if (filterPayTy.includes(+item2.ty) && (_pItem == null ? void 0 : _pItem.enable)) {
            const tyListLength = arr.filter((i) => i.ty === item2.ty).length;
            if (tyListLength < _pItemNum) {
              arr.push(item2);
            }
          }
        } else {
          if (filterPayTy.includes(+item2.ty)) {
            arr.push(item2);
          }
        }
      });
      return arr.map((item2) => {
        const o = getTyLabelOrTip(item2.ty);
        return {
          name: o.label,
          tip: o.tip,
          img: o.img,
          num: item2.content,
          ico: "/home/icons/withdraw.webp",
          value: item2.id || "-",
          ty: item2.ty,
          bank_card: item2.bank_card
        };
      });
    }
    return [];
  }, [data, typeList]);
  console.log("bankList :", bankList);
  const verifyPwdHandle = async () => {
    if (!payPwd) {
      setIsVerify(true);
      return;
    }
    if (payPwd.length !== 6) {
      return;
    }
    setCheckPsdLoading(true);
    const [res, error22] = await postMemberWpwCheck({
      password: payPwd
    });
    setCheckPsdLoading(false);
    if (error22) {
      return;
    }
    setVerifyPayPwdShow(false);
    switch ("BR") {
      case "BR":
        showState.addPixShow = true;
        break;
      case "PH":
        showState.addPHPayShow = true;
        break;
    }
  };
  reactExports.useEffect(() => {
    lengthChange && lengthChange(bankList.length);
  }, [bankList]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      Radio.Group,
      {
        defaultValue,
        rowLength: bankList.length ? rowLength : 1,
        onChange: (value2) => {
          onChange && onChange(value2);
        },
        children: [
          bankList.map((item2) => {
            return /* @__PURE__ */ jsxRuntimeExports.jsx(Radio, {
              value: item2.value, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$1d.withItem, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Image,
                  {
                    className: css$1d.bankIco,
                    src: item2.img
                  }
                ),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.right, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$1d.title, children: [
                      item2.name,
                      item2.tip && /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                        children: [
                          "（",
                          item2.tip,
                          "）"
                        ]
                      })
                    ]
                  }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                    className: css$1d.phone, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      CopyText,
                      {
                        disableCopy: true,
                        encryption: true,
                        value: item2.num || item2.bank_card
                      }
                    )
                  })
                  ]
                })
                ]
              })
            }, item2.value);
          }),
          bankList.length < canAddBankCard && /* @__PURE__ */ jsxRuntimeExports.jsx(
            Radio,
            {
              value: "toLink",
              onClick: () => {
                if (addPixHandle) {
                  addPixHandle();
                }
                {
                  setVerifyPayPwdShow(true);
                }
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$1d.accountContainer, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(PixIcon, { className: css$1d.addAccount }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$1d.addText, children: trans("添加PIX") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightInMineIcon, { className: css$1d.toLink })
                ]
              })
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
      isOpen: showState.addPixShow, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        Pix,
        {
          bankList,
          onClose: () => {
            showState.addPixShow = false;
            runAsync();
          }
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
      isOpen: showState.addPHPayShow, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        PHPay,
        {
          bankList,
          onClose: () => {
            showState.addPHPayShow = false;
            runAsync();
          }
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: verifyPayPwdShow,
        onClose: (e2) => e2 && e2.stopPropagation(),
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1d.payPsdContainer, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            PopCloseIcon,
            {
              className: css$1d.close,
              onClick: () => {
                setVerifyPayPwdShow(false);
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$1d.title, children: trans("输入密码") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            PasswordInput,
            {
              title: trans("确认密码"),
              inputWidth: true,
              isVerify,
              onChange: (_value) => {
                setPayPwd(_value);
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$1d.tip, children: trans("为了您的账户安全，请输入您的提现密码") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Button$1, { block: true, onClick: verifyPwdHandle, loading: checkPsdLoading, children: trans("确认") })
          ]
        })
      }
    )
    ]
  });
};
const WithdrawItem = (props) => {
  const { minAmount, maxAmount } = props;
  const [amount2, setAmount] = reactExports.useState("");
  const [pixId, setPixId] = reactExports.useState("");
  const [payPwd, setPayPwd] = reactExports.useState("");
  const { info: info2, theme } = useUserInfoStore();
  const payPwdRef = reactExports.useRef();
  const [fee, setFee] = reactExports.useState(0);
  const [rate, setRate] = reactExports.useState("");
  const [feeConfig, setFeeConfig] = reactExports.useState([]);
  const [maxDeposit, setMaxDeposit] = reactExports.useState(0);
  const [allDeposit, setAllDeposit] = reactExports.useState(0);
  const amountError = reactExports.useMemo(() => {
    if (info2 && amount2) {
      if (+amount2 > +info2.balance) {
        return trans("提现金额不能大于可用余额");
      }
      if (+amount2 < +minAmount) {
        return "".concat(trans("提现金额不能小于"), " ").concat(minAmount);
      }
      if (+amount2 > +maxAmount) {
        return "".concat(trans("提现金额不能大于"), " ").concat(maxAmount);
      }
      if (amount2.indexOf(".") !== -1) {
        return trans("提现金额必须是整数");
      }
    }
    return "";
  }, [amount2, minAmount, maxAmount, info2]);
  const isWithdraw = reactExports.useMemo(() => {
    return allDeposit >= maxDeposit;
  }, [allDeposit, maxDeposit]);
  const submitIsDisabled = reactExports.useMemo(() => {
    if (!info2) {
      return true;
    }
    if (!pixId) {
      return true;
    }
    if (!amount2) {
      return true;
    }
    if (payPwd.length !== 6) {
      return true;
    }
    if (+amount2 > info2.balance) {
      return true;
    }
    if (+amount2 < minAmount || +amount2 > maxAmount) {
      return true;
    }
    if (amount2.indexOf(".") !== -1) {
      return true;
    }
    if (!isWithdraw) {
      return true;
    }
    return false;
  }, [amount2, pixId, payPwd, isWithdraw]);
  const submit = async () => {
    const params = {
      amount: amount2,
      bank_id: pixId,
      password: payPwd
    };
    const [res, error2] = await postFinanceWithdraw(params);
    if (!error2) {
      const data = JSON.parse(res);
      if (typeof data == "object") {
        Message$1.error(
          trans("error_code.".concat(data.code), {
            amount: "".concat(getMoneyUnit(true), "{customToFixed(data.needDeposit)}")
          })
        );
      } else {
        Message$1.success(trans("提交成功，等待审核"));
        setAmount("");
        payPwdRef.current.clear();
        props.onSuccess && props.onSuccess();
      }
    }
  };

  const getFee = async () => {
    const [res, error2] = await getFinanceWithdrawFee();
    if (error2 || !res)
      return;
    setFeeConfig(res);
  };
  const setAll = () => {
    if (info2) {
      if (info2.balance > maxAmount) {
        setAmount(maxAmount);
      } else {
        setAmount(info2.balance);
      }
    }
  };
  const getDepositAmount = async () => {
    const [res, error2] = await memberWebsetList();
    const [res2, error22] = await getMemberShortInfo();
    if (error2 || error22)
      return;
    setMaxDeposit(+res.s_wdraw_fst_deptamount || 0);
    setAllDeposit(+res2.total_dept_amount || 0);
  };
  reactExports.useEffect(() => {
    if (amount2 && feeConfig.length) {
      const resMaxAmount = feeConfig[feeConfig.length - 1].fmax;
      let _fee = feeConfig.find((item2) => {
        return +amount2 >= +item2.fmin && +amount2 < +item2.fmax;
      });
      if (amount2 >= resMaxAmount) {
        _fee = feeConfig[feeConfig.length - 1];
      }
      if (_fee) {
        const flags = _fee.flags;
        if (flags === 1) {
          setRate("");
          setFee(Math.ceil(_fee.amount));
        } else if (flags === 2) {
          setRate("".concat(_fee.amount, "%"));
          setFee(Math.ceil(+amount2 * _fee.amount / 100));
        }
      } else {
        setFee(0);
      }
    }
    if (!amount2) {
      setFee(0);
    }
  }, [amount2]);
  reactExports.useEffect(() => {
    getFee();
    getDepositAmount();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      AccountItem,
      {
        canAddBankCard: props.canAddBankCard || 4,
        typeList: props.typeList,
        onChange: (_pixId) => {
          setPixId(_pixId);
        },
        addPixHandle: () => {
          props.setBankListTab && props.setBankListTab();
        }
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1d.rsContainer, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Input,
        {
          value: amount2,
          type: "number",
          clearable: true,
          className: css$1d.withdrawInput,
          placeholder: "".concat(trans("最低"), " ").concat(minAmount, "，").concat(trans(
            "最大"
          ), " ").concat(maxAmount),
          onChange: (_value) => {
            setAmount(_value);
          },
          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.before, children: getMoneyUnit(true) }),
          suffix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.suffix, onClick: setAll, children: trans("全部") })
        }
      ),
        amountError && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$1d.error, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
            Image,
            {
              src: tipsImg[theme] || "/home/icons/warning_icon.webp",
              className: css$1d.img
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: amountError })
          ]
        })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
      !!Number(fee) && amount2 && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$1d.withdrawFee, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          children: [
            trans("手续费"),
            "=",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: css$1d.det1, children: [
                rate ? "".concat(rate, " / ") : "",
                customToFixed(fee),
                " ",
                getMoneyUnit(true)
              ]
            })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          children: [
            trans("到账金额"),
            "=",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: css$1d.det2, children: [
                customToFixed(amount2 ? Math.ceil(+amount2 - +fee) : 0),
                " ",
                getMoneyUnit(true)
              ]
            })
          ]
        })
        ]
      }),
      !isWithdraw && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$1d.withdrawTips, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Image,
            {
              src: tipsImg[theme] || "/home/icons/warning_icon.webp",
              className: css$1d.redTips
            }
          )
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$1d.values, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            children: [
              trans("温馨提示：会员首次提款需累计存款"),
              " ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  getMoneyUnit(true),
                  " ",
                  maxDeposit
                ]
              }),
              " ",
              trans("或者更多")
            ]
          })
        })
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
        PasswordInput,
        {
          ref: payPwdRef,
          title: trans("确认密码"),
          onChange: (_value) => {
            setPayPwd(_value);
          }
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$1d.btnContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          Button$1,
          {
            className: css$1d.btn,
            disabled: submitIsDisabled,
            onClick: submit,
            block: true,
            children: trans("确认")
          }
        )
      })
    ]
  });
};
const WithdrawRecordItem = ({ item: item2 }) => {
  const [dataSource, setDataSource] = reactExports.useState([]);
  const navigation = useNavigate();
  const [page, setPage] = reactExports.useState(1);
  const [t2, setT] = reactExports.useState(0);
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  useUserInfoStore();
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const params = reactExports.useMemo(() => {
    return {
      flag: "272",
      // 272 提现
      page_size: 10,
      start_time,
      end_time,
      channel_id: 0,
      ty
    };
  }, [ty, start_time, end_time]);
  const getList = async () => {
    if (isLoading)
      return;
    if (page === 1) {
      setT(0);
    }
    setIsLoading(true);
    const [res, error2] = await getMemberRecordTrade(
      { ...params, page },
      { useLoading: true }
    );
    if (error2)
      return;
    if (page === 1) {
      setT(res.t);
    }
    setIsLoading(false);
    const _data = res.d || [];
    if (_data.length) {
      if (page > 1) {
        setDataSource([...dataSource, ..._data]);
      } else {
        setDataSource(_data);
      }
    } else {
      if (page === 1) {
        setDataSource([]);
      }
    }
  };
  const reloadData = () => {
    if (page !== 1) {
      setDataSource([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      reloadData();
    }
  }, [params]);
  const limitClicks = () => {
    if (isLoading)
      return;
    setPage(page + 1);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.pickerContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Table,
      {
        columns: [
          {
            title: trans("时间"),
            dataIndex: "created_at",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customFormatTimer(text2) });
            }
          },
          {
            title: trans("提款方式"),
            dataIndex: "channel_name",
            width: 135
          },
          { title: trans("订单号"), dataIndex: "bill_no", width: 135 },
          {
            title: trans("提款金额"),
            width: 135,
            dataIndex: "amount",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "section",
                {
                  className: joinClass(
                    +text2 < 0 || item22.state == 372 || item22.state == 375 ? css$1d.negative : css$1d.positive
                  ),
                  children: [
                    +text2 > 0 ? "" : "-",
                    " ",
                    customToFixed(text2)
                  ]
                }
              );
            }
          },
          {
            title: trans("操作"),
            dataIndex: "id",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "section",
                {
                  className: css$1d.opera,
                  onClick: () => navigation("/withdraw-detail?id=".concat(text2)),
                  children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("详情") }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(DetailInMineIcon, { className: css$1d.detail })
                  ]
                }
              );
            }
          }
        ],
        dataSource
      }
    ),
      t2 > dataSource.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            limitClicks();
          }
        }
      )
    ]
  });
};
const Withdraw = () => {
  const { getUserBalanceByStore } = useUserInfoStore();
  const [bankListLength, setBankListLength] = reactExports.useState(0);
  const [active2, setActive] = reactExports.useState("");
  const [isWithdrawIng, setIsWithdrawIng] = reactExports.useState(null);
  const [minAmount, setMinAmount] = reactExports.useState(0);
  const [maxAmount, setMaxAmount] = reactExports.useState(0);
  const [withdrawIngDetail, setWithdrawIngDetail] = reactExports.useState({});
  const [typeList, setTypeList] = reactExports.useState([]);
  const [items2, setItems] = reactExports.useState([
    { label: trans("提现"), value: "1" },
    { label: trans("提现记录"), value: "2" },
    { label: trans("管理账户"), value: "3" }
  ]);
  const search2 = window.location.search;
  const params = new URLSearchParams(search2);
  const to2 = params.get("tag");
  const canAddBankCard = reactExports.useMemo(() => {
    if (typeList.length === 0) {
      return 4;
    }
    return typeList.filter((item2) => item2.enable).reduce((prev2, cur) => {
      return prev2 + +cur.num;
    }, 0);
  }, [typeList]);
  const checkIsWithdrawProgress = async () => {
    const [res, error2] = await getFinanceWithdrawProcessing();
    if (!error2 && res) {
      setMinAmount(res.min_amount || 0);
      setMaxAmount(res.max_amount);
      setIsWithdrawIng(res.state !== "");
      setWithdrawIngDetail(res);
    }
  };
  function stateToText(state2) {
    switch (state2) {
      case "374":
        return trans("提款成功");
      case "375":
        return trans("提现失败");
      default:
        return trans("拉出来");
    }
  }
  function mqttCheck() {
    console.log("收到通知");
    checkIsWithdrawProgress();
  }
  const getPayTypeList = async () => {
    let api = getMemberBankcardPixTypeList;
    const [data, error2] = await api();
    if (!error2 && Array.isArray(data)) {
      setTypeList(data);
    }
  };
  reactExports.useEffect(() => {
    getUserBalanceByStore();
    if (to2) {
      setActive(to2.toString());
    } else {
      setActive("1");
    }
  }, []);
  reactExports.useEffect(() => {
    getPayTypeList();
    checkIsWithdrawProgress();
    events.on("mqttQuickTips", mqttCheck);
    return () => {
      events.off("mqttQuickTips", mqttCheck);
    };
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$1d.content, children: active2 && /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Tab,
        {
          items: items2,
          active: active2,
          ...items2,
          onChange: (_active) => {
            setActive(_active);
          },
          children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Tab.Pane, {
            value: "1", children: isWithdrawIng !== null && isWithdrawIng ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$1d.orderTitle, children: trans("提款详情") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$1d.withdrawOrder, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.title, children: [
                    trans("您的提款请求正在处理中"),
                    " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customToFixed(withdrawIngDetail.ramount) })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.listItem, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.name, children: trans("交易类型") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.value, children: trans("提现") })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.listItem, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.name, children: trans("状态") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$1d.value, css$1d.special), children: stateToText(withdrawIngDetail.state) })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.listItem, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.name, children: trans("时间") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.value, children: customFormatTimer(withdrawIngDetail.created_at) })
                  ]
                }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$1d.listItem, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.name, children: trans("订单号") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.value, children: withdrawIngDetail.id })
                  ]
                })
                ]
              })
              ]
            }) : /* @__PURE__ */ jsxRuntimeExports.jsx(
              WithdrawItem,
              {
                minAmount,
                maxAmount,
                canAddBankCard,
                typeList,
                onSuccess: checkIsWithdrawProgress,
                setBankListTab: () => {
                  setActive("3");
                }
              }
            )
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Tab.Pane, { value: "2", children: /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawRecordItem, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(Tab.Pane, {
            value: "3", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$1d.bindNum, children: [
                trans("Collection Account"),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "（" }),
                bankListLength,
              /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  children: [
                    "/",
                    canAddBankCard,
                    "）"
                  ]
                })
              ]
            }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1d.lineHeight }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              AccountItem,
              {
                canAddBankCard,
                rowLength: 1,
                typeList,
                lengthChange: (_length) => {
                  setBankListLength(_length);
                }
              }
            )
            ]
          })
          ]
        }
      )
    })
    ]
  });
};
const svg_theme_fill_color$14 = "_svg_theme_fill_color_ii0w7_3";
const C_h5_tabs = "_C_h5_tabs_ii0w7_55";
const C_h5_round_tabs$1 = "_C_h5_round_tabs_ii0w7_55";
const css$12 = {
  svg_theme_fill_color: svg_theme_fill_color$14,
  C_h5_tabs,
  C_h5_round_tabs: C_h5_round_tabs$1
};
const Tabs$1 = ({
  options: options2 = [],
  width = "",
  gap = 20,
  value: value2,
  onClick,
  round: round2 = false
}) => {
  const parentEl = reactExports.useRef();
  const [clicked, setClicked] = reactExports.useState(0);
  function isContain(dom) {
    const elGap = minPxChip() * gap * 2;
    parentEl.current.clientHeight;
    const totalWidth = parentEl.current.clientWidth;
    if (parentEl.current.scrollWidth <= parentEl.current.clientWidth) {
      return;
    }
    const { left: parentLeft } = parentEl.current.getBoundingClientRect();
    const { right: childRight, left: childLeft } = dom.getBoundingClientRect();
    const left2 = childLeft - parentLeft;
    const right2 = childRight - parentLeft;
    if (left2 >= 0 && right2 + elGap >= totalWidth) {
      parentEl.current.scrollTo({
        top: 0,
        left: dom.offsetLeft - elGap / 2,
        behavior: "smooth"
      });
    }
    if (left2 < elGap) {
      parentEl.current.scrollTo({
        top: 0,
        left: dom.offsetLeft - totalWidth + dom.clientWidth,
        behavior: "smooth"
      });
    }
  }
  reactExports.useEffect(() => {
    const curTabEl = document.getElementById("tab_".concat(value2));
    if (curTabEl)
      isContain(curTabEl);
  }, [value2, clicked]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    style: { display: "flex" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: round2 ? css$12.C_h5_round_tabs : css$12.C_h5_tabs, ref: parentEl, children: options2.map((item2, index2) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: "tab".concat(value2 === item2.value ? "_active" : "", " button"),
            id: "tab_".concat(item2.value),
            style: {
              width,
              marginRight: index2 === options2.length - 1 ? 0 : toPXBack(gap)
            },
            onClick: (e2) => {
              e2.stopPropagation();
              if (item2.value === value2) {
                setClicked(clicked + 1);
              }
              onClick(item2.value);
            },
            children: item2.label
          },
          index2
        );
      })
    })
  });
};
const svg_theme_fill_color$13 = "_svg_theme_fill_color_fa08q_3";
const agent$1 = "_agent_fa08q_55";
const head$1 = "_head_fa08q_59";
const body$1 = "_body_fa08q_160";
const css$11 = {
  svg_theme_fill_color: svg_theme_fill_color$13,
  agent: agent$1,
  head: head$1,
  body: body$1
};
const svg_theme_fill_color$12 = "_svg_theme_fill_color_1tqh9_3";
const member = "_member_1tqh9_55";
const moreBtn$1 = "_moreBtn_1tqh9_73";
const totalBottom$5 = "_totalBottom_1tqh9_76";
const openB$5 = "_openB_1tqh9_85";
const bottomYj$5 = "_bottomYj_1tqh9_88";
const bottomIcon$5 = "_bottomIcon_1tqh9_92";
const bottomTxt$5 = "_bottomTxt_1tqh9_266";
const bottomItem$5 = "_bottomItem_1tqh9_385";
const tNum$5 = "_tNum_1tqh9_393";
const agent_page_form = "_agent_page_form_1tqh9_430";
const css$10 = {
  svg_theme_fill_color: svg_theme_fill_color$12,
  member,
  moreBtn: moreBtn$1,
  totalBottom: totalBottom$5,
  openB: openB$5,
  bottomYj: bottomYj$5,
  bottomIcon: bottomIcon$5,
  bottomTxt: bottomTxt$5,
  bottomItem: bottomItem$5,
  tNum: tNum$5,
  agent_page_form
};
const svg_theme_fill_color$11 = "_svg_theme_fill_color_oy7qo_3";
const labelInput = "_labelInput_oy7qo_55";
const labelName = "_labelName_oy7qo_60";
const custom_input = "_custom_input_oy7qo_98";
const clearn_icon = "_clearn_icon_oy7qo_191";
const search_icon = "_search_icon_oy7qo_214";
const css$$ = {
  svg_theme_fill_color: svg_theme_fill_color$11,
  labelInput,
  labelName,
  custom_input,
  clearn_icon,
  search_icon
};
let timeout = null;
const LabelInput = ({ value: value2, onChange = (val) => {
}, onBlur = () => {
}, onSearch = () => {
}, label: label2 = "", className = "", ...arg }) => {
  const inputRef = reactExports.useRef();
  const [iptValue, setIptValue] = reactExports.useState(value2);
  const handleClearn = (e2) => {
    setIptValue("");
    onChange("");
    inputRef.current.focus();
  };
  const onChangeHandle = (e2) => {
    setIptValue(e2.target.value);
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      onChange(e2.target.value);
    }, 600);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: "".concat(css$$.labelInput, " ").concat(className, " labelInput"), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$$.labelName, children: label2 }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "".concat(css$$.custom_input), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { onChange: onChangeHandle, ref: inputRef, onBlur: (e2) => onBlur(e2.target.value), value: iptValue, ...arg }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { visibility: iptValue ? "visible" : "hidden" }, className: css$$.clearn_icon, onClick: handleClearn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInMineIcon, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$$.search_icon, onClick: () => {
          onSearch(iptValue);
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(SearchToolIcon, {})
      })
      ]
    })
    ]
  });
};
const svg_theme_fill_color$10 = "_svg_theme_fill_color_znpym_3";
const agentTableAll$1 = "_agentTableAll_znpym_55";
const agentMemberTab$1 = "_agentMemberTab_znpym_55";
const agentVip$1 = "_agentVip_znpym_223";
const tabItem$1 = "_tabItem_znpym_267";
const copyBtn$1 = "_copyBtn_znpym_275";
const tabNum$1 = "_tabNum_znpym_383";
const tabNumSec$1 = "_tabNumSec_znpym_419";
const mem_nomore$1 = "_mem_nomore_znpym_489";
const mem_disabled$1 = "_mem_disabled_znpym_513";
const css$_ = {
  svg_theme_fill_color: svg_theme_fill_color$10,
  agentTableAll: agentTableAll$1,
  agentMemberTab: agentMemberTab$1,
  agentVip: agentVip$1,
  tabItem: tabItem$1,
  copyBtn: copyBtn$1,
  tabNum: tabNum$1,
  tabNumSec: tabNumSec$1,
  mem_nomore: mem_nomore$1,
  mem_disabled: mem_disabled$1
};
const svg_theme_fill_color$$ = "_svg_theme_fill_color_gzsa7_3";
const emptyBox$1 = "_emptyBox_gzsa7_55";
const css$Z = {
  svg_theme_fill_color: svg_theme_fill_color$$,
  emptyBox: emptyBox$1
};
const emptyImg = {
  whiteGreen: "/home/icons/empty_icon_whiteGreen.png.webp",
  whiteRed: "/home/icons/empty_icon_whiteRed.webp",
  lightBrown: "/home/icons/game_empty_lightBrown.webp",
  sk2: "/home/icons/game_empty_sk2.webp",
  whiteBlue: "/home/icons/empty_icon_whiteRed.webp",
  whiteYellow: "/home/icons/empty_icon_whiteRed.webp",
  whiteOrange: "/home/icons/empty_icon_whiteOrange.webp",
  furlaBlue: "/home/icons/empty_icon_furlaBlue.webp",
  whitePink: "/home/icons/empty_icon_whitePink.webp",
  bvGreen: "/home/icons/empty_icon_bvGreen.webp",
  whiteBrown: "/home/icons/empty_icon_whiteBrown.webp",
  AnnaSuiPurple: "/home/icons/empty_icon_AnnaSuiPurple.webp",
  whitePurple: "/home/icons/empty_icon_whiteBrown.webp",
  burgundyRed: "/home/icons/empty_icon_burgundyRed.webp",
  whiteDarkGreen: "/home/icons/empty_icon_whiteDarkGreen.webp",
  greenGold: "/home/icons/empty_icon_greenGold.webp"
};
const emptyImg2 = {
  black: "/home/icons/table_empty.webp",
  blue: "/home/icons/table_empty.webp",
  purple: "/home/icons/table_empty_purple.webp",
  versaceYellow: "/home/icons/table_empty_versaceYellow.webp",
  whiteGreen: "/home/icons/table_empty_white_green.webp",
  whiteRed: "/home/icons/table_empty_white_red.webp",
  lancomePeach: "/home/icons/table_empty_lancomePeach.webp",
  hermesOrange: "/home/icons/table_empty_hermesOrange.webp",
  whiteBlue: "/home/icons/table_empty_white_red.webp",
  sk2: "/home/icons/table_empty_sk2.webp",
  whiteYellow: "/home/icons/table_empty_white_red.webp",
  whiteOrange: "/home/icons/table_empty_white_red.webp",
  furlaBlue: "/home/icons/table_empty_furlaBlue.webp",
  whitePink: "/home/icons/table_empty_whitePink.webp",
  bvGreen: "/home/icons/table_empty_bvGreen.webp",
  whiteBrown: "/home/icons/table_empty_whiteBrwon.webp",
  AnnaSuiPurple: "/home/icons/table_empty_AnnaSuiPurple.webp",
  whitePurple: "/home/icons/table_empty_whiteBrwon.webp",
  whiteDarkGreen: "/home/icons/0.webp",
  burgundyRed: "/home/icons/table_empty_burgundyRed.webp",
  whiteDarkGreen: "/home/icons/table_empty_whiteBrwon.webp",
  greenGold: "/home/icons/table_empty_greenGold.webp"
};
const Empty = ({ type: type4 = 1 }) => {
  const { theme } = useUserInfoStore();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$Z.emptyBox, children: [
      type4 === 1 && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: emptyImg[theme] || "/home/icons/empty_icon.webp" }),
      type4 === 2 && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: emptyImg2[theme] || "/home/icons/table_empty.webp" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("没有记录") })
    ]
  });
};
const ListItem$1 = ({ data, isSecond, showDialog = () => {
} }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$_.agentTableAll, children: [
        data.length > 0 && isSecond ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$_.agentMemberTab, style: { display: "none" } }) : null,
        data.length === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }) : data.map((item2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$_.agentMemberTab, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$_.agentVip, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  "V",
                  item2.level
                ]
              })
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$_.agentTabLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$_.tabItem, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$_.copyBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CopyText, { value: item2.uid }) }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("充值") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$_.tabNum, children: [
                    " ",
                    customToFixed(item2.total_dept_amount),
                    " "
                  ]
                })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("有效投注") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$_.tabNum, children: [
                    " ",
                    customToFixed(item2.valid_bet_amount),
                    " "
                  ]
                })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("当前") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$_.tabNum, children: [
                    " ",
                    item2.online === 1 ? trans("在线") : trans("离线"),
                    " "
                  ]
                })
                ]
              })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$_.agentTabRight, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, onClick: () => {
                  showDialog(item2);
                }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("直属下级") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$_.tabNumSec, children: [
                    " ",
                    item2.sub_num,
                    " "
                  ]
                })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("注册日期") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "span",
                  {
                    className: css$_.tabNum,
                    children: [
                      " ",
                      item2.created_at ? customFormatTimer(item2.created_at * 1e3).substring(0, 10) : "-",
                      " "
                    ]
                  }
                )
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("最后登录日期") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "span",
                  {
                    className: css$_.tabNum,
                    children: [
                      " ",
                      item2.last_login_at ? customFormatTimer(item2.last_login_at * 1e3).substring(0, 10) : "-",
                      " "
                    ]
                  }
                )
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$_.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("状态") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(+item2.state === 1 ? css$_.mem_nomore : css$_.mem_disabled), children: +item2.state === 1 ? trans("正常") : trans("异常") })
                ]
              })
              ]
            })
            ]
          }, item2.uid);
        })
      ]
    })
  });
};
const bgMaps$2 = {
  black: "/home/closeIcon.webp"
};
const directData = () => {
  var _a, _b;
  const [page, setPage] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [uid2, setUid] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [data, setData] = reactExports.useState([]);
  const [openWin, setOpenWin] = reactExports.useState(false);
  const [pageNext, setPageNext] = reactExports.useState(1);
  const [totalNext, setTotalNext] = reactExports.useState(0);
  const [dataNext, setDataNext] = reactExports.useState([]);
  const [curData, setCurData] = reactExports.useState("");
  const [nextIds, setNextIds] = reactExports.useState([]);
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const [isShowTotal, setIsShowTotal] = reactExports.useState(false);
  const { theme, token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time,
      page_size: 15,
      uid: uid2
    };
  }, [ty, uid2, start_time, end_time]);
  const handleInput = (val) => {
    if (!val) {
      setUid(val);
    }
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      setUid(event.target.value);
    }
  };
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await postDirectAgencyState({ ...params, page });
    if (page === 1) {
      setTotal(res.t);
      setData(res.d || []);
      setTotalAgg(res.agg);
      return;
    }
    setData([...data, ...res.d]);
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  const getNextList = async (data2) => {
    if (isLoading)
      return;
    const paramsSec = {
      ...params
    };
    paramsSec.uid = data2.uid;
    setCurData(data2.uid);
    if (pageNext === 1) {
      setTotalNext(0);
    }
    setIsLoading(true);
    const [res, err] = await postDirectAgencyState({ ...paramsSec, pageNext });
    setIsLoading(false);
    if (pageNext === 1) {
      setTotalNext(res.t);
      setDataNext(res.d || []);
      return;
    }
    setDataNext([...dataNext, ...res.d]);
  };
  const addIdArr = (uid22) => {
    const newArr = [...nextIds];
    newArr.push(uid22);
    setNextIds(newArr);
  };
  const getNextData = (data2) => {
    if (data2.sub_num) {
      getNextList(data2);
      addIdArr(data2.uid);
      setOpenWin(true);
    }
  };
  const getNextProData = (data2) => {
    if (data2.sub_num) {
      getNextList(data2);
      addIdArr(data2.uid);
    }
  };
  const goBackList = () => {
    if (isLoading)
      return;
    const newArr = [...nextIds];
    newArr.pop();
    const params2 = {
      uid: newArr.at(-1)
      // 最后一个id
    };
    getNextList(params2);
    setNextIds(newArr);
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  reactExports.useEffect(() => {
    if (!openWin) {
      setNextIds([]);
    }
  }, [openWin]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$10.member, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$10.agent_page_form, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$10.pickerContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          LabelInput,
          {
            value: params.uid,
            onSearch: (val) => {
              setUid(val);
            },
            onChange: handleInput,
            onKeyDown: handleKeyDown,
            placeholder: trans("会员帐号"),
            label: ""
          }
        )
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: openWin,
        closeByClickOut: false,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "agentDialog", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "topDia", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "titleDia", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "titleDiaBack", onClick: goBackList, children: nextIds.length > 1 ? /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {}) : null }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                style: { flex: 1 }, children: [
                  trans("的下属"),
                  " ",
                  curData
                ]
              })
              ]
            }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "timeDia", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  " ",
                  trans("日期"),
                  " "
                ]
              }),
                (_a = beiormatTimer(params.start_time)) == null ? void 0 : _a.substring(0, 10),
                "~",
                (_b = beiormatTimer(params.end_time)) == null ? void 0 : _b.substring(0, 10)
              ]
            })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "agentListContent", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(ListItem$1, {
              isSecond: true, data: dataNext, showDialog: (myData) => {
                getNextProData(myData);
              }
            }),
              totalNext > dataNext.length && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$10.moreBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  LoadMore,
                  {
                    onClick: () => {
                      setPageNext(page + 1);
                    }
                  }
                )
              })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: "bottomClose", onClick: () => {
              setOpenWin(false);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              Image,
              {
                src: bgMaps$2[theme] || "/home/closeIcon.webp"
              }
            )
          })
          ]
        })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ListItem$1, {
      data, showDialog: (myData) => {
        getNextData(myData);
      }
    }),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$10.moreBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          LoadMore,
          {
            onClick: () => {
              setPage(page + 1);
            }
          }
        )
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$10.totalBottom, isShowTotal ? css$10.openB : ""), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$10.bottomYj, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
            className: css$10.bottomIcon, onClick: () => {
              setIsShowTotal(!isShowTotal);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
          })
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$10.bottomTxt, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$10.bottomTxtLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$10.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("注册人数") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$10.tNum, children: totalAgg.reg_num })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$10.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("首充人数") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$10.tNum, children: totalAgg.first_deposit_num })
              ]
            })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$10.bottomTxtRight, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$10.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("存款") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$10.tNum, children: customToFixed(totalAgg.total_dept_amount) })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$10.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("有效投注") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$10.tNum, children: customToFixed(totalAgg.valid_bet_amount) })
              ]
            })
            ]
          })
          ]
        })
        ]
      })
    ]
  });
};
const svg_theme_fill_color$_ = "_svg_theme_fill_color_1d9tv_3";
const bg1$4 = "_bg1_1d9tv_55";
const timer$4 = "_timer_1d9tv_55";
const topCtn$1 = "_topCtn_1d9tv_55";
const item$b = "_item_1d9tv_55";
const input$4 = "_input_1d9tv_55";
const bg2$4 = "_bg2_1d9tv_128";
const vip$4 = "_vip_1d9tv_128";
const color1$4 = "_color1_1d9tv_201";
const white$2 = "_white_1d9tv_201";
const color2$4 = "_color2_1d9tv_274";
const grey$4 = "_grey_1d9tv_274";
const color3$3 = "_color3_1d9tv_347";
const xs$3 = "_xs_1d9tv_347";
const special = "_special_1d9tv_414";
const yellow$3 = "_yellow_1d9tv_439";
const fill1$5 = "_fill1_1d9tv_512";
const copy$4 = "_copy_1d9tv_512";
const borderColor1$5 = "_borderColor1_1d9tv_579";
const container$6 = "_container_1d9tv_646";
const search$5 = "_search_1d9tv_652";
const searchBtn$4 = "_searchBtn_1d9tv_657";
const ellipsis$4 = "_ellipsis_1d9tv_684";
const wrapper$4 = "_wrapper_1d9tv_696";
const list01$1 = "_list01_1d9tv_710";
const ctn = "_ctn_1d9tv_719";
const id$4 = "_id_1d9tv_727";
const label$4 = "_label_1d9tv_737";
const totalBottom$4 = "_totalBottom_1d9tv_762";
const openB$4 = "_openB_1d9tv_771";
const bottomYj$4 = "_bottomYj_1d9tv_774";
const bottomIcon$4 = "_bottomIcon_1d9tv_778";
const bottomTxt$4 = "_bottomTxt_1d9tv_938";
const bottomItem$4 = "_bottomItem_1d9tv_1046";
const tNum$4 = "_tNum_1d9tv_1058";
const values$3 = "_values_1d9tv_1093";
const css$Y = {
  svg_theme_fill_color: svg_theme_fill_color$_,
  bg1: bg1$4,
  timer: timer$4,
  topCtn: topCtn$1,
  item: item$b,
  input: input$4,
  bg2: bg2$4,
  vip: vip$4,
  color1: color1$4,
  white: white$2,
  color2: color2$4,
  grey: grey$4,
  color3: color3$3,
  xs: xs$3,
  special,
  yellow: yellow$3,
  fill1: fill1$5,
  copy: copy$4,
  borderColor1: borderColor1$5,
  container: container$6,
  search: search$5,
  searchBtn: searchBtn$4,
  ellipsis: ellipsis$4,
  wrapper: wrapper$4,
  list01: list01$1,
  ctn,
  id: id$4,
  label: label$4,
  totalBottom: totalBottom$4,
  openB: openB$4,
  bottomYj: bottomYj$4,
  bottomIcon: bottomIcon$4,
  bottomTxt: bottomTxt$4,
  bottomItem: bottomItem$4,
  tNum: tNum$4,
  values: values$3
};
const Rebate = ({ paidAmount }) => {
  const [page, setPage] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [uid2, setUsername] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [data, setData] = reactExports.useState([]);
  reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const { token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time,
      page_size: 15,
      uid: uid2
    };
  }, [ty, uid2, start_time, end_time]);
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await rebateAgencyRecord({ ...params, page });
    if (!err) {
      if (page === 1) {
        setTotal(res.t);
        setData(res.d || []);
        setTotalAgg(res.agg);
        return;
      }
      setData([...data, ...res.d]);
    }
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$Y.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$Y.search, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$Y.topCtn, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$Y.list01, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$Y.ctn), children: /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { className: joinClass(css$Y.timer), onChange: changeTime }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$Y.ctn), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.grey, css$Y.label), children: trans("佣金总额") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "".concat(css$Y.yellow, " ").concat(css$Y.special), children: customToFixed(totalAgg == null ? void 0 : totalAgg.total_paid_amount) })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$Y.list01, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$Y.ctn), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.grey, css$Y.label), children: trans("直属佣金") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "".concat(css$Y.yellow, " ").concat(css$Y.special), children: customToFixed(totalAgg == null ? void 0 : totalAgg.paid_amount) })
            ]
          })
        })
        ]
      })
    }),
      !(data == null ? void 0 : data.length) && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
      data.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
        className: css$Y.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$Y.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$Y.ctn, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.grey, css$Y.label), children: trans("结算日期") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$Y.white, children: customFormatTimer(item2.report_time, "DD/MM/YYYY") })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$Y.ctn, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.grey, css$Y.label), children: trans("直属佣金") }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.values, css$Y.yellow), children: customToFixed(item2.paid_amount) }),
                " (",
                item2.mem_count,
                ")"
              ]
            })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$Y.wrapper, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$Y.ctn, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$Y.grey, css$Y.label), children: trans("佣金总额") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$Y.yellow, children: customToFixed(item2.total_paid_amount) })
            ]
          })
        })
        ]
      }, index2)),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            setPage(page + 1);
          }
        }
      )
    ]
  });
};
var browser = {};
var canPromise$1 = function () {
  return typeof Promise === "function" && Promise.prototype && Promise.prototype.then;
};
var qrcode = {};
var utils$1 = {};
let toSJISFunction;
const CODEWORDS_COUNT = [
  0,
  // Not used
  26,
  44,
  70,
  100,
  134,
  172,
  196,
  242,
  292,
  346,
  404,
  466,
  532,
  581,
  655,
  733,
  815,
  901,
  991,
  1085,
  1156,
  1258,
  1364,
  1474,
  1588,
  1706,
  1828,
  1921,
  2051,
  2185,
  2323,
  2465,
  2611,
  2761,
  2876,
  3034,
  3196,
  3362,
  3532,
  3706
];
utils$1.getSymbolSize = function getSymbolSize(version2) {
  if (!version2)
    throw new Error('"version" cannot be null or undefined');
  if (version2 < 1 || version2 > 40)
    throw new Error('"version" should be in range from 1 to 40');
  return version2 * 4 + 17;
};
utils$1.getSymbolTotalCodewords = function getSymbolTotalCodewords(version2) {
  return CODEWORDS_COUNT[version2];
};
utils$1.getBCHDigit = function (data) {
  let digit = 0;
  while (data !== 0) {
    digit++;
    data >>>= 1;
  }
  return digit;
};
utils$1.setToSJISFunction = function setToSJISFunction(f2) {
  if (typeof f2 !== "function") {
    throw new Error('"toSJISFunc" is not a valid function.');
  }
  toSJISFunction = f2;
};
utils$1.isKanjiModeEnabled = function () {
  return typeof toSJISFunction !== "undefined";
};
utils$1.toSJIS = function toSJIS(kanji2) {
  return toSJISFunction(kanji2);
};
var errorCorrectionLevel = {};
(function (exports) {
  exports.L = { bit: 1 };
  exports.M = { bit: 0 };
  exports.Q = { bit: 3 };
  exports.H = { bit: 2 };
  function fromString(string3) {
    if (typeof string3 !== "string") {
      throw new Error("Param is not a string");
    }
    const lcStr = string3.toLowerCase();
    switch (lcStr) {
      case "l":
      case "low":
        return exports.L;
      case "m":
      case "medium":
        return exports.M;
      case "q":
      case "quartile":
        return exports.Q;
      case "h":
      case "high":
        return exports.H;
      default:
        throw new Error("Unknown EC Level: " + string3);
    }
  }
  exports.isValid = function isValid2(level) {
    return level && typeof level.bit !== "undefined" && level.bit >= 0 && level.bit < 4;
  };
  exports.from = function from2(value2, defaultValue) {
    if (exports.isValid(value2)) {
      return value2;
    }
    try {
      return fromString(value2);
    } catch (e2) {
      return defaultValue;
    }
  };
})(errorCorrectionLevel);
function BitBuffer$1() {
  this.buffer = [];
  this.length = 0;
}
BitBuffer$1.prototype = {
  get: function (index2) {
    const bufIndex = Math.floor(index2 / 8);
    return (this.buffer[bufIndex] >>> 7 - index2 % 8 & 1) === 1;
  },
  put: function (num2, length2) {
    for (let i = 0; i < length2; i++) {
      this.putBit((num2 >>> length2 - i - 1 & 1) === 1);
    }
  },
  getLengthInBits: function () {
    return this.length;
  },
  putBit: function (bit) {
    const bufIndex = Math.floor(this.length / 8);
    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }
    if (bit) {
      this.buffer[bufIndex] |= 128 >>> this.length % 8;
    }
    this.length++;
  }
};
var bitBuffer = BitBuffer$1;
function BitMatrix$1(size2) {
  if (!size2 || size2 < 1) {
    throw new Error("BitMatrix size must be defined and greater than 0");
  }
  this.size = size2;
  this.data = new Uint8Array(size2 * size2);
  this.reservedBit = new Uint8Array(size2 * size2);
}
BitMatrix$1.prototype.set = function (row, col, value2, reserved) {
  const index2 = row * this.size + col;
  this.data[index2] = value2;
  if (reserved)
    this.reservedBit[index2] = true;
};
BitMatrix$1.prototype.get = function (row, col) {
  return this.data[row * this.size + col];
};
BitMatrix$1.prototype.xor = function (row, col, value2) {
  this.data[row * this.size + col] ^= value2;
};
BitMatrix$1.prototype.isReserved = function (row, col) {
  return this.reservedBit[row * this.size + col];
};
var bitMatrix = BitMatrix$1;
var alignmentPattern = {};
(function (exports) {
  const getSymbolSize3 = utils$1.getSymbolSize;
  exports.getRowColCoords = function getRowColCoords(version2) {
    if (version2 === 1)
      return [];
    const posCount = Math.floor(version2 / 7) + 2;
    const size2 = getSymbolSize3(version2);
    const intervals = size2 === 145 ? 26 : Math.ceil((size2 - 13) / (2 * posCount - 2)) * 2;
    const positions = [size2 - 7];
    for (let i = 1; i < posCount - 1; i++) {
      positions[i] = positions[i - 1] - intervals;
    }
    positions.push(6);
    return positions.reverse();
  };
  exports.getPositions = function getPositions2(version2) {
    const coords = [];
    const pos = exports.getRowColCoords(version2);
    const posLength = pos.length;
    for (let i = 0; i < posLength; i++) {
      for (let j = 0; j < posLength; j++) {
        if (i === 0 && j === 0 || // top-left
          i === 0 && j === posLength - 1 || // bottom-left
          i === posLength - 1 && j === 0) {
          continue;
        }
        coords.push([pos[i], pos[j]]);
      }
    }
    return coords;
  };
})(alignmentPattern);
var finderPattern = {};
const getSymbolSize2 = utils$1.getSymbolSize;
const FINDER_PATTERN_SIZE = 7;
finderPattern.getPositions = function getPositions(version2) {
  const size2 = getSymbolSize2(version2);
  return [
    // top-left
    [0, 0],
    // top-right
    [size2 - FINDER_PATTERN_SIZE, 0],
    // bottom-left
    [0, size2 - FINDER_PATTERN_SIZE]
  ];
};
var maskPattern = {};
(function (exports) {
  exports.Patterns = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7
  };
  const PenaltyScores = {
    N1: 3,
    N2: 3,
    N3: 40,
    N4: 10
  };
  exports.isValid = function isValid2(mask) {
    return mask != null && mask !== "" && !isNaN(mask) && mask >= 0 && mask <= 7;
  };
  exports.from = function from2(value2) {
    return exports.isValid(value2) ? parseInt(value2, 10) : void 0;
  };
  exports.getPenaltyN1 = function getPenaltyN1(data) {
    const size2 = data.size;
    let points = 0;
    let sameCountCol = 0;
    let sameCountRow = 0;
    let lastCol = null;
    let lastRow = null;
    for (let row = 0; row < size2; row++) {
      sameCountCol = sameCountRow = 0;
      lastCol = lastRow = null;
      for (let col = 0; col < size2; col++) {
        let module = data.get(row, col);
        if (module === lastCol) {
          sameCountCol++;
        } else {
          if (sameCountCol >= 5)
            points += PenaltyScores.N1 + (sameCountCol - 5);
          lastCol = module;
          sameCountCol = 1;
        }
        module = data.get(col, row);
        if (module === lastRow) {
          sameCountRow++;
        } else {
          if (sameCountRow >= 5)
            points += PenaltyScores.N1 + (sameCountRow - 5);
          lastRow = module;
          sameCountRow = 1;
        }
      }
      if (sameCountCol >= 5)
        points += PenaltyScores.N1 + (sameCountCol - 5);
      if (sameCountRow >= 5)
        points += PenaltyScores.N1 + (sameCountRow - 5);
    }
    return points;
  };
  exports.getPenaltyN2 = function getPenaltyN2(data) {
    const size2 = data.size;
    let points = 0;
    for (let row = 0; row < size2 - 1; row++) {
      for (let col = 0; col < size2 - 1; col++) {
        const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
        if (last === 4 || last === 0)
          points++;
      }
    }
    return points * PenaltyScores.N2;
  };
  exports.getPenaltyN3 = function getPenaltyN3(data) {
    const size2 = data.size;
    let points = 0;
    let bitsCol = 0;
    let bitsRow = 0;
    for (let row = 0; row < size2; row++) {
      bitsCol = bitsRow = 0;
      for (let col = 0; col < size2; col++) {
        bitsCol = bitsCol << 1 & 2047 | data.get(row, col);
        if (col >= 10 && (bitsCol === 1488 || bitsCol === 93))
          points++;
        bitsRow = bitsRow << 1 & 2047 | data.get(col, row);
        if (col >= 10 && (bitsRow === 1488 || bitsRow === 93))
          points++;
      }
    }
    return points * PenaltyScores.N3;
  };
  exports.getPenaltyN4 = function getPenaltyN4(data) {
    let darkCount = 0;
    const modulesCount = data.data.length;
    for (let i = 0; i < modulesCount; i++)
      darkCount += data.data[i];
    const k2 = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
    return k2 * PenaltyScores.N4;
  };
  function getMaskAt(maskPattern2, i, j) {
    switch (maskPattern2) {
      case exports.Patterns.PATTERN000:
        return (i + j) % 2 === 0;
      case exports.Patterns.PATTERN001:
        return i % 2 === 0;
      case exports.Patterns.PATTERN010:
        return j % 3 === 0;
      case exports.Patterns.PATTERN011:
        return (i + j) % 3 === 0;
      case exports.Patterns.PATTERN100:
        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;
      case exports.Patterns.PATTERN101:
        return i * j % 2 + i * j % 3 === 0;
      case exports.Patterns.PATTERN110:
        return (i * j % 2 + i * j % 3) % 2 === 0;
      case exports.Patterns.PATTERN111:
        return (i * j % 3 + (i + j) % 2) % 2 === 0;
      default:
        throw new Error("bad maskPattern:" + maskPattern2);
    }
  }
  exports.applyMask = function applyMask(pattern4, data) {
    const size2 = data.size;
    for (let col = 0; col < size2; col++) {
      for (let row = 0; row < size2; row++) {
        if (data.isReserved(row, col))
          continue;
        data.xor(row, col, getMaskAt(pattern4, row, col));
      }
    }
  };
  exports.getBestMask = function getBestMask(data, setupFormatFunc) {
    const numPatterns = Object.keys(exports.Patterns).length;
    let bestPattern = 0;
    let lowerPenalty = Infinity;
    for (let p2 = 0; p2 < numPatterns; p2++) {
      setupFormatFunc(p2);
      exports.applyMask(p2, data);
      const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);
      exports.applyMask(p2, data);
      if (penalty < lowerPenalty) {
        lowerPenalty = penalty;
        bestPattern = p2;
      }
    }
    return bestPattern;
  };
})(maskPattern);
var errorCorrectionCode = {};
const ECLevel$1 = errorCorrectionLevel;
const EC_BLOCKS_TABLE = [
  // L  M  Q  H
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  2,
  2,
  1,
  2,
  2,
  4,
  1,
  2,
  4,
  4,
  2,
  4,
  4,
  4,
  2,
  4,
  6,
  5,
  2,
  4,
  6,
  6,
  2,
  5,
  8,
  8,
  4,
  5,
  8,
  8,
  4,
  5,
  8,
  11,
  4,
  8,
  10,
  11,
  4,
  9,
  12,
  16,
  4,
  9,
  16,
  16,
  6,
  10,
  12,
  18,
  6,
  10,
  17,
  16,
  6,
  11,
  16,
  19,
  6,
  13,
  18,
  21,
  7,
  14,
  21,
  25,
  8,
  16,
  20,
  25,
  8,
  17,
  23,
  25,
  9,
  17,
  23,
  34,
  9,
  18,
  25,
  30,
  10,
  20,
  27,
  32,
  12,
  21,
  29,
  35,
  12,
  23,
  34,
  37,
  12,
  25,
  34,
  40,
  13,
  26,
  35,
  42,
  14,
  28,
  38,
  45,
  15,
  29,
  40,
  48,
  16,
  31,
  43,
  51,
  17,
  33,
  45,
  54,
  18,
  35,
  48,
  57,
  19,
  37,
  51,
  60,
  19,
  38,
  53,
  63,
  20,
  40,
  56,
  66,
  21,
  43,
  59,
  70,
  22,
  45,
  62,
  74,
  24,
  47,
  65,
  77,
  25,
  49,
  68,
  81
];
const EC_CODEWORDS_TABLE = [
  // L  M  Q  H
  7,
  10,
  13,
  17,
  10,
  16,
  22,
  28,
  15,
  26,
  36,
  44,
  20,
  36,
  52,
  64,
  26,
  48,
  72,
  88,
  36,
  64,
  96,
  112,
  40,
  72,
  108,
  130,
  48,
  88,
  132,
  156,
  60,
  110,
  160,
  192,
  72,
  130,
  192,
  224,
  80,
  150,
  224,
  264,
  96,
  176,
  260,
  308,
  104,
  198,
  288,
  352,
  120,
  216,
  320,
  384,
  132,
  240,
  360,
  432,
  144,
  280,
  408,
  480,
  168,
  308,
  448,
  532,
  180,
  338,
  504,
  588,
  196,
  364,
  546,
  650,
  224,
  416,
  600,
  700,
  224,
  442,
  644,
  750,
  252,
  476,
  690,
  816,
  270,
  504,
  750,
  900,
  300,
  560,
  810,
  960,
  312,
  588,
  870,
  1050,
  336,
  644,
  952,
  1110,
  360,
  700,
  1020,
  1200,
  390,
  728,
  1050,
  1260,
  420,
  784,
  1140,
  1350,
  450,
  812,
  1200,
  1440,
  480,
  868,
  1290,
  1530,
  510,
  924,
  1350,
  1620,
  540,
  980,
  1440,
  1710,
  570,
  1036,
  1530,
  1800,
  570,
  1064,
  1590,
  1890,
  600,
  1120,
  1680,
  1980,
  630,
  1204,
  1770,
  2100,
  660,
  1260,
  1860,
  2220,
  720,
  1316,
  1950,
  2310,
  750,
  1372,
  2040,
  2430
];
errorCorrectionCode.getBlocksCount = function getBlocksCount(version2, errorCorrectionLevel2) {
  switch (errorCorrectionLevel2) {
    case ECLevel$1.L:
      return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 0];
    case ECLevel$1.M:
      return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 1];
    case ECLevel$1.Q:
      return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 2];
    case ECLevel$1.H:
      return EC_BLOCKS_TABLE[(version2 - 1) * 4 + 3];
    default:
      return void 0;
  }
};
errorCorrectionCode.getTotalCodewordsCount = function getTotalCodewordsCount(version2, errorCorrectionLevel2) {
  switch (errorCorrectionLevel2) {
    case ECLevel$1.L:
      return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 0];
    case ECLevel$1.M:
      return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 1];
    case ECLevel$1.Q:
      return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 2];
    case ECLevel$1.H:
      return EC_CODEWORDS_TABLE[(version2 - 1) * 4 + 3];
    default:
      return void 0;
  }
};
var polynomial = {};
var galoisField = {};
const EXP_TABLE = new Uint8Array(512);
const LOG_TABLE = new Uint8Array(256);
(function initTables() {
  let x = 1;
  for (let i = 0; i < 255; i++) {
    EXP_TABLE[i] = x;
    LOG_TABLE[x] = i;
    x <<= 1;
    if (x & 256) {
      x ^= 285;
    }
  }
  for (let i = 255; i < 512; i++) {
    EXP_TABLE[i] = EXP_TABLE[i - 255];
  }
})();
galoisField.log = function log(n2) {
  if (n2 < 1)
    throw new Error("log(" + n2 + ")");
  return LOG_TABLE[n2];
};
galoisField.exp = function exp(n2) {
  return EXP_TABLE[n2];
};
galoisField.mul = function mul(x, y) {
  if (x === 0 || y === 0)
    return 0;
  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];
};
(function (exports) {
  const GF = galoisField;
  exports.mul = function mul2(p1, p2) {
    const coeff = new Uint8Array(p1.length + p2.length - 1);
    for (let i = 0; i < p1.length; i++) {
      for (let j = 0; j < p2.length; j++) {
        coeff[i + j] ^= GF.mul(p1[i], p2[j]);
      }
    }
    return coeff;
  };
  exports.mod = function mod(divident, divisor) {
    let result = new Uint8Array(divident);
    while (result.length - divisor.length >= 0) {
      const coeff = result[0];
      for (let i = 0; i < divisor.length; i++) {
        result[i] ^= GF.mul(divisor[i], coeff);
      }
      let offset = 0;
      while (offset < result.length && result[offset] === 0)
        offset++;
      result = result.slice(offset);
    }
    return result;
  };
  exports.generateECPolynomial = function generateECPolynomial(degree) {
    let poly = new Uint8Array([1]);
    for (let i = 0; i < degree; i++) {
      poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));
    }
    return poly;
  };
})(polynomial);
const Polynomial = polynomial;
function ReedSolomonEncoder$1(degree) {
  this.genPoly = void 0;
  this.degree = degree;
  if (this.degree)
    this.initialize(this.degree);
}
ReedSolomonEncoder$1.prototype.initialize = function initialize(degree) {
  this.degree = degree;
  this.genPoly = Polynomial.generateECPolynomial(this.degree);
};
ReedSolomonEncoder$1.prototype.encode = function encode(data) {
  if (!this.genPoly) {
    throw new Error("Encoder not initialized");
  }
  const paddedData = new Uint8Array(data.length + this.degree);
  paddedData.set(data);
  const remainder = Polynomial.mod(paddedData, this.genPoly);
  const start = this.degree - remainder.length;
  if (start > 0) {
    const buff = new Uint8Array(this.degree);
    buff.set(remainder, start);
    return buff;
  }
  return remainder;
};
var reedSolomonEncoder = ReedSolomonEncoder$1;
var version = {};
var mode = {};
var versionCheck = {};
versionCheck.isValid = function isValid(version2) {
  return !isNaN(version2) && version2 >= 1 && version2 <= 40;
};
var regex = {};
const numeric = "[0-9]+";
const alphanumeric = "[A-Z $%*+\\-./:]+";
let kanji = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
kanji = kanji.replace(/u/g, "\\u");
const byte = "(?:(?![A-Z0-9 $%*+\\-./:]|" + kanji + ")(?:.|[\r\n]))+";
regex.KANJI = new RegExp(kanji, "g");
regex.BYTE_KANJI = new RegExp("[^A-Z0-9 $%*+\\-./:]+", "g");
regex.BYTE = new RegExp(byte, "g");
regex.NUMERIC = new RegExp(numeric, "g");
regex.ALPHANUMERIC = new RegExp(alphanumeric, "g");
const TEST_KANJI = new RegExp("^" + kanji + "$");
const TEST_NUMERIC = new RegExp("^" + numeric + "$");
const TEST_ALPHANUMERIC = new RegExp("^[A-Z0-9 $%*+\\-./:]+$");
regex.testKanji = function testKanji(str2) {
  return TEST_KANJI.test(str2);
};
regex.testNumeric = function testNumeric(str2) {
  return TEST_NUMERIC.test(str2);
};
regex.testAlphanumeric = function testAlphanumeric(str2) {
  return TEST_ALPHANUMERIC.test(str2);
};
(function (exports) {
  const VersionCheck = versionCheck;
  const Regex = regex;
  exports.NUMERIC = {
    id: "Numeric",
    bit: 1 << 0,
    ccBits: [10, 12, 14]
  };
  exports.ALPHANUMERIC = {
    id: "Alphanumeric",
    bit: 1 << 1,
    ccBits: [9, 11, 13]
  };
  exports.BYTE = {
    id: "Byte",
    bit: 1 << 2,
    ccBits: [8, 16, 16]
  };
  exports.KANJI = {
    id: "Kanji",
    bit: 1 << 3,
    ccBits: [8, 10, 12]
  };
  exports.MIXED = {
    bit: -1
  };
  exports.getCharCountIndicator = function getCharCountIndicator(mode2, version2) {
    if (!mode2.ccBits)
      throw new Error("Invalid mode: " + mode2);
    if (!VersionCheck.isValid(version2)) {
      throw new Error("Invalid version: " + version2);
    }
    if (version2 >= 1 && version2 < 10)
      return mode2.ccBits[0];
    else if (version2 < 27)
      return mode2.ccBits[1];
    return mode2.ccBits[2];
  };
  exports.getBestModeForData = function getBestModeForData(dataStr) {
    if (Regex.testNumeric(dataStr))
      return exports.NUMERIC;
    else if (Regex.testAlphanumeric(dataStr))
      return exports.ALPHANUMERIC;
    else if (Regex.testKanji(dataStr))
      return exports.KANJI;
    else
      return exports.BYTE;
  };
  exports.toString = function toString(mode2) {
    if (mode2 && mode2.id)
      return mode2.id;
    throw new Error("Invalid mode");
  };
  exports.isValid = function isValid2(mode2) {
    return mode2 && mode2.bit && mode2.ccBits;
  };
  function fromString(string3) {
    if (typeof string3 !== "string") {
      throw new Error("Param is not a string");
    }
    const lcStr = string3.toLowerCase();
    switch (lcStr) {
      case "numeric":
        return exports.NUMERIC;
      case "alphanumeric":
        return exports.ALPHANUMERIC;
      case "kanji":
        return exports.KANJI;
      case "byte":
        return exports.BYTE;
      default:
        throw new Error("Unknown mode: " + string3);
    }
  }
  exports.from = function from2(value2, defaultValue) {
    if (exports.isValid(value2)) {
      return value2;
    }
    try {
      return fromString(value2);
    } catch (e2) {
      return defaultValue;
    }
  };
})(mode);
(function (exports) {
  const Utils2 = utils$1;
  const ECCode2 = errorCorrectionCode;
  const ECLevel2 = errorCorrectionLevel;
  const Mode2 = mode;
  const VersionCheck = versionCheck;
  const G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
  const G18_BCH = Utils2.getBCHDigit(G18);
  function getBestVersionForDataLength(mode2, length2, errorCorrectionLevel2) {
    for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
      if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel2, mode2)) {
        return currentVersion;
      }
    }
    return void 0;
  }
  function getReservedBitsCount(mode2, version2) {
    return Mode2.getCharCountIndicator(mode2, version2) + 4;
  }
  function getTotalBitsFromDataArray(segments2, version2) {
    let totalBits = 0;
    segments2.forEach(function (data) {
      const reservedBits = getReservedBitsCount(data.mode, version2);
      totalBits += reservedBits + data.getBitsLength();
    });
    return totalBits;
  }
  function getBestVersionForMixedData(segments2, errorCorrectionLevel2) {
    for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
      const length2 = getTotalBitsFromDataArray(segments2, currentVersion);
      if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel2, Mode2.MIXED)) {
        return currentVersion;
      }
    }
    return void 0;
  }
  exports.from = function from2(value2, defaultValue) {
    if (VersionCheck.isValid(value2)) {
      return parseInt(value2, 10);
    }
    return defaultValue;
  };
  exports.getCapacity = function getCapacity(version2, errorCorrectionLevel2, mode2) {
    if (!VersionCheck.isValid(version2)) {
      throw new Error("Invalid QR Code version");
    }
    if (typeof mode2 === "undefined")
      mode2 = Mode2.BYTE;
    const totalCodewords = Utils2.getSymbolTotalCodewords(version2);
    const ecTotalCodewords = ECCode2.getTotalCodewordsCount(version2, errorCorrectionLevel2);
    const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
    if (mode2 === Mode2.MIXED)
      return dataTotalCodewordsBits;
    const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode2, version2);
    switch (mode2) {
      case Mode2.NUMERIC:
        return Math.floor(usableBits / 10 * 3);
      case Mode2.ALPHANUMERIC:
        return Math.floor(usableBits / 11 * 2);
      case Mode2.KANJI:
        return Math.floor(usableBits / 13);
      case Mode2.BYTE:
      default:
        return Math.floor(usableBits / 8);
    }
  };
  exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel2) {
    let seg;
    const ecl = ECLevel2.from(errorCorrectionLevel2, ECLevel2.M);
    if (Array.isArray(data)) {
      if (data.length > 1) {
        return getBestVersionForMixedData(data, ecl);
      }
      if (data.length === 0) {
        return 1;
      }
      seg = data[0];
    } else {
      seg = data;
    }
    return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
  };
  exports.getEncodedBits = function getEncodedBits2(version2) {
    if (!VersionCheck.isValid(version2) || version2 < 7) {
      throw new Error("Invalid QR Code version");
    }
    let d2 = version2 << 12;
    while (Utils2.getBCHDigit(d2) - G18_BCH >= 0) {
      d2 ^= G18 << Utils2.getBCHDigit(d2) - G18_BCH;
    }
    return version2 << 12 | d2;
  };
})(version);
var formatInfo = {};
const Utils$3 = utils$1;
const G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
const G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
const G15_BCH = Utils$3.getBCHDigit(G15);
formatInfo.getEncodedBits = function getEncodedBits(errorCorrectionLevel2, mask) {
  const data = errorCorrectionLevel2.bit << 3 | mask;
  let d2 = data << 10;
  while (Utils$3.getBCHDigit(d2) - G15_BCH >= 0) {
    d2 ^= G15 << Utils$3.getBCHDigit(d2) - G15_BCH;
  }
  return (data << 10 | d2) ^ G15_MASK;
};
var segments = {};
const Mode$4 = mode;
function NumericData(data) {
  this.mode = Mode$4.NUMERIC;
  this.data = data.toString();
}
NumericData.getBitsLength = function getBitsLength(length2) {
  return 10 * Math.floor(length2 / 3) + (length2 % 3 ? length2 % 3 * 3 + 1 : 0);
};
NumericData.prototype.getLength = function getLength() {
  return this.data.length;
};
NumericData.prototype.getBitsLength = function getBitsLength2() {
  return NumericData.getBitsLength(this.data.length);
};
NumericData.prototype.write = function write(bitBuffer2) {
  let i, group, value2;
  for (i = 0; i + 3 <= this.data.length; i += 3) {
    group = this.data.substr(i, 3);
    value2 = parseInt(group, 10);
    bitBuffer2.put(value2, 10);
  }
  const remainingNum = this.data.length - i;
  if (remainingNum > 0) {
    group = this.data.substr(i);
    value2 = parseInt(group, 10);
    bitBuffer2.put(value2, remainingNum * 3 + 1);
  }
};
var numericData = NumericData;
const Mode$3 = mode;
const ALPHA_NUM_CHARS = [
  "0",
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  " ",
  "$",
  "%",
  "*",
  "+",
  "-",
  ".",
  "/",
  ":"
];
function AlphanumericData(data) {
  this.mode = Mode$3.ALPHANUMERIC;
  this.data = data;
}
AlphanumericData.getBitsLength = function getBitsLength3(length2) {
  return 11 * Math.floor(length2 / 2) + 6 * (length2 % 2);
};
AlphanumericData.prototype.getLength = function getLength2() {
  return this.data.length;
};
AlphanumericData.prototype.getBitsLength = function getBitsLength4() {
  return AlphanumericData.getBitsLength(this.data.length);
};
AlphanumericData.prototype.write = function write2(bitBuffer2) {
  let i;
  for (i = 0; i + 2 <= this.data.length; i += 2) {
    let value2 = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;
    value2 += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);
    bitBuffer2.put(value2, 11);
  }
  if (this.data.length % 2) {
    bitBuffer2.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);
  }
};
var alphanumericData = AlphanumericData;
var encodeUtf8$1 = function encodeUtf8(input2) {
  var result = [];
  var size2 = input2.length;
  for (var index2 = 0; index2 < size2; index2++) {
    var point2 = input2.charCodeAt(index2);
    if (point2 >= 55296 && point2 <= 56319 && size2 > index2 + 1) {
      var second = input2.charCodeAt(index2 + 1);
      if (second >= 56320 && second <= 57343) {
        point2 = (point2 - 55296) * 1024 + second - 56320 + 65536;
        index2 += 1;
      }
    }
    if (point2 < 128) {
      result.push(point2);
      continue;
    }
    if (point2 < 2048) {
      result.push(point2 >> 6 | 192);
      result.push(point2 & 63 | 128);
      continue;
    }
    if (point2 < 55296 || point2 >= 57344 && point2 < 65536) {
      result.push(point2 >> 12 | 224);
      result.push(point2 >> 6 & 63 | 128);
      result.push(point2 & 63 | 128);
      continue;
    }
    if (point2 >= 65536 && point2 <= 1114111) {
      result.push(point2 >> 18 | 240);
      result.push(point2 >> 12 & 63 | 128);
      result.push(point2 >> 6 & 63 | 128);
      result.push(point2 & 63 | 128);
      continue;
    }
    result.push(239, 191, 189);
  }
  return new Uint8Array(result).buffer;
};
const encodeUtf82 = encodeUtf8$1;
const Mode$2 = mode;
function ByteData(data) {
  this.mode = Mode$2.BYTE;
  if (typeof data === "string") {
    data = encodeUtf82(data);
  }
  this.data = new Uint8Array(data);
}
ByteData.getBitsLength = function getBitsLength5(length2) {
  return length2 * 8;
};
ByteData.prototype.getLength = function getLength3() {
  return this.data.length;
};
ByteData.prototype.getBitsLength = function getBitsLength6() {
  return ByteData.getBitsLength(this.data.length);
};
ByteData.prototype.write = function (bitBuffer2) {
  for (let i = 0, l2 = this.data.length; i < l2; i++) {
    bitBuffer2.put(this.data[i], 8);
  }
};
var byteData = ByteData;
const Mode$1 = mode;
const Utils$2 = utils$1;
function KanjiData(data) {
  this.mode = Mode$1.KANJI;
  this.data = data;
}
KanjiData.getBitsLength = function getBitsLength7(length2) {
  return length2 * 13;
};
KanjiData.prototype.getLength = function getLength4() {
  return this.data.length;
};
KanjiData.prototype.getBitsLength = function getBitsLength8() {
  return KanjiData.getBitsLength(this.data.length);
};
KanjiData.prototype.write = function (bitBuffer2) {
  let i;
  for (i = 0; i < this.data.length; i++) {
    let value2 = Utils$2.toSJIS(this.data[i]);
    if (value2 >= 33088 && value2 <= 40956) {
      value2 -= 33088;
    } else if (value2 >= 57408 && value2 <= 60351) {
      value2 -= 49472;
    } else {
      throw new Error(
        "Invalid SJIS character: " + this.data[i] + "\nMake sure your charset is UTF-8"
      );
    }
    value2 = (value2 >>> 8 & 255) * 192 + (value2 & 255);
    bitBuffer2.put(value2, 13);
  }
};
var kanjiData = KanjiData;
var dijkstra = { exports: {} };
(function (module) {
  var dijkstra2 = {
    single_source_shortest_paths: function (graph, s, d2) {
      var predecessors = {};
      var costs = {};
      costs[s] = 0;
      var open2 = dijkstra2.PriorityQueue.make();
      open2.push(s, 0);
      var closest, u2, v2, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;
      while (!open2.empty()) {
        closest = open2.pop();
        u2 = closest.value;
        cost_of_s_to_u = closest.cost;
        adjacent_nodes = graph[u2] || {};
        for (v2 in adjacent_nodes) {
          if (adjacent_nodes.hasOwnProperty(v2)) {
            cost_of_e = adjacent_nodes[v2];
            cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;
            cost_of_s_to_v = costs[v2];
            first_visit = typeof costs[v2] === "undefined";
            if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {
              costs[v2] = cost_of_s_to_u_plus_cost_of_e;
              open2.push(v2, cost_of_s_to_u_plus_cost_of_e);
              predecessors[v2] = u2;
            }
          }
        }
      }
      if (typeof d2 !== "undefined" && typeof costs[d2] === "undefined") {
        var msg2 = ["Could not find a path from ", s, " to ", d2, "."].join("");
        throw new Error(msg2);
      }
      return predecessors;
    },
    extract_shortest_path_from_predecessor_list: function (predecessors, d2) {
      var nodes = [];
      var u2 = d2;
      while (u2) {
        nodes.push(u2);
        predecessors[u2];
        u2 = predecessors[u2];
      }
      nodes.reverse();
      return nodes;
    },
    find_path: function (graph, s, d2) {
      var predecessors = dijkstra2.single_source_shortest_paths(graph, s, d2);
      return dijkstra2.extract_shortest_path_from_predecessor_list(
        predecessors,
        d2
      );
    },
    /**
     * A very naive priority queue implementation.
     */
    PriorityQueue: {
      make: function (opts) {
        var T = dijkstra2.PriorityQueue, t2 = {}, key;
        opts = opts || {};
        for (key in T) {
          if (T.hasOwnProperty(key)) {
            t2[key] = T[key];
          }
        }
        t2.queue = [];
        t2.sorter = opts.sorter || T.default_sorter;
        return t2;
      },
      default_sorter: function (a, b2) {
        return a.cost - b2.cost;
      },
      /**
       * Add a new item to the queue and ensure the highest priority element
       * is at the front of the queue.
       */
      push: function (value2, cost) {
        var item2 = { value: value2, cost };
        this.queue.push(item2);
        this.queue.sort(this.sorter);
      },
      /**
       * Return the highest priority element in the queue.
       */
      pop: function () {
        return this.queue.shift();
      },
      empty: function () {
        return this.queue.length === 0;
      }
    }
  };
  {
    module.exports = dijkstra2;
  }
})(dijkstra);
var dijkstraExports = dijkstra.exports;
(function (exports) {
  const Mode2 = mode;
  const NumericData2 = numericData;
  const AlphanumericData2 = alphanumericData;
  const ByteData2 = byteData;
  const KanjiData2 = kanjiData;
  const Regex = regex;
  const Utils2 = utils$1;
  const dijkstra2 = dijkstraExports;
  function getStringByteLength(str2) {
    return unescape(encodeURIComponent(str2)).length;
  }
  function getSegments(regex2, mode2, str2) {
    const segments2 = [];
    let result;
    while ((result = regex2.exec(str2)) !== null) {
      segments2.push({
        data: result[0],
        index: result.index,
        mode: mode2,
        length: result[0].length
      });
    }
    return segments2;
  }
  function getSegmentsFromString(dataStr) {
    const numSegs = getSegments(Regex.NUMERIC, Mode2.NUMERIC, dataStr);
    const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode2.ALPHANUMERIC, dataStr);
    let byteSegs;
    let kanjiSegs;
    if (Utils2.isKanjiModeEnabled()) {
      byteSegs = getSegments(Regex.BYTE, Mode2.BYTE, dataStr);
      kanjiSegs = getSegments(Regex.KANJI, Mode2.KANJI, dataStr);
    } else {
      byteSegs = getSegments(Regex.BYTE_KANJI, Mode2.BYTE, dataStr);
      kanjiSegs = [];
    }
    const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
    return segs.sort(function (s1, s2) {
      return s1.index - s2.index;
    }).map(function (obj) {
      return {
        data: obj.data,
        mode: obj.mode,
        length: obj.length
      };
    });
  }
  function getSegmentBitsLength(length2, mode2) {
    switch (mode2) {
      case Mode2.NUMERIC:
        return NumericData2.getBitsLength(length2);
      case Mode2.ALPHANUMERIC:
        return AlphanumericData2.getBitsLength(length2);
      case Mode2.KANJI:
        return KanjiData2.getBitsLength(length2);
      case Mode2.BYTE:
        return ByteData2.getBitsLength(length2);
    }
  }
  function mergeSegments(segs) {
    return segs.reduce(function (acc, curr) {
      const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
      if (prevSeg && prevSeg.mode === curr.mode) {
        acc[acc.length - 1].data += curr.data;
        return acc;
      }
      acc.push(curr);
      return acc;
    }, []);
  }
  function buildNodes(segs) {
    const nodes = [];
    for (let i = 0; i < segs.length; i++) {
      const seg = segs[i];
      switch (seg.mode) {
        case Mode2.NUMERIC:
          nodes.push([
            seg,
            { data: seg.data, mode: Mode2.ALPHANUMERIC, length: seg.length },
            { data: seg.data, mode: Mode2.BYTE, length: seg.length }
          ]);
          break;
        case Mode2.ALPHANUMERIC:
          nodes.push([
            seg,
            { data: seg.data, mode: Mode2.BYTE, length: seg.length }
          ]);
          break;
        case Mode2.KANJI:
          nodes.push([
            seg,
            { data: seg.data, mode: Mode2.BYTE, length: getStringByteLength(seg.data) }
          ]);
          break;
        case Mode2.BYTE:
          nodes.push([
            { data: seg.data, mode: Mode2.BYTE, length: getStringByteLength(seg.data) }
          ]);
      }
    }
    return nodes;
  }
  function buildGraph(nodes, version2) {
    const table2 = {};
    const graph = { start: {} };
    let prevNodeIds = ["start"];
    for (let i = 0; i < nodes.length; i++) {
      const nodeGroup = nodes[i];
      const currentNodeIds = [];
      for (let j = 0; j < nodeGroup.length; j++) {
        const node2 = nodeGroup[j];
        const key = "" + i + j;
        currentNodeIds.push(key);
        table2[key] = { node: node2, lastCount: 0 };
        graph[key] = {};
        for (let n2 = 0; n2 < prevNodeIds.length; n2++) {
          const prevNodeId = prevNodeIds[n2];
          if (table2[prevNodeId] && table2[prevNodeId].node.mode === node2.mode) {
            graph[prevNodeId][key] = getSegmentBitsLength(table2[prevNodeId].lastCount + node2.length, node2.mode) - getSegmentBitsLength(table2[prevNodeId].lastCount, node2.mode);
            table2[prevNodeId].lastCount += node2.length;
          } else {
            if (table2[prevNodeId])
              table2[prevNodeId].lastCount = node2.length;
            graph[prevNodeId][key] = getSegmentBitsLength(node2.length, node2.mode) + 4 + Mode2.getCharCountIndicator(node2.mode, version2);
          }
        }
      }
      prevNodeIds = currentNodeIds;
    }
    for (let n2 = 0; n2 < prevNodeIds.length; n2++) {
      graph[prevNodeIds[n2]].end = 0;
    }
    return { map: graph, table: table2 };
  }
  function buildSingleSegment(data, modesHint) {
    let mode2;
    const bestMode = Mode2.getBestModeForData(data);
    mode2 = Mode2.from(modesHint, bestMode);
    if (mode2 !== Mode2.BYTE && mode2.bit < bestMode.bit) {
      throw new Error('"' + data + '" cannot be encoded with mode ' + Mode2.toString(mode2) + ".\n Suggested mode is: " + Mode2.toString(bestMode));
    }
    if (mode2 === Mode2.KANJI && !Utils2.isKanjiModeEnabled()) {
      mode2 = Mode2.BYTE;
    }
    switch (mode2) {
      case Mode2.NUMERIC:
        return new NumericData2(data);
      case Mode2.ALPHANUMERIC:
        return new AlphanumericData2(data);
      case Mode2.KANJI:
        return new KanjiData2(data);
      case Mode2.BYTE:
        return new ByteData2(data);
    }
  }
  exports.fromArray = function fromArray(array4) {
    return array4.reduce(function (acc, seg) {
      if (typeof seg === "string") {
        acc.push(buildSingleSegment(seg, null));
      } else if (seg.data) {
        acc.push(buildSingleSegment(seg.data, seg.mode));
      }
      return acc;
    }, []);
  };
  exports.fromString = function fromString(data, version2) {
    const segs = getSegmentsFromString(data, Utils2.isKanjiModeEnabled());
    const nodes = buildNodes(segs);
    const graph = buildGraph(nodes, version2);
    const path = dijkstra2.find_path(graph.map, "start", "end");
    const optimizedSegs = [];
    for (let i = 1; i < path.length - 1; i++) {
      optimizedSegs.push(graph.table[path[i]].node);
    }
    return exports.fromArray(mergeSegments(optimizedSegs));
  };
  exports.rawSplit = function rawSplit(data) {
    return exports.fromArray(
      getSegmentsFromString(data, Utils2.isKanjiModeEnabled())
    );
  };
})(segments);
const Utils$1 = utils$1;
const ECLevel = errorCorrectionLevel;
const BitBuffer = bitBuffer;
const BitMatrix = bitMatrix;
const AlignmentPattern = alignmentPattern;
const FinderPattern = finderPattern;
const MaskPattern = maskPattern;
const ECCode = errorCorrectionCode;
const ReedSolomonEncoder = reedSolomonEncoder;
const Version = version;
const FormatInfo = formatInfo;
const Mode = mode;
const Segments = segments;
function setupFinderPattern(matrix, version2) {
  const size2 = matrix.size;
  const pos = FinderPattern.getPositions(version2);
  for (let i = 0; i < pos.length; i++) {
    const row = pos[i][0];
    const col = pos[i][1];
    for (let r2 = -1; r2 <= 7; r2++) {
      if (row + r2 <= -1 || size2 <= row + r2)
        continue;
      for (let c2 = -1; c2 <= 7; c2++) {
        if (col + c2 <= -1 || size2 <= col + c2)
          continue;
        if (r2 >= 0 && r2 <= 6 && (c2 === 0 || c2 === 6) || c2 >= 0 && c2 <= 6 && (r2 === 0 || r2 === 6) || r2 >= 2 && r2 <= 4 && c2 >= 2 && c2 <= 4) {
          matrix.set(row + r2, col + c2, true, true);
        } else {
          matrix.set(row + r2, col + c2, false, true);
        }
      }
    }
  }
}
function setupTimingPattern(matrix) {
  const size2 = matrix.size;
  for (let r2 = 8; r2 < size2 - 8; r2++) {
    const value2 = r2 % 2 === 0;
    matrix.set(r2, 6, value2, true);
    matrix.set(6, r2, value2, true);
  }
}
function setupAlignmentPattern(matrix, version2) {
  const pos = AlignmentPattern.getPositions(version2);
  for (let i = 0; i < pos.length; i++) {
    const row = pos[i][0];
    const col = pos[i][1];
    for (let r2 = -2; r2 <= 2; r2++) {
      for (let c2 = -2; c2 <= 2; c2++) {
        if (r2 === -2 || r2 === 2 || c2 === -2 || c2 === 2 || r2 === 0 && c2 === 0) {
          matrix.set(row + r2, col + c2, true, true);
        } else {
          matrix.set(row + r2, col + c2, false, true);
        }
      }
    }
  }
}
function setupVersionInfo(matrix, version2) {
  const size2 = matrix.size;
  const bits = Version.getEncodedBits(version2);
  let row, col, mod;
  for (let i = 0; i < 18; i++) {
    row = Math.floor(i / 3);
    col = i % 3 + size2 - 8 - 3;
    mod = (bits >> i & 1) === 1;
    matrix.set(row, col, mod, true);
    matrix.set(col, row, mod, true);
  }
}
function setupFormatInfo(matrix, errorCorrectionLevel2, maskPattern2) {
  const size2 = matrix.size;
  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel2, maskPattern2);
  let i, mod;
  for (i = 0; i < 15; i++) {
    mod = (bits >> i & 1) === 1;
    if (i < 6) {
      matrix.set(i, 8, mod, true);
    } else if (i < 8) {
      matrix.set(i + 1, 8, mod, true);
    } else {
      matrix.set(size2 - 15 + i, 8, mod, true);
    }
    if (i < 8) {
      matrix.set(8, size2 - i - 1, mod, true);
    } else if (i < 9) {
      matrix.set(8, 15 - i - 1 + 1, mod, true);
    } else {
      matrix.set(8, 15 - i - 1, mod, true);
    }
  }
  matrix.set(size2 - 8, 8, 1, true);
}
function setupData(matrix, data) {
  const size2 = matrix.size;
  let inc = -1;
  let row = size2 - 1;
  let bitIndex = 7;
  let byteIndex = 0;
  for (let col = size2 - 1; col > 0; col -= 2) {
    if (col === 6)
      col--;
    while (true) {
      for (let c2 = 0; c2 < 2; c2++) {
        if (!matrix.isReserved(row, col - c2)) {
          let dark = false;
          if (byteIndex < data.length) {
            dark = (data[byteIndex] >>> bitIndex & 1) === 1;
          }
          matrix.set(row, col - c2, dark);
          bitIndex--;
          if (bitIndex === -1) {
            byteIndex++;
            bitIndex = 7;
          }
        }
      }
      row += inc;
      if (row < 0 || size2 <= row) {
        row -= inc;
        inc = -inc;
        break;
      }
    }
  }
}
function createData(version2, errorCorrectionLevel2, segments2) {
  const buffer = new BitBuffer();
  segments2.forEach(function (data) {
    buffer.put(data.mode.bit, 4);
    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version2));
    data.write(buffer);
  });
  const totalCodewords = Utils$1.getSymbolTotalCodewords(version2);
  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version2, errorCorrectionLevel2);
  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
    buffer.put(0, 4);
  }
  while (buffer.getLengthInBits() % 8 !== 0) {
    buffer.putBit(0);
  }
  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;
  for (let i = 0; i < remainingByte; i++) {
    buffer.put(i % 2 ? 17 : 236, 8);
  }
  return createCodewords(buffer, version2, errorCorrectionLevel2);
}
function createCodewords(bitBuffer2, version2, errorCorrectionLevel2) {
  const totalCodewords = Utils$1.getSymbolTotalCodewords(version2);
  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version2, errorCorrectionLevel2);
  const dataTotalCodewords = totalCodewords - ecTotalCodewords;
  const ecTotalBlocks = ECCode.getBlocksCount(version2, errorCorrectionLevel2);
  const blocksInGroup2 = totalCodewords % ecTotalBlocks;
  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;
  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;
  const rs = new ReedSolomonEncoder(ecCount);
  let offset = 0;
  const dcData = new Array(ecTotalBlocks);
  const ecData = new Array(ecTotalBlocks);
  let maxDataSize = 0;
  const buffer = new Uint8Array(bitBuffer2.buffer);
  for (let b2 = 0; b2 < ecTotalBlocks; b2++) {
    const dataSize = b2 < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;
    dcData[b2] = buffer.slice(offset, offset + dataSize);
    ecData[b2] = rs.encode(dcData[b2]);
    offset += dataSize;
    maxDataSize = Math.max(maxDataSize, dataSize);
  }
  const data = new Uint8Array(totalCodewords);
  let index2 = 0;
  let i, r2;
  for (i = 0; i < maxDataSize; i++) {
    for (r2 = 0; r2 < ecTotalBlocks; r2++) {
      if (i < dcData[r2].length) {
        data[index2++] = dcData[r2][i];
      }
    }
  }
  for (i = 0; i < ecCount; i++) {
    for (r2 = 0; r2 < ecTotalBlocks; r2++) {
      data[index2++] = ecData[r2][i];
    }
  }
  return data;
}
function createSymbol(data, version2, errorCorrectionLevel2, maskPattern2) {
  let segments2;
  if (Array.isArray(data)) {
    segments2 = Segments.fromArray(data);
  } else if (typeof data === "string") {
    let estimatedVersion = version2;
    if (!estimatedVersion) {
      const rawSegments = Segments.rawSplit(data);
      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel2);
    }
    segments2 = Segments.fromString(data, estimatedVersion || 40);
  } else {
    throw new Error("Invalid data");
  }
  const bestVersion = Version.getBestVersionForData(segments2, errorCorrectionLevel2);
  if (!bestVersion) {
    throw new Error("The amount of data is too big to be stored in a QR Code");
  }
  if (!version2) {
    version2 = bestVersion;
  } else if (version2 < bestVersion) {
    throw new Error(
      "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + bestVersion + ".\n"
    );
  }
  const dataBits = createData(version2, errorCorrectionLevel2, segments2);
  const moduleCount = Utils$1.getSymbolSize(version2);
  const modules = new BitMatrix(moduleCount);
  setupFinderPattern(modules, version2);
  setupTimingPattern(modules);
  setupAlignmentPattern(modules, version2);
  setupFormatInfo(modules, errorCorrectionLevel2, 0);
  if (version2 >= 7) {
    setupVersionInfo(modules, version2);
  }
  setupData(modules, dataBits);
  if (isNaN(maskPattern2)) {
    maskPattern2 = MaskPattern.getBestMask(
      modules,
      setupFormatInfo.bind(null, modules, errorCorrectionLevel2)
    );
  }
  MaskPattern.applyMask(maskPattern2, modules);
  setupFormatInfo(modules, errorCorrectionLevel2, maskPattern2);
  return {
    modules,
    version: version2,
    errorCorrectionLevel: errorCorrectionLevel2,
    maskPattern: maskPattern2,
    segments: segments2
  };
}
qrcode.create = function create(data, options2) {
  if (typeof data === "undefined" || data === "") {
    throw new Error("No input text");
  }
  let errorCorrectionLevel2 = ECLevel.M;
  let version2;
  let mask;
  if (typeof options2 !== "undefined") {
    errorCorrectionLevel2 = ECLevel.from(options2.errorCorrectionLevel, ECLevel.M);
    version2 = Version.from(options2.version);
    mask = MaskPattern.from(options2.maskPattern);
    if (options2.toSJISFunc) {
      Utils$1.setToSJISFunction(options2.toSJISFunc);
    }
  }
  return createSymbol(data, version2, errorCorrectionLevel2, mask);
};
var canvas = {};
var utils = {};
(function (exports) {
  function hex2rgba(hex2) {
    if (typeof hex2 === "number") {
      hex2 = hex2.toString();
    }
    if (typeof hex2 !== "string") {
      throw new Error("Color should be defined as hex string");
    }
    let hexCode = hex2.slice().replace("#", "").split("");
    if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
      throw new Error("Invalid hex color: " + hex2);
    }
    if (hexCode.length === 3 || hexCode.length === 4) {
      hexCode = Array.prototype.concat.apply([], hexCode.map(function (c2) {
        return [c2, c2];
      }));
    }
    if (hexCode.length === 6)
      hexCode.push("F", "F");
    const hexValue = parseInt(hexCode.join(""), 16);
    return {
      r: hexValue >> 24 & 255,
      g: hexValue >> 16 & 255,
      b: hexValue >> 8 & 255,
      a: hexValue & 255,
      hex: "#" + hexCode.slice(0, 6).join("")
    };
  }
  exports.getOptions = function getOptions(options2) {
    if (!options2)
      options2 = {};
    if (!options2.color)
      options2.color = {};
    const margin2 = typeof options2.margin === "undefined" || options2.margin === null || options2.margin < 0 ? 4 : options2.margin;
    const width = options2.width && options2.width >= 21 ? options2.width : void 0;
    const scale = options2.scale || 4;
    return {
      width,
      scale: width ? 4 : scale,
      margin: margin2,
      color: {
        dark: hex2rgba(options2.color.dark || "#000000ff"),
        light: hex2rgba(options2.color.light || "#ffffffff")
      },
      type: options2.type,
      rendererOpts: options2.rendererOpts || {}
    };
  };
  exports.getScale = function getScale(qrSize, opts) {
    return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
  };
  exports.getImageWidth = function getImageWidth(qrSize, opts) {
    const scale = exports.getScale(qrSize, opts);
    return Math.floor((qrSize + opts.margin * 2) * scale);
  };
  exports.qrToImageData = function qrToImageData(imgData, qr, opts) {
    const size2 = qr.modules.size;
    const data = qr.modules.data;
    const scale = exports.getScale(size2, opts);
    const symbolSize = Math.floor((size2 + opts.margin * 2) * scale);
    const scaledMargin = opts.margin * scale;
    const palette = [opts.color.light, opts.color.dark];
    for (let i = 0; i < symbolSize; i++) {
      for (let j = 0; j < symbolSize; j++) {
        let posDst = (i * symbolSize + j) * 4;
        let pxColor = opts.color.light;
        if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {
          const iSrc = Math.floor((i - scaledMargin) / scale);
          const jSrc = Math.floor((j - scaledMargin) / scale);
          pxColor = palette[data[iSrc * size2 + jSrc] ? 1 : 0];
        }
        imgData[posDst++] = pxColor.r;
        imgData[posDst++] = pxColor.g;
        imgData[posDst++] = pxColor.b;
        imgData[posDst] = pxColor.a;
      }
    }
  };
})(utils);
(function (exports) {
  const Utils2 = utils;
  function clearCanvas(ctx, canvas2, size2) {
    ctx.clearRect(0, 0, canvas2.width, canvas2.height);
    if (!canvas2.style)
      canvas2.style = {};
    canvas2.height = size2;
    canvas2.width = size2;
    canvas2.style.height = size2 + "px";
    canvas2.style.width = size2 + "px";
  }
  function getCanvasElement() {
    try {
      return document.createElement("canvas");
    } catch (e2) {
      throw new Error("You need to specify a canvas element");
    }
  }
  exports.render = function render3(qrData, canvas2, options2) {
    let opts = options2;
    let canvasEl = canvas2;
    if (typeof opts === "undefined" && (!canvas2 || !canvas2.getContext)) {
      opts = canvas2;
      canvas2 = void 0;
    }
    if (!canvas2) {
      canvasEl = getCanvasElement();
    }
    opts = Utils2.getOptions(opts);
    const size2 = Utils2.getImageWidth(qrData.modules.size, opts);
    const ctx = canvasEl.getContext("2d");
    const image = ctx.createImageData(size2, size2);
    Utils2.qrToImageData(image.data, qrData, opts);
    clearCanvas(ctx, canvasEl, size2);
    ctx.putImageData(image, 0, 0);
    return canvasEl;
  };
  exports.renderToDataURL = function renderToDataURL(qrData, canvas2, options2) {
    let opts = options2;
    if (typeof opts === "undefined" && (!canvas2 || !canvas2.getContext)) {
      opts = canvas2;
      canvas2 = void 0;
    }
    if (!opts)
      opts = {};
    const canvasEl = exports.render(qrData, canvas2, opts);
    const type4 = opts.type || "image/png";
    const rendererOpts = opts.rendererOpts || {};
    return canvasEl.toDataURL(type4, rendererOpts.quality);
  };
})(canvas);
var svgTag = {};
const Utils = utils;
function getColorAttrib(color, attrib) {
  const alpha = color.a / 255;
  const str2 = attrib + '="' + color.hex + '"';
  return alpha < 1 ? str2 + " " + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str2;
}
function svgCmd(cmd, x, y) {
  let str2 = cmd + x;
  if (typeof y !== "undefined")
    str2 += " " + y;
  return str2;
}
function qrToPath(data, size2, margin2) {
  let path = "";
  let moveBy = 0;
  let newRow = false;
  let lineLength = 0;
  for (let i = 0; i < data.length; i++) {
    const col = Math.floor(i % size2);
    const row = Math.floor(i / size2);
    if (!col && !newRow)
      newRow = true;
    if (data[i]) {
      lineLength++;
      if (!(i > 0 && col > 0 && data[i - 1])) {
        path += newRow ? svgCmd("M", col + margin2, 0.5 + row + margin2) : svgCmd("m", moveBy, 0);
        moveBy = 0;
        newRow = false;
      }
      if (!(col + 1 < size2 && data[i + 1])) {
        path += svgCmd("h", lineLength);
        lineLength = 0;
      }
    } else {
      moveBy++;
    }
  }
  return path;
}
svgTag.render = function render2(qrData, options2, cb) {
  const opts = Utils.getOptions(options2);
  const size2 = qrData.modules.size;
  const data = qrData.modules.data;
  const qrcodesize = size2 + opts.margin * 2;
  const bg = !opts.color.light.a ? "" : "<path " + getColorAttrib(opts.color.light, "fill") + ' d="M0 0h' + qrcodesize + "v" + qrcodesize + 'H0z"/>';
  const path = "<path " + getColorAttrib(opts.color.dark, "stroke") + ' d="' + qrToPath(data, size2, opts.margin) + '"/>';
  const viewBox = 'viewBox="0 0 ' + qrcodesize + " " + qrcodesize + '"';
  const width = !opts.width ? "" : 'width="' + opts.width + '" height="' + opts.width + '" ';
  const svgTag2 = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + "</svg>\n";
  if (typeof cb === "function") {
    cb(null, svgTag2);
  }
  return svgTag2;
};
const canPromise = canPromise$1;
const QRCode = qrcode;
const CanvasRenderer = canvas;
const SvgRenderer = svgTag;
function renderCanvas(renderFunc, canvas2, text2, opts, cb) {
  const args = [].slice.call(arguments, 1);
  const argsNum = args.length;
  const isLastArgCb = typeof args[argsNum - 1] === "function";
  if (!isLastArgCb && !canPromise()) {
    throw new Error("Callback required as last argument");
  }
  if (isLastArgCb) {
    if (argsNum < 2) {
      throw new Error("Too few arguments provided");
    }
    if (argsNum === 2) {
      cb = text2;
      text2 = canvas2;
      canvas2 = opts = void 0;
    } else if (argsNum === 3) {
      if (canvas2.getContext && typeof cb === "undefined") {
        cb = opts;
        opts = void 0;
      } else {
        cb = opts;
        opts = text2;
        text2 = canvas2;
        canvas2 = void 0;
      }
    }
  } else {
    if (argsNum < 1) {
      throw new Error("Too few arguments provided");
    }
    if (argsNum === 1) {
      text2 = canvas2;
      canvas2 = opts = void 0;
    } else if (argsNum === 2 && !canvas2.getContext) {
      opts = text2;
      text2 = canvas2;
      canvas2 = void 0;
    }
    return new Promise(function (resolve, reject) {
      try {
        const data = QRCode.create(text2, opts);
        resolve(renderFunc(data, canvas2, opts));
      } catch (e2) {
        reject(e2);
      }
    });
  }
  try {
    const data = QRCode.create(text2, opts);
    cb(null, renderFunc(data, canvas2, opts));
  } catch (e2) {
    cb(e2);
  }
}
browser.create = QRCode.create;
browser.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
browser.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);
browser.toString = renderCanvas.bind(null, function (data, _, opts) {
  return SvgRenderer.render(data, opts);
});
const svg_theme_fill_color$Z = "_svg_theme_fill_color_l1ucn_3";
const container$5 = "_container_l1ucn_55";
const header$2 = "_header_l1ucn_70";
const css$X = {
  svg_theme_fill_color: svg_theme_fill_color$Z,
  container: container$5,
  header: header$2
};
const svg_theme_fill_color$Y = "_svg_theme_fill_color_4xvtg_3";
const C_h5_round_tabs = "_C_h5_round_tabs_4xvtg_55";
const css$W = {
  svg_theme_fill_color: svg_theme_fill_color$Y,
  C_h5_round_tabs
};
const Tabs = ({
  options: options2 = [],
  width = "",
  gap = 20,
  value: value2,
  onClick
}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    style: { display: "flex", overflowX: "scroll" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$W.C_h5_round_tabs, children: options2.map((item2, index2) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: "tab".concat(value2 === item2.value ? "_active" : "", " button"),
            style: {
              width,
              marginRight: index2 === options2.length - 1 ? 0 : toPXBack(gap)
            },
            onClick: (e2) => {
              console.log("e :", e2);
              e2.stopPropagation();
              onClick(item2.value);
              e2.target.scrollIntoView({
                behavior: "smooth",
                inline: "center",
                block: "center"
              });
            },
            children: item2.label
          },
          index2
        );
      })
    })
  });
};
const Report = ({ setPage }) => {
  const timeRangeOptions = useTimeRangeOptions();
  const { token: token2 } = useUserInfoStore();
  const state2 = useReactive({
    reportArr: [
      {
        name: trans("新增直属会员"),
        key: "add_lvl1_num",
        total: "0",
        xiaoshu: 0
      },
      {
        name: trans("首充人数"),
        total: "0",
        key: "first_deposit_count",
        xiaoshu: 0
      },
      {
        name: trans("充值人次"),
        //充值人次
        total: "0",
        key: "deposit_mem_count",
        xiaoshu: 0
      },
      {
        name: trans("充值"),
        total: "0",
        key: "deposit_amount",
        xiaoshu: 2
      },
      {
        name: trans("业绩"),
        total: "0",
        key: "valid_bet_amount",
        xiaoshu: 2
      },
      // {
      //   name: trans('提款金额'),
      //   total: '0',
      //   key: 'withdraw',
      //   xiaoshu: 2
      // },
      {
        name: trans("佣金"),
        total: "0",
        key: "cg_rebate",
        xiaoshu: 2,
        colorClass: "yellow"
      }
    ],
    tableArr: [
      {
        title: trans("我的团队"),
        detailPage: "Member",
        //跳转至直属数据
        data: [
          {
            label: trans("总人数"),
            value: "0",
            xiaoshu: 0,
            key: "child_num"
          },
          {
            label: trans("直属人数"),
            value: "0",
            xiaoshu: 0,
            key: "child_lvl1_num"
          },
          {
            label: trans("其他人数"),
            value: "0",
            xiaoshu: 0,
            key: "child_other_num"
          }
        ]
      },
      {
        title: trans("业绩"),
        detailPage: "Income",
        //跳转至我的业绩
        data: [
          {
            label: trans("总收入"),
            value: "0",
            xiaoshu: 2,
            key: "child_validbet"
          },
          {
            label: trans("直属业绩"),
            value: "0",
            xiaoshu: 2,
            key: "child_lvl1_validbet"
          },
          {
            label: trans("其他业绩"),
            value: "0",
            xiaoshu: 2,
            key: "child_other_validbet"
          }
        ]
      },
      {
        title: trans("佣金"),
        detailPage: "Rebate",
        //跳转至我的佣金
        data: [
          {
            label: trans("佣金总额"),
            value: "0",
            xiaoshu: 2,
            key: "rebate_all",
            colorClass: "yellow"
          },
          {
            label: trans("直属佣金"),
            value: "0",
            xiaoshu: 2,
            key: "rebate_lvl1",
            colorClass: "yellow"
          }
          // {
          //   label: trans('其他佣金'),
          //   value: '0',
          //   xiaoshu: 2,
          //   key: 'rebate_other',
          //   colorClass: 'yellow'
          // }
        ]
      }
    ]
  });
  const [timer2, setTimer] = reactExports.useState(timeRangeOptions[0].value);
  const changeTimer = (val) => {
    setTimer(val);
  };
  const getConfig = () => {
    if (!token2)
      return;
    postAgencyMydata({ time_flag: timer2 }).then(([res = {}, err]) => {
      const newArr = state2.reportArr.map((item2) => {
        return {
          ...item2,
          // 如果为成员数量则不需要保留两位小数
          total: customToFixed((res == null ? void 0 : res[item2.key]) || "0", item2.xiaoshu)
        };
      });
      state2.reportArr = newArr;
    });
  };
  const getTableData = async () => {
    if (!token2)
      return;
    const [res, err] = await postAgencyAlldata();
    console.log("res :", res);
    if (!err) {
      const newTableArr = state2.tableArr.map((table2) => {
        const newData = table2.data.map((item2) => {
          return {
            ...item2,
            // 如果为成员数量则不需要保留两位小数
            value: customToFixed((res == null ? void 0 : res[item2.key]) || "0", item2.xiaoshu)
          };
        });
        console.log(" newData :", newData);
        return {
          ...table2,
          data: newData
        };
      });
      state2.tableArr = newTableArr;
    }
  };
  reactExports.useEffect(() => {
    getConfig();
  }, [timer2]);
  reactExports.useEffect(() => {
    getTableData();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$X.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$X.header, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        Tabs,
        {
          options: timeRangeOptions,
          value: timer2,
          onClick: changeTimer,
          round: true,
          style: { border: 0 }
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: "report", children: state2.reportArr.map((item2) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "report_item", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "report_item_name", children: item2.name }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "report_item_total ".concat(item2.colorClass || "default"), children: item2.total })
          ]
        }, item2.key);
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "report_main", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "report_main_title", children: trans("数据概览") }),
        state2.tableArr.map((table2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "report_table", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "p",
              {
                className: "report_table_title",
                onClick: () => {
                  setPage(table2.detailPage);
                },
                children: [
                  table2.title,
                  " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightInMineIcon, { className: "report_table_title_icon" })
                ]
              }
            ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: "report_table_row", children: table2.data.map((col) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: "report_table_col", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "report_col_name", children: col.label }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "report_col_value ".concat(col.colorClass || "default"), children: col.value })
                  ]
                }, col.key);
              })
            })
            ]
          }, table2.title);
        })
      ]
    })
    ]
  });
};
const svg_theme_fill_color$X = "_svg_theme_fill_color_1p75e_3";
const bg1$3 = "_bg1_1p75e_55";
const timer$3 = "_timer_1p75e_55";
const topCtn = "_topCtn_1p75e_55";
const item$a = "_item_1p75e_55";
const input$3 = "_input_1p75e_55";
const bg2$3 = "_bg2_1p75e_125";
const vip$3 = "_vip_1p75e_125";
const color1$3 = "_color1_1p75e_195";
const white$1 = "_white_1p75e_195";
const color2$3 = "_color2_1p75e_265";
const grey$3 = "_grey_1p75e_265";
const color3$2 = "_color3_1p75e_335";
const xs$2 = "_xs_1p75e_335";
const yellow$2 = "_yellow_1p75e_402";
const fill1$4 = "_fill1_1p75e_472";
const copy$3 = "_copy_1p75e_472";
const borderColor1$4 = "_borderColor1_1p75e_539";
const container$4 = "_container_1p75e_606";
const search$4 = "_search_1p75e_612";
const searchBtn$3 = "_searchBtn_1p75e_617";
const ellipsis$3 = "_ellipsis_1p75e_644";
const label$3 = "_label_1p75e_644";
const wrapper$3 = "_wrapper_1p75e_656";
const list01 = "_list01_1p75e_673";
const leftCtn = "_leftCtn_1p75e_681";
const rightCtn = "_rightCtn_1p75e_685";
const id$3 = "_id_1p75e_690";
const totalBottom$3 = "_totalBottom_1p75e_726";
const openB$3 = "_openB_1p75e_735";
const bottomYj$3 = "_bottomYj_1p75e_738";
const bottomIcon$3 = "_bottomIcon_1p75e_742";
const bottomTxt$3 = "_bottomTxt_1p75e_902";
const bottomItem$3 = "_bottomItem_1p75e_1010";
const tNum$3 = "_tNum_1p75e_1022";
const values$2 = "_values_1p75e_1057";
const css$V = {
  svg_theme_fill_color: svg_theme_fill_color$X,
  bg1: bg1$3,
  timer: timer$3,
  topCtn,
  item: item$a,
  input: input$3,
  bg2: bg2$3,
  vip: vip$3,
  color1: color1$3,
  white: white$1,
  color2: color2$3,
  grey: grey$3,
  color3: color3$2,
  xs: xs$2,
  yellow: yellow$2,
  fill1: fill1$4,
  copy: copy$3,
  borderColor1: borderColor1$4,
  container: container$4,
  search: search$4,
  searchBtn: searchBtn$3,
  ellipsis: ellipsis$3,
  label: label$3,
  wrapper: wrapper$3,
  list01,
  leftCtn,
  rightCtn,
  id: id$3,
  totalBottom: totalBottom$3,
  openB: openB$3,
  bottomYj: bottomYj$3,
  bottomIcon: bottomIcon$3,
  bottomTxt: bottomTxt$3,
  bottomItem: bottomItem$3,
  tNum: tNum$3,
  values: values$2
};
const Income$2 = () => {
  const [page, setPage] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [uid2, setUsername] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [data, setData] = reactExports.useState([]);
  reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const { token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      // ty,
      start_time,
      end_time,
      page_size: 15,
      page: 1
      // uid,
    };
  }, [ty, uid2, start_time, end_time]);
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await myBet({ ...params, page });
    console.log("11", res);
    if (page === 1) {
      setTotal(res.t);
      setData(res.d || []);
      setTotalAgg(res.agg);
      return;
    }
    setData([...data, ...res.d]);
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$V.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$V.search, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$V.topCtn, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$V.list01, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$V.leftCtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { className: joinClass(css$V.timer), onChange: changeTime }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$V.ellipsis, css$V.rightCtn), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("总收入") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$V.white, children: customToFixed(totalAgg.child_validbet) })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$V.list01, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$V.ellipsis, css$V.leftCtn), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("D.直接") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.white), children: customToFixed(totalAgg.child_lvl1_validbet) })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$V.ellipsis, css$V.leftCtn), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("D.其他人") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$V.white, children: customToFixed(totalAgg.child_other_validbet) })
            ]
          })
          ]
        })
        ]
      })
    }),
      !(data == null ? void 0 : data.length) && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
      data.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
        className: css$V.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$V.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$V.ellipsis), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("结算日期") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$V.white, children: customFormatTimer(item2.report_time, "DD/MM/YYYY") })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$V.ellipsis), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("D.直接") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.values, css$V.yellow), children: customToFixed(item2.child_lvl1_validbet) }) })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$V.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$V.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("总收入") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$V.white, children: customToFixed(item2.child_validbet) })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$V.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.grey, css$V.label), children: trans("D.其他人") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$V.values, css$V.yellow), children: customToFixed(item2.child_other_validbet) }) })
            ]
          })
          ]
        })
        ]
      }, index2)),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            setPage(page + 1);
          }
        }
      )
    ]
  });
};
const svg_theme_fill_color$W = "_svg_theme_fill_color_1g6b4_3";
const bg1$2 = "_bg1_1g6b4_55";
const timer$2 = "_timer_1g6b4_55";
const item$9 = "_item_1g6b4_55";
const input$2 = "_input_1g6b4_55";
const bg2$2 = "_bg2_1g6b4_125";
const vip$2 = "_vip_1g6b4_125";
const color1$2 = "_color1_1g6b4_195";
const color2$2 = "_color2_1g6b4_265";
const totalBottom$2 = "_totalBottom_1g6b4_265";
const bottomTxt$2 = "_bottomTxt_1g6b4_265";
const bottomItem$2 = "_bottomItem_1g6b4_265";
const grey$2 = "_grey_1g6b4_265";
const color3$1 = "_color3_1g6b4_335";
const xs$1 = "_xs_1g6b4_335";
const fill1$3 = "_fill1_1g6b4_405";
const copy$2 = "_copy_1g6b4_405";
const borderColor1$3 = "_borderColor1_1g6b4_475";
const container$3 = "_container_1g6b4_542";
const search$3 = "_search_1g6b4_548";
const searchBtn$2 = "_searchBtn_1g6b4_553";
const ellipsis$2 = "_ellipsis_1g6b4_580";
const wrapper$2 = "_wrapper_1g6b4_592";
const id$2 = "_id_1g6b4_600";
const label$2 = "_label_1g6b4_610";
const openB$2 = "_openB_1g6b4_645";
const bottomYj$2 = "_bottomYj_1g6b4_648";
const bottomIcon$2 = "_bottomIcon_1g6b4_652";
const tNum$2 = "_tNum_1g6b4_944";
const values$1 = "_values_1g6b4_982";
const css$U = {
  svg_theme_fill_color: svg_theme_fill_color$W,
  bg1: bg1$2,
  timer: timer$2,
  item: item$9,
  input: input$2,
  bg2: bg2$2,
  vip: vip$2,
  color1: color1$2,
  color2: color2$2,
  totalBottom: totalBottom$2,
  bottomTxt: bottomTxt$2,
  bottomItem: bottomItem$2,
  grey: grey$2,
  color3: color3$1,
  xs: xs$1,
  fill1: fill1$3,
  copy: copy$2,
  borderColor1: borderColor1$3,
  container: container$3,
  search: search$3,
  searchBtn: searchBtn$2,
  ellipsis: ellipsis$2,
  wrapper: wrapper$2,
  id: id$2,
  label: label$2,
  openB: openB$2,
  bottomYj: bottomYj$2,
  bottomIcon: bottomIcon$2,
  tNum: tNum$2,
  values: values$1
};
var clipboard = { exports: {} };
/*!
 * clipboard.js v2.0.11
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
(function (module, exports) {
  (function webpackUniversalModuleDefinition(root2, factory) {
    module.exports = factory();
  })(commonjsGlobal, function () {
    return (
      /******/
      function () {
        var __webpack_modules__ = {
          /***/
          686: (
            /***/
            function (__unused_webpack_module, __webpack_exports__, __webpack_require__2) {
              __webpack_require__2.d(__webpack_exports__, {
                "default": function () {
                  return (
                    /* binding */
                    clipboard2
                  );
                }
              });
              var tiny_emitter = __webpack_require__2(279);
              var tiny_emitter_default = /* @__PURE__ */ __webpack_require__2.n(tiny_emitter);
              var listen = __webpack_require__2(370);
              var listen_default = /* @__PURE__ */ __webpack_require__2.n(listen);
              var src_select = __webpack_require__2(817);
              var select_default = /* @__PURE__ */ __webpack_require__2.n(src_select);
              function command(type4) {
                try {
                  return document.execCommand(type4);
                } catch (err) {
                  return false;
                }
              }
              var ClipboardActionCut = function ClipboardActionCut2(target) {
                var selectedText = select_default()(target);
                command("cut");
                return selectedText;
              };
              var actions_cut = ClipboardActionCut;
              function createFakeElement(value2) {
                var isRTL = document.documentElement.getAttribute("dir") === "rtl";
                var fakeElement = document.createElement("textarea");
                fakeElement.style.fontSize = "12pt";
                fakeElement.style.border = "0";
                fakeElement.style.padding = "0";
                fakeElement.style.margin = "0";
                fakeElement.style.position = "absolute";
                fakeElement.style[isRTL ? "right" : "left"] = "-9999px";
                var yPosition = window.pageYOffset || document.documentElement.scrollTop;
                fakeElement.style.top = "".concat(yPosition, "px");
                fakeElement.setAttribute("readonly", "");
                fakeElement.value = value2;
                return fakeElement;
              }
              var fakeCopyAction = function fakeCopyAction2(value2, options2) {
                var fakeElement = createFakeElement(value2);
                options2.container.appendChild(fakeElement);
                var selectedText = select_default()(fakeElement);
                command("copy");
                fakeElement.remove();
                return selectedText;
              };
              var ClipboardActionCopy = function ClipboardActionCopy2(target) {
                var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                  container: document.body
                };
                var selectedText = "";
                if (typeof target === "string") {
                  selectedText = fakeCopyAction(target, options2);
                } else if (target instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(target === null || target === void 0 ? void 0 : target.type)) {
                  selectedText = fakeCopyAction(target.value, options2);
                } else {
                  selectedText = select_default()(target);
                  command("copy");
                }
                return selectedText;
              };
              var actions_copy = ClipboardActionCopy;
              function _typeof2(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof2 = function _typeof3(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof2 = function _typeof3(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof2(obj);
              }
              var ClipboardActionDefault = function ClipboardActionDefault2() {
                var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                var _options$action = options2.action, action = _options$action === void 0 ? "copy" : _options$action, container2 = options2.container, target = options2.target, text2 = options2.text;
                if (action !== "copy" && action !== "cut") {
                  throw new Error('Invalid "action" value, use either "copy" or "cut"');
                }
                if (target !== void 0) {
                  if (target && _typeof2(target) === "object" && target.nodeType === 1) {
                    if (action === "copy" && target.hasAttribute("disabled")) {
                      throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                    }
                    if (action === "cut" && (target.hasAttribute("readonly") || target.hasAttribute("disabled"))) {
                      throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                    }
                  } else {
                    throw new Error('Invalid "target" value, use a valid Element');
                  }
                }
                if (text2) {
                  return actions_copy(text2, {
                    container: container2
                  });
                }
                if (target) {
                  return action === "cut" ? actions_cut(target) : actions_copy(target, {
                    container: container2
                  });
                }
              };
              var actions_default = ClipboardActionDefault;
              function clipboard_typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  clipboard_typeof = function _typeof3(obj2) {
                    return typeof obj2;
                  };
                } else {
                  clipboard_typeof = function _typeof3(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return clipboard_typeof(obj);
              }
              function _classCallCheck2(instance2, Constructor) {
                if (!(instance2 instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _defineProperties2(target, props) {
                for (var i = 0; i < props.length; i++) {
                  var descriptor = props[i];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor)
                    descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              function _createClass2(Constructor, protoProps, staticProps) {
                if (protoProps)
                  _defineProperties2(Constructor.prototype, protoProps);
                if (staticProps)
                  _defineProperties2(Constructor, staticProps);
                return Constructor;
              }
              function _inherits2(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function");
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
                if (superClass)
                  _setPrototypeOf2(subClass, superClass);
              }
              function _setPrototypeOf2(o, p2) {
                _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p3) {
                  o2.__proto__ = p3;
                  return o2;
                };
                return _setPrototypeOf2(o, p2);
              }
              function _createSuper2(Derived) {
                var hasNativeReflectConstruct = _isNativeReflectConstruct2();
                return function _createSuperInternal() {
                  var Super = _getPrototypeOf2(Derived), result;
                  if (hasNativeReflectConstruct) {
                    var NewTarget = _getPrototypeOf2(this).constructor;
                    result = Reflect.construct(Super, arguments, NewTarget);
                  } else {
                    result = Super.apply(this, arguments);
                  }
                  return _possibleConstructorReturn2(this, result);
                };
              }
              function _possibleConstructorReturn2(self2, call2) {
                if (call2 && (clipboard_typeof(call2) === "object" || typeof call2 === "function")) {
                  return call2;
                }
                return _assertThisInitialized2(self2);
              }
              function _assertThisInitialized2(self2) {
                if (self2 === void 0) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return self2;
              }
              function _isNativeReflectConstruct2() {
                if (typeof Reflect === "undefined" || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if (typeof Proxy === "function")
                  return true;
                try {
                  Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                  }));
                  return true;
                } catch (e2) {
                  return false;
                }
              }
              function _getPrototypeOf2(o) {
                _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
                  return o2.__proto__ || Object.getPrototypeOf(o2);
                };
                return _getPrototypeOf2(o);
              }
              function getAttributeValue(suffix2, element) {
                var attribute = "data-clipboard-".concat(suffix2);
                if (!element.hasAttribute(attribute)) {
                  return;
                }
                return element.getAttribute(attribute);
              }
              var Clipboard = /* @__PURE__ */ function (_Emitter) {
                _inherits2(Clipboard2, _Emitter);
                var _super = _createSuper2(Clipboard2);
                function Clipboard2(trigger2, options2) {
                  var _this;
                  _classCallCheck2(this, Clipboard2);
                  _this = _super.call(this);
                  _this.resolveOptions(options2);
                  _this.listenClick(trigger2);
                  return _this;
                }
                _createClass2(Clipboard2, [{
                  key: "resolveOptions",
                  value: function resolveOptions() {
                    var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    this.action = typeof options2.action === "function" ? options2.action : this.defaultAction;
                    this.target = typeof options2.target === "function" ? options2.target : this.defaultTarget;
                    this.text = typeof options2.text === "function" ? options2.text : this.defaultText;
                    this.container = clipboard_typeof(options2.container) === "object" ? options2.container : document.body;
                  }
                  /**
                   * Adds a click event listener to the passed trigger.
                   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
                   */
                }, {
                  key: "listenClick",
                  value: function listenClick(trigger2) {
                    var _this2 = this;
                    this.listener = listen_default()(trigger2, "click", function (e2) {
                      return _this2.onClick(e2);
                    });
                  }
                  /**
                   * Defines a new `ClipboardAction` on each click event.
                   * @param {Event} e
                   */
                }, {
                  key: "onClick",
                  value: function onClick(e2) {
                    var trigger2 = e2.delegateTarget || e2.currentTarget;
                    var action = this.action(trigger2) || "copy";
                    var text2 = actions_default({
                      action,
                      container: this.container,
                      target: this.target(trigger2),
                      text: this.text(trigger2)
                    });
                    this.emit(text2 ? "success" : "error", {
                      action,
                      text: text2,
                      trigger: trigger2,
                      clearSelection: function clearSelection() {
                        if (trigger2) {
                          trigger2.focus();
                        }
                        window.getSelection().removeAllRanges();
                      }
                    });
                  }
                  /**
                   * Default `action` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultAction",
                  value: function defaultAction(trigger2) {
                    return getAttributeValue("action", trigger2);
                  }
                  /**
                   * Default `target` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultTarget",
                  value: function defaultTarget(trigger2) {
                    var selector = getAttributeValue("target", trigger2);
                    if (selector) {
                      return document.querySelector(selector);
                    }
                  }
                  /**
                   * Allow fire programmatically a copy action
                   * @param {String|HTMLElement} target
                   * @param {Object} options
                   * @returns Text copied.
                   */
                }, {
                  key: "defaultText",
                  /**
                   * Default `text` lookup function.
                   * @param {Element} trigger
                   */
                  value: function defaultText(trigger2) {
                    return getAttributeValue("text", trigger2);
                  }
                  /**
                   * Destroy lifecycle.
                   */
                }, {
                  key: "destroy",
                  value: function destroy() {
                    this.listener.destroy();
                  }
                }], [{
                  key: "copy",
                  value: function copy2(target) {
                    var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      container: document.body
                    };
                    return actions_copy(target, options2);
                  }
                  /**
                   * Allow fire programmatically a cut action
                   * @param {String|HTMLElement} target
                   * @returns Text cutted.
                   */
                }, {
                  key: "cut",
                  value: function cut(target) {
                    return actions_cut(target);
                  }
                  /**
                   * Returns the support of the given action, or all actions if no action is
                   * given.
                   * @param {String} [action]
                   */
                }, {
                  key: "isSupported",
                  value: function isSupported() {
                    var action = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ["copy", "cut"];
                    var actions = typeof action === "string" ? [action] : action;
                    var support = !!document.queryCommandSupported;
                    actions.forEach(function (action2) {
                      support = support && !!document.queryCommandSupported(action2);
                    });
                    return support;
                  }
                }]);
                return Clipboard2;
              }(tiny_emitter_default());
              var clipboard2 = Clipboard;
            }
          ),
          /***/
          828: (
            /***/
            function (module2) {
              var DOCUMENT_NODE_TYPE = 9;
              if (typeof Element !== "undefined" && !Element.prototype.matches) {
                var proto = Element.prototype;
                proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector;
              }
              function closest(element, selector) {
                while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
                  if (typeof element.matches === "function" && element.matches(selector)) {
                    return element;
                  }
                  element = element.parentNode;
                }
              }
              module2.exports = closest;
            }
          ),
          /***/
          438: (
            /***/
            function (module2, __unused_webpack_exports, __webpack_require__2) {
              var closest = __webpack_require__2(828);
              function _delegate(element, selector, type4, callback, useCapture) {
                var listenerFn = listener.apply(this, arguments);
                element.addEventListener(type4, listenerFn, useCapture);
                return {
                  destroy: function () {
                    element.removeEventListener(type4, listenerFn, useCapture);
                  }
                };
              }
              function delegate(elements, selector, type4, callback, useCapture) {
                if (typeof elements.addEventListener === "function") {
                  return _delegate.apply(null, arguments);
                }
                if (typeof type4 === "function") {
                  return _delegate.bind(null, document).apply(null, arguments);
                }
                if (typeof elements === "string") {
                  elements = document.querySelectorAll(elements);
                }
                return Array.prototype.map.call(elements, function (element) {
                  return _delegate(element, selector, type4, callback, useCapture);
                });
              }
              function listener(element, selector, type4, callback) {
                return function (e2) {
                  e2.delegateTarget = closest(e2.target, selector);
                  if (e2.delegateTarget) {
                    callback.call(element, e2);
                  }
                };
              }
              module2.exports = delegate;
            }
          ),
          /***/
          879: (
            /***/
            function (__unused_webpack_module, exports2) {
              exports2.node = function (value2) {
                return value2 !== void 0 && value2 instanceof HTMLElement && value2.nodeType === 1;
              };
              exports2.nodeList = function (value2) {
                var type4 = Object.prototype.toString.call(value2);
                return value2 !== void 0 && (type4 === "[object NodeList]" || type4 === "[object HTMLCollection]") && "length" in value2 && (value2.length === 0 || exports2.node(value2[0]));
              };
              exports2.string = function (value2) {
                return typeof value2 === "string" || value2 instanceof String;
              };
              exports2.fn = function (value2) {
                var type4 = Object.prototype.toString.call(value2);
                return type4 === "[object Function]";
              };
            }
          ),
          /***/
          370: (
            /***/
            function (module2, __unused_webpack_exports, __webpack_require__2) {
              var is = __webpack_require__2(879);
              var delegate = __webpack_require__2(438);
              function listen(target, type4, callback) {
                if (!target && !type4 && !callback) {
                  throw new Error("Missing required arguments");
                }
                if (!is.string(type4)) {
                  throw new TypeError("Second argument must be a String");
                }
                if (!is.fn(callback)) {
                  throw new TypeError("Third argument must be a Function");
                }
                if (is.node(target)) {
                  return listenNode(target, type4, callback);
                } else if (is.nodeList(target)) {
                  return listenNodeList(target, type4, callback);
                } else if (is.string(target)) {
                  return listenSelector(target, type4, callback);
                } else {
                  throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
                }
              }
              function listenNode(node2, type4, callback) {
                node2.addEventListener(type4, callback);
                return {
                  destroy: function () {
                    node2.removeEventListener(type4, callback);
                  }
                };
              }
              function listenNodeList(nodeList, type4, callback) {
                Array.prototype.forEach.call(nodeList, function (node2) {
                  node2.addEventListener(type4, callback);
                });
                return {
                  destroy: function () {
                    Array.prototype.forEach.call(nodeList, function (node2) {
                      node2.removeEventListener(type4, callback);
                    });
                  }
                };
              }
              function listenSelector(selector, type4, callback) {
                return delegate(document.body, selector, type4, callback);
              }
              module2.exports = listen;
            }
          ),
          /***/
          817: (
            /***/
            function (module2) {
              function select2(element) {
                var selectedText;
                if (element.nodeName === "SELECT") {
                  element.focus();
                  selectedText = element.value;
                } else if (element.nodeName === "INPUT" || element.nodeName === "TEXTAREA") {
                  var isReadOnly = element.hasAttribute("readonly");
                  if (!isReadOnly) {
                    element.setAttribute("readonly", "");
                  }
                  element.select();
                  element.setSelectionRange(0, element.value.length);
                  if (!isReadOnly) {
                    element.removeAttribute("readonly");
                  }
                  selectedText = element.value;
                } else {
                  if (element.hasAttribute("contenteditable")) {
                    element.focus();
                  }
                  var selection = window.getSelection();
                  var range3 = document.createRange();
                  range3.selectNodeContents(element);
                  selection.removeAllRanges();
                  selection.addRange(range3);
                  selectedText = selection.toString();
                }
                return selectedText;
              }
              module2.exports = select2;
            }
          ),
          /***/
          279: (
            /***/
            function (module2) {
              function E() {
              }
              E.prototype = {
                on: function (name2, callback, ctx) {
                  var e2 = this.e || (this.e = {});
                  (e2[name2] || (e2[name2] = [])).push({
                    fn: callback,
                    ctx
                  });
                  return this;
                },
                once: function (name2, callback, ctx) {
                  var self2 = this;
                  function listener() {
                    self2.off(name2, listener);
                    callback.apply(ctx, arguments);
                  }
                  listener._ = callback;
                  return this.on(name2, listener, ctx);
                },
                emit: function (name2) {
                  var data = [].slice.call(arguments, 1);
                  var evtArr = ((this.e || (this.e = {}))[name2] || []).slice();
                  var i = 0;
                  var len = evtArr.length;
                  for (i; i < len; i++) {
                    evtArr[i].fn.apply(evtArr[i].ctx, data);
                  }
                  return this;
                },
                off: function (name2, callback) {
                  var e2 = this.e || (this.e = {});
                  var evts = e2[name2];
                  var liveEvents = [];
                  if (evts && callback) {
                    for (var i = 0, len = evts.length; i < len; i++) {
                      if (evts[i].fn !== callback && evts[i].fn._ !== callback)
                        liveEvents.push(evts[i]);
                    }
                  }
                  liveEvents.length ? e2[name2] = liveEvents : delete e2[name2];
                  return this;
                }
              };
              module2.exports = E;
              module2.exports.TinyEmitter = E;
            }
          )
          /******/
        };
        var __webpack_module_cache__ = {};
        function __webpack_require__(moduleId) {
          if (__webpack_module_cache__[moduleId]) {
            return __webpack_module_cache__[moduleId].exports;
          }
          var module2 = __webpack_module_cache__[moduleId] = {
            /******/
            // no module.id needed
            /******/
            // no module.loaded needed
            /******/
            exports: {}
            /******/
          };
          __webpack_modules__[moduleId](module2, module2.exports, __webpack_require__);
          return module2.exports;
        }
        !function () {
          __webpack_require__.n = function (module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function () {
                return module2["default"];
              }
            ) : (
              /******/
              function () {
                return module2;
              }
            );
            __webpack_require__.d(getter, { a: getter });
            return getter;
          };
        }();
        !function () {
          __webpack_require__.d = function (exports2, definition) {
            for (var key in definition) {
              if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key)) {
                Object.defineProperty(exports2, key, { enumerable: true, get: definition[key] });
              }
            }
          };
        }();
        !function () {
          __webpack_require__.o = function (obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
          };
        }();
        return __webpack_require__(686);
      }().default
    );
  });
})(clipboard);
var clipboardExports = clipboard.exports;
const Income$1 = () => {
  const [page, setPage] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [uid2, setUsername] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [data, setData] = reactExports.useState([]);
  const [isShowTotal, setIsShowTotal] = reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const { token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time,
      page_size: 15,
      uid: uid2
    };
  }, [ty, uid2, start_time, end_time]);
  const handleInput = (e2) => {
    console.log(e2.target.value);
    if (!e2.target.value) {
      setUsername(e2.target.value);
    }
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      setUsername(event.target.value);
    }
  };
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await postDirectAgencyFinance({ ...params, page });
    if (page === 1) {
      setTotal(res.t);
      setData(res.d || []);
      setTotalAgg(res.agg);
      return;
    }
    setData([...data, ...res.d]);
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$U.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$U.search, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { className: css$U.timer, onChange: changeTime }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        LabelInput,
        {
          value: params.uid,
          onSearch: (val) => {
            setUsername(val);
          },
          onChange: handleInput,
          onKeyDown: handleKeyDown,
          placeholder: trans("会员帐号")
        }
      )
      ]
    }),
      data.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
        className: css$U.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$U.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$U.id, css$U.ellipsis), onClick: () => {
              clipboardExports.copy(item2.uid);
              Message$1.success(trans("复制成功"));
            }, children: [
              item2.uid,
          /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$U.copy })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$U.ellipsis), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$U.grey, css$U.label), children: trans("充值") }),
              customToFixed(item2.total_dept_amount)
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$U.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$U.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$U.grey, css$U.label), children: trans("直属下级") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$U.values, css$U.xs), children: item2.sub_num })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$U.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$U.grey, css$U.label), children: trans("余额") }),
              customToFixed(item2.balance)
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$U.vip, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "V" + item2.level }) })
        ]
      }, index2)),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            setPage(page + 1);
          }
        }
      ),
      data.length === 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$U.totalBottom, isShowTotal ? css$U.openB : ""), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$U.bottomYj, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
            className: css$U.bottomIcon, onClick: () => {
              setIsShowTotal(!isShowTotal);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
          })
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$U.bottomTxt, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$U.bottomTxtLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$U.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("存款总额") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$U.tNum, children: customToFixed(totalAgg.total_dept_amount) })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$U.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("首存金额") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$U.tNum, children: customToFixed(totalAgg.first_deposit_amount) })
              ]
            })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$U.bottomTxtRight, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$U.bottomItem, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("首次存款") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$U.tNum, children: customToFixed(totalAgg.first_deposit_num, 0) })
              ]
            })
          })
          ]
        })
        ]
      })
    ]
  });
};
const svg_theme_fill_color$V = "_svg_theme_fill_color_xg55s_3";
const bg1$1 = "_bg1_xg55s_55";
const timer$1 = "_timer_xg55s_55";
const item$8 = "_item_xg55s_55";
const input$1 = "_input_xg55s_55";
const bg2$1 = "_bg2_xg55s_128";
const vip$1 = "_vip_xg55s_128";
const color1$1 = "_color1_xg55s_195";
const color2$1 = "_color2_xg55s_265";
const grey$1 = "_grey_xg55s_265";
const fill1$2 = "_fill1_xg55s_332";
const copy$1 = "_copy_xg55s_332";
const borderColor1$2 = "_borderColor1_xg55s_405";
const container$2 = "_container_xg55s_478";
const search$2 = "_search_xg55s_483";
const searchBtn$1 = "_searchBtn_xg55s_488";
const ellipsis$1 = "_ellipsis_xg55s_515";
const wrapper$1 = "_wrapper_xg55s_527";
const id$1 = "_id_xg55s_535";
const label$1 = "_label_xg55s_545";
const css$T = {
  svg_theme_fill_color: svg_theme_fill_color$V,
  bg1: bg1$1,
  timer: timer$1,
  item: item$8,
  input: input$1,
  bg2: bg2$1,
  vip: vip$1,
  color1: color1$1,
  color2: color2$1,
  grey: grey$1,
  fill1: fill1$2,
  copy: copy$1,
  borderColor1: borderColor1$2,
  container: container$2,
  search: search$2,
  searchBtn: searchBtn$1,
  ellipsis: ellipsis$1,
  wrapper: wrapper$1,
  id: id$1,
  label: label$1
};
const svg_theme_fill_color$U = "_svg_theme_fill_color_16idy_3";
const borderColor1$1 = "_borderColor1_16idy_55";
const roundDown = "_roundDown_16idy_55";
const bottomDataBox = "_bottomDataBox_16idy_55";
const fill1$1 = "_fill1_16idy_128";
const lineBox$1 = "_lineBox_16idy_278";
const labelBox = "_labelBox_16idy_291";
const downicon = "_downicon_16idy_515";
const reverse = "_reverse_16idy_597";
const css$S = {
  svg_theme_fill_color: svg_theme_fill_color$U,
  borderColor1: borderColor1$1,
  roundDown,
  bottomDataBox,
  fill1: fill1$1,
  lineBox: lineBox$1,
  labelBox,
  downicon,
  reverse
};
const BottomData = ({ extraData, bottomIsOpen, changeOpen }) => {
  const maps = [
    [
      { label: trans("直属充值总额"), key: "direct_deposit_amount", xiaoshu: 2 },
      { label: trans("直属首充次数"), key: "direct_first_deposit_num", xiaoshu: 0 }
    ],
    [
      { label: trans("其他充值总额"), key: "other_deposit_amount", xiaoshu: 2 },
      { label: trans("其他首充次数"), key: "other_first_deposit_num", xiaoshu: 0 }
    ],
    [
      { label: trans("充值总额"), key: "total_deposit_amount", xiaoshu: 2 },
      { label: trans("累计充值次数"), key: "total_first_deposit_num", xiaoshu: 0 }
    ]
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$S.bottomDataBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$S.roundDown, onClick: () => {
        changeOpen && changeOpen(!bottomIsOpen);
      }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$S.downicon, bottomIsOpen ? css$S.reverse : "") })
    }),
      bottomIsOpen ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        children: maps.map((list, idx) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$S.lineBox, children: list.map((item2, _idx) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: "itemBox", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$S.labelBox, children: item2.label }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "money", children: customToFixed(extraData[item2.key], item2.xiaoshu) })
                ]
              }, _idx);
            })
          }, idx);
        })
      }) : null
    ]
  });
};
const defaultExtraData = {
  direct_deposit_amount: 0,
  direct_first_deposit_num: 0,
  other_deposit_amount: 0,
  other_first_deposit_num: 0,
  total_deposit_amount: 0,
  total_first_deposit_num: 0
};
const AllData = () => {
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const pageState = useReactive({
    list: [],
    page: 1,
    page_size: 15,
    username: "",
    total: 0
  });
  const [extraData, setExtraData] = reactExports.useState(defaultExtraData);
  const { token: token2 } = useUserInfoStore();
  const [bottomIsOpen, setBottomIsOpen] = reactExports.useState(false);
  async function getListData() {
    if (!token2)
      return;
    const params = {
      ty,
      start_time,
      end_time,
      page: pageState.page,
      page_size: pageState.page_size,
      username: pageState.username
    };
    const [data, error2] = await postAgentSubMember(removeEmpty(params));
    if (error2) {
      return;
    }
    if (data) {
      const extra = data.extra || defaultExtraData;
      setExtraData(extra);
    }
    if (pageState.page === 1 && data) {
      pageState.total = data.t;
    }
    if (data) {
      const _d = data.d || [];
      pageState.list = pageState.page === 1 ? _d : pageState.list.concat(_d);
    }
  }
  reactExports.useEffect(() => {
    if (start_time && end_time) {
      pageState.page = 1;
      getListData();
    }
  }, [start_time, end_time]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$T.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$T.search, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { className: css$T.timer, onChange: changeTime }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$T.input, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "text", placeholder: trans("会员帐号"), onChange: (e2) => pageState.username = e2.target.value }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$T.searchBtn, onClick: () => getListData(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(SearchToolIcon, {}) })
        ]
      })
      ]
    }),
      pageState.list.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
        className: css$T.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$T.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$T.id, css$T.ellipsis), onClick: () => {
              clipboardExports.copy(item2.uid || item2.username);
              Message$1.success(trans("复制成功"));
            }, children: [
              item2.uid || item2.username,
          /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$T.copy })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$T.grey, css$T.ellipsis), children: customFormatTimer(item2.created_at) })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$T.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$T.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$T.grey, css$T.label), children: trans("Valid bets") }),
              customToFixed(item2.bet_amount)
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$T.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$T.grey, css$T.label), children: trans("充值") }),
              customToFixed(item2.deposit_amount)
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$T.vip, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "V".concat(item2.level) }) })
        ]
      }, index2)),
      !pageState.list.length && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
      pageState.total > pageState.list.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            pageState.page++;
            getListData();
          }
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        style: {
          height: bottomIsOpen ? "210rem" : "70rem"
        }
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(BottomData, { extraData, bottomIsOpen, changeOpen: setBottomIsOpen })
    ]
  });
};
const svg_theme_fill_color$T = "_svg_theme_fill_color_4hc75_3";
const bg1 = "_bg1_4hc75_55";
const timer = "_timer_4hc75_55";
const item$7 = "_item_4hc75_55";
const bg2 = "_bg2_4hc75_128";
const vip = "_vip_4hc75_128";
const bg3 = "_bg3_4hc75_201";
const detailBox = "_detailBox_4hc75_201";
const bg4 = "_bg4_4hc75_274";
const scrollTable = "_scrollTable_4hc75_274";
const color1 = "_color1_4hc75_347";
const title$5 = "_title_4hc75_347";
const btm = "_btm_4hc75_347";
const sums = "_sums_4hc75_347";
const color2 = "_color2_4hc75_417";
const selectContents = "_selectContents_4hc75_417";
const totalBottom$1 = "_totalBottom_4hc75_417";
const bottomTxt$1 = "_bottomTxt_4hc75_417";
const bottomItem$1 = "_bottomItem_4hc75_417";
const grey = "_grey_4hc75_417";
const color3 = "_color3_4hc75_493";
const xs = "_xs_4hc75_493";
const color4 = "_color4_4hc75_566";
const tz = "_tz_4hc75_566";
const color5 = "_color5_4hc75_636";
const jump = "_jump_4hc75_636";
const fill1 = "_fill1_4hc75_706";
const copy = "_copy_4hc75_706";
const borderColor1 = "_borderColor1_4hc75_779";
const container$1 = "_container_4hc75_849";
const search$1 = "_search_4hc75_855";
const searchBtn = "_searchBtn_4hc75_860";
const ellipsis = "_ellipsis_4hc75_867";
const wrapper = "_wrapper_4hc75_947";
const id = "_id_4hc75_955";
const label = "_label_4hc75_965";
const values = "_values_4hc75_990";
const openB$1 = "_openB_4hc75_1004";
const bottomYj$1 = "_bottomYj_4hc75_1007";
const bottomIcon$1 = "_bottomIcon_4hc75_1011";
const tNum$1 = "_tNum_4hc75_1312";
const allData = "_allData_4hc75_1362";
const bottomClose = "_bottomClose_4hc75_1367";
const back = "_back_4hc75_1404";
const css$R = {
  svg_theme_fill_color: svg_theme_fill_color$T,
  bg1,
  timer,
  item: item$7,
  bg2,
  vip,
  bg3,
  detailBox,
  bg4,
  scrollTable,
  color1,
  title: title$5,
  btm,
  sums,
  color2,
  selectContents,
  totalBottom: totalBottom$1,
  bottomTxt: bottomTxt$1,
  bottomItem: bottomItem$1,
  grey,
  color3,
  xs,
  color4,
  tz,
  color5,
  jump,
  fill1,
  copy,
  borderColor1,
  container: container$1,
  search: search$1,
  searchBtn,
  ellipsis,
  wrapper,
  id,
  label,
  values,
  openB: openB$1,
  bottomYj: bottomYj$1,
  bottomIcon: bottomIcon$1,
  tNum: tNum$1,
  allData,
  bottomClose,
  back
};
const svg_theme_fill_color$S = "_svg_theme_fill_color_8xt6a_3";
const selectContainer$1 = "_selectContainer_8xt6a_55";
const noSelected = "_noSelected_8xt6a_55";
const selected = "_selected_8xt6a_122";
const noBg$1 = "_noBg_8xt6a_272";
const small$1 = "_small_8xt6a_278";
const select$2 = "_select_8xt6a_55";
const content$5 = "_content_8xt6a_291";
const prefix$1 = "_prefix_8xt6a_364";
const suffix$1 = "_suffix_8xt6a_372";
const up$1 = "_up_8xt6a_437";
const down$1 = "_down_8xt6a_441";
const options$1 = "_options_8xt6a_445";
const option$1 = "_option_8xt6a_445";
const active$d = "_active_8xt6a_626";
const css$Q = {
  svg_theme_fill_color: svg_theme_fill_color$S,
  "border-color1": "_border-color1_8xt6a_55",
  selectContainer: selectContainer$1,
  noSelected,
  "border-color2": "_border-color2_8xt6a_122",
  selected,
  noBg: noBg$1,
  "default": "_default_8xt6a_275",
  small: small$1,
  select: select$2,
  content: content$5,
  prefix: prefix$1,
  suffix: suffix$1,
  up: up$1,
  down: down$1,
  options: options$1,
  option: option$1,
  active: active$d
};
const Select = (props) => {
  const [value2, setValue] = reactExports.useState(props.value);
  const [showOptions, setShowOptions] = reactExports.useState(false);
  const renderValue = reactExports.useMemo(() => {
    if (props.items === void 0)
      return "";
    const item2 = props.items.find((_) => _.value === value2);
    return item2 ? item2.label : "";
  }, [value2, props.items]);
  reactExports.useEffect(() => {
    setValue(props.value);
  }, [props.value]);
  const clickHandler = (_value) => {
    setValue(_value);
    setShowOptions(false);
    props.onChange && props.onChange(_value);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass("globalSelect", showOptions ? css$Q.selected : css$Q.noSelected, css$Q.selectContainer, props.noBg ? css$Q.noBg : ""), onClick: () => setShowOptions(!showOptions), children: [
      props.prefix && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$Q.prefix, children: props.prefix }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$Q.select, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$Q.content, children: renderValue }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$Q.suffix, children: /* @__PURE__ */ jsxRuntimeExports.jsx(DownIcon, { className: joinClass(showOptions ? css$Q.up : css$Q.down) }) }),
      showOptions && props.items && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: joinClass(css$Q.options), children: props.items.map((_, index2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: joinClass(css$Q.option, value2 === _.value ? css$Q.active : ""),
              onClick: (e2) => {
                e2.stopPropagation();
                clickHandler(_.value);
              },
              children: _.label
            },
            index2
          );
        })
      })
    ]
  });
};
const state = useUserInfoStore.getState();
const GameTabs = [
  {
    text: "Popular",
    type: "热门",
    IconsCom: HotIcon,
    icon: "hot_active.webp",
    blue: "hot_blue_active.webp",
    grey: "hot.webp",
    action: "home",
    sort: -100,
    adminConfigShow: true,
    ActiveIcon: ActivePopular
  },
  {
    text: "Slots",
    type: "电子",
    IconsCom: SlotsIcon,
    icon: "slots_active.webp",
    grey: "slots.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveSlots
  },
  {
    text: "Cassino ao vivo",
    type: "真人",
    IconsCom: CassinoIcon,
    icon: "casino_active.webp",
    grey: "casino.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveCassinoAoVivo
  },
  {
    text: "Esporte",
    type: "体育",
    IconsCom: EsporteIcon,
    icon: "sports_active.webp",
    grey: "sports.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveEsporte
  },
  {
    text: "Pescaria",
    type: "捕鱼",
    IconsCom: PescariaIcon,
    icon: "fishing_active.webp",
    grey: "fishing.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActivePescaria
  },
  {
    text: "Cartas",
    type: "棋牌",
    IconsCom: CartasIcon,
    icon: "cartas_active.webp",
    grey: "cartas.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveCartas
  },
  {
    text: "Loteria",
    type: "彩票",
    IconsCom: LoteriaIcon,
    icon: "lottery_active.webp",
    grey: "lottery.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveLoteria
  },
  {
    text: "Esports",
    type: "电竞",
    IconsCom: EsportsIcon,
    icon: "esports_active.webp",
    grey: "esports.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveEsports
  },
  {
    text: "Blockchain",
    type: "小游戏",
    IconsCom: BlockchainIcon,
    icon: "blockchain_active.webp",
    grey: "blockchain.webp",
    action: "home",
    adminConfigShow: true,
    ActiveIcon: ActiveBlockchaim
  },
  {
    text: "Recente",
    type: "最近",
    IconsCom: Recente,
    icon: "blockchain_active.webp",
    grey: "blockchain.webp",
    action: "home",
    ActiveIcon: ActiveRecente,
    sort: 97
  },
  {
    text: "Favoritos",
    type: "收藏",
    IconsCom: Favoritos,
    icon: "blockchain_active.webp",
    grey: "blockchain.webp",
    action: "home",
    ActiveIcon: ActiveFavoritos,
    sort: 98
  },
  // {
  //   text: 'Jogar Grátis',
  //   IconsCom: JogarIcon,
  //   icon: 'jogar_active.webp',
  //   grey: 'jogar.webp',
  // },
  {
    type: "music",
    action: "records",
    sort: 99,
    switchType: "player"
  },
  {
    text: "Recordes de Apostas",
    type: "投注记录",
    IconsCom: BetRecordsIcon,
    icon: "betrecords_active.webp",
    action: "records",
    url: "/record-betting?tag=2",
    sort: 100,
    ActiveIcon: ActionRecordes
  },
  {
    text: "推广",
    IconsCom: ConvidarIcon,
    icon: "agent_active.webp",
    type: "代理",
    action: "agent",
    url: "/agent",
    sort: 101,
    ActiveIcon: ConvidarIcon
  }
];
const InfoTabs = [
  {
    text: "Eventos",
    IconsCom: EventosIcon,
    isShowInHome: false,
    icon: "event_active.webp",
    cssName: "event",
    url: "/activity"
  },
  {
    text: "Tarefa",
    IconsCom: EventosIcon,
    isShowInHome: false,
    icon: "missao_active.webp",
    cssName: "missao",
    url: "/missao",
    type: "missao"
  },
  {
    text: "VIP",
    IconsCom: VIPIcon$1,
    isShowInHome: true,
    icon: "vip_active.webp",
    cssName: "vip",
    url: "/vip"
  },
  {
    text: "Rebate",
    IconsCom: RebateIcon,
    isShowInHome: true,
    icon: "mission_active.webp",
    cssName: "mission",
    url: "/back-rate",
    type: "rebate"
  },
  // {
  //   text: 'Rebate',
  //   icon: 'rebate_active.webp',
  //   cssName: 'rebate'
  // },
  // {
  //   text: 'Reward',
  //   icon: 'reward_active.webp',
  //   cssName: 'reward'
  // },
  // {
  //   text: 'Interest',
  //   icon: 'interest_active.webp',
  //   cssName: 'interest'
  // },
  {
    text: "Pendente",
    IconsCom: BonusIcon,
    isShowInHome: true,
    icon: "bonus_active.webp",
    cssName: "bonus",
    url: "/bonus",
    type: "bonus"
  },
  {
    // 已领取记录
    text: "Histórico",
    IconsCom: AlreadyGetBonusIcon,
    isShowInHome: true,
    icon: "alreadyGetBouns.webp",
    cssName: "bonus",
    url: "/alreadyGetbonus"
  }
  // {
  //   text: 'Juros',
  //   IconsCom: InterestIcon,
  //   isShowInHome: false,
  //   icon: 'int_active.webp',
  //   cssName: 'juros',
  //   url: '',
  //   type: 'lxb',
  // },
];
const gameTypeNames = [
  "真人",
  "体育",
  "彩票",
  "电竞",
  "电子",
  "捕鱼",
  "棋牌",
  "小游戏"
];
const ToolTabs = [
  {
    text: "Linha 1",
    IconsCom: LinhaIcon,
    isShowInHome: false,
    // 是否显示在首页导航栏
    path: "line",
    rightIcon: DropDownIcon,
    switchType: "netsignal"
  },
  {
    path: "language",
    icon: "language.webp",
    IconsCom: Language$1,
    isShowInHome: false,
    // 是否显示在首页导航栏
    rightIcon: DropDownIcon,
    id: "languageRef",
    switchType: "lang"
  },
  {
    text: "Baixar App",
    IconsCom: BaixarAppIcon,
    isShowInHome: !state.isHiddenDownloadApp,
    isHiden: state.isHiddenDownloadApp,
    path: "download",
    icon: "download_icon.webp",
    blue: "download_icon_blue.webp",
    icon2: "download_inhome_icons.webp"
  },
  {
    text: "Suporte",
    isShowInHome: false,
    IconsCom: SuporteIcon,
    icon: "call_icon.webp",
    blue: "call_icon_blue.webp"
  },
  {
    text: "FAQ",
    IconsCom: FAQIcon,
    isShowInHome: false,
    path: "service"
  }
];
const rebateTypes = [
  {
    text: "老虎机",
    type: "电子",
    icon: "slots",
    id: 3,
    IconsCom: SlotsIcon
  },
  {
    text: "真人",
    type: "真人",
    icon: "casino",
    id: 1,
    IconsCom: CassinoIcon
  },
  {
    text: "体育",
    type: "体育",
    icon: "sports",
    id: 4,
    IconsCom: EsportsIcon
  },
  {
    text: "捕鱼",
    type: "捕鱼",
    icon: "fishing",
    id: 2,
    IconsCom: PescariaIcon
  },
  {
    text: "棋牌",
    type: "棋牌",
    icon: "cartas",
    id: 5,
    IconsCom: CartasIcon
  },
  {
    text: "彩票",
    type: "彩票",
    icon: "lottery",
    id: 7,
    IconsCom: LoteriaIcon
  },
  {
    text: "电竞",
    type: "电竞",
    icon: "esports",
    id: 6,
    IconsCom: EsporteIcon
  },
  {
    text: "区块链",
    type: "小游戏",
    icon: "blockchain",
    id: 9,
    IconsCom: BlockchainIcon
  }
];
const platTypes = [
  {
    label: "全部",
    type: "全部",
    value: 0
  },
  {
    label: "真人",
    type: "真人",
    value: 1
  },
  {
    label: "捕鱼",
    type: "捕鱼",
    value: 2
  },
  {
    label: "电子",
    type: "电子",
    value: 3
  },
  {
    label: "体育",
    type: "体育",
    value: 4
  },
  {
    label: "棋牌",
    type: "棋牌",
    value: 5
  },
  {
    label: "电竞",
    type: "电竞",
    value: 6
  },
  {
    label: "彩票",
    type: "彩票",
    value: 7
  },
  {
    label: "区块链",
    type: "小游戏",
    value: 9
  }
];
const bgMaps$1 = {
  black: "/home/closeIcon.webp"
};
const Income = () => {
  var _a, _b, _c, _d, _e, _f;
  const { allPlatformMap } = useGameStore();
  const [page, setPage] = reactExports.useState(1);
  const [pages, setPages] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [totals, setTotals] = reactExports.useState(0);
  const [data, setData] = reactExports.useState([]);
  const [detailData, setDetailData] = reactExports.useState([]);
  const [uid2, setUsername] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [isShowTotal, setIsShowTotal] = reactExports.useState(false);
  const [isShowModel, setIsShowModel] = reactExports.useState(false);
  const [isShowSubModel, setIsShowSubModel] = reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const [detailAGG, setDetailAGG] = reactExports.useState({});
  const [detailUid, setDetailUid] = reactExports.useState("");
  const [selectId, setSelectId] = reactExports.useState("");
  const { theme, token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time,
      page_size: 15,
      uid: uid2
    };
  }, [ty, uid2, start_time, end_time]);
  const games = reactExports.useMemo(() => {
    return platTypes.map((i) => ({
      label: trans(i.type),
      value: i.value
    }));
  }, []);
  const [child, setChild] = reactExports.useState([]);
  const handleInput = (val) => {
    if (!val) {
      setUsername(val);
    }
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      setUsername(event.target.value);
    }
  };
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await postDirectAgencyBete({ ...params, page });
    if (page === 1) {
      setTotal(res.t);
      setData(res.d || []);
      setTotalAgg(res.agg);
      return;
    }
    setData([...data, ...res.d]);
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      getDetail();
    }
  }, [pages, selectId]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  const getGames = (v2) => {
    return platTypes.find((item2) => item2.value == v2);
  };
  const selectChange = (v2) => {
    setSelectId(v2);
    setPages(1);
    setDetailData([]);
    setDetailAGG({});
  };
  const clickDetail = (o) => {
    if (!o.valid_bet_amount)
      return;
    setSelectId("");
    setDetailUid(o.uid);
    setIsShowModel(true);
    if (isShowSubModel) {
      setIsShowSubModel(false);
    }
  };
  const clickSubDetail = (o) => {
    if (!o.sub_num)
      return;
    getSubDetail({
      params: {
        uid: o.uid,
        page: 1,
        page_size: 15,
        ty: 0
      },
      list: [],
      t: 0
    });
    setIsShowSubModel(true);
  };
  const getSubDetail = async (c2) => {
    const [res, err] = await postDirectAgencyBete({
      ...c2.params,
      start_time,
      end_time
    });
    if (!err) {
      if (c2.params.page == 1) {
        c2.t = res.t;
        c2.list = res.d;
        setChild([...child, c2]);
      } else {
        c2.list = [...c2.list, ...res.d];
        child.splice(child.length - 1, 1, c2);
        console.log("c :>> ", child, c2);
        setChild([...child]);
      }
    }
  };
  const onSubDetailLoadMore = () => {
    const c2 = child.at(-1);
    c2.params.page = c2.params.page + 1;
    getSubDetail(c2);
  };
  const onSubDetailBack = () => {
    child.splice(child.length - 1, 1);
    setChild([...child]);
  };
  reactExports.useEffect(() => {
    if (detailUid !== "") {
      getDetail();
    }
  }, [detailUid]);
  const getDetail = async () => {
    if (pages === 1) {
      setTotals(0);
    }
    const params2 = {
      start_time,
      end_time,
      uid: detailUid,
      game_type: selectId,
      page: pages,
      page_size: 15
    };
    const [res, err] = await betDetail({ ...params2, pages });
    if (!err) {
      if (pages === 1) {
        setTotals(res.t);
        setDetailData(res.d || []);
        setDetailAGG(res.agg || {});
        return;
      }
      setDetailData([...detailData, ...res.d]);
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$R.container, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$R.search, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { className: css$R.timer, onChange: changeTime }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        LabelInput,
        {
          value: params.uid,
          onSearch: (val) => {
            setUsername(val);
          },
          onChange: handleInput,
          onKeyDown: handleKeyDown,
          placeholder: trans("会员帐号")
        }
      )
      ]
    }),
      data.map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
        className: css$R.item, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$R.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$R.id, css$R.ellipsis), onClick: () => {
              clipboardExports.copy(item2.uid);
              Message$1.success(trans("复制成功"));
            }, children: [
              item2.uid,
          /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$R.copy })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$R.ellipsis), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("有效投注") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
              className: joinClass(css$R.values, css$R.tz), onClick: () => {
                clickDetail(item2);
              }, children: customToFixed(item2.valid_bet_amount)
            })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$R.wrapper, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.ellipsis, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: " " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$R.ellipsis, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("直属下级") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
              className: joinClass(css$R.values, css$R.jump), onClick: () => {
                clickSubDetail(item2);
              }, children: customToFixed(item2.sub_num, 0)
            })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.vip, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "V" + item2.level }) })
        ]
      }, index2)),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            setPage(page + 1);
          }
        }
      ),
      data.length === 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$R.totalBottom, isShowTotal ? css$R.openB : ""), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$R.bottomYj, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
            className: css$R.bottomIcon, onClick: () => {
              setIsShowTotal(!isShowTotal);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
          })
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$R.bottomTxt, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$R.bottomTxtLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$R.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("直接有效投注") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$R.tNum, children: customToFixed(totalAgg == null ? void 0 : totalAgg.valid_bet_amount) })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$R.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("有效投注总额") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$R.tNum, children: customToFixed((totalAgg == null ? void 0 : totalAgg.total_valid_bet_amount) || 0) })
              ]
            })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$R.bottomTxtRight, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$R.bottomItem, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("其他有效投注") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$R.tNum, children: customToFixed((totalAgg == null ? void 0 : totalAgg.other_valid_bet_amount) || 0) })
              ]
            })
          })
          ]
        })
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
        isOpen: isShowModel, closeByClickOut: false, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$R.detailBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.title, children: trans("投注详情") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$R.selectContents, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Select, {
              value: 0, placeholder: "todos", className: css$R.mySelect, onChange: (v2) => {
                selectChange(v2);
              }, noBg: true, items: games
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("日期") }),
                start_time.split(" ")[0] + " ~ " + end_time.split(" ")[0]
              ]
            })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$R.scrollTable, children: [
              detailData.length === 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
              detailData.map((item2, index2) => {
                var _a2, _b2;
                return /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
                  className: css$R.item, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$R.wrapper, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$R.id, css$R.ellipsis), onClick: () => {
                        clipboardExports.copy(item2.uid);
                        Message$1.success(trans("复制成功"));
                      }, children: [
                        item2.uid,
                /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$R.copy })
                      ]
                    }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$R.ellipsis), children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("游戏平台") }),
                        (_a2 = allPlatformMap[item2.platform_id]) == null ? void 0 : _a2.split(" ")[0],
                        " (",
                        trans((_b2 = getGames(item2.game_type)) == null ? void 0 : _b2.type),
                        ")"
                      ]
                    }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$R.ellipsis), children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("有效投注") }),
                        customToFixed(item2.valid_bet_amount)
                      ]
                    })
                    ]
                  }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$R.wrapper, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.ellipsis, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.label), children: customFormatTimer(item2.bet_time) }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: css$R.ellipsis, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("游戏名称") }),
                        item2.game_name
                      ]
                    })
                    ]
                  }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.vip, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "V" + item2.level }) })
                  ]
                }, index2);
              }),
              totals > detailData.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
                LoadMore,
                {
                  onClick: () => {
                    setPages(pages + 1);
                  }
                }
              )
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: joinClass(css$R.btm), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.allData, css$R.grey, css$R.label), children: trans("有效投注总额") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.sums), children: customToFixed(detailAGG.valid_bet_amount) })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$R.bottomClose, onClick: () => {
              setIsShowModel(false);
              if (child.length) {
                setIsShowSubModel(true);
              }
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              Image,
              {
                src: bgMaps$1[theme] || "/home/closeIcon.webp"
              }
            )
          })
          ]
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
        isOpen: isShowSubModel, closeByClickOut: false, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$R.detailBox, children: [
            child.length > 1 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.back, onClick: onSubDetailBack, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$R.title, children: [
                trans("的下属"),
                " ",
                (_a = child.at(-1)) == null ? void 0 : _a.params.uid
              ]
            }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$R.selectContents, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("日期") }),
                  start_time.split(" ")[0] + " ~ " + end_time.split(" ")[0]
                ]
              })
            }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$R.scrollTable, children: [
                (((_b = child.at(-1)) == null ? void 0 : _b.list) || []).length === 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }),
                (((_c = child.at(-1)) == null ? void 0 : _c.list) || []).map((item2, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
                  className: css$R.item, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$R.wrapper, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$R.id, css$R.ellipsis), onClick: () => {
                        clipboardExports.copy(item2.uid);
                        Message$1.success(trans("复制成功"));
                      }, children: [
                        item2.uid,
              /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$R.copy })
                      ]
                    }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$R.ellipsis), children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("有效投注") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
                        className: joinClass(css$R.values, css$R.tz), onClick: () => {
                          clickDetail(item2);
                        }, children: customToFixed(item2.valid_bet_amount)
                      })
                      ]
                    })
                    ]
                  }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$R.wrapper, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.ellipsis, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: " " }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: css$R.ellipsis, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$R.grey, css$R.label), children: trans("直属下级") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
                        className: joinClass(css$R.values, css$R.xs), onClick: () => {
                          clickSubDetail(item2);
                        }, children: customToFixed(item2.sub_num, 0)
                      })
                      ]
                    })
                    ]
                  }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$R.vip, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: "V" + item2.level }) })
                  ]
                }, index2)),
                (((_e = (_d = child.at(-1)) == null ? void 0 : _d.list) == null ? void 0 : _e.length) || 0) < (((_f = child.at(-1)) == null ? void 0 : _f.t) || 0) && /* @__PURE__ */ jsxRuntimeExports.jsx(LoadMore, { onClick: onSubDetailLoadMore })
              ]
            }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$R.bottomClose, onClick: () => {
                setIsShowSubModel(false);
                setChild([]);
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Image,
                {
                  src: bgMaps$1[theme] || "/home/closeIcon.webp"
                }
              )
            })
          ]
        })
      })
    ]
  });
};
const svg_theme_fill_color$R = "_svg_theme_fill_color_1c09x_3";
const recommend = "_recommend_1c09x_55";
const agent_header = "_agent_header_1c09x_131";
const iconBox$1 = "_iconBox_1c09x_139";
const vipIcon2 = "_vipIcon2_1c09x_144";
const question = "_question_1c09x_148";
const label_first = "_label_first_1c09x_230";
const flexContext = "_flexContext_1c09x_255";
const paidAmount_box = "_paidAmount_box_1c09x_258";
const amount_num = "_amount_num_1c09x_264";
const his_btn = "_his_btn_1c09x_325";
const nameBox = "_nameBox_1c09x_451";
const username_col = "_username_col_1c09x_457";
const copy_icon = "_copy_icon_1c09x_462";
const parent_name_cs = "_parent_name_cs_1c09x_470";
const code_name_cs = "_code_name_cs_1c09x_470";
const proxy_model = "_proxy_model_1c09x_542";
const nameSpan = "_nameSpan_1c09x_552";
const tutorial = "_tutorial_1c09x_591";
const spanDark1 = "_spanDark1_1c09x_1996";
const spanWhite1 = "_spanWhite1_1c09x_2139";
const arrow_icon = "_arrow_icon_1c09x_2182";
const card = "_card_1c09x_1700";
const avatar = "_avatar_1c09x_1400";
const css$P = {
  svg_theme_fill_color: svg_theme_fill_color$R,
  recommend,
  agent_header,
  iconBox: iconBox$1,
  vipIcon2,
  question,
  label_first,
  flexContext,
  paidAmount_box,
  amount_num,
  his_btn,
  nameBox,
  username_col,
  copy_icon,
  parent_name_cs,
  code_name_cs,
  proxy_model,
  nameSpan,
  tutorial,
  spanDark1,
  spanWhite1,
  arrow_icon,
  card,
  avatar
};
const Card = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "".concat(css$P.card, " ").concat(props.className), style: props.style, children: props.children });
};
const Avatar = ({ txt: txt2, src }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: "".concat(css$P.avatar, " avatar"), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: src || "/avatar/avatar_monkey.webp" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: txt2 })
    ]
  });
};
const Arrow = (props) => {
  const { height, deg = 0 } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      ArrowIcon,
      {
        className: css$P.arrow_icon,
        style: {
          height: "".concat(minPxChip() * height, "px"),
          transform: "rotate(".concat(deg, "deg)")
        }
      }
    )
  });
};
const ArrowX = (props) => {
  const { width, deg = 1 } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    ArrowXIcon,
    {
      className: css$P.arrow_icon,
      style: {
        width: "".concat(minPxChip() * width, "px"),
        transform: "scaleX(".concat(deg, ")"),
        ...props.style
      }
    }
  );
};
const memberList = [
  {
    code: "B1",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("子代理通常会获胜") }),
    render: () => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "30" }),
        "/10k"
      ]
    }),
    apostas: "120K",
    avatar: "/avatar/avatar-b1_b3.webp"
  },
  {
    code: "B2",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("B2没有下属，所以没有利润") }),
    apostas: "40K",
    avatar: "/avatar/avatar-b2.webp"
  },
  {
    code: "B3",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("副代理人干得好，你赢了") }),
    render: () => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "30" }),
        "/10k"
      ]
    }),
    apostas: "20K",
    avatar: "/avatar/avatar-b1_b3.webp"
  },
  {
    code: "C1",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("C1没有下属，所以没有利润") }),
    apostas: "100K",
    avatar: "/avatar/avatar-c1_c3.webp"
  },
  {
    code: "C2",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("C2没有下属，所以没有利润") }),
    apostas: "30K",
    avatar: "/avatar/avatar-c2.webp"
  },
  {
    code: "C3",
    text: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("C3没有下属，所以没有利润") }),
    apostas: "3000K",
    avatar: "/avatar/avatar-c1_c3.webp"
  }
];
const MemberCards = ({ list, ...props }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: "member-cards", ...props, children: list.map((item2) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(Card, {
        className: "card_small", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Avatar, { txt: item2.code, src: item2.avatar }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "text ".concat(css$P.spanDark1), children: [
            item2.text,
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            !!item2.render && item2.render()
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "apostas", children: [
            trans("有效投注"),
            " ",
            item2.apostas
          ]
        })
        ]
      }, item2.code);
    })
  });
};
const Tutorial = ({ directlyChild, setPage }) => {
  useNavigate();
  const { info: info2, agentUrl, agentId } = useUserInfoStore();
  const { share } = useFloatPopShareStore();
  const handleShare = (shareItem) => {
    const shareEl = document.getElementById("share-".concat(shareItem.name));
    if (shareEl) {
      shareEl.click();
      clipboardExports.copy(agentUrl);
    }
  };
  const nativeShare = async () => {
    clipboardExports.copy(agentUrl);
    if (navigator.share) {
      try {
        await navigator.share({
          title: "",
          text: "",
          url: agentUrl
        });
      } catch (error2) {
        console.error("error", error2);
      }
    } else {
      console.log("Web Share API 不受支持");
    }
  };
  reactExports.useEffect(() => {
    if (agentUrl) {
      browser.toCanvas(document.getElementById("qrcode"), agentUrl, {
        width: minPxChip() * 123.5,
        height: minPxChip() * 123.5,
        margin: 0
      });
    }
  }, [agentUrl]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$P.tutorial, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$P.recommend, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "share-box", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: "share-row1", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "qr-container", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "qr-box", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("canvas", { className: "qr-code", id: "qrcode" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "qr-text", children: trans("点击保存") })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "share-input-box", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: "title", children: [
                  trans("推广链接"),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      className: "share-icon",
                      onClick: () => {
                        nativeShare();
                      },
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(ShareInMineIcon, {})
                    }
                  )
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: "share-url", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: agentUrl }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    className: "".concat(css$P.copy_icon, " button"),
                    onClick: () => {
                      clipboardExports.copy(agentUrl);
                      Message$1.success(trans("复制成功"));
                    },
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, {})
                  }
                )
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$P.nameBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$P.code_name_cs, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$P.label_first, children: trans("直接报告") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$P.username_col, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$P.label_first, children: directlyChild || trans("空") }) })
                  ]
                })
              })
              ]
            })
            ]
          })
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: "share-row2", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: "chat-list", children: share.map((item2, i) => {
              const link = item2.link.replace("xxxxx", encodeURIComponent(agentUrl));
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: "chat-app",
                  onClick: (e2) => {
                    handleShare(item2);
                  },
                  children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: item2.img, isGame: true, remote: true }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      className: "app-title",
                      href: link,
                      id: "share-".concat(item2.name),
                      target: "_blank",
                      children: item2.name
                    }
                  )
                  ]
                },
                i
              );
            })
          })
        })
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "strong-title", children: trans("Agent Network") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Card, {
      className: "top_card", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "top_user_info", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Avatar, { txt: "A", src: "/avatar/avatar-a.webp" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$P.spanDark1, children: [
            trans("C3强大，享受"),
            " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "30" }),
                "/10000"
              ]
            })
          ]
        })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
          trans("总业绩331万，总代理奖金"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "540" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          trans("下属绩效180K，已贡献"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "540" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          trans("其他性能3.13M，贡献"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" })
        ]
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "association_1", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
          trans("B1贡献"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "360" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowX, { width: 220, deg: 1 }),
          trans("其他贡献"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          " ",
          trans("从C1和C2"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow, { height: 76, deg: 0 }),
          trans("对A的贡献："),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "120" })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
          trans("B3 的贡献"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "60" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowX, { width: 220, deg: -1 }),
          trans("其他贡献"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          " ",
          trans("C3的"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" })
        ]
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(MemberCards, { list: memberList.slice(0, 3), className: "member-cards member-cards-custom" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "association_2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow, { height: 60, deg: 0 }),
          trans("对A的贡献："),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" }),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          trans("为B1做出贡献："),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "300" })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          ArrowX,
          {
            width: 154,
            deg: -1,
            style: {
              transform: "scaleX(-1) translateX(".concat(minPxChip() * 80, "px) rotate(-20deg)")
            }
          }
        ),
          trans("对A的贡献："),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" }),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          trans("为B1做出贡献："),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "90" })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$P.spanWhite1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow, { height: 60, deg: 0 }),
          trans("对A的贡献："),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" }),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          trans("为B3做出贡献："),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "9000" })
        ]
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(MemberCards, { list: memberList.slice(3, 6), className: "member-cards" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "details", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-strong", children: trans("例如：") }),
        " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", {
          children: trans(
            "在这个网站上，代理奖金是通过投注来计算的。例如，如果投注额为10-200000，则相应的奖金率为30/10000，如果投注额超过3000000，则代理奖金为30/10000。 A是该网站的代理商，他招募了B1、B2和B3作为他的代理商，B1也招募了C1和C2作为他的代理商。 B2 没有代理，B3 只有一名 C3 代理。"
          )
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", {
          children: trans(
            "几天后，B1的有效投注为120000，B2的有效投注为40000，B3的有效投注为20000。C1的有效投注为100000，C2的有效投注为30000，C3的有效投注为3000000，所以B1的总成绩为C1+ C2=130000，代理人奖金率为30/10000。 B2无代理；因此，B2 的绩效为 0。B3 的总绩效为 C3 - 3000000，因此奖金率为 30/10000。 A直属战队的总业绩为180000+子代理3130000=3310000，因此奖金率为30/10000。"
          )
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
          children: [
            trans("因此，奖金计算如下："),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                " 1.",
                trans("直接团队：")
              ]
            }),
            " ",
            trans("指开发垂直领域的成员，统称为直接团队。"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "(1) ",
                trans("B1、B2、B3 对 A 的贡献：")
              ]
            }),
            "(120000+40000+20000) x 30/10000=",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "540" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "(2) ",
                trans("C1 和 C2 对 B1 的贡献：")
              ]
            }),
            " (100000+30000) x 30/10000=",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "390" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "(3) ",
                trans("C3 对 B3 的贡献：")
              ]
            }),
            " ",
            trans("300 万 x 30/10000="),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "9000" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "2. ",
                trans("其他团队：")
              ]
            }),
            " ",
            trans("指开发下属、下属等的成员，统称为其他Team；由于该系统可以无限发展下属，为了更好理解，本文仅以2级结构为例。"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "(1) ",
                trans("从C1和C2")
              ]
            }),
            " ",
            trans(
              "由于B1的总演出数为13万，只有30/10000的折扣率，而A的总演出数为331万，折扣率为30/10000。那么A和B1的折扣差额为：30-30=0/10000，这个差额就是C1和C2为A贡献的部分，"
            ),
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                trans("因此 C1 和 C2 对 A 做出贡献："),
                " "
              ]
            }),
            "(100000+30000) × 0/10000= ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "(2) ",
                trans("从C3"),
                ":"
              ]
            }),
            " ",
            trans("由于B3的总演出数为300万，享受折扣率为30/10000，而A的总演出数为331万，也享受折扣率为30/10000，那么A和B3的折扣差为：30-30=0/10000。"),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                trans("C3 为 A 做出贡献"),
                ":"
              ]
            }),
            trans("300 万 x 0/10000="),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-yellow", children: "0" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "text-strong", children: [
                "3. ",
                trans("概括"),
                ":"
              ]
            }),
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "(1)",
            trans("由于C3的强大，A的整个业绩间接享受到了较高的折扣率。"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "(2) ",
            trans("B2可以偷懒，没有下属的发展就没有优势。"),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "(3)",
            " ",
            trans(
              "虽然B3加入比较晚，属于A的下属，但其下属的C3实力雄厚，让B3直接享受到了最高的折扣率。因此，无论B3加入时的职位如何，他的利益永远不会受到影响，他不会再遭受其他下属的损失，他的发展也不会受到限制。"
            ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "(4) ",
            trans("这是一种绝对公平的代理模式，并不总是会损害后来加入的人。")
          ]
        })
      ]
    })
    ]
  });
};
const svg_theme_fill_color$Q = "_svg_theme_fill_color_1oivo_3";
const rebate_detail = "_rebate_detail_1oivo_55";
const plat_menu = "_plat_menu_1oivo_73";
const yellow$1 = "_yellow_1oivo_188";
const red$1 = "_red_1oivo_243";
const left_nav = "_left_nav_1oivo_314";
const css$O = {
  svg_theme_fill_color: svg_theme_fill_color$Q,
  rebate_detail,
  plat_menu,
  yellow: yellow$1,
  red: red$1,
  "default": "_default_1oivo_250",
  left_nav
};
const svg_theme_fill_color$P = "_svg_theme_fill_color_1jcqy_3";
const leftContainer = "_leftContainer_1jcqy_55";
const iconImgSelect$1 = "_iconImgSelect_1jcqy_232";
const img$5 = "_img_1jcqy_449";
const avtive = "_avtive_1jcqy_455";
const css$N = {
  svg_theme_fill_color: svg_theme_fill_color$P,
  leftContainer,
  iconImgSelect: iconImgSelect$1,
  img: img$5,
  avtive
};
const LeftNav = ({ dataList, onChange, className, selectId = "-1" }) => {
  const [curId, setCurId] = reactExports.useState(selectId);
  const [list, setList] = reactExports.useState([]);
  const { selectType } = useGameStore();
  const { t: t2, i18n } = useTranslation();
  reactExports.useEffect(() => {
    var _a;
    if (dataList) {
      setList(dataList);
      const firstId = (_a = dataList[0]) == null ? void 0 : _a.value;
      if (firstId) {
        setCurId(firstId);
        onChange && onChange(firstId);
      }
    }
  }, [dataList]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: "".concat(css$N.leftContainer, " ").concat(className), children: list && list.map((item2, index2) => {
      const IconsCom = item2.IconsCom || "";
      let isSelect = false;
      if (item2.value) {
        isSelect = curId === item2.value;
      } else {
        isSelect = selectType === item2.value;
      }
      if (!item2.value)
        return null;
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          "data-cur": curId,
          "data-id": item2.value,
          className: joinClass(
            "leftItem",
            curId === item2.value ? css$N.avtive : ""
          ),
          onClick: () => {
            setCurId(item2.value);
            onChange && onChange(item2.value);
          },
          children: [
            !!IconsCom ? /* @__PURE__ */ jsxRuntimeExports.jsx(
              IconsCom,
              {
                className: joinClass(
                  css$N.img,
                  curId === item2.value ? css$N.iconImgSelect : ""
                ),
                isSelect
              }
            ) : "",
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: t2(item2.label) })
          ]
        },
        index2
      );
    })
  });
};
const Detail = () => {
  const { getGamesByStore, games, gameOpenMap, gameSortMap } = useGameStore();
  const [plat_type, setPlat_type] = reactExports.useState(3);
  const [allData2, setAllData] = reactExports.useState([]);
  const [leftList, setLeftList] = reactExports.useState([]);
  const [activityMap, setActivityMap] = reactExports.useState([]);
  reactExports.useEffect(() => {
    getGamesNav().then(([res]) => {
      setActivityMap(res);
    });
  }, []);
  const getConfig = async () => {
    const [res, err] = await getCommissionConfig();
    setAllData(res || []);
  };
  const handleClick = (id2) => {
    console.log("id :>> ", id2);
    setPlat_type(id2);
  };
  const data = reactExports.useMemo(() => {
    return allData2.filter((item2) => item2.game_type === plat_type).map((i, sort) => ({ ...i, sort: sort + 1 }));
  }, [plat_type, allData2]);
  reactExports.useEffect(() => {
    getConfig();
  }, []);
  reactExports.useEffect(() => {
    if (!activityMap.length)
      return;
    const newArr = [
      ...rebateTypes.sort((a, b2) => {
        return (a.sort || gameSortMap[a.type] || 0) - (b2.sort || gameSortMap[b2.type] || 0);
      }).filter((item2) => {
        var _a;
        const id2 = (_a = games.find((i) => i.name === item2.type)) == null ? void 0 : _a.id;
        return activityMap.some((item22) => item22.id === id2);
      }).map((item2) => {
        var _a;
        return {
          label: item2.text,
          icon: item2.icon,
          value: (_a = games.find((game) => game.name === item2.type)) == null ? void 0 : _a.id,
          IconsCom: item2.IconsCom
        };
      })
    ];
    setLeftList(newArr);
  }, [games, activityMap]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$O.rebate_detail, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(LeftNav, { className: css$O.left_nav, selectId: plat_type, onChange: handleClick, dataList: leftList }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Table,
      {
        columns: [
          { title: trans("等级"), dataIndex: "sort", width: "130" },
          {
            title: trans("有效投注"),
            dataIndex: "bet_amount",
            render: (text2, item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  customToFixed(text2),
                  " ",
                  trans("万"),
                  "+"
                ]
              });
            }
          },
          {
            title: trans("佣金"),
            dataIndex: "rebate_amount",
            render: (text2, item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
                className: joinClass(css$O.yellow), children: [
                  text2,
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                    className: joinClass(css$O.default), children: [
                      "/ ",
                      trans("万")
                    ]
                  })
                ]
              });
            }
          }
        ],
        dataSource: data
      }
    )
    ]
  });
};
const svg_theme_fill_color$O = "_svg_theme_fill_color_lkb9e_3";
const AddSubordinate$1 = "_AddSubordinate_lkb9e_55";
const img1$9 = "_img1_lkb9e_58";
const usernameContent = "_usernameContent_lkb9e_72";
const pswContent = "_pswContent_lkb9e_75";
const btn = "_btn_lkb9e_79";
const css$M = {
  svg_theme_fill_color: svg_theme_fill_color$O,
  AddSubordinate: AddSubordinate$1,
  img1: img1$9,
  usernameContent,
  pswContent,
  btn
};
const AddSubordinate = () => {
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [link_id, setLink_id] = reactExports.useState();
  const submit = async (params) => {
    setLoading(true);
    const [res, error2] = await register(
      { ...params, link_id },
      { noLogin: true }
    );
    setLoading(false);
    if (!error2) {
      Message$1.success(trans("添加成功"));
      form.setFieldsValue({
        username: "",
        password: ""
      });
    }
  };
  reactExports.useEffect(() => {
    getLinkList().then(([res, err]) => {
      if (res && Array.isArray(res) && res.length > 0) {
        const link_id2 = res[0].code;
        setLink_id(link_id2);
      }
    });
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$M.AddSubordinate, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      Form3,
      {
        form,
        onFinish: (values2) => submit(values2),
        onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
          console.log("Failed:", values2, errorFields, outOfDate);
        },
        initialValues: {
          username: "",
          password: ""
        },
        onValuesChange: (changedValues, allValues) => {
          if (changedValues.username) {
            form.setFieldsValue({
              username: changedValues.username.toLowerCase()
            });
          }
        },
        children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$M.usernameContent, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Form3.Field,
            {
              name: "username",
              rules: [
                { required: true, message: trans("请输入用户名") },
                {
                  validator: (rule, value2) => {
                    const error2 = checkInputUserName(value2);
                    if (!error2) {
                      return Promise.resolve();
                    }
                    return Promise.reject(error2);
                  }
                }
              ],
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Input,
                {
                  placeholder: trans("输入用户名"),
                  clearable: true,
                  className: css$M.loginInput,
                  prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: css$M.img1 })
                }
              )
            }
          )
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$M.pswContent, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Form3.Field,
            {
              name: "password",
              rules: [
                { required: true, message: trans("请输入密码") },
                {
                  validator: (rule, value2) => {
                    const error2 = checkInputUserPwd(value2);
                    if (!error2) {
                      return Promise.resolve();
                    }
                    return Promise.reject(error2);
                  }
                }
              ],
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Input,
                {
                  type: "password",
                  placeholder: trans("请输入密码"),
                  clearable: true,
                  className: css$M.loginInput,
                  prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: css$M.img1 })
                }
              )
            }
          )
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Button$1,
            {
              className: css$M.btn,
              block: true,
              loading: loading2,
              onClick: () => {
                form.submit();
              },
              children: trans("新增下级代理")
            }
          )
        })
        ]
      }
    )
  });
};
const svg_theme_fill_color$N = "_svg_theme_fill_color_15aba_3";
const directlyGet = "_directlyGet_15aba_55";
const moreBtn = "_moreBtn_15aba_73";
const totalBottom = "_totalBottom_15aba_76";
const openB = "_openB_15aba_85";
const bottomYj = "_bottomYj_15aba_88";
const bottomIcon = "_bottomIcon_15aba_92";
const bottomTxt = "_bottomTxt_15aba_266";
const bottomItem = "_bottomItem_15aba_385";
const tNum = "_tNum_15aba_393";
const search = "_search_15aba_433";
const css$L = {
  svg_theme_fill_color: svg_theme_fill_color$N,
  directlyGet,
  moreBtn,
  totalBottom,
  openB,
  bottomYj,
  bottomIcon,
  bottomTxt,
  bottomItem,
  tNum,
  search
};
const svg_theme_fill_color$M = "_svg_theme_fill_color_6135f_3";
const agentTableAll = "_agentTableAll_6135f_55";
const agentMemberTab = "_agentMemberTab_6135f_55";
const agentVip = "_agentVip_6135f_223";
const tabItem = "_tabItem_6135f_267";
const copyBtn = "_copyBtn_6135f_275";
const tabNum = "_tabNum_6135f_386";
const tabNumSec = "_tabNumSec_6135f_425";
const mem_nomore = "_mem_nomore_6135f_495";
const mem_disabled = "_mem_disabled_6135f_519";
const css$K = {
  svg_theme_fill_color: svg_theme_fill_color$M,
  agentTableAll,
  agentMemberTab,
  agentVip,
  tabItem,
  copyBtn,
  tabNum,
  tabNumSec,
  mem_nomore,
  mem_disabled
};
const ListItem = ({ data, isSecond, showDialog = () => {
} }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$K.agentTableAll, children: [
        data.length > 0 && isSecond ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$K.agentMemberTab, style: { display: "none" } }) : null,
        data.length === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(Empty, { type: 2 }) : data.map((item2) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$K.agentMemberTab, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$K.agentVip, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  "V",
                  item2.level
                ]
              })
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$K.agentTabLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$K.tabItem, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$K.copyBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CopyText, { value: item2.uid }) }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$K.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("收到现金返还") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$K.tabNum, children: [
                    " ",
                    customToFixed(item2.water),
                    " "
                  ]
                })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$K.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("收入总计") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$K.tabNum, children: [
                    " ",
                    customToFixed(item2.total_get),
                    " "
                  ]
                })
                ]
              })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$K.agentTabRight, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$K.tabItem, onClick: () => {
                  showDialog(item2);
                }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("直属下级2") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                  className: css$K.tabNumSec, children: [
                    " ",
                    item2.sub_num,
                    " "
                  ]
                })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$K.tabItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("VIP领取") }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "span",
                  {
                    className: css$K.tabNum,
                    children: [
                      " ",
                      item2.vip_upgrade ? customToFixed(item2.vip_upgrade) : "0,00",
                      " "
                    ]
                  }
                )
                ]
              })
              ]
            })
            ]
          }, item2.uid);
        })
      ]
    })
  });
};
const bgMaps = {
  black: "/home/closeIcon.webp"
};
const DirectlyGet = () => {
  var _a, _b;
  const [page, setPage] = reactExports.useState(1);
  const [total2, setTotal] = reactExports.useState(0);
  const [uid2, setUid] = reactExports.useState("");
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [data, setData] = reactExports.useState([]);
  const [openWin, setOpenWin] = reactExports.useState(false);
  const [pageNext, setPageNext] = reactExports.useState(1);
  const [totalNext, setTotalNext] = reactExports.useState(0);
  const [dataNext, setDataNext] = reactExports.useState([]);
  const [curData, setCurData] = reactExports.useState("");
  const [nextIds, setNextIds] = reactExports.useState([]);
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const [totalAgg, setTotalAgg] = reactExports.useState({});
  const [isShowTotal, setIsShowTotal] = reactExports.useState(false);
  const { theme, token: token2 } = useUserInfoStore();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time,
      page_size: 15,
      uid: uid2
    };
  }, [ty, uid2, start_time, end_time]);
  const handleInput = (val) => {
    if (!val) {
      setUid(val);
    }
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      setUid(event.target.value);
    }
  };
  const getList = async () => {
    if (!token2)
      return;
    if (page === 1) {
      setTotal(0);
    }
    const [res, err] = await postAgencyMypick({ ...params, page });
    if (page === 1) {
      setTotal(res.t);
      setData(res.d || []);
      setTotalAgg(res.agg);
      return;
    }
    setData([...data, ...res.d]);
  };
  const search2 = () => {
    if (page !== 1) {
      setData([]);
      setPage(1);
    } else {
      getList();
    }
  };
  const getNextList = async (data2) => {
    if (isLoading)
      return;
    const paramsSec = {
      ...params
    };
    paramsSec.uid = data2.uid;
    setCurData(data2.uid);
    if (pageNext === 1) {
      setTotalNext(0);
    }
    setIsLoading(true);
    const [res, err] = await postDirectAgencyState({ ...paramsSec, pageNext });
    setIsLoading(false);
    if (pageNext === 1) {
      setTotalNext(res.t);
      setDataNext(res.d || []);
      return;
    }
    setDataNext([...dataNext, ...res.d]);
  };
  const addIdArr = (uid22) => {
    const newArr = [...nextIds];
    newArr.push(uid22);
    setNextIds(newArr);
  };
  const getNextData = (data2) => {
    if (data2.sub_num) {
      getNextList(data2);
      addIdArr(data2.uid);
      setOpenWin(true);
    }
  };
  const getNextProData = (data2) => {
    if (data2.sub_num) {
      getNextList(data2);
      addIdArr(data2.uid);
    }
  };
  const goBackList = () => {
    if (isLoading)
      return;
    const newArr = [...nextIds];
    newArr.pop();
    const params2 = {
      uid: newArr.at(-1)
      // 最后一个id
    };
    getNextList(params2);
    setNextIds(newArr);
  };
  reactExports.useEffect(() => {
    console.log("加载更多数据", params.start_time);
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      search2();
    }
  }, [params]);
  reactExports.useEffect(() => {
    if (!openWin) {
      setNextIds([]);
    }
  }, [openWin]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$L.directlyGet, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$L.search, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        LabelInput,
        {
          value: params.uid,
          onSearch: (val) => {
            console.log("搜索");
            setUid(val);
          },
          onChange: handleInput,
          onKeyDown: handleKeyDown,
          placeholder: trans("会员帐号"),
          label: ""
        }
      )
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: openWin,
        closeByClickOut: false,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "agentDialog", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "topDia", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "titleDia", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "titleDiaBack", onClick: goBackList, children: nextIds.length > 1 ? /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {}) : null }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                style: { flex: 1 }, children: [
                  trans("的下属"),
                  " ",
                  curData
                ]
              })
              ]
            }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "timeDia", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  " ",
                  trans("日期"),
                  " "
                ]
              }),
                (_a = beiormatTimer(params.start_time)) == null ? void 0 : _a.substring(0, 10),
                "~",
                (_b = beiormatTimer(params.end_time)) == null ? void 0 : _b.substring(0, 10)
              ]
            })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "agentListContent", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(ListItem, {
              isSecond: true, data: dataNext, showDialog: (myData) => {
                getNextProData(myData);
              }
            }),
              totalNext > dataNext.length && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$L.moreBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  LoadMore,
                  {
                    onClick: () => {
                      setPageNext(page + 1);
                    }
                  }
                )
              })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: "bottomClose", onClick: () => {
              setOpenWin(false);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              Image,
              {
                src: bgMaps[theme] || "/home/closeIcon.webp"
              }
            )
          })
          ]
        })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ListItem, {
      data, showDialog: (myData) => {
        getNextData(myData);
      }
    }),
      total2 > data.length && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$L.moreBtn, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          LoadMore,
          {
            onClick: () => {
              setPage(page + 1);
            }
          }
        )
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$L.totalBottom, isShowTotal ? css$L.openB : ""), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$L.bottomYj, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
            className: css$L.bottomIcon, onClick: () => {
              setIsShowTotal(!isShowTotal);
            }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowLeftInMineIcon, {})
          })
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$L.bottomTxt, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$L.bottomTxtLeft, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$L.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("收到现金返还") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$L.tNum, children: customToFixed(totalAgg.water) })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$L.bottomItem, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("收入总计") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$L.tNum, children: customToFixed(totalAgg.total_get) })
              ]
            })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$L.bottomTxtRight, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$L.bottomItem, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("VIP领取") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$L.tNum, children: customToFixed(totalAgg.vip_upgrade) })
              ]
            })
          })
          ]
        })
        ]
      })
    ]
  });
};
const Agent = () => {
  var _a;
  const defaultPage = sessionStorage.getItem("agentPage") || "Tutorial";
  const [activeTab, setActiveTab] = reactExports.useState(defaultPage);
  const [paidAmount, setPaidAmount] = reactExports.useState(0);
  const [directlyChild, setDirectlyChild] = reactExports.useState(0);
  const { token: token2 } = useUserInfoStore();
  const handleClick = (val) => {
    setActiveTab(val);
    sessionStorage.setItem("agentPage", val);
  };
  useNavigate();
  const [tabList, setTabList] = reactExports.useState([
    {
      label: trans("推广教程"),
      //Link de Convite
      value: "Tutorial",
      comp: Tutorial
    },
    // {
    // 	label: trans('我的推荐'),
    // 	value: 'Recommend',
    //   comp:Recommend
    // },
    // 新增
    {
      label: trans("我的数据"),
      //Meus Dados 
      value: "Report",
      comp: Report
    },
    {
      label: trans("全部数据"),
      value: "AllData",
      comp: AllData
    },
    {
      label: trans("我的业绩"),
      // 原页面 我的收入
      value: "Income",
      comp: Income$2
    },
    {
      label: trans("我的佣金"),
      value: "Rebate",
      comp: Rebate
    },
    {
      label: trans("直属数据"),
      //Dados diretos  原直属会员
      value: "Member",
      comp: directData
    },
    {
      label: trans("直属投注"),
      //Apostas diretas
      value: "Transaction",
      comp: Income
    },
    // 新增
    {
      label: trans("直属财务"),
      value: "SubordinateIncome",
      comp: Income$1
    },
    {
      label: trans("直属领取"),
      //Pedidos de subordinados
      value: "DirectlyGet",
      comp: DirectlyGet
    },
    {
      label: trans("返佣比例"),
      value: "ReturnRate",
      comp: Detail
    },
    {
      label: trans("注册代理"),
      //原直属开户
      value: "AddSubordinate",
      comp: AddSubordinate
    }
  ]);
  const CurComponent = (_a = tabList.find((tab) => tab.value === activeTab)) == null ? void 0 : _a.comp;
  reactExports.useEffect(() => {
  }, []);
  reactExports.useEffect(() => {
    if (token2) {
      postRebateAgencyBrief().then((res) => {
        if (res && res[0]) {
          const data = res[0] || {};
          setPaidAmount(data.paid_amount || 0);
          setDirectlyChild(data.child1_total_num || 0);
        }
      });
    } else {
      setActiveTab("Tutorial");
      setTabList(tabList.filter((item2) => item2.value !== "AddSubordinate"));
    }
  }, [token2]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$11.agent, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$11.head, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Tabs$1, { options: tabList, value: activeTab, onClick: handleClick, gap: 20 }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$11.body, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CurComponent, { paidAmount, directlyChild, setPage: handleClick }) })
    ]
  });
};
const svg_theme_fill_color$L = "_svg_theme_fill_color_1pr56_3";
const record = "_record_1pr56_55";
const header$1 = "_header_1pr56_58";
const img1$8 = "_img1_1pr56_72";
const img$4 = "_img_1pr56_72";
const coin = "_coin_1pr56_83";
const content$4 = "_content_1pr56_106";
const tabBtn = "_tabBtn_1pr56_109";
const inline$1 = "_inline_1pr56_115";
const normalBtn = "_normalBtn_1pr56_128";
const opera = "_opera_1pr56_137";
const white = "_white_1pr56_147";
const yellow = "_yellow_1pr56_168";
const red = "_red_1pr56_205";
const pickerContainer$1 = "_pickerContainer_1pr56_239";
const margin$2 = "_margin_1pr56_243";
const negative = "_negative_1pr56_247";
const positive = "_positive_1pr56_287";
const amount = "_amount_1pr56_327";
const player = "_player_1pr56_331";
const input = "_input_1pr56_341";
const headContainer = "_headContainer_1pr56_346";
const css$J = {
  svg_theme_fill_color: svg_theme_fill_color$L,
  record,
  header: header$1,
  img1: img1$8,
  img: img$4,
  coin,
  content: content$4,
  tabBtn,
  inline: inline$1,
  normalBtn,
  opera,
  white,
  yellow,
  red,
  pickerContainer: pickerContainer$1,
  margin: margin$2,
  negative,
  positive,
  amount,
  player,
  input,
  headContainer
};
const svg_theme_fill_color$K = "_svg_theme_fill_color_1ltos_3";
const pickerContainer = "_pickerContainer_1ltos_55";
const block = "_block_1ltos_60";
const content$3 = "_content_1ltos_63";
const active$c = "_active_1ltos_74";
const text = "_text_1ltos_173";
const icon$9 = "_icon_1ltos_258";
const open = "_open_1ltos_266";
const h5PickerContainer = "_h5PickerContainer_1ltos_335";
const opar = "_opar_1ltos_441";
const itemScroll = "_itemScroll_1ltos_648";
const center = "_center_1ltos_653";
const itemContent = "_itemContent_1ltos_659";
const item$6 = "_item_1ltos_648";
const placeholder = "_placeholder_1ltos_934";
const css$I = {
  svg_theme_fill_color: svg_theme_fill_color$K,
  pickerContainer,
  block,
  content: content$3,
  active: active$c,
  text,
  icon: icon$9,
  open,
  h5PickerContainer,
  opar,
  itemScroll,
  center,
  itemContent,
  item: item$6,
  placeholder
};
const H5PickerContainer = (props) => {
  const itemScrollRef = reactExports.useRef(null);
  const itemContentRef = reactExports.useRef(null);
  const [isCenter, setIsCenter] = reactExports.useState(false);
  const close2 = () => {
    props.onClose && props.onClose();
  };
  reactExports.useEffect(() => {
    const itemScrollHeight = itemScrollRef.current.offsetHeight;
    const itemContentHeight = itemContentRef.current.offsetHeight;
    setIsCenter(itemContentHeight < itemScrollHeight);
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$I.h5PickerContainer, onClick: close2, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("section", {
      className: joinClass(css$I.content, props.newPickerBg ? css$I.newPickerBg : ""), onClick: (e2) => {
        e2.stopPropagation();
      }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$I.opar, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { onClick: close2, children: trans("取消") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: props.modalLabel || trans("提示") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { onClick: close2, children: trans("确认") })
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        ref: itemScrollRef, className: joinClass(css$I.itemScroll, isCenter ? css$I.center : ""), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          ref: itemContentRef, className: css$I.itemContent, children: props.items.map((item2, index2) => {
            return /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                className: joinClass(css$I.item, props.active === item2.value ? css$I.active : ""),
                onClick: () => {
                  props.setActive(item2.value);
                  props.onClose && props.onClose();
                },
                onChange: () => {
                  props.setActive(item2.value);
                  props.onClose && props.onClose();
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: item2.label })
              },
              item2.value
            );
          })
        })
      })
      ]
    })
  });
};
const Picker = (props) => {
  if (props.items.length === 0)
    return null;
  useUserInfoStore();
  const { block: block2, label: label2 } = props;
  const [isOpen, setIsOpen] = reactExports.useState(false);
  const [items2, setItems] = reactExports.useState(props.items);
  const [active2, setActive] = reactExports.useState(props.defaultValue ? props.defaultValue : items2[0].value);
  const isH52 = getWebType();
  const contentRef = reactExports.useRef(null);
  const currentLabel = reactExports.useMemo(() => {
    const item2 = items2.find((item22) => item22.value === active2);
    return item2 ? item2.label : props.placeholder || "";
  }, [active2, items2]);
  const changeActive = (value2) => {
    setActive(value2);
    props.onChange && props.onChange(value2);
  };
  useClickAway(() => {
    setIsOpen(false);
  }, contentRef);
  reactExports.useEffect(() => {
    if (props.placeholder && !props.defaultValue) {
      setActive("");
    }
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: joinClass(
        css$I.pickerContainer,
        block2 && css$I.block
      ), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        ref: contentRef, className: joinClass("pickerContentGlobal", css$I.content, isOpen && css$I.active, props.newPickerBg ? css$I.newPickerBg : ""), onClick: () => {
          if (props.disabled)
            return;
          setIsOpen(true);
        }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass(css$I.text, currentLabel === props.placeholder ? css$I.placeholder : ""), children: currentLabel }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: joinClass("iconDown", css$I.icon, isOpen && css$I.open), children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightInMineIcon, {}) })
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: isOpen && isH52,
        closeByClickOut: false,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          H5PickerContainer,
          {
            modalLabel: props.modalLabel,
            items: items2,
            active: active2,
            setActive: changeActive,
            onClose: () => {
              setIsOpen(false);
            }
          }
        )
      }
    )
    ]
  });
};
const urlTabMap = {
  4: "275"
};
const AccountDetail = (props) => {
  const search2 = window.location.search;
  const { i18n } = useTranslation();
  const flagItems = [
    { label: i18n.t("存款"), value: "271" },
    { label: i18n.t("取款"), value: "272" },
    { label: i18n.t("转账"), value: "273" },
    { label: i18n.t("红利"), value: "274" },
    { label: i18n.t("佣金返水"), value: "275" },
    { label: i18n.t("调整"), value: "278" },
    { label: i18n.t("任务"), value: "279" }
  ];
  useUserInfoStore();
  const [flag, setFlag] = reactExports.useState(urlTabMap[search2 == null ? void 0 : search2.split("tag=")[1]] || flagItems[0].value);
  const [dataSource, setDataSource] = reactExports.useState([]);
  useNavigate();
  const [page, setPage] = reactExports.useState(1);
  const [t2, setT] = reactExports.useState(0);
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const params = reactExports.useMemo(() => {
    return {
      flag,
      ty,
      start_time,
      end_time,
      page_size: 10
    };
  }, [ty, flag, start_time, end_time]);
  const getList = async () => {
    if (isLoading)
      return;
    if (page === 1) {
      setT(0);
    }
    setIsLoading(true);
    const [res, error2] = await getMemberRecordTrade(
      { ...params, page },
      { useLoading: true }
    );
    if (error2)
      return;
    if (page === 1) {
      setT(res.t);
    }
    setIsLoading(false);
    const _data = res.d || [];
    if (_data.length) {
      if (page > 1) {
        setDataSource([...dataSource, ..._data]);
      } else {
        setDataSource(_data);
      }
    } else {
      if (page === 1) {
        setDataSource([]);
      }
    }
  };
  const reloadData = () => {
    if (page !== 1) {
      setDataSource([]);
      setPage(1);
    } else {
      getList();
    }
  };
  reactExports.useEffect(() => {
    if (params.start_time) {
      reloadData();
    }
  }, [params]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  const transType = (text2) => {
    if (text2 == "271") {
      return i18n.t("存款");
    }
    if (text2 == "272") {
      return i18n.t("取款");
    }
    if (text2 == "274") {
      return i18n.t("红利");
    }
    if (text2 == "275") {
      return i18n.t("佣金返水");
    }
    if (text2 == "278") {
      return i18n.t("调整");
    }
    if (text2 == "273") {
      return i18n.t("转账");
    }
    if (text2 == "279") {
      return i18n.t("任务");
    }
  };
  const limitClicks = () => {
    if (isLoading)
      return;
    setPage(page + 1);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$J.pickerContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$J.inline, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }),
          !props.isDeposit && /* @__PURE__ */ jsxRuntimeExports.jsx(
            Picker,
            {
              label: i18n.t("游戏类型"),
              defaultValue: flag,
              items: flagItems,
              onChange: (_value) => {
                setFlag(_value);
              }
            }
          )
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Table,
      {
        columns: [
          {
            title: i18n.t("时间"),
            dataIndex: "created_at",
            width: 160,
            render: (text2, item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customFormatTimer(text2) });
            }
          },
          {
            title: i18n.t("交易类型"),
            // title: 'Tipo de \r Transação',
            dataIndex: "flag",
            render: (text2, item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: transType(text2) });
            }
          },
          { title: i18n.t("订单号1"), dataIndex: "bill_no", width: 130 },
          {
            title: i18n.t("数量"),
            dataIndex: "amount",
            render: (text2, item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "section",
                {
                  className: joinClass(
                    +text2 > 0 && (item2.flag == 271 || item2.flag == 272) && item2.state == 362 ? css$J.positive : css$J.negative,
                    css$J.amount
                  ),
                  children: [
                    getMoneyUnit(true),
                    " ",
                    customToFixed(text2)
                  ]
                }
              );
            }
          }
          // {
          //   title: 'Operação',
          //   dataIndex: 'id',
          //   render: (text, item) => {
          //     return <section
          //       className={css.opera}
          //       onClick={
          //         () => navigation(`/withdraw-detail?id=${text}`)
          //       }
          //     >
          //       <span>
          //         Detalhes
          //       </span>
          //       <Image className={css.detail} src="/home/icons/detail_green_icon.webp" />
          //     </section>
          //   }
          // },
        ],
        dataSource
      }
    ),
      t2 > dataSource.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            limitClicks();
          }
        }
      )
    ]
  });
};
const Record = ({ item: item2 }) => {
  const { i18n } = useTranslation();
  const [dataSource, setDataSource] = reactExports.useState([]);
  const [page, setPage] = reactExports.useState(1);
  const { games } = useGameStore();
  const [gameType, setGameType] = reactExports.useState("");
  const [platform, setPlatform] = reactExports.useState("");
  const [status, setStatus] = reactExports.useState("");
  const [player_name, setPlayerName] = reactExports.useState("");
  useUserInfoStore();
  const [statusItems] = reactExports.useState([
    { label: i18n.t("全部"), value: "-1" },
    { label: i18n.t("未结算"), value: "0" },
    { label: i18n.t("已结算"), value: "1" },
    { label: i18n.t("已撤单"), value: "2" },
    { label: i18n.t("已取消"), value: "3" }
  ]);
  const [t2, setT] = reactExports.useState(0);
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const searchAll = {
    label: i18n.t("全部"),
    value: ""
  };
  const params = reactExports.useMemo(() => {
    return {
      flag: status,
      platform_id: platform,
      game_type: gameType,
      ty,
      page_size: 10,
      player_name,
      start_time,
      end_time
    };
  }, [ty, gameType, platform, status, player_name, start_time, end_time]);
  const getList = async () => {
    if (isLoading)
      return;
    if (page === 1) {
      setT(0);
    }
    setIsLoading(true);
    const [res, error2] = await getMemberRecordGame(
      { ...params, page },
      { useLoading: true }
    );
    if (error2)
      return;
    if (page === 1) {
      setT(res.t);
    }
    setIsLoading(false);
    const _data = res.d || [];
    if (_data.length) {
      if (page > 1) {
        setDataSource([...dataSource, ..._data]);
      } else {
        setDataSource(_data);
      }
    } else {
      if (page === 1) {
        setDataSource([]);
      }
    }
  };
  const reloadData = () => {
    if (page !== 1) {
      setDataSource([]);
      setPage(1);
    } else {
      getList();
    }
  };
  const gameTypeItems = reactExports.useMemo(() => {
    if (!games.length)
      return [];
    const _games = lodashExports.cloneDeep(games);
    _games.sort((a, b2) => {
      return a.sort - b2.sort;
    });
    return [
      searchAll,
      ..._games.map((item22) => {
        var _a;
        return {
          label: trans(item22.name),
          value: item22.id,
          children: (_a = item22.l) != null ? _a : []
        };
      }).filter((item22) => item22.children.length > 0)
    ];
  }, [games]);
  const platformItems = reactExports.useMemo(() => {
    if (!games.length || !gameTypeItems.length || !gameType)
      return [searchAll];
    return [
      searchAll,
      ...gameTypeItems.filter((item22) => item22.value == gameType)[0].children.map((item22) => {
        return {
          label: item22.name,
          value: item22.id
        };
      })
    ];
  }, [gameType, gameTypeItems]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [page]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      reloadData();
    }
  }, [params]);
  reactExports.useEffect(() => {
    if (gameTypeItems.length) {
      setGameType(gameTypeItems[0].value);
    }
  }, [gameTypeItems]);
  reactExports.useEffect(() => {
    if (platformItems.length) {
      setPlatform(platformItems[0].value);
    }
  }, [platformItems]);
  const transFlag = (text2) => {
    if (text2 == 9) {
      return i18n.t("区块链");
    }
    if (text2 == 6) {
      return "Esporte";
    }
    if (text2 == 5) {
      return "Cartas";
    }
    if (text2 == 7) {
      return "Loteria";
    }
    if (text2 == 2) {
      return "Pescaria";
    }
    if (text2 == 4) {
      return "Esports";
    }
    if (text2 == 3) {
      return i18n.t("老虎机");
    }
    if (text2 == 1) {
      return i18n.t("真人");
    }
  };
  const limitClicks = () => {
    if (isLoading)
      return;
    setPage(page + 1);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$J.pickerContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$J.inline, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
          Picker,
          {
            label: i18n.t("游戏类型"),
            items: gameTypeItems,
            onChange: (_value) => {
              setGameType(_value);
            }
          },
          gameTypeItems.length
        ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
          Picker,
          {
            label: i18n.t("状态"),
            items: statusItems,
            onChange: (_value) => {
              setStatus(_value);
            }
          }
        ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime })
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$J.tabBtn }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Table,
      {
        columns: [
          {
            title: i18n.t("时间"),
            dataIndex: "bet_time",
            width: 58,
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: customFormatTimer(text2) });
            }
          },
          {
            title: i18n.t("游戏类型"),
            dataIndex: "game_type",
            width: 55,
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: transFlag(text2) });
            }
          },
          { title: i18n.t("平台"), dataIndex: "api_name", width: 107 },
          { title: i18n.t("游戏"), dataIndex: "game_name", width: 60 },
          {
            title: i18n.t("有效投注"),
            dataIndex: "valid_bet_amount",
            width: 87,
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customToFixed(text2) });
            }
          },
          {
            title: i18n.t("损益"),
            dataIndex: "net_amount",
            width: 97,
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx(
                "section",
                {
                  className: joinClass(
                    +text2 != 0 ? +text2 > 0 ? css$J.yellow : css$J.red : css$J.white
                  ),
                  children: customToFixed(text2)
                }
              );
            }
          },
          { title: i18n.t("投注单号"), dataIndex: "bill_no", width: 82 }
        ],
        dataSource
      }
    ),
      t2 > dataSource.length && /* @__PURE__ */ jsxRuntimeExports.jsx(
        LoadMore,
        {
          onClick: () => {
            limitClicks();
          }
        }
      )
    ]
  });
};
const PersonalReport = ({ item: item2 }) => {
  const [dataSource, setDataSource] = reactExports.useState([]);
  const { ty, start_time, end_time, changeTime } = useTimeFilter();
  const { i18n } = useTranslation();
  const params = reactExports.useMemo(() => {
    return {
      ty,
      start_time,
      end_time
    };
  }, [ty, start_time, end_time]);
  reactExports.useEffect(() => {
    if (params.start_time) {
      getList();
    }
  }, [params]);
  const getList = async () => {
    const [res, error2] = await getMemberAgencyReportSubPlat(params, {
      useLoading: true
    });
    if (error2)
      return;
    const _data = res.d || [];
    setDataSource(_data);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$J.tabBtn, css$J.margin), children: /* @__PURE__ */ jsxRuntimeExports.jsx(DatePicker, { onChange: changeTime }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Table,
      {
        columns: [
          { title: i18n.t("平台"), dataIndex: "name", width: 50 },
          {
            title: i18n.t("投注次数"),
            dataIndex: "bet_count",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  " ",
                  text2 ? text2 : "0",
                  " "
                ]
              });
            }
          },
          {
            title: i18n.t("有效投注"),
            dataIndex: "bet_amount",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  " ",
                  customToFixed(text2),
                  " "
                ]
              });
            }
          },
          {
            title: i18n.t("损益"),
            dataIndex: "amount",
            render: (text2, item22) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx(
                "section",
                {
                  className: joinClass(
                    +text2 != 0 ? +text2 > 0 ? css$J.yellow : css$J.red : css$J.white
                  ),
                  children: customToFixed(text2)
                }
              );
            }
          }
        ],
        dataSource
      }
    )
    ]
  });
};
const RecordBetting = () => {
  const { i18n } = useTranslation();
  const [active2, setActive] = reactExports.useState("1");
  const search2 = window.location.search;
  const params = new URLSearchParams(search2);
  const to2 = params.get("tag");
  const items2 = [
    { label: i18n.t("账户明细"), value: "1" },
    { label: i18n.t("投注记录"), value: "2" },
    { label: i18n.t("个人报表"), value: "3" }
  ];
  reactExports.useEffect(() => {
    if (to2) {
      if (to2 == "4") {
        setActive("1");
      } else {
        setActive(to2.toString());
      }
    } else {
      setActive("1");
    }
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$J.record, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$J.content, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Tab, {
        items: items2, active: active2, ...items2, onChange: (_active) => {
          setActive(_active);
        }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab.Pane, { value: "1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(AccountDetail, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab.Pane, { value: "2", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Record, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab.Pane, { value: "3", children: /* @__PURE__ */ jsxRuntimeExports.jsx(PersonalReport, {}) })
        ]
      })
    })
  });
};
const svg_theme_fill_color$J = "_svg_theme_fill_color_1jxz2_3";
const HeadTabPage = "_HeadTabPage_1jxz2_55";
const HeadTabPage_body = "_HeadTabPage_body_1jxz2_60";
const css$H = {
  svg_theme_fill_color: svg_theme_fill_color$J,
  HeadTabPage,
  HeadTabPage_body
};
const svg_theme_fill_color$I = "_svg_theme_fill_color_79lmf_3";
const homebarsBox = "_homebarsBox_79lmf_55";
const active$b = "_active_79lmf_461";
const css$G = {
  svg_theme_fill_color: svg_theme_fill_color$I,
  homebarsBox,
  active: active$b
};
const LoginIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M27.4848 4.59823C27.4848 3.40913 28.634 2.55828 29.7713 2.90524L43.9131 7.21943C44.6579 7.44662 45.1667 8.1338 45.1667 8.91241V40.4541C45.1667 41.2327 44.6579 41.9199 43.9131 42.1471L29.7713 46.4612C28.634 46.8082 27.4848 45.9574 27.4848 44.7683V4.59823ZM29.4848 44.4576V4.90884L43.1667 9.0827V40.2838L29.4848 44.4576Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9 6.99992H25V8.99992H11V20.188H9V6.99992Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M9 27.3802H11V38.9999H25V40.9999H9V27.3802Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M21.9997 23.7841L15.03 18.39V21.9861H2.83301V25.5822H15.03V29.1783L21.9997 23.7841Z", fill: "#2FA33F" })
    ]
  });
};
const DownloadIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M34.9873 2.81467H12.3862C11.2114 2.81467 10.259 3.76703 10.259 4.94183V30.7337H37.1145V4.94183C37.1145 3.76704 36.1621 2.81467 34.9873 2.81467ZM37.1145 32.8609H10.259V42.4332C10.259 43.608 11.2114 44.5603 12.3862 44.5603H34.9873C36.1621 44.5603 37.1145 43.608 37.1145 42.4332V32.8609ZM12.3862 0.6875C10.0366 0.6875 8.13184 2.59223 8.13184 4.94183V42.4332C8.13184 44.7828 10.0366 46.6875 12.3862 46.6875H34.9873C37.3369 46.6875 39.2417 44.7828 39.2417 42.4332V4.94183C39.2417 2.59223 37.3369 0.6875 34.9873 0.6875H12.3862ZM18.236 7.44017C18.236 6.85277 18.7122 6.37659 19.2996 6.37659L28.0742 6.37659C28.6616 6.37659 29.1378 6.85277 29.1378 7.44017C29.1378 8.02757 28.6616 8.50375 28.0742 8.50375L19.2996 8.50375C18.7122 8.50375 18.236 8.02757 18.236 7.44017Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { className: "cusPath", cx: "23.6869", cy: "39.7106", r: "3.26012", fill: "#2FA33F" })
    ]
  });
};
const FavorableIcon = ({ className, isSelect = false } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M46 12.1592V24.1592H43V45.1592H5V24.1592H2V12.1592H46ZM23 14.1592H4V22.1592H23V14.1592ZM25 43.1592H41V24.1592H25L25 43.1592ZM23 24.1592L23 43.1592H7V24.1592H23ZM25 22.1592H44V14.1592H25V22.1592Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M19.5 7.65896L11.045 2.16321C10.3797 1.73079 9.5 2.20821 9.5 3.00165V7.65896H19.5Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M29 7.65896L37.455 2.16321C38.1203 1.73079 39 2.20821 39 3.00165V7.65896H29Z", fill: "#2FA33F" })
    ]
  });
};
const HomeIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M25.1603 4.95658C24.7814 4.61066 24.2022 4.60756 23.8197 4.94941L3.62023 23H8.00043V42.5C8.00043 43.0523 8.44814 43.5 9.00043 43.5H19.0004V45.5H9.00043C7.34357 45.5 6.00043 44.1568 6.00043 42.5V25H3.62023C1.78379 25 0.918217 22.7324 2.28757 21.5087L22.487 3.4581C23.6347 2.43255 25.3722 2.44184 26.5088 3.47961L46.2706 21.523C47.6191 22.7542 46.748 25 44.9221 25H42.5004V42.5C42.5004 44.1568 41.1573 45.5 39.5004 45.5H29.0004V43.5H39.5004C40.0527 43.5 40.5004 43.0523 40.5004 42.5V23H44.9221L25.1603 4.95658Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M29 45.5V31C29 29.8954 28.1046 29 27 29H21C19.8954 29 19 29.8954 19 31V45.5", stroke: "#2FA33F", strokeWidth: "2" })
    ]
  });
};
const ProfileIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M34.8262 13C34.8262 19.0751 29.9013 24 23.8262 24C17.751 24 12.8262 19.0751 12.8262 13C12.8262 6.92487 17.751 2 23.8262 2C29.9013 2 34.8262 6.92487 34.8262 13ZM32.8262 13C32.8262 17.9706 28.7967 22 23.8262 22C18.8556 22 14.8262 17.9706 14.8262 13C14.8262 8.02944 18.8556 4 23.8262 4C28.7967 4 32.8262 8.02944 32.8262 13Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M23.8262 24H24.8262C35.8719 24 44.8262 32.9543 44.8262 44C44.8262 45.1046 43.9307 46 42.8262 46H5.82617C4.7216 46 3.82617 45.1046 3.82617 44C3.82617 32.9543 12.7805 24 23.8262 24ZM23.8262 26H24.8262C34.7673 26 42.8262 34.0589 42.8262 44H5.82617C5.82617 34.0589 13.885 26 23.8262 26Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        className: "cusPath",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M24.8262 29C25.3785 29 25.8262 29.4477 25.8262 30L25.8262 39C25.8262 39.5523 25.3785 40 24.8262 40C24.2739 40 23.8262 39.5523 23.8262 39L23.8262 30C23.8262 29.4477 24.2739 29 24.8262 29Z",
        fill: "#2FA33F"
      }
    )
    ]
  });
};
const PromotionIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M31.5382 22.4286C22.6189 23.0296 18.8667 25.32 12.9668 30.6429C15.9246 17.4705 19.7598 13.0876 31.5382 12.0714V3.5L44.0382 16.7143L31.5382 30.6429V22.4286Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M24.3952 4.57129H8.3238C5.95687 4.57129 4.03809 6.49006 4.03809 8.857V39.5713C4.03809 41.9382 5.95687 43.857 8.3238 43.857H38.3238C40.6907 43.857 42.6095 41.9382 42.6095 39.5713V30.9999", stroke: "#717E97", strokeWidth: "2.14286", strokeLinecap: "round" })
    ]
  });
};
const RechargeIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M8.04297 11H10.043V16H8.04297V11Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.043 18H8.04297V23H10.043V18Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M8.04297 25H10.043V30H8.04297V25Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10.043 32H8.04297V37H10.043V32Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M1.04297 5V43H46.043V5H1.04297ZM44.043 7H3.04297V41H44.043V7Z", fill: "#717E97" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        className: "cusPath",
        d: "M28.543 22C29.9237 22 31.043 20.8807 31.043 19.5C31.043 18.1193 29.9237 17 28.543 17C27.1623 17 26.043 18.1193 26.043 19.5C26.043 20.8807 27.1623 22 28.543 22Z",
        fill: "#2FA33F"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        className: "cusPath",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M20.043 20C20.043 16.134 23.177 13 27.043 13H46.043V27H27.043C23.177 27 20.043 23.866 20.043 20ZM27.043 15H44.043V25H27.043C24.2815 25 22.043 22.7614 22.043 20C22.043 17.2386 24.2815 15 27.043 15Z",
        fill: "#2FA33F"
      }
    )
    ]
  });
};
const RegisterIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M22 24C28.0751 24 33 19.0751 33 13C33 6.92487 28.0751 2 22 2C15.9249 2 11 6.92487 11 13C11 19.0751 15.9249 24 22 24ZM22 22C26.9706 22 31 17.9706 31 13C31 8.02944 26.9706 4 22 4C17.0294 4 13 8.02944 13 13C13 17.9706 17.0294 22 22 22Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M33.1459 26.7608C30.1714 25.0065 26.7032 24 23 24H22C10.9543 24 2 32.9543 2 44C2 45.1046 2.89543 46 4 46H30.8477C30.0414 45.4322 29.3149 44.7589 28.6882 44H4C4 34.0589 12.0589 26 22 26H23C25.8817 26 28.6052 26.6772 31.0201 27.881C31.681 27.4341 32.3932 27.0572 33.1459 26.7608Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M36.1738 41V38H33.1738V36H36.1738V33H38.1738V36H41.1738V38H38.1738V41H36.1738Z", fill: "#2FA33F" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        className: "cusPath",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M46.1738 37C46.1738 41.9706 42.1444 46 37.1738 46C32.2033 46 28.1738 41.9706 28.1738 37C28.1738 32.0294 32.2033 28 37.1738 28C42.1444 28 46.1738 32.0294 46.1738 37ZM44.1738 37C44.1738 40.866 41.0398 44 37.1738 44C33.3078 44 30.1738 40.866 30.1738 37C30.1738 33.134 33.3078 30 37.1738 30C41.0398 30 44.1738 33.134 44.1738 37Z",
        fill: "#2FA33F"
      }
    )
    ]
  });
};
const SupportIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M24 0C13.5066 0 5 8.50659 5 19V19.083C2.16229 19.559 0 22.027 0 25V28C0 30.973 2.16229 33.441 5 33.917V37H8.13193C8.8404 40.979 12.3174 44 16.5 44H20V42H16.5C13.4264 42 10.8511 39.8667 10.1739 37H12C14.7614 37 17 34.7614 17 32V23C17 20.2386 14.7614 18 12 18H7.02892C7.54654 9.07662 14.9469 2 24 2C33.0531 2 40.4535 9.07662 40.9711 18H36C33.2386 18 31 20.2386 31 23V32C31 34.7614 33.2386 37 36 37H43V33.917C45.8377 33.441 48 30.973 48 28V25C48 22.027 45.8377 19.559 43 19.083V19C43 8.50659 34.4934 0 24 0ZM43 21.126V31.874C44.7252 31.4299 46 29.8638 46 28V25C46 23.1362 44.7252 21.5701 43 21.126ZM2 25C2 23.1362 3.27477 21.5701 5 21.126V31.874C3.27477 31.4299 2 29.8638 2 28V25ZM41 35V20H36C34.3431 20 33 21.3431 33 23V32C33 33.6569 34.3431 35 36 35H41ZM12 35H7V20H12C13.6569 20 15 21.3431 15 23V32C15 33.6569 13.6569 35 12 35Z",
        fill: "#717E97"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { className: "cusPath", x: "18", y: "38", width: "12", height: "9", rx: "4.5", fill: "#2FA33F" })
    ]
  });
};
const VIPIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M3 39.5438V11.7992C3 11.0243 3.84337 10.5438 4.50997 10.939L12.4074 15.6211C12.821 15.8663 13.3505 15.7825 13.6681 15.4215L22.541 5.33916C22.9209 4.90753 23.5856 4.88436 23.9946 5.28848L34.3305 15.5014C34.654 15.821 35.1523 15.8821 35.5434 15.6503L43.49 10.939C44.1566 10.5438 45 11.0243 45 11.7992V39.5438C45 41.753 43.2091 43.5438 41 43.5438H7C4.79086 43.5438 3 41.753 3 39.5438Z",
        stroke: "#717E97",
        strokeWidth: "2"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { className: "cusPath", d: "M17 23.0439L24.2593 35.0439L31 23.0439", stroke: "#2FA33F", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" })
    ]
  });
};
const WithdrawIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg", width: "48", height: "48", viewBox: "0 0 48 48", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        className: "cusPath",
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M21.5968 16.135H32.3126L31.8202 13.8916L21.5968 16.135ZM14 30.3538V17.0205H34V30.3538H14ZM32.3333 21.0275C31.3395 20.6408 30.5924 19.7602 30.3935 18.6871H17.5283C17.3347 19.7319 16.6214 20.5942 15.6667 20.9959V26.3783C16.6214 26.78 17.3347 27.6424 17.5283 28.6871H30.3935C30.5924 27.614 31.3395 26.7334 32.3333 26.3467V21.0275ZM27.125 23.6871C27.125 25.413 25.7259 26.8121 24 26.8121C22.2741 26.8121 20.875 25.413 20.875 23.6871C20.875 21.9612 22.2741 20.5621 24 20.5621C25.7259 20.5621 27.125 21.9612 27.125 23.6871Z",
        fill: "#2FA33F"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M3 10.8C3 8.70132 4.70132 7 6.8 7H41.2C43.2987 7 45 8.70132 45 10.8V16.5165C42.0347 17.7064 39.9395 20.6074 39.9395 24C39.9395 27.3926 42.0347 30.2936 45 31.4835V37.2C45 39.2987 43.2987 41 41.2 41H6.8C4.70132 41 3 39.2987 3 37.2V31.4321C5.89887 30.2117 7.93555 27.3448 7.93555 24C7.93555 20.6552 5.89887 17.7883 3 16.5679V10.8Z",
        stroke: "#717E97",
        strokeWidth: "2"
      }
    )
    ]
  });
};
const HomeBars = () => {
  var _a, _b;
  const location2 = useLocation();
  const navigate = useNavigate();
  const { theme, websetConfig, token: token2, isSetWithdrawPassword, appUrl } = useUserInfoStore();
  const [depositStatus, setDepositStatus] = reactExports.useState(false);
  const defaultBar = [
    {
      name: "首页",
      id: "d-1",
      //随机取的用于做key值
      is_after: true,
      is_before: true
    },
    {
      name: "优惠",
      id: "d-2",
      is_after: true,
      is_before: true
    },
    {
      name: "充值",
      id: "d-3",
      is_after: true,
      is_before: true
    },
    {
      name: "客服",
      id: "d-4",
      is_after: true,
      is_before: true
    },
    {
      name: "我的",
      id: "d-5",
      is_after: true,
      is_before: true
    }
  ];
  const getSettings = (bar) => {
    switch (bar.name) {
      case "首页":
        return {
          path: "/",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(HomeIcon, {})
        };
      case "优惠":
        return {
          path: "/activity",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(FavorableIcon, {})
        };
      case "我的":
        return {
          path: "/mine",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(ProfileIcon, {}),
          needToken: true
        };
      case "登录":
        return {
          path: "/login",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(LoginIcon, {})
        };
      case "注册":
        return {
          path: "/register",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(RegisterIcon, {})
        };
      case "推广":
        return {
          path: "/agent",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(PromotionIcon, {}),
          needToken: false
        };
      case "充值":
        return {
          path: "/deposit",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(RechargeIcon, {}),
          needToken: true
        };
      case "提现":
        return {
          path: "/withdraw",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawIcon, {}),
          needToken: true
        };
      case "客服":
        return {
          path: "/message?service=1",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(SupportIcon, {})
        };
      case "VIP":
        return {
          path: "/vip",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(VIPIcon, {}),
          needToken: true
        };
      case "APP下载":
        return {
          path: "/download",
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(DownloadIcon, {})
        };
    }
  };
  const BarArr = ((_a = websetConfig == null ? void 0 : websetConfig.nav_bottom_h5) == null ? void 0 : _a.length) > 0 ? websetConfig == null ? void 0 : websetConfig.nav_bottom_h5 : defaultBar;
  const BarList = (_b = BarArr == null ? void 0 : BarArr.filter((item2) => {
    return token2 ? item2.is_after : item2.is_before;
  })) == null ? void 0 : _b.map((bar) => {
    return {
      ...bar,
      ...getSettings(bar)
    };
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$G.homebarsBox, children: BarList == null ? void 0 : BarList.map((item2) => {
        const isActive2 = location2.pathname === item2.path;
        return /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: isActive2 ? css$G.active : "",
            onClick: () => {
              if (isActive2)
                return;
              if (item2.path === "/login" || item2.needToken && !token2) {
                useUserInfoStore.setState({ openForLogin: true });
                return;
              }
              if (item2.path === "/register") {
                useUserInfoStore.setState({ openForRegister: true });
                return;
              }
              if (item2.path === "/deposit") {
                setDepositStatus(true);
                return;
              }
              if (item2.path === "/download") {
                window.open(appUrl, "_blank");
                return;
              }
              if (item2.path === "/withdraw") {
                navigate(isSetWithdrawPassword ? "/withdraw" : "/withdraw-set?to=withdraw");
              }
              navigate(item2.path);
            },
            children: [
              item2.icon,
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: instance.t(item2.name) })
            ]
          },
          item2.id
        );
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, { showType: "bottom", isOpen: depositStatus, onClose: (e2) => e2 && e2.stopPropagation(), children: /* @__PURE__ */ jsxRuntimeExports.jsx(DepositDialog, { setDepositStatus }) })
    ]
  });
};
const svg_theme_fill_color$H = "_svg_theme_fill_color_89jj1_3";
const HeadTabs$1 = "_HeadTabs_89jj1_55";
const left_icon = "_left_icon_89jj1_151";
const right_icon = "_right_icon_89jj1_151";
const HeadTabs_scroll = "_HeadTabs_scroll_89jj1_235";
const HeadTabs_container = "_HeadTabs_container_89jj1_239";
const HeadTab_item = "_HeadTab_item_89jj1_245";
const HeadTab_item_active = "_HeadTab_item_active_89jj1_295";
const tips$2 = "_tips_89jj1_390";
const css$F = {
  svg_theme_fill_color: svg_theme_fill_color$H,
  HeadTabs: HeadTabs$1,
  left_icon,
  right_icon,
  HeadTabs_scroll,
  HeadTabs_container,
  HeadTab_item,
  HeadTab_item_active,
  tips: tips$2
};
const HeadTabs = ({ children }) => {
  const { t: t2 } = useTranslation();
  const [showArrowL, setShowArrowL] = reactExports.useState(false);
  const [showArrowR, setShowArrowR] = reactExports.useState(false);
  const location2 = useLocation();
  const navigate = useNavigate();
  const { token: token2, missaoList, availableList, missaoSwitch, rebateStatus } = useUserInfoStore();
  const missaoNum = missaoList.filter((el) => el.state === 502).length;
  const availableNum = availableList.d.length;
  const moveFn = (type4) => {
    const parentEl = document.getElementById("scroll");
    const totalWidth = parentEl.clientWidth;
    if (type4 === "left") {
      parentEl.scrollTo({
        top: 0,
        left: parentEl.scrollLeft - totalWidth,
        behavior: "smooth"
      });
    } else {
      parentEl.scrollTo({
        top: 0,
        left: parentEl.scrollLeft + totalWidth,
        behavior: "smooth"
      });
    }
  };
  const goPageFN = (item2) => {
    if ((item2 == null ? void 0 : item2.type) === "lxb") {
      Message$1.info(t2("功能维护中"));
    } else {
      if (!token2) {
        const meta = routesMaps[item2.url] || {};
        if (meta.auth) {
          useUserInfoStore.setState({ openForLogin: true });
        } else {
          navigate(item2.url);
        }
      } else {
        navigate(item2.url);
      }
    }
  };
  reactExports.useEffect(() => {
    const ActiveEl = document.querySelector(".".concat(css$F.HeadTab_item_active));
    if (ActiveEl) {
      ActiveEl.scrollIntoView({
        behavior: "smooth",
        inline: "center",
        block: "center"
      });
    }
  }, [location2.pathname]);
  reactExports.useEffect(() => {
    const watchElLeft = document.querySelector("#watchEl_left");
    const watchElRight = document.querySelector("#watchEl_right");
    const ActiveEl = document.querySelector(".".concat(css$F.HeadTab_item_active));
    if (ActiveEl) {
      ActiveEl.scrollIntoView({
        behavior: "smooth",
        inline: "center",
        block: "center"
      });
    }
    const callBack = (entries, observe2) => {
      entries.forEach((item2) => {
        if (item2.isIntersecting) {
          if (watchElLeft === item2.target) {
            setShowArrowL(false);
          }
          if (watchElRight === item2.target) {
            setShowArrowR(false);
          }
        } else {
          if (watchElLeft === item2.target) {
            setShowArrowL(true);
          }
          if (watchElRight === item2.target) {
            setShowArrowR(true);
          }
        }
      });
    };
    const intersectionObserver = new IntersectionObserver(callBack);
    watchElLeft && intersectionObserver.observe(watchElLeft);
    watchElRight && intersectionObserver.observe(watchElRight);
    return () => {
      intersectionObserver.disconnect();
    };
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$F.HeadTabs, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$F.left_icon, children: showArrowL && /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          onClick: () => {
            moveFn("left");
          },
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightBicolor, {})
        }
      )
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$F.HeadTabs_scroll, id: "scroll", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$F.HeadTabs_container, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "watchEl_left" }),
          InfoTabs.filter((i) => i.url !== "/agent").map((item2, index2) => {
            if (item2.type === "missao" && !missaoList.length) {
              return null;
            }
            if (item2.type === "rebate" && !rebateStatus) {
              return null;
            }
            return /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "div",
              {
                className: joinClass(
                  css$F.HeadTab_item,
                  location2.pathname === item2.url && css$F.HeadTab_item_active
                ),
                onClick: (e2) => {
                  e2.target.scrollIntoView({
                    behavior: "smooth",
                    inline: "center",
                    block: "center"
                  });
                  goPageFN(item2);
                },
                children: [
                  t2(item2.text),
                  item2.type === "missao" && missaoNum > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$F.tips, children: missaoNum }),
                  item2.type === "bonus" && availableNum > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$F.tips, children: availableNum })
                ]
              },
              index2
            );
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "watchEl_right", children: " " })
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$F.right_icon, children: showArrowR && /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          onClick: () => {
            moveFn("right");
          },
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowRightBicolor, {})
        }
      )
    })
    ]
  });
};
const WithHeadPage = ({ children }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$H.HeadTabPage, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(HeadTabs, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$H.HeadTabPage_body, children }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(HomeBars, {})
    ]
  });
};
const Index = reactExports.lazy(() => __vitePreload(() => import("./index-DLU8b8X_-2024_8_30_15_11.js"), true ? __vite__mapDeps([48, 1, 2, 49]) : void 0));
const Home = reactExports.lazy(() => __vitePreload(() => import("./index-BNGQrtiU-2024_8_30_15_11.js"), true ? __vite__mapDeps([50, 1, 2, 40, 43, 42, 51, 52, 53, 9, 54, 55, 56, 57, 58, 59]) : void 0));
const Promotion = reactExports.lazy(() => __vitePreload(() => import("./index-CreDiGRi-2024_8_30_15_11.js"), true ? __vite__mapDeps([60, 1, 2, 45, 51, 61]) : void 0));
const PromotionDetail = reactExports.lazy(
  () => __vitePreload(() => import("./index-Mry5-Ar1-2024_8_30_15_11.js"), true ? __vite__mapDeps([62, 1, 2, 63, 64, 65, 66]) : void 0)
);
const LuckyWheel$1 = reactExports.lazy(
  () => __vitePreload(() => import("./index-CAFNsVLs-2024_8_30_15_11.js"), true ? __vite__mapDeps([67, 1, 2, 63, 64, 68]) : void 0)
);
const Chat = reactExports.lazy(() => __vitePreload(() => import("./index-nz2_Ac5N-2024_8_30_15_11.js"), true ? __vite__mapDeps([69, 1, 2]) : void 0));
const Mine = reactExports.lazy(() => __vitePreload(() => Promise.resolve().then(() => index), true ? void 0 : void 0));
const VIP = reactExports.lazy(() => __vitePreload(() => import("./index-BqzXl6JZ-2024_8_30_15_11.js"), true ? __vite__mapDeps([70, 1, 2, 71]) : void 0));
const PersonalInformation = reactExports.lazy(
  () => __vitePreload(() => import("./index-6lAYkrXI-2024_8_30_15_11.js"), true ? __vite__mapDeps([72, 1, 2, 22, 73]) : void 0)
);
const CentralWallet = reactExports.lazy(() => __vitePreload(() => import("./index-CXUvC2rK-2024_8_30_15_11.js"), true ? __vite__mapDeps([74, 1, 2, 45, 75]) : void 0));
const Message = reactExports.lazy(() => __vitePreload(() => import("./index-BnmWxtvR-2024_8_30_15_11.js"), true ? __vite__mapDeps([76, 1, 2, 21, 31, 41, 32, 77, 78, 58, 79]) : void 0));
const MessageDetail = reactExports.lazy(() => __vitePreload(() => import("./index-s2cos2xj-2024_8_30_15_11.js"), true ? __vite__mapDeps([80, 1, 2, 81]) : void 0));
const RecordWithdrawals = reactExports.lazy(
  () => __vitePreload(() => import("./index-DIq8-yCo-2024_8_30_15_11.js"), true ? __vite__mapDeps([82, 1, 2]) : void 0)
);
const ServiceSettings = reactExports.lazy(
  () => __vitePreload(() => import("./index-CmNjnQSb-2024_8_30_15_11.js"), true ? __vite__mapDeps([83, 1, 2]) : void 0)
);
const Invite = reactExports.lazy(() => __vitePreload(() => import("./index-CmzL8dRS-2024_8_30_15_11.js"), true ? __vite__mapDeps([84, 1, 2]) : void 0));
const BackRate = reactExports.lazy(() => __vitePreload(() => import("./index-ZAM1rhVf-2024_8_30_15_11.js"), true ? __vite__mapDeps([85, 1, 2, 86]) : void 0));
const HelpCenter = reactExports.lazy(() => __vitePreload(() => import("./index-EQsmaghr-2024_8_30_15_11.js"), true ? __vite__mapDeps([87, 1, 2]) : void 0));
const EnterLoginPsw = reactExports.lazy(() => __vitePreload(() => import("./index-C8I8EFtB-2024_8_30_15_11.js"), true ? __vite__mapDeps([88, 1, 2, 89]) : void 0));
const BindPhone = reactExports.lazy(() => __vitePreload(() => import("./index-DS8DNyCn-2024_8_30_15_11.js"), true ? __vite__mapDeps([90, 1, 2, 91]) : void 0));
const Service = reactExports.lazy(() => __vitePreload(() => import("./index-BZuKA4-R-2024_8_30_15_11.js"), true ? __vite__mapDeps([92, 1, 2]) : void 0));
const WithdrawDetail = reactExports.lazy(() => __vitePreload(() => import("./index-DBB1olXP-2024_8_30_15_11.js"), true ? __vite__mapDeps([93, 1, 2, 94]) : void 0));
const WithdrawSet = reactExports.lazy(() => __vitePreload(() => import("./index-C68HEtLq-2024_8_30_15_11.js"), true ? __vite__mapDeps([95, 1, 2, 96]) : void 0));
const Bonus = reactExports.lazy(() => __vitePreload(() => import("./index-C6BO2BmA-2024_8_30_15_11.js"), true ? __vite__mapDeps([97, 1, 2, 98]) : void 0));
const AlreadyGetbonus = reactExports.lazy(
  () => __vitePreload(() => import("./index-BHd9_Tmf-2024_8_30_15_11.js"), true ? __vite__mapDeps([99, 1, 2, 100]) : void 0)
);
const Coletas = reactExports.lazy(() => __vitePreload(() => import("./index-BIEVly6S-2024_8_30_15_11.js"), true ? __vite__mapDeps([101, 1, 2, 102]) : void 0));
const RescueDeposit = reactExports.lazy(() => __vitePreload(() => import("./index-CoAFjgVa-2024_8_30_15_11.js"), true ? __vite__mapDeps([103, 1, 2, 63, 64, 65, 104]) : void 0));
const RecommendFriends = reactExports.lazy(
  () => __vitePreload(() => import("./index-D7mgjaD3-2024_8_30_15_11.js"), true ? __vite__mapDeps([105, 1, 2, 63, 64, 106]) : void 0)
);
const TopUpWinnings = reactExports.lazy(() => __vitePreload(() => import("./index-BzzkfSqW-2024_8_30_15_11.js"), true ? __vite__mapDeps([107, 1, 2, 63, 64, 65, 108]) : void 0));
const Maintain = reactExports.lazy(() => __vitePreload(() => import("./index-B1LG1uCU-2024_8_30_15_11.js"), true ? __vite__mapDeps([109, 1, 2, 110]) : void 0));
const Missao = reactExports.lazy(() => __vitePreload(() => import("./index-BtTP9-bd-2024_8_30_15_11.js"), true ? __vite__mapDeps([111, 1, 2, 112]) : void 0));
const PlatformGame = reactExports.lazy(() => __vitePreload(() => import("./index-BjBiOkFg-2024_8_30_15_11.js"), true ? __vite__mapDeps([113, 1, 2, 56, 57, 52, 53, 44, 0, 8, 12, 114]) : void 0));
const VenueList = reactExports.lazy(() => __vitePreload(() => import("./index-CDzHGLFI-2024_8_30_15_11.js"), true ? __vite__mapDeps([115, 1, 2, 54, 52, 53, 55]) : void 0));
const RedeemCode = reactExports.lazy(() => __vitePreload(() => import("./index-CzG5CD4Z-2024_8_30_15_11.js"), true ? __vite__mapDeps([116, 1, 2, 65, 63, 64, 77, 78, 117]) : void 0));
const routes = [
  {
    path: "/",
    meta: { auth: false },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(Index, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(H5Skeleton, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Home, {}) }) })
  },
  {
    path: "/activity",
    meta: { auth: false },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(ActSkeleton, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Promotion, {}) }) })
  },
  {
    path: "/activity-detail/:id/:flag",
    meta: { auth: false },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(Index, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(PromotionDetail, {}) }) })
  },
  {
    path: "/chat",
    meta: { auth: false },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(Index, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Chat, {}) }) })
  },
  {
    path: "/mine",
    meta: { auth: true },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(Index, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Mine, {}) }) })
  },
  {
    path: "/agent",
    meta: { auth: false },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, {
      fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        InnerPageWithBack,
        {
          title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("推广") }),
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Agent, {})
        }
      )
    })
  },
  {
    path: "/personal-information",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("个人信息") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(PersonalInformation, {}) })
      }
    )
  },
  {
    path: "/deposit",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("充值") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(DepositSkeleton, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Deposit, {}) }) })
  },
  {
    path: "/withdraw",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("提现") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Withdraw, {}) }) })
  },
  {
    path: "/central-wallet",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("中心钱包") }),
        right: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, {
          children: (t2) => /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center"
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "label",
                {
                  htmlFor: "OneClickRecycling",
                  className: css$1n.recycle,
                  style: {
                    fontSize: "".concat(minPxChip() * 20, "px"),
                    display: "flex",
                    alignItems: "center"
                  },
                  children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { htmlFor: "OneClickRecycling", className: css$1n.recycle, children: /* @__PURE__ */ jsxRuntimeExports.jsx(WalletIcon, {}) }),
                    t2("一键回收")
                  ]
                }
              )
            }
          )
        }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(CentralWallet, {}) })
      }
    )
  },
  {
    path: "/message",
    meta: {
      auth: false
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Message, {}) })
  },
  {
    path: "/messageDetail",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(MessageDetail, {}) })
  },
  {
    path: "/record-betting",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("报告") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RecordBetting, {}) }) })
  },
  {
    path: "/record-withdrawals",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("提现记录") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RecordWithdrawals, {}) })
      }
    )
  },
  {
    path: "/service-settings",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("服务设置") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(ServiceSettings, {}) })
      }
    )
  },
  {
    path: "/invite",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("邀请") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Invite, {}) }) })
  },
  {
    path: "/back-rate",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(BackRate, {}) }) })
  },
  {
    path: "/help-center",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("帮助中心") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(HelpCenter, {}) })
      }
    )
  },
  {
    path: "/service",
    meta: {
      auth: false
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("客服") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Service, {}) }) })
  },
  {
    path: "/withdraw-detail",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("详情") }), children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawDetail, {}) }) })
  },
  {
    path: "/withdraw-set",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("提现密码") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawSet, {}) })
      }
    )
  },
  {
    path: "/vip",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(VIP, {}) }) })
  },
  {
    path: "/gameStart",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(GameStart, {})
  },
  {
    path: "/bonus",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Bonus, {}) }) })
  },
  {
    path: "/alreadyGetbonus",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(AlreadyGetbonus, {}) }) })
  },
  {
    path: "/coletas",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("领取记录") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Coletas, {}) })
      }
    )
  },
  {
    path: "/activity/lucky-wheel",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(LuckyWheel$1, {}) })
  },
  {
    path: "/activity/recommend-friends",
    // meta: {
    //   auth: true
    // },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("推荐好友送彩金") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RecommendFriends, {}) })
      }
    )
  },
  {
    path: "/activity/top-up-winnings/:id/:flag",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(TopUpWinnings, {}) }) })
  },
  {
    path: "/activity-detail/:id/redeem_code",
    // meta: {
    //   auth: true
    // },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RedeemCode, {}) }) })
  },
  {
    path: "/activity/rescue-deposit/:id/:flag",
    // meta: {
    //   auth: true
    // },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(RescueDeposit, {}) }) })
  },
  {
    path: "/enter-login-psw",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("电话号码") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(EnterLoginPsw, {}) })
      }
    )
  },
  {
    path: "/bind-phone",
    meta: {
      auth: true
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(
      InnerPageWithBack,
      {
        title: /* @__PURE__ */ jsxRuntimeExports.jsx(Translation, { children: (t2) => t2("电话号码") }),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(BindPhone, {}) })
      }
    )
  },
  {
    path: "/missao",
    meta: {
      auth: false
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(WithHeadPage, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Missao, {}) }) })
  },
  {
    path: "/venuegame",
    meta: {
      auth: false
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: " ", children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(PlatformGame, {}) }) })
  },
  {
    path: "/venuelist",
    meta: {
      auth: false
    },
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(InnerPageWithBack, { title: " ", children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loading$1, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(VenueList, {}) }) })
  },
  {
    path: "/maintain",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(Maintain, {})
  },
  {
    path: "*",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(NotFind, {})
  }
];
const routesMaps = (() => {
  const obj = {};
  const fun = (list) => {
    list.forEach((item2) => {
      if (item2.children) {
        fun(item2.children);
      } else {
        obj[item2.path] = item2.meta || {};
      }
    });
  };
  fun(JSON.parse(JSON.stringify(routes)));
  return obj;
})();
const svg_theme_fill_color$G = "_svg_theme_fill_color_j00kt_3";
const loginBox$a = "_loginBox_j00kt_55";
const submitButton$7 = "_submitButton_j00kt_62";
const loginInput$7 = "_loginInput_j00kt_70";
const inputIcon$5 = "_inputIcon_j00kt_88";
const clsoeBtn$b = "_clsoeBtn_j00kt_160";
const titleBox$b = "_titleBox_j00kt_177";
const titleContent$7 = "_titleContent_j00kt_201";
const titleIcon$5 = "_titleIcon_j00kt_306";
const loginBtn$9 = "_loginBtn_j00kt_419";
const userNameBox$7 = "_userNameBox_j00kt_439";
const userPwdBox$7 = "_userPwdBox_j00kt_452";
const waringBox$7 = "_waringBox_j00kt_465";
const icon$8 = "_icon_j00kt_479";
const icon2$9 = "_icon2_j00kt_486";
const noCheckBox$7 = "_noCheckBox_j00kt_495";
const rolesBox$6 = "_rolesBox_j00kt_600";
const text1$6 = "_text1_j00kt_615";
const tipsSpan$3 = "_tipsSpan_j00kt_628";
const btmTextBox$6 = "_btmTextBox_j00kt_669";
const noMarLeft$6 = "_noMarLeft_j00kt_760";
const img1$7 = "_img1_j00kt_763";
const findPsd$3 = "_findPsd_j00kt_773";
const css$E = {
  svg_theme_fill_color: svg_theme_fill_color$G,
  loginBox: loginBox$a,
  submitButton: submitButton$7,
  loginInput: loginInput$7,
  inputIcon: inputIcon$5,
  clsoeBtn: clsoeBtn$b,
  titleBox: titleBox$b,
  titleContent: titleContent$7,
  titleIcon: titleIcon$5,
  loginBtn: loginBtn$9,
  userNameBox: userNameBox$7,
  userPwdBox: userPwdBox$7,
  waringBox: waringBox$7,
  icon: icon$8,
  icon2: icon2$9,
  noCheckBox: noCheckBox$7,
  rolesBox: rolesBox$6,
  text1: text1$6,
  tipsSpan: tipsSpan$3,
  btmTextBox: btmTextBox$6,
  noMarLeft: noMarLeft$6,
  img1: img1$7,
  findPsd: findPsd$3
};
const svg_theme_fill_color$F = "_svg_theme_fill_color_rvloh_3";
const threeLoginBox$1 = "_threeLoginBox_rvloh_55";
const topTips = "_topTips_rvloh_60";
const tipLIne = "_tipLIne_rvloh_68";
const tipSpan = "_tipSpan_rvloh_124";
const threeBtnsBox = "_threeBtnsBox_rvloh_183";
const googleBox = "_googleBox_rvloh_191";
const showLoaing = "_showLoaing_rvloh_206";
const moveBox = "_moveBox_rvloh_251";
const threeLoginMoverotation = "_threeLoginMoverotation_rvloh_1";
const loadingInBox = "_loadingInBox_rvloh_332";
const logo$3 = "_logo_rvloh_410";
const emptyBox = "_emptyBox_rvloh_415";
const css$D = {
  svg_theme_fill_color: svg_theme_fill_color$F,
  threeLoginBox: threeLoginBox$1,
  topTips,
  tipLIne,
  tipSpan,
  threeBtnsBox,
  googleBox,
  showLoaing,
  moveBox,
  threeLoginMoverotation,
  loadingInBox,
  logo: logo$3,
  emptyBox
};
const ThreeLogin = ({ isLogin, isHook }) => {
  const { websetConfig } = useUserInfoStore();
  const { setThreeLoginInfo, setOpenForRegisterByThree } = useThreeLoginStore();
  const state2 = useReactive({
    waitingLoading: false
  });
  const { waitingLoading } = state2;
  const postThreeLoginFun = async (params) => {
    const [...res] = await postThreeLogin(params);
    return [...res];
  };
  const handleThreeLogin = async (res, provider) => {
    const credential = res.credential || "";
    let rest = null;
    const postParams = { provider, id_token: credential };
    if (websetConfig.authLogReg !== "1") {
      const [ret1] = await postThreeLoginFun(postParams);
      rest = ret1;
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        const [ret2] = await postThreeLoginFun(Object.assign(postParams, {
          pass_token: result.pass_token,
          lot_number: result.lot_number,
          captcha_output: result.captcha_output,
          gen_time: result.gen_time
        }));
        rest = ret2;
      }
    }
    if (rest === "1000") {
      useUserInfoStore.setState({ openForRegister: false });
      useUserInfoStore.setState({ openForLogin: false });
      useUserInfoStore.setState({ alertAfterLogin: true });
      Message$1.success(trans("登录成功"));
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          window.jsBridge.postMessage("login", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
    }
    if (rest && rest.need_register) {
      const params = {
        provider,
        id_token: credential,
        email: rest.email || "",
        password: rest.password,
        username: rest.username
      };
      setThreeLoginInfo(params);
      useUserInfoStore.setState({ openForLogin: false });
      useUserInfoStore.setState({ openForRegister: false });
      setOpenForRegisterByThree(true);
    }
  };
  const onClickGoogleLogin = async () => {
    state2.waitingLoading = true;
    await initGoogleSDK();
    const res = await renderGoogleBtn(websetConfig.googleH5AppID);
    await handleThreeLogin(res, "google");
    state2.waitingLoading = false;
  };
  const onClickFaceBookLogin = async () => {
    await initFacebookSDK();
    const res = await facebookLogin(websetConfig.facebookH5AppID);
    await handleThreeLogin({ credential: res.accessToken }, "facebook");
  };
  const isColseGoogleLogin = !websetConfig.googleQuickLogin || websetConfig.googleQuickLogin === "0";
  const isCloseFacebookLogin = !websetConfig.facebookQuickLogin || websetConfig.facebookQuickLogin === "0";
  if (isHook)
    return {
      google: [onClickGoogleLogin, isColseGoogleLogin],
      facebook: [onClickFaceBookLogin, isCloseFacebookLogin]
    };
  if (isColseGoogleLogin && isCloseFacebookLogin)
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$D.emptyBox });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$D.threeLoginBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$D.topTips, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$D.tipLIne }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$D.tipSpan, children: isLogin ? trans("快速登录") : trans("注册绑定") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$D.tipLIne })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$D.threeBtnsBox, children: [
        !isColseGoogleLogin && /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: joinClass(css$D.googleBox, waitingLoading ? css$D.showLoaing : ""),
            onClick: async () => {
              await onClickGoogleLogin();
            },
            children: [
              waitingLoading ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$D.moveBox }) : null,
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$D.loadingInBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$D.logo, src: "/home/loginreg/google_icon.webp" }) })
            ]
          }
        ),
        !isCloseFacebookLogin && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$D.googleBox, onClick: async () => {
            await onClickFaceBookLogin();
          }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$D.logo, src: "/home/loginreg/facebook_icon.webp" })
        })
      ]
    })
    ]
  });
};
const checkIconsMaps$4 = {
  black: "/message/check_icon.webp",
  blue: "/message/check_icon_blue.webp",
  whiteGreen: "/home/whiteGreen/check_icon.webp",
  purple: "/home/purple/check_icon.webp",
  oilyGreen: "/home/oilyGreen/check_icon.webp",
  whiteRed: "/home/whiteRed/check_icon.webp",
  versaceYellow: "/home/versaceYellow/check_icon.webp",
  lancomePeach: "/home/lancomePeach/check_icon.webp",
  hermesOrange: "/home/hermesOrange/check_icon.webp",
  whiteBlue: "/home/whiteBlue/check_icon.webp",
  sk2: "/home/sk2/check_icon.webp",
  whiteYellow: "/home/whiteYellow/check_icon.webp",
  lightBrown: "/home/lightBrown/check_icon.webp",
  whiteOrange: "/home/whiteOrange/check_icon.webp",
  furlaBlue: "/home/furlaBlue/check_icon.webp",
  whitePink: "/home/whitePink/check_icon.webp",
  bvGreen: "/home/bvGreen/check_icon.webp",
  whiteBrown: "/home/whiteBrown/check_icon.webp",
  AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
  burgundyRed: "/home/burgundyRed/check_icon.webp",
  whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp",
  greenGold: "/home/greenGold/check_icon.webp"
};
const Login$3 = () => {
  const { openForLogin, token: token2, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isSave, setIsSave] = reactExports.useState(Cache$1.get("isSave") || false);
  const navigate = useNavigate();
  const postLogin = async (params) => {
    const [res, error2] = await login(params, { useLoading: true });
    if (!error2) {
      Message$1.success(trans("登录成功"));
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          window.jsBridge.postMessage("login", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
      useUserInfoStore.setState({ openForLogin: false });
      useUserInfoStore.setState({ alertAfterLogin: true });
      if (isSave) {
        Cache$1.set("UserName", form.getFieldValue("username"));
        Cache$1.set("UserPwd", form.getFieldValue("password"));
      }
    }
  };
  const submit = async (params) => {
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postLogin(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postLogin(Object.assign(params, {
          pass_token: result.pass_token,
          lot_number: result.lot_number,
          captcha_output: result.captcha_output,
          gen_time: result.gen_time
        }));
      }
    }
    setLoading(false);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        zIndex: 1e4,
        isOpen: openForLogin,
        closeByClickOut: false,
        onClose: (e2) => {
          e2 && e2.stopPropagation();
          useUserInfoStore.setState({ openForLogin: false });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$E.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: css$E.clsoeBtn,
              onClick: () => {
                useUserInfoStore.setState({ openForLogin: false });
                const googleDom = document.getElementById("g_id_signIn");
                if (googleDom)
                  googleDom.innerHTML = "";
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, {})
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$E.titleBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$E.titleContent, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: css$E.titleIcon }),
                trans("登入")
              ]
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              onClick: (e2) => {
                e2.stopPropagation();
              },
              children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                Form3,
                {
                  form,
                  initialValues: {
                    username: isSave ? Cache$1.get("UserName") : "",
                    password: isSave ? Cache$1.get("UserPwd") : ""
                  },
                  onFinish: (values2) => submit(values2),
                  onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                    console.log("Failed:", values2, errorFields, outOfDate);
                  },
                  onValuesChange: (changedValues, allValues) => {
                    if (changedValues.username) {
                      form.setFieldsValue({
                        username: changedValues.username.toLowerCase()
                      });
                    }
                  },
                  children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "username",
                      defaultShowError: true,
                      rules: [
                        { required: true, message: trans("请输入用户名") },
                        {
                          validator: (rule, value2) => {
                            const error2 = checkInputUserName(value2);
                            if (!error2) {
                              return Promise.resolve();
                            }
                            return Promise.reject(error2);
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("用户名"),
                          clearable: true,
                          focusBorder: true,
                          required: true,
                          className: css$E.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$E.img1, css$E.inputIcon) })
                        }
                      )
                    }
                  ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "password",
                      defaultShowError: true,
                      rules: [
                        { required: true, message: trans("请输入密码") },
                        {
                          validator: (rule, value2) => {
                            const error2 = checkInputUserPwd(value2);
                            if (!error2) {
                              return Promise.resolve();
                            }
                            return Promise.reject(error2);
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          type: "password",
                          placeholder: trans("密码"),
                          clearable: true,
                          focusBorder: true,
                          required: true,
                          className: css$E.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$E.img1, css$E.inputIcon) })
                        }
                      )
                    }
                  ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                    className: css$E.rolesBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      children: [
                        isSave ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                          Image,
                          {
                            onClick: () => {
                              setIsSave(false);
                              Cache$1.set("isSave", false);
                            },
                            className: css$E.icon2,
                            src: checkIconsMaps$4[theme] || "/home/icons/lg_check_icon.webp"
                          }
                        ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            onClick: () => {
                              setIsSave(true);
                              Cache$1.set("isSave", true);
                            },
                            className: css$E.noCheckBox
                          }
                        ),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$E.tipsSpan, children: trans("记住密码") })
                      ]
                    })
                  }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Button$1,
                      {
                        className: css$E.submitButton,
                        block: true,
                        loading: loading2,
                        onClick: () => {
                          form.submit();
                        },
                        children: trans("登录")
                      }
                    )
                  })
                  ]
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$E.btmTextBox, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    onClick: () => {
                      useUserInfoStore.setState({ openForLogin: false });
                      navigate("/message?service=1");
                    },
                    children: trans("联系支持人员")
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    onClick: () => {
                      useUserInfoStore.setState({ openForLogin: false });
                      useUserInfoStore.setState({ openForRegister: true });
                    },
                    children: trans("注册账户")
                  }
                )
                ]
              })
              ]
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, { isLogin: true })
          ]
        })
      }
    )
  });
};
const svg_theme_fill_color$E = "_svg_theme_fill_color_wqdti_3";
const loginBox$9 = "_loginBox_wqdti_55";
const clsoeBtn$a = "_clsoeBtn_wqdti_62";
const iconsvg$1 = "_iconsvg_wqdti_71";
const logo$2 = "_logo_wqdti_80";
const titleBox$a = "_titleBox_wqdti_150";
const item$5 = "_item_wqdti_217";
const titleContentActive$1 = "_titleContentActive_wqdti_309";
const regIcon = "_regIcon_wqdti_552";
const margin$1 = "_margin_wqdti_558";
const marginTop$1 = "_marginTop_wqdti_561";
const inSetBox$1 = "_inSetBox_wqdti_578";
const leftAnimate$1 = "_leftAnimate_wqdti_585";
const css$C = {
  svg_theme_fill_color: svg_theme_fill_color$E,
  loginBox: loginBox$9,
  clsoeBtn: clsoeBtn$a,
  iconsvg: iconsvg$1,
  logo: logo$2,
  titleBox: titleBox$a,
  item: item$5,
  titleContentActive: titleContentActive$1,
  regIcon,
  margin: margin$1,
  marginTop: marginTop$1,
  inSetBox: inSetBox$1,
  leftAnimate: leftAnimate$1
};
const svg_theme_fill_color$D = "_svg_theme_fill_color_1hhb6_3";
const loginBox$8 = "_loginBox_1hhb6_55";
const submitButton$6 = "_submitButton_1hhb6_63";
const clsoeBtn$9 = "_clsoeBtn_1hhb6_141";
const titleBox$9 = "_titleBox_1hhb6_158";
const titleContent$6 = "_titleContent_1hhb6_179";
const titleIcon$4 = "_titleIcon_1hhb6_284";
const titleIconSelf$2 = "_titleIconSelf_1hhb6_401";
const loginBtn$8 = "_loginBtn_1hhb6_408";
const userNameBox$6 = "_userNameBox_1hhb6_429";
const userPwdBox$6 = "_userPwdBox_1hhb6_443";
const waringBox$6 = "_waringBox_1hhb6_457";
const icon$7 = "_icon_1hhb6_475";
const icon2$8 = "_icon2_1hhb6_483";
const noCheckBox$6 = "_noCheckBox_1hhb6_494";
const currencyTips$1 = "_currencyTips_1hhb6_602";
const rolesBox$5 = "_rolesBox_1hhb6_672";
const text1$5 = "_text1_1hhb6_685";
const p$3 = "_p_1hhb6_699";
const btmTextBox$5 = "_btmTextBox_1hhb6_891";
const noMarLeft$5 = "_noMarLeft_1hhb6_973";
const img1$6 = "_img1_1hhb6_977";
const loginInput$6 = "_loginInput_1hhb6_984";
const inputIcon$4 = "_inputIcon_1hhb6_1014";
const inputPrefix$3 = "_inputPrefix_1hhb6_1021";
const active$a = "_active_1hhb6_1024";
const flex$3 = "_flex_1hhb6_1039";
const nationIsShow$3 = "_nationIsShow_1hhb6_1045";
const nation$3 = "_nation_1hhb6_1045";
const strength$3 = "_strength_1hhb6_1054";
const thLabel$3 = "_thLabel_1hhb6_1063";
const strengthItem$3 = "_strengthItem_1hhb6_1101";
const selectedLow$3 = "_selectedLow_1hhb6_1146";
const selectedMiddle$1 = "_selectedMiddle_1hhb6_1149";
const selectedHigh$3 = "_selectedHigh_1hhb6_1152";
const phoneContainer$3 = "_phoneContainer_1hhb6_1156";
const country$3 = "_country_1hhb6_1162";
const area$3 = "_area_1hhb6_1169";
const css$B = {
  svg_theme_fill_color: svg_theme_fill_color$D,
  loginBox: loginBox$8,
  submitButton: submitButton$6,
  clsoeBtn: clsoeBtn$9,
  titleBox: titleBox$9,
  titleContent: titleContent$6,
  titleIcon: titleIcon$4,
  titleIconSelf: titleIconSelf$2,
  loginBtn: loginBtn$8,
  userNameBox: userNameBox$6,
  userPwdBox: userPwdBox$6,
  waringBox: waringBox$6,
  icon: icon$7,
  icon2: icon2$8,
  noCheckBox: noCheckBox$6,
  currencyTips: currencyTips$1,
  rolesBox: rolesBox$5,
  text1: text1$5,
  p: p$3,
  btmTextBox: btmTextBox$5,
  noMarLeft: noMarLeft$5,
  img1: img1$6,
  loginInput: loginInput$6,
  inputIcon: inputIcon$4,
  inputPrefix: inputPrefix$3,
  active: active$a,
  flex: flex$3,
  nationIsShow: nationIsShow$3,
  nation: nation$3,
  strength: strength$3,
  thLabel: thLabel$3,
  strengthItem: strengthItem$3,
  selectedLow: selectedLow$3,
  selectedMiddle: selectedMiddle$1,
  selectedHigh: selectedHigh$3,
  phoneContainer: phoneContainer$3,
  country: country$3,
  area: area$3
};
const svg_theme_fill_color$C = "_svg_theme_fill_color_vcqj8_3";
const selectContainer = "_selectContainer_vcqj8_55";
const noBg = "_noBg_vcqj8_157";
const small = "_small_vcqj8_163";
const select$1 = "_select_vcqj8_55";
const icon2$7 = "_icon2_vcqj8_178";
const content$2 = "_content_vcqj8_184";
const prefix = "_prefix_vcqj8_239";
const suffix = "_suffix_vcqj8_247";
const up = "_up_vcqj8_324";
const down = "_down_vcqj8_328";
const options = "_options_vcqj8_332";
const option = "_option_vcqj8_332";
const active$9 = "_active_vcqj8_520";
const selectActive = "_selectActive_vcqj8_591";
const css$A = {
  svg_theme_fill_color: svg_theme_fill_color$C,
  selectContainer,
  noBg,
  "default": "_default_vcqj8_160",
  small,
  select: select$1,
  icon2: icon2$7,
  content: content$2,
  prefix,
  suffix,
  up,
  down,
  options,
  option,
  active: active$9,
  selectActive
};
const SelectTow = (props) => {
  console.log(props, "==============ces");
  const [value2, setValue] = reactExports.useState(props.value);
  const [showOptions, setShowOptions] = reactExports.useState(false);
  const formContext = reactExports.useContext(FormContext);
  const renderValue = reactExports.useMemo(() => {
    if (props.items === void 0)
      return "";
    const item2 = props.items.find((_) => _.value === value2);
    return item2 ? item2.label : "";
  }, [value2, props.items]);
  const renderIconValue = reactExports.useMemo(() => {
    if (props.items === void 0)
      return "";
    const item2 = props.items.find((_) => _.value === value2);
    return item2 ? item2.icon : "";
  }, [value2, props.items]);
  const size2 = reactExports.useMemo(() => {
    var _a;
    return (_a = formContext.size) != null ? _a : "default";
  }, [formContext.size]);
  reactExports.useEffect(() => {
    setValue(props.value);
  }, [props.value]);
  const clickHandler = (_value) => {
    setValue(_value);
    setShowOptions(false);
    props.onChange && props.onChange(_value);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      className: joinClass(
        css$A.selectContainer,
        css$A[size2],
        props.noBg ? css$A.noBg : "",
        showOptions ? css$A.selectActive : ""
      ),
      onClick: () => setShowOptions(!showOptions),
      children: [
        props.prefix && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$A.prefix, children: props.prefix }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$A.select, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$A.content, children: [
              " ",
              renderIconValue && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$A.icon2, src: renderIconValue }),
              " ",
              renderValue
            ]
          })
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$A.suffix, children: /* @__PURE__ */ jsxRuntimeExports.jsx(DownIcon, { className: joinClass(showOptions ? css$A.up : css$A.down) }) }),
        showOptions && props.items && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: joinClass(css$A.options, css$A[size2]), children: props.items.map((_, index2) => {
            console.log(_, "----------------------------");
            return /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "div",
              {
                className: joinClass(
                  css$A.option,
                  value2 === _.value ? css$A.active : ""
                ),
                onClick: (e2) => {
                  e2.stopPropagation();
                  clickHandler(_.value);
                },
                children: [
                  _.icon && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$A.icon2, src: _.icon }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    children: [
                      " ",
                      _.label
                    ]
                  })
                ]
              },
              index2
            );
          })
        })
      ]
    }
  );
};
const checkIconsMaps$3 = {
  black: "/message/check_icon.webp",
  blue: "/message/check_icon_blue.webp",
  whiteGreen: "/home/whiteGreen/check_icon.webp",
  purple: "/home/purple/check_icon.webp",
  oilyGreen: "/home/oilyGreen/check_icon.webp",
  whiteRed: "/home/whiteRed/check_icon.webp",
  versaceYellow: "/home/versaceYellow/check_icon.webp",
  lancomePeach: "/home/lancomePeach/check_icon.webp",
  hermesOrange: "/home/hermesOrange/check_icon.webp",
  whiteBlue: "/home/whiteBlue/check_icon.webp",
  sk2: "/home/sk2/check_icon.webp",
  whiteYellow: "/home/whiteYellow/check_icon.webp",
  lightBrown: "/home/lightBrown/check_icon.webp",
  whiteOrange: "/home/whiteOrange/check_icon.webp",
  furlaBlue: "/home/furlaBlue/check_icon.webp",
  whitePink: "/home/whitePink/check_icon.webp",
  bvGreen: "/home/bvGreen/check_icon.webp",
  whiteBrown: "/home/whiteBrown/check_icon.webp",
  AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
  burgundyRed: "/home/burgundyRed/check_icon.webp",
  whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp",
  greenGold: "/home/greenGold/check_icon.webp",
  whitePurple: "/home/whitePurple/check_icon.webp"
};
const Register$2 = () => {
  const { openForRegister, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isCheck, setIsCheck] = reactExports.useState(true);
  const [query] = useSearchParams();
  const navigate = useNavigate();
  const reg_need_phone = websetConfig.reg_need_phone || "0";
  const register_need_name_switch = websetConfig.register_need_name_switch || "0";
  const realNameRequired = websetConfig.realNameRequired || "0";
  const phoneRequired = websetConfig.phoneRequired || "0";
  const [curPsdLevel, setCurPsdLevel] = reactExports.useState(0);
  const curLevelClass = reactExports.useMemo(() => {
    if (curPsdLevel === 1) {
      return css$B.selectedLow;
    } else if (curPsdLevel === 2 || curPsdLevel === 3) {
      return css$B.selectedMiddle;
    } else if (curPsdLevel === 4) {
      return css$B.selectedHigh;
    }
    return "";
  }, [curPsdLevel]);
  const postReg = async (params) => {
    const [res, error2] = await register(params);
    if (!error2) {
      Message$1.success(trans("注册成功"));
      useUserInfoStore.setState({
        openForRegister: false,
        openForRegister: false
      });
      useUserInfoStore.setState({ alertAfterLogin: true });
      Cache$1.set("isAlreadyRegister", true);
    }
  };
  const submit = async (_params) => {
    console.error("submit", _params);
    if (!isCheck) {
      Message$1.error(trans("请勾选同意《用户协议》"));
      return;
    }
    const params = {
      ..._params,
      verify_code: "",
      code: "",
      link_id: query.get("link_id") || query.get("id") || Cache$1.get("link_id") || "",
      reg_url: location.href
    };
    if (!params.realname) {
      delete params.realname;
    }
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postReg(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postReg(
          Object.assign(params, {
            pass_token: result.pass_token,
            lot_number: result.lot_number,
            captcha_output: result.captcha_output,
            gen_time: result.gen_time
          })
        );
      }
    }
    setLoading(false);
  };
  reactExports.useEffect(() => {
    if (openForRegister) {
      form.resetFields();
    }
  }, [openForRegister]);
  return (
    // <Modal
    //   isOpen={openForRegister}
    //   closeByClickOut={false}
    //   onClose={(e) => {
    //     e && e.stopPropagation();
    //     useUserInfoStore.setState({ openForRegister: false });
    //   }}
    // >
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        onClick: (e2) => {
          e2.stopPropagation();
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
          Form3,
          {
            form,
            size: "small",
            initialValues: {
              username: "",
              password: "",
              repassword: "",
              phone: "",
              realname: "",
              currency: "1"
            },
            onFinish: (values2) => submit(values2),
            onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
              console.log("Failed:", values2, errorFields, outOfDate);
            },
            onValuesChange: (changedValues, allValues) => {
              if (changedValues.username) {
                form.setFieldsValue({
                  username: changedValues.username.toLowerCase()
                });
              }
              if (changedValues.phone) {
                form.setFieldsValue({
                  phone: changedValues.phone.replace(/\D/g, "") + " "
                });
                setTimeout(() => {
                  form.setFieldsValue({
                    phone: changedValues.phone.replace(/\D/g, "")
                  });
                }, 0);
              }
              setCurPsdLevel(checkPasswordStrength(allValues.password));
            },
            children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "username",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入用户名") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserName(value2);
                      if (!error2) {
                        return Promise.resolve();
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    placeholder: trans("用户名"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$B.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$B.img1, css$B.inputIcon) })
                  }
                )
              }
            ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "password",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入密码") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserPwd(value2);
                      if (!error2) {
                        return Promise.resolve();
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    type: "password",
                    placeholder: trans("密码"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$B.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$B.img1, css$B.inputIcon) })
                  }
                )
              }
            ),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$B.strength, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$B.thLabel, children: trans("力量") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$B.strengthItem,
                    curPsdLevel >= 1 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$B.strengthItem,
                    curPsdLevel >= 2 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$B.strengthItem,
                    curPsdLevel >= 4 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$B.strengthItem,
                    curPsdLevel >= 4 ? curLevelClass : ""
                  )
                }
              )
              ]
            }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "repassword",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入密码") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserPwd(value2);
                      if (!error2) {
                        console.log(form.getFieldValue("password"), value2);
                        if (value2 === form.getFieldValue("password")) {
                          return Promise.resolve();
                        } else {
                          return Promise.reject(trans("两次输入的密码不一样"));
                        }
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    type: "password",
                    placeholder: trans("确认密码"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$B.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$B.img1, css$B.inputIcon) })
                  }
                )
              }
            ),
              reg_need_phone === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "phone",
                  defaultShowError: true,
                  rules: [
                    {
                      required: phoneRequired === "1",
                      message: trans("请输入手机号")
                    },
                    {
                      validator: (rule, value2) => {
                        const isOkey = checkInputPhoneNumber(value2);
                        if (isOkey) {
                          return Promise.resolve();
                        }
                        return Promise.reject(trans("手机号格式不正确"));
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("输入手机号码"),
                      clearable: true,
                      focusBorder: true,
                      required: phoneRequired === "1",
                      className: css$B.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                        className: css$B.phoneContainer, children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsx(PhoneIcon, { className: css$B.img1 }),
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          Image,
                          {
                            className: css$B.country,
                            src: getCountryFlag()
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$B.area, children: countryCode })
                        ]
                      })
                    }
                  )
                }
              ) : null,
              register_need_name_switch === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "realname",
                  defaultShowError: true,
                  rules: [
                    {
                      required: realNameRequired === "1",
                      message: trans("输入您的真实姓名")
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("全名"),
                      clearable: true,
                      focusBorder: true,
                      required: realNameRequired === "1",
                      className: css$B.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$B.phoneContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$B.img1 }) })
                    }
                  )
                }
              ) : null,
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                name: "currency", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  SelectTow,
                  {
                    noBg: true,
                    items: [
                      {
                        label: "".concat(getMoneyUnit(), " (").concat(getMoneyUnit(), ")"),
                        value: "1",
                        icon: getCountryFlag(true)
                      }
                    ]
                  }
                )
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$B.currencyTips, children: trans("币种决定第三方游戏和支付方式，无法修改") }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$B.rolesBox, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                  children: isCheck ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Image,
                    {
                      onClick: () => setIsCheck(!isCheck),
                      className: css$B.icon2,
                      src: checkIconsMaps$3[theme] || "/home/icons/lg_check_icon.webp"
                    }
                  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      onClick: () => setIsCheck(!isCheck),
                      className: css$B.noCheckBox
                    }
                  )
                }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                  className: joinClass(css$B.text1), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$B.p, children: [
                      trans("我已年满18岁，我已阅读并同意"),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "span",
                        {
                          onClick: () => {
                            useUserInfoStore.setState({ openForXieYi: true });
                          },
                          children: "《".concat(trans("用户协议"), "》")
                        }
                      )
                    ]
                  })
                })
                ]
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Button$1,
                  {
                    block: true,
                    className: css$B.submitButton,
                    loading: loading2,
                    onClick: () => {
                      form.submit();
                    },
                    children: trans("注册")
                  }
                )
              })
            ]
          }
        )
      }
    ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$B.btmTextBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          onClick: () => {
            useUserInfoStore.setState({ openForRegister: false });
            navigate("/message?service=1");
          },
          children: trans("联系支持人员")
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {})
      ]
    }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, {})
    ]
  })
  );
};
const svg_theme_fill_color$B = "_svg_theme_fill_color_1bygt_3";
const loginBox$7 = "_loginBox_1bygt_55";
const submitButton$5 = "_submitButton_1bygt_58";
const loginInput$5 = "_loginInput_1bygt_66";
const inputIcon$3 = "_inputIcon_1bygt_84";
const clsoeBtn$8 = "_clsoeBtn_1bygt_156";
const titleBox$8 = "_titleBox_1bygt_173";
const titleContent$5 = "_titleContent_1bygt_197";
const titleIcon$3 = "_titleIcon_1bygt_302";
const loginBtn$7 = "_loginBtn_1bygt_415";
const userNameBox$5 = "_userNameBox_1bygt_435";
const userPwdBox$5 = "_userPwdBox_1bygt_448";
const waringBox$5 = "_waringBox_1bygt_461";
const icon$6 = "_icon_1bygt_475";
const icon2$6 = "_icon2_1bygt_482";
const noCheckBox$5 = "_noCheckBox_1bygt_491";
const rolesBox$4 = "_rolesBox_1bygt_596";
const text1$4 = "_text1_1bygt_611";
const tipsSpan$2 = "_tipsSpan_1bygt_624";
const btmTextBox$4 = "_btmTextBox_1bygt_668";
const noMarLeft$4 = "_noMarLeft_1bygt_759";
const img1$5 = "_img1_1bygt_762";
const findPsd$2 = "_findPsd_1bygt_772";
const css$z = {
  svg_theme_fill_color: svg_theme_fill_color$B,
  loginBox: loginBox$7,
  submitButton: submitButton$5,
  loginInput: loginInput$5,
  inputIcon: inputIcon$3,
  clsoeBtn: clsoeBtn$8,
  titleBox: titleBox$8,
  titleContent: titleContent$5,
  titleIcon: titleIcon$3,
  loginBtn: loginBtn$7,
  userNameBox: userNameBox$5,
  userPwdBox: userPwdBox$5,
  waringBox: waringBox$5,
  icon: icon$6,
  icon2: icon2$6,
  noCheckBox: noCheckBox$5,
  rolesBox: rolesBox$4,
  text1: text1$4,
  tipsSpan: tipsSpan$2,
  btmTextBox: btmTextBox$4,
  noMarLeft: noMarLeft$4,
  img1: img1$5,
  findPsd: findPsd$2
};
const checkIconsMaps$2 = {
  black: "/message/check_icon.webp",
  blue: "/message/check_icon_blue.webp",
  whiteGreen: "/home/whiteGreen/check_icon.webp",
  purple: "/home/purple/check_icon.webp",
  oilyGreen: "/home/oilyGreen/check_icon.webp",
  whiteRed: "/home/whiteRed/check_icon.webp",
  versaceYellow: "/home/versaceYellow/check_icon.webp",
  lancomePeach: "/home/lancomePeach/check_icon.webp",
  hermesOrange: "/home/hermesOrange/check_icon.webp",
  whiteBlue: "/home/whiteBlue/check_icon.webp",
  sk2: "/home/sk2/check_icon.webp",
  whiteYellow: "/home/whiteYellow/check_icon.webp",
  lightBrown: "/home/lightBrown/check_icon.webp",
  whiteOrange: "/home/whiteOrange/check_icon.webp",
  furlaBlue: "/home/furlaBlue/check_icon.webp",
  whitePink: "/home/whitePink/check_icon.webp",
  bvGreen: "/home/bvGreen/check_icon.webp",
  whiteBrown: "/home/whiteBrown/check_icon.webp",
  AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
  whitePurple: "/home/whitePurple/check_icon.webp",
  burgundyRed: "/home/burgundyRed/check_icon.webp",
  whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp",
  greenGold: "/home/greenGold/check_icon.webp"
};
const Login$2 = () => {
  const { openForLogin, token: token2, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isSave, setIsSave] = reactExports.useState(Cache$1.get("isSave") || false);
  const navigate = useNavigate();
  const postLogin = async (params) => {
    const [res, error2] = await login(params, { useLoading: true });
    if (!error2) {
      Message$1.success(trans("登录成功"));
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          window.jsBridge.postMessage("login", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
      useUserInfoStore.setState({ openForLogin: false, openForRegister: false });
      useUserInfoStore.setState({ alertAfterLogin: true });
      if (isSave) {
        Cache$1.set("UserName", form.getFieldValue("username"));
        Cache$1.set("UserPwd", form.getFieldValue("password"));
      }
    }
  };
  const submit = async (params) => {
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postLogin(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postLogin(Object.assign(params, {
          pass_token: result.pass_token,
          lot_number: result.lot_number,
          captcha_output: result.captcha_output,
          gen_time: result.gen_time
        }));
      }
    }
    setLoading(false);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$z.loginBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          onClick: (e2) => {
            e2.stopPropagation();
          },
          children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            Form3,
            {
              form,
              size: "small",
              initialValues: {
                username: isSave ? Cache$1.get("UserName") : "",
                password: isSave ? Cache$1.get("UserPwd") : ""
              },
              onFinish: (values2) => submit(values2),
              onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                console.log("Failed:", values2, errorFields, outOfDate);
              },
              onValuesChange: (changedValues, allValues) => {
                if (changedValues.username) {
                  form.setFieldsValue({
                    username: changedValues.username.toLowerCase()
                  });
                }
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "username",
                  defaultShowError: true,
                  rules: [
                    { required: true, message: trans("请输入用户名") },
                    {
                      validator: (rule, value2) => {
                        const error2 = checkInputUserName(value2);
                        if (!error2) {
                          return Promise.resolve();
                        }
                        return Promise.reject(error2);
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("用户名"),
                      clearable: true,
                      focusBorder: true,
                      required: true,
                      className: css$z.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$z.img1, css$z.inputIcon) })
                    }
                  )
                }
              ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "password",
                  defaultShowError: true,
                  rules: [
                    { required: true, message: trans("请输入密码") },
                    {
                      validator: (rule, value2) => {
                        const error2 = checkInputUserPwd(value2);
                        if (!error2) {
                          return Promise.resolve();
                        }
                        return Promise.reject(error2);
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      type: "password",
                      placeholder: trans("密码"),
                      clearable: true,
                      focusBorder: true,
                      required: true,
                      className: css$z.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$z.img1, css$z.inputIcon) })
                    }
                  )
                }
              ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$z.rolesBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  children: [
                    isSave ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Image,
                      {
                        onClick: () => {
                          setIsSave(false);
                          Cache$1.set("isSave", false);
                        },
                        className: css$z.icon2,
                        src: checkIconsMaps$2[theme] || "/home/icons/lg_check_icon.webp"
                      }
                    ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        onClick: () => {
                          setIsSave(true);
                          Cache$1.set("isSave", true);
                        },
                        className: css$z.noCheckBox
                      }
                    ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$z.tipsSpan, children: trans("记住密码") })
                  ]
                })
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Button$1,
                  {
                    className: css$z.submitButton,
                    block: true,
                    loading: loading2,
                    onClick: () => {
                      form.submit();
                    },
                    children: trans("登录")
                  }
                )
              })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$z.btmTextBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                onClick: () => {
                  useUserInfoStore.setState({ openForLogin: false });
                  navigate("/message?service=1");
                },
                children: trans("联系支持人员")
              }
            )
          })
          ]
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, { isLogin: true })
      ]
    })
  });
};
const LogInRegister2$1 = () => {
  const { openForLogin, token: token2, theme, websetConfig, openForRegister } = useUserInfoStore();
  const [btnClose, setBtnClose] = reactExports.useState(true);
  reactExports.useEffect(() => {
    if (btnClose) {
      if (openForLogin) {
        setLoginType(true);
      } else {
        setLoginType(false);
      }
    } else {
      setBtnClose(true);
    }
  }, [openForLogin, openForRegister]);
  const [loginType, setLoginType] = reactExports.useState(true);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: openForLogin || openForRegister,
        closeByClickOut: false,
        onClose: (e2) => {
          e2 && e2.stopPropagation();
          setBtnClose(false);
          useUserInfoStore.setState({
            openForLogin: false,
            openForRegister: false
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$C.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                className: css$C.clsoeBtn,
                onClick: () => {
                  setBtnClose(false);
                  useUserInfoStore.setState({
                    openForLogin: false,
                    openForRegister: false
                  });
                  const googleDom = document.getElementById("g_id_signIn");
                  if (googleDom)
                    googleDom.innerHTML = "";
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, { className: css$C.iconsvg })
              }
            ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$C.titleBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: joinClass(
                    css$C.item,
                    !loginType && css$C.titleContentActive
                  ),
                  onClick: () => {
                    setLoginType(false);
                  },
                  children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(Login$4, { className: css$C.regIcon }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: trans("报名") })
                  ]
                }
              ),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: joinClass(
                    css$C.item,
                    loginType && css$C.titleContentActive
                  ),
                  onClick: () => {
                    setLoginType(true);
                  },
                  children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(Register$3, { className: css$C.regIcon }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    children: [
                      " ",
                      trans("会员登录")
                    ]
                  })
                  ]
                }
              )
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$C.marginTop, children: trans("仅支持账户注册") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              style: { width: "100%", overflow: "hidden" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: joinClass(
                    css$C.inSetBox,
                    loginType ? "" : css$C.leftAnimate
                  ),
                  children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Login$2, {}),
                    !loginType ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginLeft: "96rem", width: "622rem" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Register$2, {}) }) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "622rem", height: "10" }, children: " " })
                  ]
                }
              )
            })
            ]
          })
        })
      }
    )
  });
};
const svg_theme_fill_color$A = "_svg_theme_fill_color_zjb8i_3";
const loginBox$6 = "_loginBox_zjb8i_55";
const clsoeBtn$7 = "_clsoeBtn_zjb8i_62";
const iconsvg = "_iconsvg_zjb8i_71";
const logo$1 = "_logo_zjb8i_80";
const titleBox$7 = "_titleBox_zjb8i_150";
const item$4 = "_item_zjb8i_217";
const titleContentActive = "_titleContentActive_zjb8i_296";
const margin = "_margin_zjb8i_467";
const marginTop = "_marginTop_zjb8i_470";
const inSetBox = "_inSetBox_zjb8i_485";
const leftAnimate = "_leftAnimate_zjb8i_492";
const css$y = {
  svg_theme_fill_color: svg_theme_fill_color$A,
  loginBox: loginBox$6,
  clsoeBtn: clsoeBtn$7,
  iconsvg,
  logo: logo$1,
  titleBox: titleBox$7,
  item: item$4,
  titleContentActive,
  margin,
  marginTop,
  inSetBox,
  leftAnimate
};
const svg_theme_fill_color$z = "_svg_theme_fill_color_ljrs8_3";
const loginBox$5 = "_loginBox_ljrs8_55";
const submitButton$4 = "_submitButton_ljrs8_63";
const clsoeBtn$6 = "_clsoeBtn_ljrs8_141";
const titleBox$6 = "_titleBox_ljrs8_158";
const titleContent$4 = "_titleContent_ljrs8_179";
const titleIcon$2 = "_titleIcon_ljrs8_284";
const titleIconSelf$1 = "_titleIconSelf_ljrs8_401";
const loginBtn$6 = "_loginBtn_ljrs8_408";
const userNameBox$4 = "_userNameBox_ljrs8_429";
const userPwdBox$4 = "_userPwdBox_ljrs8_443";
const waringBox$4 = "_waringBox_ljrs8_457";
const icon$5 = "_icon_ljrs8_475";
const icon2$5 = "_icon2_ljrs8_483";
const noCheckBox$4 = "_noCheckBox_ljrs8_494";
const currencyTips = "_currencyTips_ljrs8_602";
const rolesBox$3 = "_rolesBox_ljrs8_672";
const text1$3 = "_text1_ljrs8_685";
const p$2 = "_p_ljrs8_699";
const btmTextBox$3 = "_btmTextBox_ljrs8_891";
const noMarLeft$3 = "_noMarLeft_ljrs8_973";
const img1$4 = "_img1_ljrs8_977";
const loginInput$4 = "_loginInput_ljrs8_984";
const inputIcon$2 = "_inputIcon_ljrs8_1014";
const inputPrefix$2 = "_inputPrefix_ljrs8_1021";
const active$8 = "_active_ljrs8_1024";
const flex$2 = "_flex_ljrs8_1039";
const nationIsShow$2 = "_nationIsShow_ljrs8_1045";
const nation$2 = "_nation_ljrs8_1045";
const strength$2 = "_strength_ljrs8_1054";
const thLabel$2 = "_thLabel_ljrs8_1063";
const strengthItem$2 = "_strengthItem_ljrs8_1101";
const selectedLow$2 = "_selectedLow_ljrs8_1146";
const selectedMiddle = "_selectedMiddle_ljrs8_1149";
const selectedHigh$2 = "_selectedHigh_ljrs8_1152";
const phoneContainer$2 = "_phoneContainer_ljrs8_1156";
const country$2 = "_country_ljrs8_1162";
const area$2 = "_area_ljrs8_1169";
const css$x = {
  svg_theme_fill_color: svg_theme_fill_color$z,
  loginBox: loginBox$5,
  submitButton: submitButton$4,
  clsoeBtn: clsoeBtn$6,
  titleBox: titleBox$6,
  titleContent: titleContent$4,
  titleIcon: titleIcon$2,
  titleIconSelf: titleIconSelf$1,
  loginBtn: loginBtn$6,
  userNameBox: userNameBox$4,
  userPwdBox: userPwdBox$4,
  waringBox: waringBox$4,
  icon: icon$5,
  icon2: icon2$5,
  noCheckBox: noCheckBox$4,
  currencyTips,
  rolesBox: rolesBox$3,
  text1: text1$3,
  p: p$2,
  btmTextBox: btmTextBox$3,
  noMarLeft: noMarLeft$3,
  img1: img1$4,
  loginInput: loginInput$4,
  inputIcon: inputIcon$2,
  inputPrefix: inputPrefix$2,
  active: active$8,
  flex: flex$2,
  nationIsShow: nationIsShow$2,
  nation: nation$2,
  strength: strength$2,
  thLabel: thLabel$2,
  strengthItem: strengthItem$2,
  selectedLow: selectedLow$2,
  selectedMiddle,
  selectedHigh: selectedHigh$2,
  phoneContainer: phoneContainer$2,
  country: country$2,
  area: area$2
};
const checkIconsMaps$1 = {
  black: "/message/check_icon.webp",
  blue: "/message/check_icon_blue.webp",
  whiteGreen: "/home/whiteGreen/check_icon.webp",
  purple: "/home/purple/check_icon.webp",
  oilyGreen: "/home/oilyGreen/check_icon.webp",
  whiteRed: "/home/whiteRed/check_icon.webp",
  versaceYellow: "/home/versaceYellow/check_icon.webp",
  lancomePeach: "/home/lancomePeach/check_icon.webp",
  hermesOrange: "/home/hermesOrange/check_icon.webp",
  whiteBlue: "/home/whiteBlue/check_icon.webp",
  sk2: "/home/sk2/check_icon.webp",
  whiteYellow: "/home/whiteYellow/check_icon.webp",
  lightBrown: "/home/lightBrown/check_icon.webp",
  whiteOrange: "/home/whiteOrange/check_icon.webp",
  furlaBlue: "/home/furlaBlue/check_icon.webp",
  whitePink: "/home/whitePink/check_icon.webp",
  bvGreen: "/home/bvGreen/check_icon.webp",
  whiteBrown: "/home/whiteBrown/check_icon.webp",
  AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
  burgundyRed: "/home/burgundyRed/check_icon.webp",
  whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp",
  greenGold: "/home/greenGold/check_icon.webp",
  whitePurple: "/home/whitePurple/check_icon.webp"
};
const Register$1 = () => {
  const { openForRegister, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isCheck, setIsCheck] = reactExports.useState(true);
  const [query] = useSearchParams();
  const navigate = useNavigate();
  const reg_need_phone = websetConfig.reg_need_phone || "0";
  const register_need_name_switch = websetConfig.register_need_name_switch || "0";
  const realNameRequired = websetConfig.realNameRequired || "0";
  const phoneRequired = websetConfig.phoneRequired || "0";
  const [curPsdLevel, setCurPsdLevel] = reactExports.useState(0);
  const curLevelClass = reactExports.useMemo(() => {
    if (curPsdLevel === 1) {
      return css$x.selectedLow;
    } else if (curPsdLevel === 2 || curPsdLevel === 3) {
      return css$x.selectedMiddle;
    } else if (curPsdLevel === 4) {
      return css$x.selectedHigh;
    }
    return "";
  }, [curPsdLevel]);
  const postReg = async (params) => {
    const [res, error2] = await register(params);
    if (!error2) {
      Message$1.success(trans("注册成功"));
      useUserInfoStore.setState({
        openForRegister: false,
        openForRegister: false
      });
      useUserInfoStore.setState({ alertAfterLogin: true });
      Cache$1.set("isAlreadyRegister", true);
    }
  };
  const submit = async (_params) => {
    console.error("submit", _params);
    if (!isCheck) {
      Message$1.error(trans("请勾选同意《用户协议》"));
      return;
    }
    const params = {
      ..._params,
      verify_code: "",
      code: "",
      link_id: query.get("link_id") || query.get("id") || Cache$1.get("link_id") || "",
      reg_url: location.href
    };
    if (!params.realname) {
      delete params.realname;
    }
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postReg(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postReg(
          Object.assign(params, {
            pass_token: result.pass_token,
            lot_number: result.lot_number,
            captcha_output: result.captcha_output,
            gen_time: result.gen_time
          })
        );
      }
    }
    setLoading(false);
  };
  reactExports.useEffect(() => {
    if (openForRegister) {
      form.resetFields();
    }
  }, [openForRegister]);
  return (
    // <Modal
    //   isOpen={openForRegister}
    //   closeByClickOut={false}
    //   onClose={(e) => {
    //     e && e.stopPropagation();
    //     useUserInfoStore.setState({ openForRegister: false });
    //   }}
    // >
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        onClick: (e2) => {
          e2.stopPropagation();
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
          Form3,
          {
            form,
            size: "small",
            initialValues: {
              username: "",
              password: "",
              repassword: "",
              phone: "",
              realname: "",
              currency: "1"
            },
            onFinish: (values2) => submit(values2),
            onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
              console.log("Failed:", values2, errorFields, outOfDate);
            },
            onValuesChange: (changedValues, allValues) => {
              if (changedValues.username) {
                form.setFieldsValue({
                  username: changedValues.username.toLowerCase()
                });
              }
              if (changedValues.phone) {
                form.setFieldsValue({
                  phone: changedValues.phone.replace(/\D/g, "") + " "
                });
                setTimeout(() => {
                  form.setFieldsValue({
                    phone: changedValues.phone.replace(/\D/g, "")
                  });
                }, 0);
              }
              setCurPsdLevel(checkPasswordStrength(allValues.password));
            },
            children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "username",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入用户名") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserName(value2);
                      if (!error2) {
                        return Promise.resolve();
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    placeholder: trans("用户名"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$x.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$x.img1, css$x.inputIcon) })
                  }
                )
              }
            ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "password",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入密码") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserPwd(value2);
                      if (!error2) {
                        return Promise.resolve();
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    type: "password",
                    placeholder: trans("密码"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$x.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$x.img1, css$x.inputIcon) })
                  }
                )
              }
            ),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$x.strength, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$x.thLabel, children: trans("力量") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$x.strengthItem,
                    curPsdLevel >= 1 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$x.strengthItem,
                    curPsdLevel >= 2 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$x.strengthItem,
                    curPsdLevel >= 4 ? curLevelClass : ""
                  )
                }
              ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$x.strengthItem,
                    curPsdLevel >= 4 ? curLevelClass : ""
                  )
                }
              )
              ]
            }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
              Form3.Field,
              {
                name: "repassword",
                defaultShowError: true,
                rules: [
                  { required: true, message: trans("请输入密码") },
                  {
                    validator: (rule, value2) => {
                      const error2 = checkInputUserPwd(value2);
                      if (!error2) {
                        console.log(form.getFieldValue("password"), value2);
                        if (value2 === form.getFieldValue("password")) {
                          return Promise.resolve();
                        } else {
                          return Promise.reject(trans("两次输入的密码不一样"));
                        }
                      }
                      return Promise.reject(error2);
                    }
                  }
                ],
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Input,
                  {
                    type: "password",
                    placeholder: trans("确认密码"),
                    clearable: true,
                    focusBorder: true,
                    required: true,
                    className: css$x.loginInput,
                    prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$x.img1, css$x.inputIcon) })
                  }
                )
              }
            ),
              reg_need_phone === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "phone",
                  defaultShowError: true,
                  rules: [
                    {
                      required: phoneRequired === "1",
                      message: trans("请输入手机号")
                    },
                    {
                      validator: (rule, value2) => {
                        const isOkey = checkInputPhoneNumber(value2);
                        if (isOkey) {
                          return Promise.resolve();
                        }
                        return Promise.reject(trans("手机号格式不正确"));
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("输入手机号码"),
                      clearable: true,
                      focusBorder: true,
                      required: phoneRequired === "1",
                      className: css$x.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                        className: css$x.phoneContainer, children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsx(PhoneIcon, { className: css$x.img1 }),
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          Image,
                          {
                            className: css$x.country,
                            src: getCountryFlag()
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$x.area, children: countryCode })
                        ]
                      })
                    }
                  )
                }
              ) : null,
              register_need_name_switch === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "realname",
                  defaultShowError: true,
                  rules: [
                    {
                      required: realNameRequired === "1",
                      message: trans("输入您的真实姓名")
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("全名"),
                      clearable: true,
                      focusBorder: true,
                      required: realNameRequired === "1",
                      className: css$x.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$x.phoneContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$x.img1 }) })
                    }
                  )
                }
              ) : null,
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                name: "currency", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SelectTow, {
                  noBg: true, items: [
                    {
                      label: "".concat(getMoneyUnit(), " (").concat(getMoneyUnit(), ")"),
                      value: "1",
                      icon: getCountryFlag(true)
                    }
                  ]
                })
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$x.currencyTips, children: trans("币种决定第三方游戏和支付方式，无法修改") }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$x.rolesBox, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                  children: isCheck ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Image,
                    {
                      onClick: () => setIsCheck(!isCheck),
                      className: css$x.icon2,
                      src: checkIconsMaps$1[theme] || "/home/icons/lg_check_icon.webp"
                    }
                  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      onClick: () => setIsCheck(!isCheck),
                      className: css$x.noCheckBox
                    }
                  )
                }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                  className: joinClass(css$x.text1), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$x.p, children: [
                      trans("我已年满18岁，我已阅读并同意"),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "span",
                        {
                          onClick: () => {
                            useUserInfoStore.setState({ openForXieYi: true });
                          },
                          children: "《".concat(trans("用户协议"), "》")
                        }
                      )
                    ]
                  })
                })
                ]
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Button$1,
                  {
                    block: true,
                    className: css$x.submitButton,
                    loading: loading2,
                    onClick: () => {
                      form.submit();
                    },
                    children: trans("注册")
                  }
                )
              })
            ]
          }
        )
      }
    ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$x.btmTextBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          onClick: () => {
            useUserInfoStore.setState({ openForRegister: false });
            navigate("/message?service=1");
          },
          children: trans("联系支持人员")
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {})
      ]
    }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, {})
    ]
  })
  );
};
const svg_theme_fill_color$y = "_svg_theme_fill_color_1w1om_3";
const loginBox$4 = "_loginBox_1w1om_55";
const submitButton$3 = "_submitButton_1w1om_58";
const loginInput$3 = "_loginInput_1w1om_66";
const inputIcon$1 = "_inputIcon_1w1om_84";
const clsoeBtn$5 = "_clsoeBtn_1w1om_156";
const titleBox$5 = "_titleBox_1w1om_173";
const titleContent$3 = "_titleContent_1w1om_197";
const titleIcon$1 = "_titleIcon_1w1om_302";
const loginBtn$5 = "_loginBtn_1w1om_415";
const userNameBox$3 = "_userNameBox_1w1om_435";
const userPwdBox$3 = "_userPwdBox_1w1om_448";
const waringBox$3 = "_waringBox_1w1om_461";
const icon$4 = "_icon_1w1om_475";
const icon2$4 = "_icon2_1w1om_482";
const noCheckBox$3 = "_noCheckBox_1w1om_491";
const rolesBox$2 = "_rolesBox_1w1om_596";
const text1$2 = "_text1_1w1om_611";
const tipsSpan$1 = "_tipsSpan_1w1om_624";
const btmTextBox$2 = "_btmTextBox_1w1om_668";
const noMarLeft$2 = "_noMarLeft_1w1om_759";
const img1$3 = "_img1_1w1om_762";
const findPsd$1 = "_findPsd_1w1om_772";
const css$w = {
  svg_theme_fill_color: svg_theme_fill_color$y,
  loginBox: loginBox$4,
  submitButton: submitButton$3,
  loginInput: loginInput$3,
  inputIcon: inputIcon$1,
  clsoeBtn: clsoeBtn$5,
  titleBox: titleBox$5,
  titleContent: titleContent$3,
  titleIcon: titleIcon$1,
  loginBtn: loginBtn$5,
  userNameBox: userNameBox$3,
  userPwdBox: userPwdBox$3,
  waringBox: waringBox$3,
  icon: icon$4,
  icon2: icon2$4,
  noCheckBox: noCheckBox$3,
  rolesBox: rolesBox$2,
  text1: text1$2,
  tipsSpan: tipsSpan$1,
  btmTextBox: btmTextBox$2,
  noMarLeft: noMarLeft$2,
  img1: img1$3,
  findPsd: findPsd$1
};
const checkIconsMaps = {
  black: "/message/check_icon.webp",
  blue: "/message/check_icon_blue.webp",
  whiteGreen: "/home/whiteGreen/check_icon.webp",
  purple: "/home/purple/check_icon.webp",
  oilyGreen: "/home/oilyGreen/check_icon.webp",
  whiteRed: "/home/whiteRed/check_icon.webp",
  versaceYellow: "/home/versaceYellow/check_icon.webp",
  lancomePeach: "/home/lancomePeach/check_icon.webp",
  hermesOrange: "/home/hermesOrange/check_icon.webp",
  whiteBlue: "/home/whiteBlue/check_icon.webp",
  sk2: "/home/sk2/check_icon.webp",
  whiteYellow: "/home/whiteYellow/check_icon.webp",
  lightBrown: "/home/lightBrown/check_icon.webp",
  whiteOrange: "/home/whiteOrange/check_icon.webp",
  furlaBlue: "/home/furlaBlue/check_icon.webp",
  whitePink: "/home/whitePink/check_icon.webp",
  bvGreen: "/home/bvGreen/check_icon.webp",
  whiteBrown: "/home/whiteBrown/check_icon.webp",
  AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
  whitePurple: "/home/whitePurple/check_icon.webp",
  burgundyRed: "/home/burgundyRed/check_icon.webp",
  whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp",
  greenGold: "/home/greenGold/check_icon.webp"
};
const Login$1 = () => {
  const { openForLogin, token: token2, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isSave, setIsSave] = reactExports.useState(Cache$1.get("isSave") || false);
  const navigate = useNavigate();
  const postLogin = async (params) => {
    const [res, error2] = await login(params, { useLoading: true });
    if (!error2) {
      Message$1.success(trans("登录成功"));
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          window.jsBridge.postMessage("login", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
      useUserInfoStore.setState({ openForLogin: false, openForRegister: false });
      useUserInfoStore.setState({ alertAfterLogin: true });
      if (isSave) {
        Cache$1.set("UserName", form.getFieldValue("username"));
        Cache$1.set("UserPwd", form.getFieldValue("password"));
      }
    }
  };
  const submit = async (params) => {
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postLogin(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postLogin(Object.assign(params, {
          pass_token: result.pass_token,
          lot_number: result.lot_number,
          captcha_output: result.captcha_output,
          gen_time: result.gen_time
        }));
      }
    }
    setLoading(false);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$w.loginBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          onClick: (e2) => {
            e2.stopPropagation();
          },
          children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            Form3,
            {
              form,
              size: "small",
              initialValues: {
                username: isSave ? Cache$1.get("UserName") : "",
                password: isSave ? Cache$1.get("UserPwd") : ""
              },
              onFinish: (values2) => submit(values2),
              onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                console.log("Failed:", values2, errorFields, outOfDate);
              },
              onValuesChange: (changedValues, allValues) => {
                if (changedValues.username) {
                  form.setFieldsValue({
                    username: changedValues.username.toLowerCase()
                  });
                }
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "username",
                  defaultShowError: true,
                  rules: [
                    { required: true, message: trans("请输入用户名") },
                    {
                      validator: (rule, value2) => {
                        const error2 = checkInputUserName(value2);
                        if (!error2) {
                          return Promise.resolve();
                        }
                        return Promise.reject(error2);
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      placeholder: trans("用户名"),
                      clearable: true,
                      focusBorder: true,
                      required: true,
                      className: css$w.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$w.img1, css$w.inputIcon) })
                    }
                  )
                }
              ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                Form3.Field,
                {
                  name: "password",
                  defaultShowError: true,
                  rules: [
                    { required: true, message: trans("请输入密码") },
                    {
                      validator: (rule, value2) => {
                        const error2 = checkInputUserPwd(value2);
                        if (!error2) {
                          return Promise.resolve();
                        }
                        return Promise.reject(error2);
                      }
                    }
                  ],
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Input,
                    {
                      type: "password",
                      placeholder: trans("密码"),
                      clearable: true,
                      focusBorder: true,
                      required: true,
                      className: css$w.loginInput,
                      prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$w.img1, css$w.inputIcon) })
                    }
                  )
                }
              ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                className: css$w.rolesBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  children: [
                    isSave ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Image,
                      {
                        onClick: () => {
                          setIsSave(false);
                          Cache$1.set("isSave", false);
                        },
                        className: css$w.icon2,
                        src: checkIconsMaps[theme] || "/home/icons/lg_check_icon.webp"
                      }
                    ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        onClick: () => {
                          setIsSave(true);
                          Cache$1.set("isSave", true);
                        },
                        className: css$w.noCheckBox
                      }
                    ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$w.tipsSpan, children: trans("记住密码") })
                  ]
                })
              }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Button$1,
                  {
                    className: css$w.submitButton,
                    block: true,
                    loading: loading2,
                    onClick: () => {
                      form.submit();
                    },
                    children: trans("登录")
                  }
                )
              })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$w.btmTextBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                onClick: () => {
                  useUserInfoStore.setState({ openForLogin: false });
                  navigate("/message?service=1");
                },
                children: trans("联系支持人员")
              }
            )
          })
          ]
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, { isLogin: true })
      ]
    })
  });
};
const LogInRegister2 = () => {
  const { openForLogin, token: token2, theme, websetConfig, openForRegister } = useUserInfoStore();
  const [btnClose, setBtnClose] = reactExports.useState(true);
  reactExports.useEffect(() => {
    if (btnClose) {
      if (openForLogin) {
        setLoginType(true);
      } else {
        setLoginType(false);
      }
    } else {
      setBtnClose(true);
    }
  }, [openForLogin, openForRegister]);
  const [loginType, setLoginType] = reactExports.useState(true);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: openForLogin || openForRegister,
        closeByClickOut: false,
        onClose: (e2) => {
          e2 && e2.stopPropagation();
          setBtnClose(false);
          useUserInfoStore.setState({
            openForLogin: false,
            openForRegister: false
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$y.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                className: css$y.clsoeBtn,
                onClick: () => {
                  setLoginType(true);
                  setBtnClose(false);
                  useUserInfoStore.setState({
                    openForLogin: false,
                    openForRegister: false
                  });
                  const googleDom = document.getElementById("g_id_signIn");
                  if (googleDom)
                    googleDom.innerHTML = "";
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, { className: css$y.iconsvg })
              }
            ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$y.logo, children: websetConfig.logo_img ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                Image,
                {
                  src: websetConfig.logo_img,
                  style: {
                    maxWidth: "300rem"
                  },
                  remote: true,
                  isGame: true
                }
              ) : null
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$y.titleBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$y.item,
                    !loginType && css$y.titleContentActive
                  ),
                  onClick: () => {
                    setLoginType(false);
                  },
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: trans("报名") })
                }
              ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: joinClass(
                    css$y.item,
                    loginType && css$y.titleContentActive
                  ),
                  onClick: () => {
                    setLoginType(true);
                  },
                  children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    children: [
                      " ",
                      trans("会员登录")
                    ]
                  })
                }
              )
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$y.marginTop, children: trans("仅支持账户注册") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              style: { width: "100%", overflow: "hidden" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: joinClass(
                    css$y.inSetBox,
                    loginType ? "" : css$y.leftAnimate
                  ),
                  children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    children: [
                      " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx(Login$1, {})
                    ]
                  }),
                    !loginType ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginLeft: "96rem", width: "622rem" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Register$1, {}) }) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "622rem", height: "10" }, children: " " })
                  ]
                }
              )
            })
            ]
          })
        })
      }
    )
  });
};
const svg_theme_fill_color$x = "_svg_theme_fill_color_t1v6q_3";
const loginBox$3 = "_loginBox_t1v6q_55";
const submitButton$2 = "_submitButton_t1v6q_63";
const clsoeBtn$4 = "_clsoeBtn_t1v6q_141";
const titleBox$4 = "_titleBox_t1v6q_158";
const titleContent$2 = "_titleContent_t1v6q_179";
const titleIcon = "_titleIcon_t1v6q_284";
const titleIconSelf = "_titleIconSelf_t1v6q_401";
const loginBtn$4 = "_loginBtn_t1v6q_408";
const userNameBox$2 = "_userNameBox_t1v6q_429";
const userPwdBox$2 = "_userPwdBox_t1v6q_443";
const waringBox$2 = "_waringBox_t1v6q_457";
const icon$3 = "_icon_t1v6q_475";
const icon2$3 = "_icon2_t1v6q_483";
const noCheckBox$2 = "_noCheckBox_t1v6q_494";
const rolesBox$1 = "_rolesBox_t1v6q_602";
const text1$1 = "_text1_t1v6q_615";
const p$1 = "_p_t1v6q_629";
const btmTextBox$1 = "_btmTextBox_t1v6q_821";
const noMarLeft$1 = "_noMarLeft_t1v6q_903";
const img1$2 = "_img1_t1v6q_907";
const loginInput$2 = "_loginInput_t1v6q_914";
const inputIcon = "_inputIcon_t1v6q_944";
const inputPrefix$1 = "_inputPrefix_t1v6q_951";
const active$7 = "_active_t1v6q_954";
const flex$1 = "_flex_t1v6q_969";
const nationIsShow$1 = "_nationIsShow_t1v6q_975";
const nation$1 = "_nation_t1v6q_975";
const strength$1 = "_strength_t1v6q_984";
const thLabel$1 = "_thLabel_t1v6q_993";
const strengthItem$1 = "_strengthItem_t1v6q_1031";
const selectedLow$1 = "_selectedLow_t1v6q_1076";
const selectedMiddle1$1 = "_selectedMiddle1_t1v6q_1079";
const selectedMiddle2$1 = "_selectedMiddle2_t1v6q_1082";
const selectedHigh$1 = "_selectedHigh_t1v6q_1085";
const phoneContainer$1 = "_phoneContainer_t1v6q_1089";
const country$1 = "_country_t1v6q_1095";
const area$1 = "_area_t1v6q_1102";
const css$v = {
  svg_theme_fill_color: svg_theme_fill_color$x,
  loginBox: loginBox$3,
  submitButton: submitButton$2,
  clsoeBtn: clsoeBtn$4,
  titleBox: titleBox$4,
  titleContent: titleContent$2,
  titleIcon,
  titleIconSelf,
  loginBtn: loginBtn$4,
  userNameBox: userNameBox$2,
  userPwdBox: userPwdBox$2,
  waringBox: waringBox$2,
  icon: icon$3,
  icon2: icon2$3,
  noCheckBox: noCheckBox$2,
  rolesBox: rolesBox$1,
  text1: text1$1,
  p: p$1,
  btmTextBox: btmTextBox$1,
  noMarLeft: noMarLeft$1,
  img1: img1$2,
  loginInput: loginInput$2,
  inputIcon,
  inputPrefix: inputPrefix$1,
  active: active$7,
  flex: flex$1,
  nationIsShow: nationIsShow$1,
  nation: nation$1,
  strength: strength$1,
  thLabel: thLabel$1,
  strengthItem: strengthItem$1,
  selectedLow: selectedLow$1,
  selectedMiddle1: selectedMiddle1$1,
  selectedMiddle2: selectedMiddle2$1,
  selectedHigh: selectedHigh$1,
  phoneContainer: phoneContainer$1,
  country: country$1,
  area: area$1
};
const Register = () => {
  const { openForRegister, theme, websetConfig } = useUserInfoStore();
  const [form] = Form3.useForm();
  const [loading2, setLoading] = reactExports.useState(false);
  const [isCheck, setIsCheck] = reactExports.useState(true);
  const [query] = useSearchParams();
  const navigate = useNavigate();
  const reg_need_phone = websetConfig.reg_need_phone || "0";
  const register_need_name_switch = websetConfig.register_need_name_switch || "0";
  const realNameRequired = websetConfig.realNameRequired || "0";
  const phoneRequired = websetConfig.phoneRequired || "0";
  const [curPsdLevel, setCurPsdLevel] = reactExports.useState(0);
  const curLevelClass = reactExports.useMemo(() => {
    if (curPsdLevel === 1) {
      return css$v.selectedLow;
    } else if (curPsdLevel === 2) {
      return css$v.selectedMiddle1;
    } else if (curPsdLevel === 3) {
      return css$v.selectedMiddle2;
    } else if (curPsdLevel === 4) {
      return css$v.selectedHigh;
    }
    return "";
  }, [curPsdLevel]);
  const postReg = async (params) => {
    const [res, error2] = await register(params);
    if (!error2) {
      Message$1.success(trans("注册成功"));
      useUserInfoStore.setState({ openForRegister: false });
      useUserInfoStore.setState({ alertAfterLogin: true });
      Cache$1.set("isAlreadyRegister", true);
    }
  };
  const submit = async (_params) => {
    console.error("submit", _params);
    if (!isCheck) {
      Message$1.error(trans("请勾选同意《用户协议》"));
      return;
    }
    const params = {
      ..._params,
      verify_code: "",
      code: "",
      link_id: query.get("link_id") || query.get("id") || Cache$1.get("link_id") || "",
      reg_url: location.href
    };
    if (!params.realname) {
      delete params.realname;
    }
    setLoading(true);
    if (websetConfig.authLogReg !== "1") {
      await postReg(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postReg(
          Object.assign(params, {
            pass_token: result.pass_token,
            lot_number: result.lot_number,
            captcha_output: result.captcha_output,
            gen_time: result.gen_time
          })
        );
      }
    }
    setLoading(false);
  };
  reactExports.useEffect(() => {
    if (openForRegister) {
      form.resetFields();
    }
  }, [openForRegister]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      zIndex: 1e4,
      isOpen: openForRegister,
      closeByClickOut: false,
      onClose: (e2) => {
        e2 && e2.stopPropagation();
        useUserInfoStore.setState({ openForRegister: false });
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$v.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: css$v.clsoeBtn,
            onClick: () => {
              useUserInfoStore.setState({ openForRegister: false });
              const googleDom = document.getElementById("g_id_signIn");
              if (googleDom)
                googleDom.innerHTML = "";
            },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, {})
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$v.titleBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$v.titleContent, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$v.titleIcon, css$v.titleIconSelf) }),
              trans("注册您的帐户")
            ]
          })
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            onClick: (e2) => {
              e2.stopPropagation();
            },
            children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Form3,
              {
                form,
                size: "small",
                initialValues: {
                  username: "",
                  password: "",
                  repassword: "",
                  phone: "",
                  realname: "",
                  currency: "1"
                },
                onFinish: (values2) => submit(values2),
                onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                  console.log("Failed:", values2, errorFields, outOfDate);
                },
                onValuesChange: (changedValues, allValues) => {
                  if (changedValues.username) {
                    form.setFieldsValue({
                      username: changedValues.username.toLowerCase()
                    });
                  }
                  if (changedValues.phone) {
                    form.setFieldsValue({
                      phone: changedValues.phone.replace(/\D/g, "") + " "
                    });
                    setTimeout(() => {
                      form.setFieldsValue({
                        phone: changedValues.phone.replace(/\D/g, "")
                      });
                    }, 0);
                  }
                  setCurPsdLevel(checkPasswordStrength(allValues.password));
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Form3.Field,
                  {
                    name: "username",
                    defaultShowError: true,
                    rules: [
                      { required: true, message: trans("请输入用户名") },
                      {
                        validator: (rule, value2) => {
                          const error2 = checkInputUserName(value2);
                          if (!error2) {
                            return Promise.resolve();
                          }
                          return Promise.reject(error2);
                        }
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Input,
                      {
                        placeholder: trans("用户名"),
                        clearable: true,
                        focusBorder: true,
                        required: true,
                        className: css$v.loginInput,
                        prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: joinClass(css$v.img1, css$v.inputIcon) })
                      }
                    )
                  }
                ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Form3.Field,
                  {
                    name: "password",
                    defaultShowError: true,
                    rules: [
                      { required: true, message: trans("请输入密码") },
                      {
                        validator: (rule, value2) => {
                          const error2 = checkInputUserPwd(value2);
                          if (!error2) {
                            return Promise.resolve();
                          }
                          return Promise.reject(error2);
                        }
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Input,
                      {
                        type: "password",
                        placeholder: trans("密码"),
                        clearable: true,
                        focusBorder: true,
                        required: true,
                        className: css$v.loginInput,
                        prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$v.img1, css$v.inputIcon) })
                      }
                    )
                  }
                ),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$v.strength, children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$v.thLabel, children: trans("力量") }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      className: joinClass(
                        css$v.strengthItem,
                        curPsdLevel >= 1 ? curLevelClass : ""
                      )
                    }
                  ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      className: joinClass(
                        css$v.strengthItem,
                        curPsdLevel >= 2 ? curLevelClass : ""
                      )
                    }
                  ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      className: joinClass(
                        css$v.strengthItem,
                        curPsdLevel >= 3 ? curLevelClass : ""
                      )
                    }
                  ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      className: joinClass(
                        css$v.strengthItem,
                        curPsdLevel >= 4 ? curLevelClass : ""
                      )
                    }
                  )
                  ]
                }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                  Form3.Field,
                  {
                    name: "repassword",
                    defaultShowError: true,
                    rules: [
                      { required: true, message: trans("请输入密码") },
                      {
                        validator: (rule, value2) => {
                          const error2 = checkInputUserPwd(value2);
                          if (!error2) {
                            console.log(form.getFieldValue("password"), value2);
                            if (value2 === form.getFieldValue("password")) {
                              return Promise.resolve();
                            } else {
                              return Promise.reject(trans("两次输入的密码不一样"));
                            }
                          }
                          return Promise.reject(error2);
                        }
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Input,
                      {
                        type: "password",
                        placeholder: trans("确认密码"),
                        clearable: true,
                        focusBorder: true,
                        required: true,
                        className: css$v.loginInput,
                        prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: joinClass(css$v.img1, css$v.inputIcon) })
                      }
                    )
                  }
                ),
                  reg_need_phone === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "phone",
                      defaultShowError: true,
                      rules: [
                        {
                          required: phoneRequired === "1",
                          message: trans("请输入手机号")
                        },
                        {
                          validator: (rule, value2) => {
                            const isOkey = checkInputPhoneNumber(value2);
                            if (isOkey) {
                              return Promise.resolve();
                            }
                            return Promise.reject(trans("手机号格式不正确"));
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("输入手机号码"),
                          clearable: true,
                          focusBorder: true,
                          required: phoneRequired === "1",
                          className: css$v.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                            className: css$v.phoneContainer, children: [
                            /* @__PURE__ */ jsxRuntimeExports.jsx(PhoneIcon, { className: css$v.img1 }),
                            /* @__PURE__ */ jsxRuntimeExports.jsx(
                              Image,
                              {
                                className: css$v.country,
                                src: getCountryFlag()
                              }
                            ),
                            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$v.area, children: countryCode })
                            ]
                          })
                        }
                      )
                    }
                  ) : null,
                  register_need_name_switch === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "realname",
                      defaultShowError: true,
                      rules: [
                        {
                          required: realNameRequired === "1",
                          message: trans("输入您的真实姓名")
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("全名"),
                          clearable: true,
                          focusBorder: true,
                          required: realNameRequired == "1",
                          className: css$v.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$v.phoneContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$v.img1 }) })
                        }
                      )
                    }
                  ) : null,
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                    name: "currency", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SelectTow, {
                      noBg: true, items: [
                        {
                          label: "".concat(getMoneyUnit(), " (").concat(getMoneyUnit(), ")"),
                          value: "1",
                          icon: getCountryFlag(true)
                        }
                      ]
                    })
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$v.rolesBox, children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                      children: isCheck ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Image,
                        {
                          onClick: () => setIsCheck(!isCheck),
                          className: css$v.icon2,
                          src: checkIconsMaps$4[theme] || "/home/icons/lg_check_icon.webp"
                        }
                      ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "div",
                        {
                          onClick: () => setIsCheck(!isCheck),
                          className: css$v.noCheckBox
                        }
                      )
                    }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
                      className: joinClass(css$v.text1), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                        className: css$v.p, children: [
                          trans("我已年满18岁，我已阅读并同意"),
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                            "span",
                            {
                              onClick: () => {
                                useUserInfoStore.setState({ openForXieYi: true });
                              },
                              children: "《".concat(trans("用户协议"), "》")
                            }
                          )
                        ]
                      })
                    })
                    ]
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Button$1,
                      {
                        block: true,
                        className: css$v.submitButton,
                        loading: loading2,
                        onClick: () => {
                          form.submit();
                        },
                        children: trans("注册")
                      }
                    )
                  })
                ]
              }
            )
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$v.btmTextBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              onClick: () => {
                useUserInfoStore.setState({ openForRegister: false });
                navigate("/message?service=1");
              },
              children: trans("联系支持人员")
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              onClick: () => {
                useUserInfoStore.setState({ openForRegister: false });
                useUserInfoStore.setState({ openForLogin: true });
              },
              children: trans("登录")
            }
          )
          ]
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLogin, {})
        ]
      })
    }
  );
};
const svg_theme_fill_color$w = "_svg_theme_fill_color_1j6rx_3";
const loginBox$2 = "_loginBox_1j6rx_55";
const noPaddingBottomBox$1 = "_noPaddingBottomBox_1j6rx_62";
const submitButton$1 = "_submitButton_1j6rx_65";
const clsoeBtn$3 = "_clsoeBtn_1j6rx_133";
const titleBox$3 = "_titleBox_1j6rx_156";
const titleContent$1 = "_titleContent_1j6rx_177";
const googleAccount = "_googleAccount_1j6rx_237";
const loginBtn$3 = "_loginBtn_1j6rx_285";
const userNameBox$1 = "_userNameBox_1j6rx_305";
const userPwdBox$1 = "_userPwdBox_1j6rx_318";
const waringBox$1 = "_waringBox_1j6rx_331";
const noCheckBox$1 = "_noCheckBox_1j6rx_345";
const rolesBox = "_rolesBox_1j6rx_438";
const text1 = "_text1_1j6rx_450";
const p = "_p_1j6rx_463";
const btmTextBox = "_btmTextBox_1j6rx_596";
const noMarLeft = "_noMarLeft_1j6rx_664";
const img1$1 = "_img1_1j6rx_667";
const loginInput$1 = "_loginInput_1j6rx_673";
const brlSelectBox = "_brlSelectBox_1j6rx_678";
const downArrowIcon = "_downArrowIcon_1j6rx_684";
const brlDisInput = "_brlDisInput_1j6rx_723";
const inputPrefix = "_inputPrefix_1j6rx_754";
const active$6 = "_active_1j6rx_757";
const flex = "_flex_1j6rx_772";
const nationIsShow = "_nationIsShow_1j6rx_778";
const nation = "_nation_1j6rx_778";
const phoneContainer = "_phoneContainer_1j6rx_787";
const country = "_country_1j6rx_793";
const area = "_area_1j6rx_800";
const css$u = {
  svg_theme_fill_color: svg_theme_fill_color$w,
  loginBox: loginBox$2,
  noPaddingBottomBox: noPaddingBottomBox$1,
  submitButton: submitButton$1,
  clsoeBtn: clsoeBtn$3,
  titleBox: titleBox$3,
  titleContent: titleContent$1,
  googleAccount,
  loginBtn: loginBtn$3,
  userNameBox: userNameBox$1,
  userPwdBox: userPwdBox$1,
  waringBox: waringBox$1,
  noCheckBox: noCheckBox$1,
  rolesBox,
  text1,
  p,
  btmTextBox,
  noMarLeft,
  img1: img1$1,
  loginInput: loginInput$1,
  brlSelectBox,
  downArrowIcon,
  brlDisInput,
  inputPrefix,
  active: active$6,
  flex,
  nationIsShow,
  nation,
  phoneContainer,
  country,
  area
};
const RegisterByThree = () => {
  const { theme, websetConfig } = useUserInfoStore();
  const {
    openForRegisterByThree,
    setOpenForRegisterByThree,
    threeLoginInfo,
    setThreeLoginInfo,
    setOpenForInfoPreviewByThree
  } = useThreeLoginStore();
  const [form] = Form3.useForm();
  const [query] = useSearchParams();
  const reg_need_phone = websetConfig.reg_need_phone || "0";
  const register_need_name_switch = websetConfig.register_need_name_switch || "0";
  const realNameRequired = websetConfig.realNameRequired || "0";
  const phoneRequired = websetConfig.phoneRequired || "0";
  const submit = async (_params) => {
    const params = {
      ...threeLoginInfo,
      ..._params,
      verify_code: "",
      code: "",
      link_id: query.get("link_id") || query.get("id") || Cache$1.get("link_id") || "",
      reg_url: location.href
    };
    if (!params.realname) {
      delete params.realname;
    }
    setThreeLoginInfo(params);
    setOpenForRegisterByThree(false);
    setOpenForInfoPreviewByThree(true);
  };
  const email2 = ((threeLoginInfo == null ? void 0 : threeLoginInfo.email) || "").slice(0, 3);
  reactExports.useEffect(() => {
    if (openForRegisterByThree) {
      form.resetFields();
    }
  }, [openForRegisterByThree]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      zIndex: 1e4,
      isOpen: openForRegisterByThree,
      closeByClickOut: false,
      onClose: (e2) => {
        e2 && e2.stopPropagation();
        useThreeLoginStore.setState({ openForRegisterByThree: false });
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$u.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: css$u.clsoeBtn,
            onClick: () => {
              useThreeLoginStore.setState({ openForRegisterByThree: false });
            },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInMineIcon, {})
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$u.titleBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$u.titleContent, children: trans("设置账号") }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            onClick: (e2) => {
              e2.stopPropagation();
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$u.googleAccount, children: [
                trans("谷歌账号"),
                " ",
                email2,
                "******@gmail.com"
              ]
            }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
              Input,
              {
                placeholder: "",
                focusBorder: true,
                value: "".concat(getMoneyUnit(), "(").concat(getMoneyUnit(), ")"),
                required: true,
                readOnly: true,
                className: joinClass(css$u.loginInput, css$u.brlSelectBox),
                prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$u.country, src: getCountryFlag() }),
                suffix: /* @__PURE__ */ jsxRuntimeExports.jsx(DownIcon, { className: css$u.downArrowIcon })
              }
            ),
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Form3,
              {
                form,
                initialValues: {
                  username: "",
                  password: "",
                  repassword: "",
                  phone: "",
                  realname: ""
                },
                onFinish: (values2) => submit(values2),
                onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                  console.log("Failed:", values2, errorFields, outOfDate);
                },
                onValuesChange: (changedValues, allValues) => {
                  if (changedValues.phone) {
                    form.setFieldsValue({
                      phone: changedValues.phone.replace(/\D/g, "") + " "
                    });
                    setTimeout(() => {
                      form.setFieldsValue({
                        phone: changedValues.phone.replace(/\D/g, "")
                      });
                    }, 0);
                  }
                },
                children: [
                  register_need_name_switch === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "realname",
                      className: css$u.noPaddingBottomBox,
                      defaultShowError: true,
                      rules: [
                        { required: realNameRequired === "1", message: trans("全名") }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("全名"),
                          clearable: true,
                          focusBorder: true,
                          required: realNameRequired === "1",
                          className: css$u.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$u.phoneContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx(PixAccountIcon, { className: css$u.img1 }) })
                        }
                      )
                    }
                  ) : null,
                  reg_need_phone === "1" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "phone",
                      defaultShowError: true,
                      className: css$u.noPaddingBottomBox,
                      rules: [
                        { required: phoneRequired === "1", message: trans("请输入手机号") },
                        {
                          validator: (rule, value2) => {
                            const isOkey = checkInputPhoneNumber(value2);
                            if (isOkey) {
                              return Promise.resolve();
                            }
                            return Promise.reject(trans("手机号格式不正确"));
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("输入手机号码"),
                          clearable: true,
                          focusBorder: true,
                          required: phoneRequired === "1",
                          className: css$u.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                            className: css$u.phoneContainer, children: [
                              /* @__PURE__ */ jsxRuntimeExports.jsx(PhoneIcon, { className: css$u.img1 }),
                              /* @__PURE__ */ jsxRuntimeExports.jsx(
                              Image,
                              {
                                className: css$u.country,
                                src: getCountryFlag()
                              }
                            ),
                              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$u.area, children: countryCode })
                            ]
                          })
                        }
                      )
                    }
                  ) : null,
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$u.rolesBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css$u.text1), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$u.p, children: trans("A moeda determina os jogos de terceiros e os métodos de pagamento e não pode ser modificada.") }) }) }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(Form3.Field, {
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Button$1,
                      {
                        block: true,
                        className: css$u.submitButton,
                        onClick: () => {
                          form.submit();
                        },
                        children: trans("Complete")
                      }
                    )
                  })
                ]
              }
            )
            ]
          }
        )
        ]
      })
    }
  );
};
const svg_theme_fill_color$v = "_svg_theme_fill_color_hk9gm_3";
const infoPreviewByThree = "_infoPreviewByThree_hk9gm_55";
const inBox$1 = "_inBox_hk9gm_127";
const save_box = "_save_box_hk9gm_130";
const other_box = "_other_box_hk9gm_200";
const titleBox$2 = "_titleBox_hk9gm_204";
const infoBox = "_infoBox_hk9gm_211";
const itemBox$1 = "_itemBox_hk9gm_211";
const text_box = "_text_box_hk9gm_214";
const str = "_str_hk9gm_262";
const icon$2 = "_icon_hk9gm_307";
const iconBox = "_iconBox_hk9gm_324";
const icon2$2 = "_icon2_hk9gm_331";
const copyBox = "_copyBox_hk9gm_398";
const fitSpan = "_fitSpan_hk9gm_452";
const copyIcon = "_copyIcon_hk9gm_525";
const clodeModal = "_clodeModal_hk9gm_594";
const loading = "_loading_hk9gm_615";
const css$t = {
  svg_theme_fill_color: svg_theme_fill_color$v,
  infoPreviewByThree,
  inBox: inBox$1,
  save_box,
  other_box,
  titleBox: titleBox$2,
  infoBox,
  itemBox: itemBox$1,
  text_box,
  str,
  icon: icon$2,
  iconBox,
  icon2: icon2$2,
  copyBox,
  fitSpan,
  copyIcon,
  clodeModal,
  loading
};
const svg_theme_fill_color$u = "_svg_theme_fill_color_10bgr_3";
const tip1 = "_tip1_10bgr_55";
const tip2 = "_tip2_10bgr_66";
const iptTip = "_iptTip_10bgr_124";
const btnsBox = "_btnsBox_10bgr_167";
const btnItem1 = "_btnItem1_10bgr_175";
const btnItem2 = "_btnItem2_10bgr_311";
const conSpan = "_conSpan_10bgr_388";
const comCss = {
  svg_theme_fill_color: svg_theme_fill_color$u,
  tip1,
  tip2,
  iptTip,
  btnsBox,
  btnItem1,
  btnItem2,
  conSpan
};
const InfoPreviewByThree = () => {
  var _a;
  const {
    setOpenForInfoPreviewByThree,
    openForInfoPreviewByThree,
    setOpenForEditInfoByThree,
    threeLoginInfo
  } = useThreeLoginStore();
  const showEditInfoModal = () => {
    setOpenForInfoPreviewByThree(false);
    setOpenForEditInfoByThree(true);
  };
  const { websetConfig } = useUserInfoStore();
  const [saveLoading, setSaveLoading] = reactExports.useState(false);
  const saveImgRef = reactExports.useRef();
  const postReg = async (params) => {
    if (!saveLoading) {
      setSaveLoading(true);
      const [res, error2] = await register(params);
      if (!error2) {
        await saveImgByElement(saveImgRef.current);
        Message$1.success(trans("注册成功"));
        setOpenForInfoPreviewByThree(false);
        Cache.set("isAlreadyRegister", true);
        useUserInfoStore.setState({ alertAfterLogin: true });
      }
      setSaveLoading(false);
    }
  };
  const submit = async () => {
    var _a2;
    const params = {
      ...threeLoginInfo,
      username: (_a2 = threeLoginInfo == null ? void 0 : threeLoginInfo.username) == null ? void 0 : _a2.toLowerCase()
    };
    if (websetConfig.authLogReg !== "1") {
      await postReg(params);
    } else {
      const result = await slideBlockByGeetest4(websetConfig.authLogRegType);
      if (result) {
        await postReg(Object.assign(params, {
          pass_token: result.pass_token,
          lot_number: result.lot_number,
          captcha_output: result.captcha_output,
          gen_time: result.gen_time
        }));
      }
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
    isOpen: openForInfoPreviewByThree, zIndex: 1e4, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$t.infoPreviewByThree, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$t.inBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          ref: saveImgRef, className: css$t.save_box, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$t.titleBox, children: trans("Account and password prompts") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: comCss.tip1, children: trans("Congratulations on successful registration!") }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: comCss.tip2, children: [
              trans(
                "The system has automatically generated the following account number and password for you. You can copy and save the text or pictures."
              ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: comCss.iptTip, children: trans("And do not disclose it to others to avoid causing losses!") })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$t.infoBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$t.itemBox, onClick: () => showEditInfoModal(), children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: css$t.icon }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$t.text_box, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("Account：") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$t.str, children: (_a = threeLoginInfo == null ? void 0 : threeLoginInfo.username) == null ? void 0 : _a.toLowerCase() })
                ]
              }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: css$t.iconBox,
                  onClick: () => showEditInfoModal(),
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(EditString, { className: css$t.icon2 })
                }
              )
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$t.itemBox, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: css$t.icon }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$t.text_box, children: [
                  trans("Password："),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$t.str, children: threeLoginInfo == null ? void 0 : threeLoginInfo.password })
                ]
              }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: css$t.iconBox,
                  onClick: () => showEditInfoModal(),
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(EditString, { className: css$t.icon2 })
                }
              )
              ]
            })
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$t.other_box, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$t.copyBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
              className: css$t.fitSpan, onClick: () => {
                copyText("".concat(trans("Account：")).concat((threeLoginInfo == null ? void 0 : threeLoginInfo.username) || "", " ").concat(trans("Password：")).concat((threeLoginInfo == null ? void 0 : threeLoginInfo.password) || ""));
                Message$1.success(trans("复制成功"));
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  trans("One-click copy of account password"),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RectCopyIcon, { className: css$t.copyIcon })
                ]
              })
            }),
              trans("Remember to save it!")
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: comCss.btnsBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(comCss.btnItem1), onClick: () => showEditInfoModal(), children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("Modify account") }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: "".concat(comCss.btnItem2, " ").concat(saveLoading && css$t.loading), onClick: async () => {
                await submit();
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("Save the picture and register") })
            })
            ]
          })
          ]
        })
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$t.clodeModal, onClick: () => {
          setOpenForInfoPreviewByThree(false);
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseModal, { className: css$t.icon })
      })
      ]
    })
  });
};
const svg_theme_fill_color$t = "_svg_theme_fill_color_rctxt_3";
const editInfoByThree = "_editInfoByThree_rctxt_55";
const noPaddingBottomBox = "_noPaddingBottomBox_rctxt_62";
const loginInput = "_loginInput_rctxt_65";
const titleBox$1 = "_titleBox_rctxt_143";
const titleContent = "_titleContent_rctxt_166";
const loginBtn$2 = "_loginBtn_rctxt_224";
const userNameBox = "_userNameBox_rctxt_244";
const userPwdBox = "_userPwdBox_rctxt_257";
const waringBox = "_waringBox_rctxt_270";
const icon$1 = "_icon_rctxt_284";
const icon2$1 = "_icon2_rctxt_291";
const img1 = "_img1_rctxt_308";
const findPsd = "_findPsd_rctxt_318";
const strength = "_strength_rctxt_325";
const thLabel = "_thLabel_rctxt_334";
const strengthItem = "_strengthItem_rctxt_366";
const selectedLow = "_selectedLow_rctxt_408";
const selectedMiddle1 = "_selectedMiddle1_rctxt_411";
const selectedMiddle2 = "_selectedMiddle2_rctxt_414";
const selectedHigh = "_selectedHigh_rctxt_417";
const css$s = {
  svg_theme_fill_color: svg_theme_fill_color$t,
  editInfoByThree,
  noPaddingBottomBox,
  loginInput,
  titleBox: titleBox$1,
  titleContent,
  loginBtn: loginBtn$2,
  userNameBox,
  userPwdBox,
  waringBox,
  icon: icon$1,
  icon2: icon2$1,
  img1,
  findPsd,
  strength,
  thLabel,
  strengthItem,
  selectedLow,
  selectedMiddle1,
  selectedMiddle2,
  selectedHigh
};
const EditInfoByThree = () => {
  const {
    openForEditInfoByThree,
    setOpenForEditInfoByThree,
    setOpenForInfoPreviewByThree,
    threeLoginInfo,
    setThreeLoginInfo
  } = useThreeLoginStore();
  useUserInfoStore();
  const [form] = Form3.useForm();
  reactExports.useState(Cache$1.get("isSave") || false);
  useNavigate();
  const [curPsdLevel, setCurPsdLevel] = reactExports.useState(0);
  const curLevelClass = (() => {
    if (curPsdLevel === 1) {
      return css$s.selectedLow;
    } else if (curPsdLevel === 2) {
      return css$s.selectedMiddle1;
    } else if (curPsdLevel === 3) {
      return css$s.selectedMiddle2;
    } else if (curPsdLevel === 4) {
      return css$s.selectedHigh;
    }
    return "";
  })();
  reactExports.useEffect(() => {
    var _a;
    if (openForEditInfoByThree) {
      form.setFieldsValue({
        username: ((_a = threeLoginInfo == null ? void 0 : threeLoginInfo.username) == null ? void 0 : _a.toLowerCase()) || "",
        password: (threeLoginInfo == null ? void 0 : threeLoginInfo.password) || ""
      });
      setCurPsdLevel(checkPasswordStrength((threeLoginInfo == null ? void 0 : threeLoginInfo.password) || ""));
    }
  }, [openForEditInfoByThree, threeLoginInfo]);
  const submit = async (values2) => {
    const params = {
      ...threeLoginInfo,
      ...values2
    };
    setThreeLoginInfo(params);
    setOpenForEditInfoByThree(false);
    setOpenForInfoPreviewByThree(true);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        zIndex: 1e4,
        isOpen: openForEditInfoByThree,
        closeByClickOut: false,
        onClose: (e2) => {
          e2 && e2.stopPropagation();
          setOpenForEditInfoByThree(false);
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$s.editInfoByThree, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$s.titleBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$s.titleContent, children: trans("Change account and password") }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: comCss.tip1, children: trans("Congratulations on successful registration!") }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: comCss.tip2, children: [
              trans(
                "The system has automatically generated the following account number and password for you. You can copy and save the text or pictures."
              ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
                className: comCss.iptTip, children: trans(
                  "And do not disclose it to others to avoid causing losses!"
                )
              })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              onClick: (e2) => {
                e2.stopPropagation();
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
                Form3,
                {
                  form,
                  initialValues: {
                    username: "",
                    password: ""
                  },
                  onFinish: (values2) => submit(values2),
                  onFinishFailed: ({ values: values2, errorFields, outOfDate }) => {
                    console.log("Failed:", values2, errorFields, outOfDate);
                  },
                  onValuesChange: (changedValues, allValues) => {
                    if (changedValues.username) {
                      form.setFieldsValue({
                        username: changedValues.username.toLowerCase()
                      });
                    }
                    setCurPsdLevel(checkPasswordStrength(allValues.password));
                  },
                  children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "username",
                      className: css$s.noPaddingBottomBox,
                      defaultShowError: true,
                      rules: [
                        { required: true, message: trans("请输入用户名") },
                        {
                          validator: (rule, value2) => {
                            const error2 = checkInputUserName(value2);
                            if (!error2) {
                              return Promise.resolve();
                            }
                            return Promise.reject(error2);
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          placeholder: trans("用户名"),
                          clearable: true,
                          focusBorder: true,
                          required: true,
                          className: css$s.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(UserFullIcon, { className: css$s.img1 })
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Form3.Field,
                    {
                      name: "password",
                      className: css$s.noPaddingBottomBox,
                      defaultShowError: true,
                      rules: [
                        { required: true, message: trans("请输入密码") },
                        {
                          validator: (rule, value2) => {
                            const error2 = checkInputUserPwd(value2);
                            if (!error2) {
                              return Promise.resolve();
                            }
                            return Promise.reject(error2);
                          }
                        }
                      ],
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Input,
                        {
                          type: "password",
                          placeholder: trans("密码"),
                          clearable: true,
                          focusBorder: true,
                          required: true,
                          className: css$s.loginInput,
                          prefix: /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordFullIcon, { className: css$s.img1 })
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    className: css$s.strength, children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$s.thLabel, children: trans("力量") }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        className: joinClass(
                          css$s.strengthItem,
                          curPsdLevel >= 1 ? curLevelClass : ""
                        )
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        className: joinClass(
                          css$s.strengthItem,
                          curPsdLevel >= 2 ? curLevelClass : ""
                        )
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        className: joinClass(
                          css$s.strengthItem,
                          curPsdLevel >= 3 ? curLevelClass : ""
                        )
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "div",
                      {
                        className: joinClass(
                          css$s.strengthItem,
                          curPsdLevel >= 4 ? curLevelClass : ""
                        )
                      }
                    )
                    ]
                  })
                  ]
                }
              )
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: comCss.btnsBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: joinClass(comCss.btnItem1), onClick: () => {
                setOpenForEditInfoByThree(false);
                setOpenForInfoPreviewByThree(true);
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: trans("Cancelar modificação") })
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: comCss.btnItem2, onClick: () => {
                form.submit();
              }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: comCss.conSpan, children: trans("Confirm modification") })
            })
            ]
          })
          ]
        })
      }
    )
  });
};
const svg_theme_fill_color$s = "_svg_theme_fill_color_a4hlu_3";
const drakFont$1 = "_drakFont_a4hlu_55";
const sliderBox = "_sliderBox_a4hlu_55";
const obBox = "_obBox_a4hlu_55";
const obTitle = "_obTitle_a4hlu_55";
const containerBox = "_containerBox_a4hlu_55";
const toolsBox = "_toolsBox_a4hlu_55";
const toolItemBox = "_toolItemBox_a4hlu_55";
const gameTabsBoxs = "_gameTabsBoxs_a4hlu_55";
const gameTabsTitle = "_gameTabsTitle_a4hlu_55";
const lightBg$1 = "_lightBg_a4hlu_119";
const obLine = "_obLine_a4hlu_119";
const lightFont$1 = "_lightFont_a4hlu_189";
const boxShow = "_boxShow_a4hlu_271";
const moveDown = "_moveDown_a4hlu_275";
const gameTabsBox = "_gameTabsBox_a4hlu_55";
const music_records = "_music_records_a4hlu_374";
const music_box$1 = "_music_box_a4hlu_377";
const operation$1 = "_operation_a4hlu_382";
const music_img = "_music_img_a4hlu_395";
const pre_next = "_pre_next_a4hlu_466";
const music_name$1 = "_music_name_a4hlu_470";
const music_menu = "_music_menu_a4hlu_501";
const star_num = "_star_num_a4hlu_504";
const records = "_records_a4hlu_628";
const w80 = "_w80_a4hlu_774";
const select = "_select_a4hlu_906";
const iconImgs = "_iconImgs_a4hlu_938";
const gameTabItem = "_gameTabItem_a4hlu_942";
const bgImg = "_bgImg_a4hlu_1256";
const iconImg = "_iconImg_a4hlu_938";
const iconImgSelect = "_iconImgSelect_a4hlu_1392";
const iconImgSelectThot = "_iconImgSelectThot_a4hlu_1398";
const gameBg = "_gameBg_a4hlu_1461";
const infoBtnItem = "_infoBtnItem_a4hlu_1473";
const tips$1 = "_tips_a4hlu_1489";
const agent = "_agent_a4hlu_1616";
const title$4 = "_title_a4hlu_1637";
const line$1 = "_line_a4hlu_1650";
const tool_line_t = "_tool_line_t_a4hlu_1735";
const tool_left_i = "_tool_left_i_a4hlu_1746";
const active$5 = "_active_a4hlu_1825";
const empty = "_empty_a4hlu_1828";
const obImg = "_obImg_a4hlu_1866";
const obText = "_obText_a4hlu_1870";
const css$r = {
  svg_theme_fill_color: svg_theme_fill_color$s,
  drakFont: drakFont$1,
  sliderBox,
  obBox,
  obTitle,
  containerBox,
  toolsBox,
  toolItemBox,
  gameTabsBoxs,
  gameTabsTitle,
  lightBg: lightBg$1,
  obLine,
  lightFont: lightFont$1,
  boxShow,
  moveDown,
  gameTabsBox,
  music_records,
  music_box: music_box$1,
  operation: operation$1,
  music_img,
  pre_next,
  music_name: music_name$1,
  music_menu,
  star_num,
  records,
  w80,
  select,
  iconImgs,
  gameTabItem,
  bgImg,
  iconImg,
  iconImgSelect,
  iconImgSelectThot,
  gameBg,
  infoBtnItem,
  tips: tips$1,
  agent,
  title: title$4,
  line: line$1,
  tool_line_t,
  tool_left_i,
  active: active$5,
  empty,
  obImg,
  obText
};
const svg_theme_fill_color$r = "_svg_theme_fill_color_1cpts_3";
const language_selector$1 = "_language_selector_1cpts_55";
const item$3 = "_item_1cpts_93";
const active$4 = "_active_1cpts_103";
const pcCss = {
  svg_theme_fill_color: svg_theme_fill_color$r,
  language_selector: language_selector$1,
  item: item$3,
  active: active$4
};
const svg_theme_fill_color$q = "_svg_theme_fill_color_18ms0_3";
const language_selector = "_language_selector_18ms0_55";
const item$2 = "_item_18ms0_151";
const active$3 = "_active_18ms0_212";
const language_selector_right = "_language_selector_right_18ms0_302";
const h5Css = {
  svg_theme_fill_color: svg_theme_fill_color$q,
  language_selector,
  item: item$2,
  active: active$3,
  language_selector_right
};
const isH5 = getWebType();
const css$q = isH5 ? h5Css : pcCss;
const isNested = document.documentElement.getAttribute("nested") === "1";
const Language = ({
  isOpen = false,
  position: position2 = "bottom",
  hideModel,
  element,
  elementId
}) => {
  const { language, setLanguage } = useUserInfoStore();
  const selectorRef = reactExports.useRef();
  const [isShow, setIsShow] = reactExports.useState(isOpen);
  const [selectorPosition, setSelectorPosition] = reactExports.useState({});
  const languageRef = reactExports.useRef();
  const setPosition = () => {
    if (elementId) {
      languageRef.current = document.getElementById(elementId);
    }
    if (element == null ? void 0 : element.current) {
      languageRef.current = element.current;
    }
    if (!languageRef.current || !isOpen)
      return;
    const rect = languageRef.current.getBoundingClientRect();
    if (position2 === "bottom") {
      let leftMore = 0;
      if (selectorRef.current) {
        leftMore = (rect.width + selectorRef.current.clientWidth) / 2 - selectorRef.current.clientWidth;
      }
      setSelectorPosition({
        top: "".concat(rect.bottom + 5, "px"),
        left: "".concat(rect.left + leftMore, "px")
      });
    }
    if (position2 === "right") {
      let topMore = -8;
      if (selectorRef.current) {
        topMore = (languageRef.current.getBoundingClientRect().height + selectorRef.current.clientHeight) / 2 - selectorRef.current.clientHeight;
      }
      const p2 = {
        top: "".concat(rect.top + topMore, "px")
      };
      if (isNested) {
        p2.left = "calc(".concat(rect.right, "px + ").concat(toPXBack(16), ")");
      }
      setSelectorPosition(p2);
    }
    setIsShow(true);
  };
  useClickAway(() => {
    hideModel();
  }, [languageRef]);
  reactExports.useEffect(() => {
    let timeout2 = null;
    let controller = null;
    if (!isOpen) {
      setIsShow(false);
    } else {
      setPosition();
      if (controller) {
        controller.abort();
      }
      controller = new AbortController();
      window.addEventListener(
        "resize",
        () => {
          setIsShow(false);
          clearTimeout(timeout2);
          timeout2 = setTimeout(() => {
            setPosition();
          }, 300);
        },
        { signal: controller.signal }
      );
    }
    return () => {
      if (controller) {
        controller.abort();
        controller = null;
      }
      if (timeout2) {
        clearTimeout(timeout2);
        timeout2 = null;
      }
    };
  }, [isOpen]);
  return reactDomExports.createPortal(
    isShow && /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        ref: selectorRef,
        className: "".concat(css$q.language_selector, " ").concat(css$q["language_selector_" + position2]),
        style: {
          ...selectorPosition
        },
        children: languageOptions.map((item2) => /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            onClick: () => {
              setLanguage(item2.value);
              hideModel();
            },
            className: "".concat(css$q.item, " ").concat(language === item2.value && css$q.active),
            children: item2.label
          },
          item2.value
        ))
      }
    ),
    document.body
  );
};
const svg_theme_fill_color$p = "_svg_theme_fill_color_1r0jq_3";
const lineBox = "_lineBox_1r0jq_55";
const lineItem = "_lineItem_1r0jq_153";
const active$2 = "_active_1r0jq_217";
const icon = "_icon_1r0jq_314";
const lineChIcon = "_lineChIcon_1r0jq_319";
const css$p = {
  svg_theme_fill_color: svg_theme_fill_color$p,
  lineBox,
  lineItem,
  active: active$2,
  icon,
  lineChIcon
};
const LineDetection = ({ isOpen, offsetTop }) => {
  const { t: t2, i18n } = useTranslation();
  const { theme, isShowSliderBox } = useUserInfoStore();
  const [lineArr, setLineArr] = reactExports.useState([]);
  const [curIndex, setCurIndex] = reactExports.useState(0);
  reactExports.useEffect(() => {
    initLine();
  }, []);
  useClickAway(() => {
    useUserInfoStore.setState({ openForLine: false });
  }, []);
  const initLine = () => {
    var _a;
    const curArr = [
      // PING(SERVIDORES)
      { url: "https://www.google.com/", time: getRandomInt(14, 80) },
      { url: 'https://www.baidu.com/', time: getRandomInt(19, 90) },
      { url: 'https://www.baidu.com/', time: getRandomInt(30, 190) },
      { url: 'https://www.baidu.com/', time: getRandomInt(40, 200) },
    ];
    curArr.sort((a, b2) => a.time - b2.time);
    setLineArr(curArr);
    const curTime = (_a = curArr[curIndex]) == null ? void 0 : _a.time;
    useUserInfoStore.setState({ curLineTime: curTime });
  };
  const clickLine = (item2, index2) => {
    setCurIndex(index2);
    useUserInfoStore.setState({ openForLine: false });
  };
  if (!isOpen || !isShowSliderBox)
    return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$p.lineBox, style: { bottom: "".concat(offsetTop, "px") }, children: lineArr.map((item2, index2) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: joinClass(css$p.lineItem, css$p[getLineClass(item2.time)], index2 === curIndex ? css$p.active : ""), onClick: () => {
          clickLine(item2, index2);
        }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$p.lineItemR, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "".concat(css$p.icon, " ").concat(lineCss[getLineClass(item2.time)]), children: /* @__PURE__ */ jsxRuntimeExports.jsx(LinhaIcon, { className: lineCss.line }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
            children: [
              " ",
              t2("线路"),
              " ",
              index2 + 1,
              " "
            ]
          })
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$p.lineItemL, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
            children: [
              " ",
              item2.time,
              "MS "
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$p.lineChIcon, children: index2 === curIndex ? /* @__PURE__ */ jsxRuntimeExports.jsx(LinhaSelectIcon, {}) : "" })
          ]
        })
        ]
      }, index2);
    })
  });
};
const svg_theme_fill_color$o = "_svg_theme_fill_color_kb0qb_3";
const music_box = "_music_box_kb0qb_55";
const container = "_container_kb0qb_148";
const close_img = "_close_img_kb0qb_217";
const title$3 = "_title_kb0qb_230";
const box = "_box_kb0qb_237";
const volume = "_volume_kb0qb_309";
const volIcon = "_volIcon_kb0qb_317";
const audio_box = "_audio_box_kb0qb_325";
const audio_title = "_audio_title_kb0qb_329";
const music_list = "_music_list_kb0qb_338";
const header = "_header_kb0qb_341";
const tag = "_tag_kb0qb_386";
const active$1 = "_active_kb0qb_394";
const body = "_body_kb0qb_489";
const loadMore = "_loadMore_kb0qb_556";
const music_name = "_music_name_kb0qb_567";
const item$1 = "_item_kb0qb_633";
const left$3 = "_left_kb0qb_677";
const order = "_order_kb0qb_693";
const size = "_size_kb0qb_754";
const right$2 = "_right_kb0qb_803";
const img$3 = "_img_kb0qb_810";
const starActive = "_starActive_kb0qb_815";
const deleteIcon = "_deleteIcon_kb0qb_956";
const progress = "_progress_kb0qb_963";
const point = "_point_kb0qb_1112";
const progress_small = "_progress_small_kb0qb_1183";
const audio = "_audio_kb0qb_325";
const my_audio = "_my_audio_kb0qb_1204";
const time = "_time_kb0qb_1210";
const operation = "_operation_kb0qb_1218";
const column = "_column_kb0qb_1230";
const model = "_model_kb0qb_1347";
const btn_box = "_btn_box_kb0qb_1353";
const css$o = {
  svg_theme_fill_color: svg_theme_fill_color$o,
  music_box,
  container,
  close_img,
  title: title$3,
  box,
  volume,
  volIcon,
  audio_box,
  audio_title,
  music_list,
  header,
  tag,
  active: active$1,
  body,
  loadMore,
  music_name,
  item: item$1,
  left: left$3,
  order,
  size,
  right: right$2,
  img: img$3,
  starActive,
  deleteIcon,
  progress,
  point,
  progress_small,
  audio,
  my_audio,
  time,
  operation,
  column,
  model,
  btn_box
};
const isPC$1 = document.documentElement.getAttribute("nested") === "1";
const Progress$1 = ({ defaultProgress = 0, onRef, onProgressChange, onOperationChange, size: size2 = "", ...props }) => {
  const [progress2, setProgress] = reactExports.useState(defaultProgress);
  const progressEl = reactExports.useRef();
  const onPointDrag = (e2) => {
    var _a, _b;
    const clientX = e2.clientX || ((_b = (_a = e2.touches) == null ? void 0 : _a[0]) == null ? void 0 : _b.clientX);
    if (clientX) {
      let dragWidth = (clientX - progressEl.current.getBoundingClientRect().left) / progressEl.current.clientWidth * 100;
      if (dragWidth < 0) {
        dragWidth = 0;
      }
      if (dragWidth > 100) {
        dragWidth = 100;
      }
      setProgress(dragWidth);
      onOperationChange == null ? void 0 : onOperationChange(dragWidth);
    }
  };
  const onPointDragEnd = () => {
    document.ontouchmove = null;
    document.ontouchend = null;
    document.onmousemove = null;
    document.onmouseup = null;
  };
  const onPointDragStart = () => {
    if (isPC$1) {
      document.onmousemove = onPointDrag;
      document.onmouseup = onPointDragEnd;
    } else {
      document.ontouchmove = onPointDrag;
      document.ontouchend = onPointDragEnd;
    }
  };
  const onProgressClick = (e2) => {
    const dragWidth = (e2.clientX - progressEl.current.getBoundingClientRect().left) / progressEl.current.clientWidth * 100;
    setProgress(dragWidth);
    onOperationChange == null ? void 0 : onOperationChange(dragWidth);
  };
  reactExports.useEffect(() => {
    onProgressChange == null ? void 0 : onProgressChange(progress2);
  }, [progress2]);
  reactExports.useImperativeHandle(onRef, () => ({
    setProgress
  }));
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    ref: progressEl, className: "".concat(css$o.progress, " ").concat(size2 ? css$o["progress_" + size2] : ""), ...props, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: css$o.left,
        style: { width: "".concat(progress2, "%") },
        onClick: onProgressClick
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: css$o.right,
        style: { width: "calc(100% - ".concat(progress2, "%)") },
        onClick: onProgressClick
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: css$o.point,
        onMouseDown: onPointDragStart,
        onTouchStart: onPointDragStart,
        style: { left: "".concat(progress2, "%") }
      }
    )
    ]
  });
};
const Audio = () => {
  const { t: t2, i18n } = useTranslation();
  const {
    next: next2,
    pre,
    currentTime,
    totalTime,
    setCurrentTime,
    paused,
    pause,
    play,
    isLoading,
    collectList,
    model: model2,
    setModel
  } = useMusicStore();
  const volumeProgress = reactExports.createRef();
  reactExports.useEffect(() => {
    if ((currentTime == null ? void 0 : currentTime.value) === 0) {
      volumeProgress.current.setProgress(0);
    } else {
      volumeProgress.current.setProgress(
        ((currentTime == null ? void 0 : currentTime.value) || 0) / ((totalTime == null ? void 0 : totalTime.value) || 0) * 100
      );
    }
  }, [currentTime, totalTime]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$o.audio, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$o.my_audio, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.time, children: isLoading ? "loading" : currentTime.label }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Progress$1,
        {
          onRef: volumeProgress,
          onOperationChange: (c2) => setCurrentTime(c2),
          size: "small"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.time, children: totalTime.label })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$o.operation, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "".concat(css$o.column, " ").concat(css$o.model), onClick: () => {
          setModel();
        }, children: [
          model2 === 1 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioLoopIcon, {}) : model2 === 2 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioRandomIcon, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AudioOneceIcon, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
            children: [
              model2 === 1 ? t2("循环") : model2 === 2 ? t2("随机") : t2("重复"),
              "  "
            ]
          })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          className: css$o.btn_box,
          style: { transform: "scale(0.9)" },
          onClick: pre,
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPreIcon, {})
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          className: css$o.btn_box,
          onClick: () => paused ? play() : pause(),
          children: paused ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPlayerIcon, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPausedIcon, {})
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          className: css$o.btn_box,
          style: { transform: "scale(0.9)" },
          onClick: next2,
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioNextIcon, {})
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$o.column, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: collectList.length }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("转入") })
        ]
      })
      ]
    })
    ]
  });
};
const isPC = document.documentElement.getAttribute("nested") === "1";
const Music = ({ isOpen = false, setIsOpen }) => {
  const { t: t2, i18n } = useTranslation();
  const {
    initMusicStore,
    volume: volume2,
    setVolume,
    setNoVolume,
    musicList,
    current,
    changePlay,
    collectList,
    addCollect,
    removeCollect,
    showTag,
    setShowTag,
    loadMore: loadMore2,
    loadFilter
  } = useMusicStore();
  const dataRef = reactExports.useRef();
  const loadMoreRef = reactExports.useRef();
  reactExports.useEffect(() => {
    initMusicStore();
  }, []);
  const onScroll = () => {
    if (dataRef.current && loadMoreRef.current) {
      const dr = dataRef.current.getBoundingClientRect();
      const lr = loadMoreRef.current.getBoundingClientRect();
      if (lr.bottom - dr.bottom <= 50) {
        loadMore2();
      }
    }
  };
  const VolProgress = reactExports.useRef();
  const handleVol = () => {
    const music_loc = JSON.parse(localStorage.getItem("music_o"));
    let volNum = music_loc.preVolume || 100;
    volume2 > 0 ? setNoVolume() : setVolume(volNum);
    VolProgress.current.setProgress(volume2 === 0 ? volNum : 0);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
    isOpen, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$o.music_box, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          className: css$o.close_img,
          onClick: () => {
            setIsOpen(false);
          },
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInMineIcon, {})
        }
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$o.container, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.title, children: t2("音乐") }),
          isPC && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "".concat(css$o.box, " ").concat(css$o.volume), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("音乐") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
              Progress$1,
              {
                defaultProgress: volume2,
                onProgressChange: (v2) => setVolume(v2),
                onRef: VolProgress
              }
            ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              onClick: () => {
                handleVol();
              }, className: css$o.volIcon, children: volume2 > 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioVolumIcon, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AudioNoVolumIcon, {})
            })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "".concat(css$o.box, " ").concat(css$o.audio_box), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.audio_title, children: (current == null ? void 0 : current.music_name) || t2("没有音乐") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Audio, {})
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "".concat(css$o.box, " ").concat(css$o.music_list), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$o.header, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: "".concat(css$o.tag, " ").concat(showTag === "hole" && css$o.active),
                  onClick: () => setShowTag("hole"),
                  children: t2("音乐系统")
                }
              ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: "".concat(css$o.tag, " ").concat(showTag === "collect" && css$o.active),
                  onClick: () => setShowTag("collect"),
                  children: t2("我的歌曲")
                }
              )
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              ref: dataRef, className: css$o.body, onScroll, children: [
                (showTag === "hole" ? musicList : collectList).map((item2, i) => {
                  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                    "div",
                    {
                      className: "".concat(css$o.item, " ").concat(current.music_name === item2.music_name && css$o.active),
                      children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                        className: css$o.left, onClick: () => changePlay(item2), children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.order, children: current.music_name === item2.music_name ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioMusicIcon, {}) : i + 1 }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.music_name, children: item2.music_name }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$o.size, children: item2.parseSize })
                        ]
                      }),
                        showTag === "hole" ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: css$o.right,
                            onClick: () => {
                              collectList.find((c2) => c2.id === item2.id) ? removeCollect(item2) : addCollect(item2);
                            },
                            children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioStarIcon, { className: "".concat(css$o.img, " ").concat(collectList.find((c2) => c2.id === item2.id) ? css$o.starActive : css$o.star) })
                          }
                        ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: "".concat(css$o.right, " ").concat(css$o.deleteIcon),
                            onClick: () => removeCollect(item2),
                            children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioDeleteIcon, {})
                          }
                        )
                      ]
                    },
                    item2.id
                  );
                }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    ref: loadMoreRef,
                    className: css$o.loadMore,
                    style: {
                      display: loadFilter.isLoading ? "block" : "none"
                    },
                    children: "loading"
                  }
                )
              ]
            })
            ]
          })
        ]
      })
      ]
    })
  });
};
const svg_theme_fill_color$n = "_svg_theme_fill_color_v0goq_3";
const drakFont = "_drakFont_v0goq_55";
const threeLoginBox = "_threeLoginBox_v0goq_55";
const title$2 = "_title_v0goq_55";
const lightBg = "_lightBg_v0goq_119";
const loginBtn$1 = "_loginBtn_v0goq_119";
const lightFont = "_lightFont_v0goq_189";
const logo = "_logo_v0goq_284";
const css$n = {
  svg_theme_fill_color: svg_theme_fill_color$n,
  drakFont,
  threeLoginBox,
  title: title$2,
  lightBg,
  loginBtn: loginBtn$1,
  lightFont,
  logo
};
const ThreeLoginBySliderBox = () => {
  const {
    google: [onClickGoogleLogin, isColseGoogleLogin],
    facebook: [onClickFaceBookLogin, isCloseFacebookLogin]
  } = ThreeLogin({ isHook: true });
  const { info: info2 } = useUserInfoStore();
  if (isColseGoogleLogin && isCloseFacebookLogin || info2)
    return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$n.threeLoginBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$n.title, children: trans("快速登录") }),
      !isColseGoogleLogin && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$n.loginBtn, onClick: async () => {
          await onClickGoogleLogin();
        }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$n.logo, src: "/home/loginreg/google_icon.webp" }),
          trans("谷歌登录")
        ]
      }),
      !isCloseFacebookLogin && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$n.loginBtn, onClick: async () => {
          await onClickFaceBookLogin();
        }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$n.logo, src: "/home/loginreg/facebook_icon.webp" }),
          trans("Facebook Login")
        ]
      })
    ]
  });
};
const SliderBox = () => {
  const location2 = useLocation();
  const state2 = location2.state || {};
  const { selectType, games, gameOpenMap, gameSortMap } = useGameStore();
  const navigate = useNavigate();
  const {
    isShowSliderBox,
    updateSliderBoxStatus,
    token: token2,
    appUrl,
    theme,
    openForLine,
    curLineTime,
    missaoList,
    getMissaoList,
    websetConfig,
    availableList,
    getAvailableList,
    getMissaoRule,
    fetchRebateConfig,
    missaoSwitch,
    rebateStatus,
    getLanguage
  } = useUserInfoStore();
  const [lineTop, setLineTop] = reactExports.useState(0);
  const toolBoxRef = reactExports.useRef();
  const {
    next: next2,
    pre,
    paused,
    pause,
    play,
    current,
    model: model2,
    setModel,
    collectList,
    player_switch
  } = useMusicStore();
  const { websetConfig: websetConfigByHook } = useWebsetConfig();
  const [isMusicOpen, setIsMusicOpen] = reactExports.useState(false);
  const [threeLoginList, setThreeLoginList] = reactExports.useState([]);
  const [threeLoginShow, setThreeLoginShow] = reactExports.useState(false);
  const [isShowLanguage, setIsShowLanguage] = reactExports.useState(false);
  const missaoNum = missaoList.filter((el) => el.state === 502).length;
  const availableNum = availableList.d.length;
  GameTabs.sort((a, b2) => {
    return (a.sort || gameSortMap[a.type] || 0) - (b2.sort || gameSortMap[b2.type] || 0);
  });
  reactExports.useEffect(() => {
    if (websetConfig) {
      GameTabs.map((item2) => {
        if (["player"].includes(item2 == null ? void 0 : item2.switchType)) {
          item2.switch = websetConfig["".concat(item2 == null ? void 0 : item2.switchType, "_switch")] === "1";
        } else {
          item2.switch = true;
        }
      });
      ToolTabs.map((item2) => {
        if (["netsignal", "lang"].includes(item2 == null ? void 0 : item2.switchType)) {
          item2.switch = websetConfig["".concat(item2 == null ? void 0 : item2.switchType, "_switch")] === "1";
        } else {
          item2.switch = true;
        }
      });
      const arr = websetConfig["official_channels"] && JSON.parse(websetConfig["official_channels"]) || [];
      setThreeLoginShow(!!arr.length);
      setThreeLoginList(arr.sort((a, b2) => a.sort - b2.sort));
    }
  }, [websetConfig]);
  reactExports.useEffect(() => {
    fetchRebateConfig();
    if (websetConfig && missaoSwitch) {
      getMissaoList();
    }
  }, [websetConfig, token2, missaoSwitch]);
  reactExports.useEffect(() => {
    if (token2) {
      getAvailableList({ state: "502" });
    } else {
      useUserInfoStore.setState({
        availableList: {
          d: [],
          agg: "0"
        }
      });
    }
  }, [token2]);
  reactExports.useEffect(() => {
    getMissaoRule();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      className: joinClass(
        css$r.sliderBox,
        !websetConfigByHook.isHiddenDownloadApp ? css$r.moveDown : "",
        isShowSliderBox ? css$r.boxShow : ""
      ),
      onClick: (e2) => {
        e2.stopPropagation();
        updateSliderBoxStatus(false);
      },
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          onScroll: () => {
            useUserInfoStore.setState({ openForLine: false });
            setIsShowLanguage(false);
          },
          className: joinClass(
            css$r.containerBox,
            isShowSliderBox ? css$r.boxShow : ""
          ),
          onClick: (e2) => {
            e2.stopPropagation();
          },
          children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: css$r.gameTabsBox, children: sortGameTabs(GameTabs, games).map((tab, idx) => {
              if (!gameOpenMap[tab.type] && gameTypeNames.indexOf(tab.type) > -1)
                return null;
              if (!games.find((item2) => item2.name === tab.type) && tab.adminConfigShow === true)
                return null;
              let isSelect = false;
              if (state2.type) {
                isSelect = tab.type === state2.type;
              } else {
                isSelect = selectType === tab.type;
              }
              const IconsCom = tab.IconsCom || "";
              const ActiveIcons = tab.ActiveIcon || "";
              if (!tab.switch) {
                return;
              }
              if (tab.type === "music") {
                return player_switch ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    className: "".concat(css$r.records, " ").concat(css$r.music_records),
                    children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: css$r.music_box, children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                        className: css$r.operation, children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: "".concat(css$r.music_img, " ").concat(css$r.pre_next),
                            onClick: pre,
                            children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPreIcon, {})
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: css$r.music_img,
                            onClick: () => paused ? play() : pause(),
                            children: paused ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPlayerIcon, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AudioPausedIcon, {})
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: "".concat(css$r.music_img, " ").concat(css$r.pre_next),
                            onClick: next2,
                            children: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioNextIcon, {})
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsx(
                          "div",
                          {
                            className: css$r.music_img,
                            onClick: () => {
                              setModel();
                            },
                            children: model2 === 1 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioLoopIcon, {}) : model2 === 2 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AudioRandomIcon, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AudioOneceIcon, {})
                          }
                        ),
                          /* @__PURE__ */ jsxRuntimeExports.jsxs(
                          "div",
                          {
                            className: "".concat(css$r.music_img, " ").concat(css$r.music_menu),
                            onClick: () => setIsMusicOpen(true),
                            children: [
                                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$r.star_num, children: collectList.length }),
                                /* @__PURE__ */ jsxRuntimeExports.jsx(AudioMenuIcon, {})
                            ]
                          }
                        )
                        ]
                      }),
                        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$r.music_name, children: (current == null ? void 0 : current.music_name) || instance.t("没有音乐") })
                      ]
                    })
                  },
                  "music_records"
                ) : null;
              }
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  className: joinClass(
                    ["records", "agent"].includes(tab.action) ? css$r.records : css$r.gameTabItem,
                    isSelect ? css$r.select : ""
                  ),
                  style: {
                    paddingTop: tab.type === "真人" ? "0" : ""
                  },
                  onClick: () => {
                    if (tab.action === "home") {
                      navigate("/");
                      useGameStore.setState({ selectType: tab.type });
                      setTimeout(() => {
                        scrollToPlatromItem(GameTabs, tab.type);
                        window.clickTabing = true;
                        setTimeout(() => {
                          window.clickTabing = false;
                        }, 100);
                      }, 30);
                    }
                    if (tab.url) {
                      navigate(tab.url);
                    }
                    updateSliderBoxStatus(false);
                  },
                  children: [
                    isSelect && !!ActiveIcons ? /* @__PURE__ */ jsxRuntimeExports.jsx(ActiveIcons, { className: joinClass(css$r.iconImg) }) : !!IconsCom ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                      IconsCom,
                      {
                        className: joinClass(css$r.iconImgs, css$r.bgImg),
                        isSelect: true
                      }
                    ) : "",
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "span",
                      {
                        className: joinClass(
                          ["真人", "投注记录", "代理"].includes(tab.type) ? css$r.w80 : ""
                        ),
                        children: instance.t(tab.text)
                      }
                    )
                  ]
                },
                idx
              );
            })
          }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$r.gameTabsBoxs, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$r.gameTabsTitle, children: trans("优惠") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: css$r.gameBg, children: InfoTabs.map((btnItem3, idx) => {
                if (btnItem3.type === "missao" && !missaoList.length) {
                  return null;
                }
                if (btnItem3.type === "rebate" && !rebateStatus) {
                  return null;
                }
                return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "div",
                  {
                    className: joinClass(css$r.infoBtnItem, css$r[btnItem3.cssName]),
                    onClick: () => {
                      if ((btnItem3 == null ? void 0 : btnItem3.type) === "lxb") {
                        Message$1.info(instance.t("功能维护中"));
                      } else {
                        if (!token2) {
                          const meta = routesMaps[btnItem3.url] || {};
                          if (meta.auth) {
                            useUserInfoStore.setState({ openForLogin: true });
                          } else {
                            navigate(btnItem3.url);
                          }
                        } else {
                          navigate(btnItem3.url);
                        }
                      }
                      updateSliderBoxStatus(false);
                    },
                    children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: joinClass(css$r.title, css$r[btnItem3.cssName]), children: [
                        " ",
                        instance.t(btnItem3.text)
                      ]
                    }),
                        /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Image,
                      {
                        className: css$r.iconImg,
                        src: "/home/icons/new_".concat(btnItem3.icon)
                      }
                    ),
                      btnItem3.type === "missao" && missaoNum > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$r.tips, children: missaoNum }),
                      btnItem3.type === "bonus" && availableNum > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$r.tips, children: availableNum })
                    ]
                  },
                  idx
                );
              })
            })
            ]
          }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            ref: toolBoxRef, className: css$r.toolsBox, children: ToolTabs.map((tool, idx) => {
              var _a;
              if (tool.isHiden)
                return;
              if (!tool.switch) {
                return;
              }
              const IconsCom = tool.IconsCom || "";
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  id: tool.id,
                  className: joinClass(
                    css$r.toolItemBox,
                    css$r[getLineClass(curLineTime)]
                  ),
                  onClick: (e2) => {
                    if (!["line", "language"].includes(tool.path)) {
                      updateSliderBoxStatus(false);
                    }
                    if (tool.text === "Suporte") {
                      navigate("/message?service=1");
                    }
                    if (tool.path == "service") {
                      navigate("/message?service=1");
                    }
                    if (tool.path === "download") {
                      window.open(appUrl, "_blank");
                    }
                    if (tool.path === "line") {
                      const curtop = window.innerHeight - e2.target.getBoundingClientRect().bottom - 2;
                      setLineTop(curtop);
                      useUserInfoStore.setState({ openForLine: !openForLine });
                      setIsShowLanguage(false);
                    }
                    if (tool.path === "language") {
                      setIsShowLanguage(!isShowLanguage);
                      useUserInfoStore.setState({ openForLine: false });
                    }
                  },
                  children: [
                    tool.path === "line" ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                      className: lineCss[getLineClass(curLineTime)], children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsx(
                        IconsCom,
                        {
                          className: joinClass(css$r.iconImg, lineCss.line),
                          isSelect: true
                        }
                      ),
                        /* @__PURE__ */ jsxRuntimeExports.jsxs(
                        "div",
                        {
                          className: "".concat(css$r.tool_line_t, " ").concat(lineCss.tool_line_t),
                          children: [
                            " ",
                            curLineTime,
                            " MS"
                          ]
                        }
                      )
                      ]
                    }) : IconsCom ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                      IconsCom,
                      {
                        className: joinClass(css$r.iconImg),
                        isSelect: true
                      }
                    ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Image,
                      {
                        className: css$r.iconImg,
                        src: "/home/icons/".concat(tool[theme] || tool.icon)
                      }
                    ),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: instance.t(tool.text) }),
                    tool.path === "line" ? /* @__PURE__ */ jsxRuntimeExports.jsxs(
                      "span",
                      {
                        className: joinClass(
                          css$r.tool_left_i,
                          openForLine ? css$r.active : ""
                        ),
                        children: [
                          " ",
                            /* @__PURE__ */ jsxRuntimeExports.jsx(tool.rightIcon, {}),
                          " "
                        ]
                      }
                    ) : "",
                    tool.path === "language" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
                      children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: (_a = getLanguage()) == null ? void 0 : _a.label }),
                        /* @__PURE__ */ jsxRuntimeExports.jsxs(
                        "span",
                        {
                          className: joinClass(
                            css$r.tool_left_i,
                            isShowLanguage ? css$r.active : ""
                          ),
                          children: [
                            " ",
                              /* @__PURE__ */ jsxRuntimeExports.jsx(tool.rightIcon, {}),
                            " "
                          ]
                        }
                      )
                      ]
                    })
                  ]
                },
                idx
              );
            })
          }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$r.obBox, children: [
              threeLoginShow && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$r.obTitle, children: trans("官方频道") }),
              threeLoginList.map((item2, idx) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "div",
                  {
                    className: css$r.obLine,
                    onClick: () => {
                      window.open(item2.link, "_blank");
                    },
                    children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Image,
                      {
                        className: css$r.obImg,
                        src: item2.icon,
                        remote: true,
                        isGame: true
                      }
                    ),
                        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$r.obText, children: item2.name })
                    ]
                  },
                  idx + item2.id
                );
              })
            ]
          }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(ThreeLoginBySliderBox, {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$r.empty })
          ]
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(LineDetection, { isOpen: openForLine, offsetTop: lineTop }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        Language,
        {
          isOpen: isShowLanguage && isShowSliderBox,
          hideModel: () => {
            setIsShowLanguage(false);
          },
          elementId: "languageRef",
          position: "right"
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Music, { isOpen: isMusicOpen, setIsOpen: setIsMusicOpen })
      ]
    }
  );
};
const svg_theme_fill_color$m = "_svg_theme_fill_color_vsisg_3";
const loginBox$1 = "_loginBox_vsisg_55";
const clsoeBtn$2 = "_clsoeBtn_vsisg_131";
const titleBox = "_titleBox_vsisg_151";
const contentBox = "_contentBox_vsisg_192";
const scrollBox = "_scrollBox_vsisg_291";
const loginBtn = "_loginBtn_vsisg_395";
const css$m = {
  svg_theme_fill_color: svg_theme_fill_color$m,
  loginBox: loginBox$1,
  clsoeBtn: clsoeBtn$2,
  titleBox,
  contentBox,
  scrollBox,
  loginBtn
};
const Login = () => {
  const { openForXieYi, theme } = useUserInfoStore();
  if (!openForXieYi)
    return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      isOpen: openForXieYi,
      closeByClickOut: false,
      onClose: (e2) => {
        e2 && e2.stopPropagation();
        useUserInfoStore.setState({ openForXieYi: false });
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$m.loginBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$m.clsoeBtn, onClick: () => {
            useUserInfoStore.setState({ openForXieYi: false });
          }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, {})
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$m.titleBox, children: trans("用户协议") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$m.contentBox, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$m.scrollBox, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                "1. ",
                trans("条款1")
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                "2. ",
                trans("条款2")
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                "3. ",
                trans("条款3")
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                "4. ",
                trans("条款4")
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", {
              children: [
                "5. ",
                trans("条款5")
              ]
            })
            ]
          })
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$m.loginBtn, onClick: () => {
            useUserInfoStore.setState({ openForXieYi: false });
          }, children: trans("阅读并理解")
        })
        ]
      })
    }
  );
};
const svg_theme_fill_color$l = "_svg_theme_fill_color_2ybrw_3";
const loginBox = "_loginBox_2ybrw_55";
const clsoeBtn$1 = "_clsoeBtn_2ybrw_64";
const midImg = "_midImg_2ybrw_79";
const css$l = {
  svg_theme_fill_color: svg_theme_fill_color$l,
  loginBox,
  clsoeBtn: clsoeBtn$1,
  midImg
};
const AlertForOneSixSix = () => {
  const { alertFor166 } = useAlertStore();
  const fun = () => {
    if (window.jsBridge && window.jsBridge.postMessage) {
      try {
        window.jsBridge.postMessage("openWindow", JSON.stringify({ "url": hostname }));
      } catch (e2) {
        console.log(e2);
      }
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      isOpen: alertFor166,
      closeByClickOut: true,
      onClose: (e2) => {
        e2 && e2.stopPropagation();
        useAlertStore.setState({ alertFor166: false });
        fun();
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$l.loginBox, onClick: () => {
          fun();
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$l.midImg, src: "/home/166/act.webp" })
      })
    }
  );
};
const svg_theme_fill_color$k = "_svg_theme_fill_color_1t0u6_3";
const floatInHome = "_floatInHome_1t0u6_55";
const css$k = {
  svg_theme_fill_color: svg_theme_fill_color$k,
  floatInHome
};
const svg_theme_fill_color$j = "_svg_theme_fill_color_167kx_3";
const floatBox = "_floatBox_167kx_55";
const leftArrowBox = "_leftArrowBox_167kx_61";
const rightArrowBox = "_rightArrowBox_167kx_74";
const inBox = "_inBox_167kx_88";
const itemBox = "_itemBox_167kx_94";
const img$2 = "_img_167kx_100";
const close$3 = "_close_167kx_108";
const css$j = {
  svg_theme_fill_color: svg_theme_fill_color$j,
  floatBox,
  leftArrowBox,
  rightArrowBox,
  inBox,
  itemBox,
  img: img$2,
  close: close$3
};
const cacheState$2 = {
  timer: null
};
const FloatBox = ({ onClickToLink }) => {
  const closeIcon = {
    black: "/home/icons/reg_close.webp",
    blue: "/home/icons/reg_close.webp",
    whiteGreen: "/home/icons/whiteGreen_reg_close.webp",
    whiteRed: "/home/icons/whiteRed_reg_close.webp",
    whiteYellow: "/home/icons/whiteGreen_reg_close.webp",
    whitePink: "/home/icons/whiteGreen_reg_close.webp",
    whiteBlue: "/home/icons/whiteGreen_reg_close.webp",
    whitePurple: "/home/icons/whiteGreen_reg_close.webp",
    whiteBrown: "/home/icons/whiteGreen_reg_close.webp",
    whiteDarkGreen: "/home/icons/whiteRed_reg_close.webp"
  };
  const { theme } = useUserInfoStore();
  const location2 = useLocation();
  const state2 = useReactive({
    list: [],
    index: 0,
    isShow: true
  });
  const { float: float2 } = useFloatPopShareStore();
  reactExports.useEffect(() => {
    if (float2.length > 0) {
      const list22 = [];
      float2.forEach((item2) => {
        if (item2.state === 0)
          return;
        item2.portal = item2.portal || [];
        if (item2.portal.indexOf("h5") === -1)
          return;
        list22.push(item2);
      });
      list22.sort((a, b2) => a.sort - b2.sort);
      state2.list = list22;
    }
  }, [float2]);
  const clearTimer = reactExports.useCallback(() => {
    clearInterval(cacheState$2.timer);
  }, []);
  const startTimer = reactExports.useCallback(() => {
    if (state2.list.length > 0) {
      cacheState$2.timer = setInterval(() => {
        if (state2.index === state2.list.length - 1) {
          state2.index = 0;
        } else {
          state2.index = state2.index + 1;
        }
      }, 3.5 * 1e3);
    }
  }, []);
  reactExports.useEffect(() => {
    clearTimer();
    startTimer();
    return () => {
      clearTimer();
    };
  }, [state2.list]);
  const { list } = state2;
  const px = minPxChip() * 100.1 * state2.index * -1;
  if (state2.list.length === 0)
    return;
  if (!state2.isShow)
    return;
  if (location2.pathname !== "/")
    return;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$j.floatBox, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      style: { transform: "translateX(".concat(px, "px)") }, className: css$j.inBox, children: list.map((item2, idx) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$j.itemBox, onClick: () => {
            if (!item2.link)
              return;
            if (item2.link.indexOf("http") > -1) {
              window.open(item2.link);
              return;
            }
            onClickToLink(item2.link);
          }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: css$j.close,
              onClick: (e2) => {
                e2.stopPropagation();
                const list22 = JSON.parse(JSON.stringify(state2.list));
                list22.splice(idx, 1);
                state2.index = 0;
                state2.list = list22;
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: closeIcon[theme] || "/home/icons/reg_close.webp" })
            }
          ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { remote: true, isGame: true, className: css$j.img, src: item2.img })
          ]
        }, idx);
      })
    })
  });
};
const svg_theme_fill_color$i = "_svg_theme_fill_color_1jnke_3";
const LoginWheelDialog$1 = "_LoginWheelDialog_1jnke_55";
const hand = "_hand_1jnke_59";
const fade = "_fade_1jnke_1";
const has_progress_container = "_has_progress_container_1jnke_91";
const close_icon$4 = "_close_icon_1jnke_139";
const close_icon2 = "_close_icon2_1jnke_139";
const withdrawal_progress = "_withdrawal_progress_1jnke_151";
const withdrawal_progress_item = "_withdrawal_progress_item_1jnke_158";
const RS = "_RS_1jnke_186";
const css$i = {
  svg_theme_fill_color: svg_theme_fill_color$i,
  LoginWheelDialog: LoginWheelDialog$1,
  hand,
  fade,
  has_progress_container,
  close_icon: close_icon$4,
  close_icon2,
  withdrawal_progress,
  withdrawal_progress_item,
  RS
};
const useMeasureChildren = (count) => {
  const measureResults = [];
  for (let i = 0; i < count; ++i) {
    const [rect, setRect] = React.useState({});
    const [node2, setNode] = React.useState(null);
    const measureRef = React.useCallback((node22) => {
      if (node22 !== null) {
        setRect(node22.getBoundingClientRect());
        setNode(node22);
      }
    }, []);
    measureResults[i] = {
      node: node2,
      rect,
      measureRef
    };
  }
  return measureResults;
};
const getChildrenHeight = (measureResult) => measureResult.reduce((prev2, { rect }) => rect.height + prev2, 0);
const getFrontItemHeight = (measureResult, index2) => measureResult.reduce(
  (prev2, { rect }, idx) => idx <= index2 ? rect.height + prev2 : prev2,
  0
);
const defaultSpeed = 4;
const defaultFPS = 30;
const AutoScrollView = (props) => {
  const { children = [], className, height, speed, fps } = props;
  const measureResults = useMeasureChildren(children.length);
  React.useEffect(() => {
    let globalOffsetY = 0;
    let offsetY = Array.from({ length: children.length }).map(() => 0);
    const childrenHeight = getChildrenHeight(measureResults);
    let handle;
    if (height < childrenHeight) {
      handle = setInterval(() => {
        globalOffsetY -= 0.1 * (speed || defaultSpeed);
        if (globalOffsetY < -childrenHeight) {
          globalOffsetY += childrenHeight;
          offsetY = offsetY.map(() => 0);
        }
        measureResults && measureResults.forEach(({ node: node2 }, idx) => {
          if (node2) {
            if (globalOffsetY + offsetY[idx] <= -getFrontItemHeight(measureResults, idx)) {
              offsetY[idx] = childrenHeight;
            }
            node2.style.transform = "translateY(".concat(globalOffsetY + offsetY[idx], "px)");
          }
        });
      }, 1e3 / (fps || defaultFPS));
    }
    return () => {
      handle && clearInterval(handle);
    };
  }, [measureResults]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      className,
      style: { height: "".concat(height, "px"), overflowY: "hidden" },
      children: React.Children.map(children, (child, idx) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: measureResults[idx].measureRef, children: child });
      })
    }
  );
};
const svg_theme_fill_color$h = "_svg_theme_fill_color_11iok_3";
const FirstDialog$1 = "_FirstDialog_11iok_55";
const close_icon$3 = "_close_icon_11iok_94";
const css$h = {
  svg_theme_fill_color: svg_theme_fill_color$h,
  FirstDialog: FirstDialog$1,
  close_icon: close_icon$3
};
const svg_theme_fill_color$g = "_svg_theme_fill_color_1oigq_3";
const progress_box = "_progress_box_1oigq_55";
const css$g = {
  svg_theme_fill_color: svg_theme_fill_color$g,
  progress_box
};
const svg_theme_fill_color$f = "_svg_theme_fill_color_16v30_3";
const WithdrawDialog$1 = "_WithdrawDialog_16v30_55";
const close_icon$2 = "_close_icon_16v30_138";
const noWithdraw = "_noWithdraw_16v30_145";
const css$f = {
  svg_theme_fill_color: svg_theme_fill_color$f,
  WithdrawDialog: WithdrawDialog$1,
  close_icon: close_icon$2,
  noWithdraw
};
const svg_theme_fill_color$e = "_svg_theme_fill_color_10ssn_3";
const low_time = "_low_time_10ssn_55";
const css$e = {
  svg_theme_fill_color: svg_theme_fill_color$e,
  low_time
};
function convertToTwoDigits(number4) {
  return "".concat(number4 || 0).padStart(2, "0");
}
const CountDown = ({ labelColor }) => {
  const { token: token2, wheelInfo } = useUserInfoStore((state2) => state2);
  reactExports.useEffect(() => {
    if (wheelInfo == null ? void 0 : wheelInfo.expiration_at) {
      const count = wheelInfo.expiration_at * 1e3 - /* @__PURE__ */ new Date();
      setCd(count);
    }
  }, [wheelInfo]);
  const [cd, setCd] = reactExports.useState();
  const timer2 = reactExports.useRef(null);
  const dealData = () => {
    if (cd <= 0) {
      return clearInterval(timer2.current);
    }
    timer2.current = setInterval(() => {
      setCd((prevTime) => prevTime > 0 ? prevTime - 1e3 : 0);
    }, 1e3);
  };
  const timerStr = reactExports.useMemo(() => {
    const hours = convertToTwoDigits(Math.floor(cd / 60 / 60 / 1e3));
    const minutes = convertToTwoDigits(Math.floor(cd / 60 / 1e3 % 60));
    const seconds = convertToTwoDigits(Math.floor(cd / 1e3 % 60));
    return cd > 0 ? "".concat(hours, ":").concat(minutes, ":").concat(seconds) : "00:00:00";
  }, [cd]);
  reactExports.useEffect(() => {
    dealData();
    return () => {
      return clearInterval(timer2.current);
    };
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$e.low_time, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "text-line", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
        style: { color: labelColor }, children: [
          trans("倒计时"),
          "："
        ]
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: timerStr })
      ]
    })
  });
};
const svg_theme_fill_color$d = "_svg_theme_fill_color_ctn8a_3";
const button = "_button_ctn8a_55";
const css$d = {
  svg_theme_fill_color: svg_theme_fill_color$d,
  button
};
const Button = ({ children, className, onClick = () => {
} }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "button ".concat(css$d.button, " ").concat(className != null ? className : ""), onClick, children });
};
const svg_theme_fill_color$c = "_svg_theme_fill_color_qkugg_3";
const share_dialog = "_share_dialog_qkugg_55";
const css$c = {
  svg_theme_fill_color: svg_theme_fill_color$c,
  share_dialog
};
const ShareDialog = ({ event, children, ...props }) => {
  const { t: t2 } = useTranslation();
  const [state2, SetState] = reactExports.useState(false);
  const [shareUrl, setShareUlr] = reactExports.useState("");
  const [sendedList, setSendedList] = reactExports.useState([]);
  const { wheelInfo } = useUserInfoStore((state22) => state22);
  const { isApp } = useFlutterApp();
  const shareApp = [
    {
      icon: "/home/icons/facebook.webp",
      name: "Facebook",
      Scheme: "https://www.facebook.com/sharer/sharer.php?u=".concat(shareUrl)
    },
    {
      icon: "/home/icons/whatsapp.webp",
      name: "WhatsApp",
      Scheme: "https://wa.me/?text=".concat(shareUrl)
    },
    {
      icon: "/home/icons/telegram.webp",
      name: "Telegram",
      Scheme: "https://t.me/share/url?url=".concat(shareUrl, "&text=")
    },
    {
      icon: "/home/icons/twitter.webp",
      name: "X",
      Scheme: "https://twitter.com/intent/tweet?url=".concat(shareUrl)
    },
    {
      icon: "/home/icons/email_blue.webp",
      name: "Email",
      Scheme: "mailto:?subject=Your%20Subject&body=Your%20Message=".concat(shareUrl)
    },
    {
      icon: "/home/icons/copy_gray.webp",
      name: "Copy"
      // Scheme: `https://social-plugins.line.me/lineit/share?url=${shareUrl}`
    }
  ];
  const close2 = () => {
    Cache$1.set("shareDetail", "");
    setSendedList([]);
    SetState(false);
  };
  reactExports.useImperativeHandle(event, () => ({
    open: () => {
      getShareConfig();
      SetState(true);
    }
  }));
  const handleShare = (shareItem) => {
    if (shareItem.name === "Copy") {
      isApp ? sendMessage("onChatSystemMessage", "copy-".concat(shareUrl)) : clipboardExports.copy(shareUrl);
      Message$1.success(t2("复制成功"));
      return;
    }
    if (isApp) {
      sendMessage("onChatSystemMessage", "activity-".concat(shareItem.Scheme));
      return;
    }
    const shareEl = document.getElementById("share-".concat(shareItem.name));
    if (shareEl) {
      shareEl.click();
    }
  };
  const [telList, setTelList] = reactExports.useState([]);
  const getRandTel = () => {
    const intersect = new Set([...telList].filter((x) => !sendedList.includes(x)));
    const noSendTels = [...intersect];
    const sendNumber = noSendTels[Math.random() * noSendTels.length >>> 0];
    return [sendNumber, noSendTels];
  };
  const handleSend = (type4) => {
    const [curTel, noSendTels] = getRandTel();
    if (!curTel)
      return;
    const smsHref = getBrowser().isIos ? "sms:/open?addresses=".concat(noSendTels, "&body=").concat(shareUrl) : "sms:".concat(noSendTels, "?body=").concat(shareUrl);
    const whatsappHref = "https://wa.me/".concat(curTel);
    const shareEl = document.getElementById("share-tel-".concat(curTel));
    if (shareEl) {
      if (type4 === "whatsapp") {
        if (isApp) {
          sendMessage("onChatSystemMessage", "activity-".concat(whatsappHref));
        } else {
          shareEl.href = whatsappHref;
          shareEl.click();
        }
        setSendedList([...sendedList, curTel]);
      } else {
        if (isApp) {
          sendMessage("onChatSystemMessage", "activity-".concat(smsHref));
        } else {
          shareEl.href = smsHref;
          shareEl.click();
        }
        setSendedList([...sendedList, ...noSendTels]);
      }
    }
  };
  const getShareConfig = async () => {
    var _a, _b;
    if (wheelInfo == null ? void 0 : wheelInfo.username) {
      const shareConfig = Cache$1.get("shareDetail");
      if (shareConfig) {
        const url2 = "".concat(window.location.origin, "/?id=").concat((_a = shareConfig == null ? void 0 : shareConfig.link) == null ? void 0 : _a[0].code, "&currency=").concat(getMoneyUnit(), "&type=2");
        setShareUlr(url2);
        setTelList(shareConfig == null ? void 0 : shareConfig.phones);
      } else {
        const [res, err] = await getPromoTurntableShare();
        if (!err) {
          const url2 = "".concat(window.location.origin, "/?id=").concat((_b = res == null ? void 0 : res.link) == null ? void 0 : _b[0].code, "&currency=").concat(getMoneyUnit(), "&type=2");
          Cache$1.set("shareDetail", res);
          setShareUlr(url2);
          setTelList(res == null ? void 0 : res.phones);
        }
      }
    }
  };
  reactExports.useEffect(() => {
    window.onbeforeunload = function () {
      Cache$1.set("shareDetail", "");
    };
    return () => {
      window.onbeforeunload = null;
    };
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      isOpen: state2,
      background: "rgba(0,0,0,0.7)",
      closeByClickOut: false,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$c.share_dialog, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "Drawer", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            className: "close_icon", onClick: () => {
              close2();
            }, src: "/home/icons/close_gray.webp"
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "share_title", children: t2("邀请好友帮忙提款") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: "share-list", children: shareApp.map((item2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: "chat-app button", onClick: (e2) => {
                  e2.stopPropagation();
                  {
                    handleShare(item2);
                  }
                }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: item2.icon }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { className: "app-title", href: item2.Scheme, id: "share-".concat(item2.name), target: "_blank", children: item2.name })
                ]
              }, item2.name);
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "share_title_2", children: t2("向随机玩家发送帮助邀请") }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "tel_list", onClick: (e2) => {
              e2.stopPropagation();
            }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "gray-dialog" }),
              telList == null ? void 0 : telList.map((item2, index2) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsx("a", { id: "share-tel-".concat(item2), className: "".concat(sendedList.includes(item2) && "sended"), href: "sms:".concat(item2, "&body='123456'"), target: "_blank", children: item2 }, index2);
              })
            ]
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "send_buttons", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "send_whats_app button", onClick: (e2) => {
                handleSend("whatsapp");
              }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/tel.webp" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("在WhatsApp上发送消息") })
              ]
            }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "send_sms button", onClick: () => {
                handleSend("sms");
              }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/sms.webp" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("发送短信") })
              ]
            })
            ]
          })
          ]
        })
      })
    }
  );
};
const WithdrawDialog = ({ event, children, ...props }) => {
  const { t: t2 } = useTranslation();
  const { wheelInfo, isSetWithdrawPassword } = useUserInfoStore();
  const ShareDiaRef = reactExports.useRef(null);
  const [state2, SetState] = reactExports.useState(false);
  const { isApp } = useFlutterApp();
  const navigate = useNavigate();
  const [width, setWidth] = reactExports.useState(0);
  reactExports.useImperativeHandle(event, () => ({
    open: () => {
      setWidth(0);
      SetState(true);
    }
  }));
  const handleOpen = (e2) => {
    SetState(false);
    ShareDiaRef.current.open();
  };
  const handleWithdraw = (e2) => {
    getPromoTurntableTrans().then(([res, err]) => {
      if (!err) {
        if (isApp) {
          sendMessage("onChatSystemMessage", "withdraw");
          return;
        }
        if (isSetWithdrawPassword) {
          navigate("/withdraw");
        } else {
          navigate("/withdraw-set?to=withdraw");
        }
      }
    });
  };
  const rate = reactExports.useMemo(() => {
    return ((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0) / ((wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 100) * 100 + "%";
  }, [wheelInfo]);
  reactExports.useEffect(() => {
    setTimeout(() => {
      setWidth(rate);
    }, 200);
  }, [state2]);
  const renderNoFinish = () => {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$f.noWithdraw, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_close.webp", className: css$f.close_icon, onClick: (e2) => SetState(false) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "noWithdraw_title", children: [
          t2("您很快就能"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          " ",
          t2("取出"),
          " ",
          (wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 0,
          getMoneyUnit()
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "progress", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress-bg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress-red-line", style: { width, border: !(wheelInfo == null ? void 0 : wheelInfo.reward_amount) ? "0" : "" } }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "now_tips", style: { left: rate }, children: [
            getMoneyUnit(true),
            " ",
            customToFixed((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0)
          ]
        })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "gap", children: [
          t2("还是有必要的"),
          " ",
          customToFixed(((wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 0) - ((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0)),
          " ",
          t2("提款")
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(Button, {
        className: "big-button", onClick: handleOpen, children: [
          t2("邀请朋友参加"),
          " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          " ",
          t2("帮助取出")
        ]
      })
      ]
    });
  };
  const renderFinish = () => {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$f.WithdrawDialog, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_close.webp", className: css$f.close_icon, onClick: (e2) => SetState(false) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "withdraw_container", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "withdraw_title", children: (wheelInfo == null ? void 0 : wheelInfo.cash_card) > 0 ? t2("额外奖励") : t2("获奖的钱") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: (wheelInfo == null ? void 0 : wheelInfo.cash_card) === 0 ? "/lucky-wheel/cash.webp" : "/lucky-wheel/coin.webp", className: "cash_icon" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "amount", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: getMoneyUnit(true) }),
            " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customToFixed((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0) })
          ]
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(CountDown, { labelColor: "#000" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "PIX-tips", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("支付方式") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: getPayMethod() })
          ]
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "PIX-amount", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
            children: [
              customToFixed((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0),
              " ",
              getMoneyUnit()
            ]
          }),
            t2("将支付至您的{{mode}}帐户", {
              mode: getPayMethod()
            })
          ]
        })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { className: "big-button", onClick: handleWithdraw, children: (wheelInfo == null ? void 0 : wheelInfo.cash_card) > 0 ? t2("提现卡提现") : t2("提现") })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: state2,
        background: "rgba(0,0,0,0.7)",
        closeByClickOut: false,
        children: (wheelInfo == null ? void 0 : wheelInfo.cash_card) > 0 || (wheelInfo == null ? void 0 : wheelInfo.reward_amount) > 0 && (wheelInfo == null ? void 0 : wheelInfo.reward_amount) >= (wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) ? renderFinish() : renderNoFinish()
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ShareDialog, { event: ShareDiaRef })
    ]
  });
};
const svg_theme_fill_color$b = "_svg_theme_fill_color_zjnl3_3";
const DanceNum$1 = "_DanceNum_zjnl3_55";
const css$b = {
  svg_theme_fill_color: svg_theme_fill_color$b,
  DanceNum: DanceNum$1
};
const DanceNum = ({ num: num2 = "00,00", fontSize = 30, color = "#FF2C2C", fontWeight = "700", ellipsis: ellipsis2, ...props }) => {
  const [count, setCount] = reactExports.useState("00,00");
  const [showEllipsis, setShowEllipsis] = reactExports.useState(false);
  const fixedFont = (minPxChip() * fontSize).toFixed();
  const singleFontSize = fixedFont - fixedFont % 2;
  reactExports.useEffect(() => {
    let str2 = num2.toString().replace(/\d/g, "0");
    let isNeedSplit = ellipsis2 ? +ellipsis2 < num2.length : false;
    if (isNeedSplit) {
      str2 = str2.substring(0, ellipsis2);
      setShowEllipsis(true);
    } else {
      setShowEllipsis(false);
    }
    setCount(str2);
    setTimeout(() => {
      const lastStr = isNeedSplit ? num2.substring(0, ellipsis2) : num2;
      setCount(lastStr);
    }, 200);
  }, [num2]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: "".concat(css$b.DanceNum, " ").concat(props.className), children: [
      count.split("").map((item2, index2) => {
        return [",", "."].includes(item2) ? /* @__PURE__ */ jsxRuntimeExports.jsx(
          "span",
          {
            style: {
              color,
              height: "".concat(singleFontSize, "px"),
              fontSize: "".concat(singleFontSize, "px")
            },
            className: item2 === "." ? "num_box" : "comma",
            children: item2
          },
          index2
        ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: "num_box",
            style: { fontWeight, height: "".concat(singleFontSize, "px"), fontSize: "".concat(singleFontSize, "px") },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              className: "scrollBox", style: { transform: "translateY(-".concat(item2 * 10, "%)") }, children: Array(10).fill("").map((N, I) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { color }, children: I }, I);
              })
            })
          },
          index2
        );
      }),
      showEllipsis && /* @__PURE__ */ jsxRuntimeExports.jsx(
        "span",
        {
          className: "num_box",
          style: {
            color,
            height: "".concat(singleFontSize, "px"),
            fontSize: "".concat(singleFontSize, "px")
          },
          children: "..."
        }
      )
    ]
  });
};
const Progress = ({ showButton = true }) => {
  const { t: t2 } = useTranslation();
  const { wheelInfo } = useUserInfoStore();
  const WithdrawDiaRef = reactExports.useRef(null);
  const [width, setWidth] = reactExports.useState(0);
  const rate = reactExports.useMemo(() => {
    return ((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0 / (wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 0 * 100) + "%";
  }, [wheelInfo]);
  reactExports.useEffect(() => {
    setTimeout(() => {
      setWidth(rate);
    }, 200);
  }, [rate]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$g.progress_box, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: "amount-now", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "amount-now-box", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: "coin-s", src: "/lucky-wheel/coin-s.webp" }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
          children: [
            getMoneyUnit(true),
            " "
          ]
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
          children: [
            " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(DanceNum, { num: customToFixed(wheelInfo == null ? void 0 : wheelInfo.reward_amount) || "00,00" })
          ]
        }),
          showButton && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "button", onClick: (e2) => WithdrawDiaRef.current.open(), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: "coin_d", src: "/lucky-wheel/coin_d.webp" }),
              t2("提现")
            ]
          })
        ]
      })
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress-comp", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress-bg", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress-red-line", style: { width } }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "distance", children: [
        t2("还是有必要的"),
        " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(DanceNum, { fontSize: 20, num: customToFixed(((wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 0) - ((wheelInfo == null ? void 0 : wheelInfo.reward_amount) || 0)) }) }),
        " ",
        t2("提款")
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawDialog, { event: WithdrawDiaRef })
    ]
  });
};
const FirstDialog = ({ event, children, onClose, ...props }) => {
  const { t: t2 } = useTranslation();
  const { wheelInfo } = useUserInfoStore();
  const [state2, SetState] = reactExports.useState(false);
  const navigate = useNavigate();
  const location2 = useLocation();
  const ShareDiaRef = reactExports.useRef(null);
  reactExports.useImperativeHandle(event, () => ({
    open: () => {
      SetState(true);
    }
  }));
  reactExports.useEffect(() => {
    const handleOpenDia = (data) => {
      SetState(true);
    };
    events.on("openFirstDialog", handleOpenDia);
    return () => {
      events.off("openFirstDialog", handleOpenDia);
    };
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: state2,
        background: "rgba(0,0,0,0.7)",
        closeByClickOut: false,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$h.FirstDialog, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "first_title", children: t2("恭喜您获得好运") }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "amount", children: [
              t2("免费领取"),
              " ",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
                children: [
                  wheelInfo == null ? void 0 : wheelInfo.withdraw_amount,
                  " ",
                  getMoneyUnit()
                ]
              })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Progress, { showButton: false }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(CountDown, { labelColor: "#000" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {
            src: "/lucky-wheel/wheel_close.webp", className: css$h.close_icon, onClick: (e2) => {
              if (onClose)
                onClose();
              SetState(false);
            }
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Button, {
            className: "big-button", onClick: () => {
              if (onClose)
                onClose();
              if (location2.pathname === "/") {
                SetState(false);
                navigate("/activity/lucky-wheel");
              } else {
                SetState(false);
              }
            }, children: t2("索取更多现金")
          })
          ]
        })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ShareDialog, { event: ShareDiaRef })
    ]
  });
};
const svg_theme_fill_color$a = "_svg_theme_fill_color_19rcd_3";
const AmountDialog = "_AmountDialog_19rcd_55";
const p_container = "_p_container_19rcd_104";
const tips = "_tips_19rcd_113";
const close_icon$1 = "_close_icon_19rcd_125";
const CardDialog = "_CardDialog_19rcd_132";
const css$a = {
  svg_theme_fill_color: svg_theme_fill_color$a,
  AmountDialog,
  p_container,
  tips,
  close_icon: close_icon$1,
  CardDialog
};
const PrizeDialog = ({ event, children, ...props }) => {
  const { t: t2 } = useTranslation();
  const [state2, SetState] = reactExports.useState(false);
  const [type4, SetType] = reactExports.useState(1);
  const [amount2, SetAmount] = reactExports.useState(0);
  reactExports.useImperativeHandle(event, () => ({
    open: (prize) => {
      SetType(prize.bonus_ty);
      SetAmount(prize.bonus_amount);
      SetState(true);
    }
  }));
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      isOpen: state2,
      background: "rgba(0,0,0,0.7)",
      closeByClickOut: false,
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$a.p_container, children: [
          (type4 == 2 || type4 == 3) && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$a.tips, children: type4 == 2 ? t2("已存入钱包,请查收") : t2("可以直接提现到您的账户") }),
          (type4 === 1 || type4 === 2) && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$a.AmountDialog, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "prize_title", children: type4 === 1 ? t2("获奖的钱") : t2("额外奖励") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "desc", children: type4 === 1 ? t2("恭喜你赚钱了") : t2("恭喜您赢得奖金") }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: "amount", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/coin-s.webp", className: "coin_icon", onClick: (e2) => SetState(false) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: "amount_text", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: getMoneyUnit(true) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: customToFixed(amount2) })
                ]
              })
              ]
            })
            ]
          }),
          type4 === 3 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$a.CardDialog, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/card_dialog_bg.webp" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_close.webp", className: css$a.close_icon, onClick: (e2) => SetState(false) })
        ]
      })
    }
  );
};
const svg_theme_fill_color$9 = "_svg_theme_fill_color_9jwz3_3";
const close_icon = "_close_icon_9jwz3_55";
const NoPrizeDialog$1 = "_NoPrizeDialog_9jwz3_62";
const css$9 = {
  svg_theme_fill_color: svg_theme_fill_color$9,
  close_icon,
  NoPrizeDialog: NoPrizeDialog$1
};
const NoPrizeDialog = ({ event, children, ...props }) => {
  const { t: t2 } = useTranslation();
  const [state2, SetState] = reactExports.useState(false);
  reactExports.useImperativeHandle(event, () => ({
    open: () => {
      SetState(true);
    }
  }));
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Modal,
    {
      isOpen: state2,
      background: "rgba(0,0,0,0.7)",
      closeByClickOut: false,
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$9.NoPrizeDialog, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "container", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/sad.webp" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: t2("可惜你没赢") })
          ]
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_close.webp", className: css$9.close_icon, onClick: (e2) => SetState(false) })
        ]
      })
    }
  );
};
const defaultConfig = {
  len: 8,
  // 奖品个数
  speed: 20,
  // 速度
  accelerationTime: 2500,
  // 加速时间
  decelerationTime: 2500
  // 减速时间
};
const adjustRange = 360 / 8 / 2;
class LuckyWheel {
  // 转为减速运动前的最后时刻的角度
  constructor(config2) {
    __publicField(this, "config", defaultConfig);
    __publicField(this, "luckyWheel");
    // 旋转的元素
    __publicField(this, "rafId");
    __publicField(this, "segsLen", 0);
    // 奖的个数
    /**
     * 游戏当前的阶段
     * step = 0 时, 游戏尚未开始
     * step = 1 时, 此时处于加速阶段
     * step = 2 时, 此时处于匀速阶段
     * step = 3 时, 此时处于减速阶段
     */
    __publicField(this, "step", 0);
    /**
     * 中奖索引
     * prizeIndex = undefined 时, 处于开始抽奖阶段, 正常旋转
     * prizeIndex >= 0 时, 说明stop方法被调用, 并且传入了中奖索引
     * prizeIndex === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效
     */
    __publicField(this, "prizeIndex");
    __publicField(this, "startTime", 0);
    // 开始时间戳
    __publicField(this, "endTime", 0);
    // 停止时间戳
    __publicField(this, "angleCurrent", 0);
    // 停到指针处的角度值
    __publicField(this, "prizeDeg", 0);
    // 中奖角度
    __publicField(this, "endDeg", 0);
    // 最后结束角度
    __publicField(this, "linearDeg", 0);
    this.config = { ...defaultConfig, ...config2 };
    this.segsLen = this.config.len;
    this.luckyWheel = document.querySelector(config2.selector);
    this.resetConfig();
    this.draw();
  }
  draw() {
    this.luckyWheel.style.transform = "rotate(".concat(this.angleCurrent, "deg)");
  }
  // 重置变量
  resetConfig() {
    this.angleCurrent = this.angleCurrent % 360;
    this.startTime = 0;
    this.endTime = 0;
    this.prizeIndex = void 0;
    this.prizeDeg = 0;
    this.endDeg = 0;
    this.linearDeg = 0;
  }
  // 开始游戏
  play() {
    if (this.step !== 0)
      return;
    this.resetConfig();
    this.startTime = Date.now();
    this.step = 1;
    this.run();
  }
  /**
   * 对外暴露: 缓慢停止方法
   * @param index 中奖索引
   */
  stop(index2) {
    this.endTime = Date.now();
    this.prizeIndex = index2;
    this.prizeDeg = 360 - index2 * (360 / this.segsLen);
    this.step = 3;
  }
  run() {
    const { step, prizeIndex } = this;
    const { accelerationTime, decelerationTime, speed, onFinished } = this.config;
    if (this.step === 0) {
      this.rafId && cancelAnimationFrame(this.rafId);
      onFinished == null ? void 0 : onFinished(prizeIndex);
      return;
    }
    const start = Date.now() - this.startTime;
    let rotateDeg = this.angleCurrent;
    if (step === 1 || start < accelerationTime) {
      const curSpeed = Math.round(
        quad.easeIn(start, 1, speed, accelerationTime)
      );
      if (curSpeed >= speed) {
        this.step = 2;
      }
      rotateDeg += curSpeed;
    } else if (step === 2) {
      rotateDeg += speed;
      if (prizeIndex !== void 0 && prizeIndex >= 0) {
        this.step = 3;
      }
    } else if (step === 3) {
      const end = Date.now() - this.endTime;
      this.endDeg = this.endDeg || this.prizeDeg + (360 - rotateDeg % 360 + rotateDeg) + 360 * 2;
      this.linearDeg = this.linearDeg || rotateDeg;
      rotateDeg = Math.round(
        quad.easeOut(
          end,
          this.linearDeg,
          this.endDeg - this.linearDeg - adjustRange,
          decelerationTime
        )
      );
      if (end >= decelerationTime) {
        this.step = 0;
      }
    } else {
      console.warn("occured error");
    }
    this.angleCurrent = rotateDeg;
    this.draw();
    this.rafId = window.requestAnimationFrame(() => {
      this.run();
    });
  }
}
const quad = {
  easeIn(t2, b2, c2, d2) {
    return c2 * (t2 /= d2) * t2 + b2;
  },
  easeOut(t2, b2, c2, d2) {
    return -c2 * (t2 /= d2) * (t2 - 2) + b2;
  }
};
const svg_theme_fill_color$8 = "_svg_theme_fill_color_gc29p_3";
const comp_wheel = "_comp_wheel_gc29p_55";
const css$8 = {
  svg_theme_fill_color: svg_theme_fill_color$8,
  comp_wheel
};
const imgMap = {
  1: "cash",
  2: "coin",
  3: "card",
  4: "sad"
};
function Wheel({ setFun }) {
  const { isApp } = useFlutterApp();
  const luckyWheelRef = reactExports.useRef(null);
  const PrizeDiaRef = reactExports.useRef(null);
  const NoPrizeDiaRef = reactExports.useRef(null);
  const WithdrawDiaRef = reactExports.useRef(null);
  const [prizeIndex, setPrizeIndex] = reactExports.useState(null);
  const [prizeList, setPrizeList] = reactExports.useState([]);
  const prizeResult = reactExports.useRef(null);
  const { token: token2, getWheelInfo, wheelInfo } = useUserInfoStore((state2) => state2);
  const loading2 = reactExports.useRef(false);
  reactExports.useEffect(() => {
    getPromoTurntablePrizeList().then(([res]) => {
      var _a;
      if ((_a = res == null ? void 0 : res.bonus_list) == null ? void 0 : _a.length) {
        setPrizeList(res.bonus_list);
      }
    });
    luckyWheelRef.current = new LuckyWheel({
      selector: ".pie",
      segsLen: 8,
      onFinished: (index2) => {
        setPrizeIndex(index2);
        getWheelInfo();
        setTimeout(() => {
          loading2.current = false;
          if (prizeResult.current.is_first) {
            events.emit("openFirstDialog");
            return;
          }
          console.log("currentPrize :", prizeResult.current);
          if (prizeResult.current.bonus_ty === 4) {
            NoPrizeDiaRef.current.open();
          } else {
            PrizeDiaRef.current.open(prizeResult.current);
          }
        }, 1e3);
      }
    });
  }, []);
  const handleStart = async () => {
    if (!(wheelInfo == null ? void 0 : wheelInfo.username)) {
      isApp ? sendMessage("onChatSystemMessage", "login") : useUserInfoStore.setState({ openForLogin: true });
      return;
    }
    if (loading2.current) {
      return;
    }
    if ((wheelInfo == null ? void 0 : wheelInfo.reward_amount) === (wheelInfo == null ? void 0 : wheelInfo.withdraw_amount)) {
      WithdrawDiaRef.current.open();
      return;
    }
    loading2.current = true;
    prizeResult.current = null;
    const [res, err] = await postPromoTurntableApply();
    if (err) {
      loading2.current = false;
      getWheelInfo();
      return;
    } else {
      setPrizeIndex(null);
      if (setFun)
        setFun(res);
      if (!(wheelInfo == null ? void 0 : wheelInfo.reward_amount)) {
        console.log("wheelInfo?.reward_amount :", wheelInfo == null ? void 0 : wheelInfo.reward_amount);
        events.emit("hiddenHand");
      }
      luckyWheelRef.current.play();
      prizeResult.current = res;
      setTimeout(() => {
        handleEnd();
      }, 3e3);
    }
  };
  const handleEnd = () => {
    const findPrizeIndexs = [];
    prizeList.forEach((item2, index2) => {
      if (item2.bonus_ty === prizeResult.current.bonus_ty) {
        findPrizeIndexs.push(index2);
      }
    });
    const stopIndex = findPrizeIndexs[Math.random() * findPrizeIndexs.length >>> 0];
    luckyWheelRef.current.stop(stopIndex);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$8.comp_wheel, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "wheel-container", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: "wheel-header", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_header.webp", className: "wheel-header-img" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Image,
          {
            src: "/lucky-wheel/title_border".concat("", ".webp"),
            className: "wheel-header-title",
            style: {}
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "amount", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: getMoneyUnit(true) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: (wheelInfo == null ? void 0 : wheelInfo.withdraw_amount) || 100 })
          ]
        })
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: "out-wheel", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: "lucky_div_wrap", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("ul", {
            className: "pie", children: prizeList == null ? void 0 : prizeList.map((item2, index2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "li",
                {
                  className: "slice",
                  style: {
                    transform: "rotate(".concat(index2 * 45, "deg) skewY(-45deg)")
                  },
                  children: [
                    prizeIndex === index2 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "slice_active" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "content", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/".concat(imgMap == null ? void 0 : imgMap[item2 == null ? void 0 : item2.bonus_ty], ".webp"), className: "prize-img" }) }) })
                  ]
                },
                index2
              );
            })
          }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "arrow", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/lucky_arrow.webp", onClick: handleStart }) })
          ]
        })
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(PrizeDialog, { event: PrizeDiaRef }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(NoPrizeDialog, { event: NoPrizeDiaRef }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(WithdrawDialog, { event: WithdrawDiaRef })
    ]
  });
}
const Withdrawal = ({ children }) => {
  const { wheelInfo } = useUserInfoStore();
  const list = reactExports.useMemo(() => (wheelInfo == null ? void 0 : wheelInfo.other_list) || [], [wheelInfo]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    className: css$i.withdrawal_progress, children: !!list.length && /* @__PURE__ */ jsxRuntimeExports.jsx(AutoScrollView, {
      height: minPxChip() * 490, speed: 8, fps: 60, children: list == null ? void 0 : list.map((item2, index2) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$i.withdrawal_progress_item, style: { background: index2 % 2 ? "#FFEECE" : "#fff" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "name", children: item2.username }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "time", children: customFormatTimer(item2.win_at, "MM.DD HH:mm:ss") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "amount", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", {
              className: "total", children: [
                "+",
                customToFixed(item2.win_amount)
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$i.RS, children: getMoneyUnit(true) })
            ]
          })
          ]
        }, index2);
      })
    })
  });
};
const LoginWheelDialog = ({ event, children, onClose = () => {
} }) => {
  const { t: t2 } = useTranslation();
  const [prizeResult, setPrizeResult] = reactExports.useState(null);
  const { token: token2, wheelInfo, getWheelInfo } = useUserInfoStore((state22) => state22);
  const [state2, setState] = reactExports.useState(false);
  const [defaultState, setDefaultState] = reactExports.useState(false);
  const navigate = useNavigate();
  const [showHand, setShowHand] = reactExports.useState(true);
  const open2 = (type4) => {
    if (type4 === "default") {
      setState(false);
      setDefaultState(true);
    } else if (type4 === "progress") {
      setDefaultState(false);
      setState(true);
    }
  };
  reactExports.useEffect(() => {
    const handleOpenDia = (data) => {
      setDefaultState(false);
    };
    const closeHandle = () => {
      setShowHand(false);
    };
    events.on("openFirstDialog", handleOpenDia);
    events.on("hiddenHand", closeHandle);
    return () => {
      events.off("openFirstDialog", handleOpenDia);
      events.off("hiddenHand", closeHandle);
    };
  }, []);
  reactExports.useEffect(() => {
    if (prizeResult) {
      if (prizeResult.is_first)
        return;
    }
    if (!token2 || !(wheelInfo == null ? void 0 : wheelInfo.username) || (wheelInfo == null ? void 0 : wheelInfo.state) === 1) {
      open2("default");
    } else if ((wheelInfo == null ? void 0 : wheelInfo.state) === 2) {
      open2("progress");
    }
  }, [token2, wheelInfo, prizeResult]);
  reactExports.useEffect(() => {
    getWheelInfo();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: state2,
        background: "rgba(0,0,0,0.4)",
        closeByClickOut: false,
        zIndex: 99,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$i.has_progress_container, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Image,
            {
              src: "/lucky-wheel/wheel_close.webp",
              className: css$i.close_icon2,
              onClick: (e2) => {
                setState(false);
                onClose();
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "has_progress_title", children: [
              t2("恭喜你太幸运了"),
              "!"
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("strong", {
            className: "strong", children: [
              t2("Receba"),
              " ",
              getMoneyUnit(true),
              " ",
              wheelInfo == null ? void 0 : wheelInfo.withdraw_amount,
              " ",
              t2("免费")
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "progress_box", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Progress, { showButton: false }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
            className: "progress_btn button", onClick: (e2) => {
              onClose();
              setState(false);
              navigate("/activity/lucky-wheel");
            }, children: t2("索取更多现金")
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Withdrawal, {})
          ]
        })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: defaultState,
        background: "rgba(0,0,0,0.4)",
        closeByClickOut: false,
        zIndex: 99,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$i.LoginWheelDialog, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: "wheel-container", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_title".concat("", ".webp"), className: "wheel-title" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(Wheel, { setFun: setPrizeResult }),
              showHand && /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { src: "/lucky-wheel/wheel_hand.webp", className: css$i.hand })
            ]
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Image,
            {
              src: "/lucky-wheel/wheel_close.webp",
              className: css$i.close_icon,
              onClick: (e2) => {
                onClose();
                setDefaultState(false);
              }
            }
          )
          ]
        })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FirstDialog, { onClose })
    ]
  });
};
const svg_theme_fill_color$7 = "_svg_theme_fill_color_tdpdd_3";
const HandoutBox = "_HandoutBox_tdpdd_55";
const context$1 = "_context_tdpdd_125";
const head = "_head_tdpdd_160";
const table = "_table_tdpdd_165";
const tableHead = "_tableHead_tdpdd_232";
const tr = "_tr_tdpdd_325";
const foot = "_foot_tdpdd_463";
const submitButton = "_submitButton_tdpdd_469";
const left$2 = "_left_tdpdd_564";
const checkBox = "_checkBox_tdpdd_564";
const noCheckBox = "_noCheckBox_tdpdd_568";
const icon2 = "_icon2_tdpdd_661";
const padd = "_padd_tdpdd_666";
const close$2 = "_close_tdpdd_669";
const img$1 = "_img_tdpdd_682";
const css$7 = {
  svg_theme_fill_color: svg_theme_fill_color$7,
  HandoutBox,
  context: context$1,
  head,
  table,
  tableHead,
  tr,
  foot,
  submitButton,
  left: left$2,
  checkBox,
  noCheckBox,
  icon2,
  padd,
  close: close$2,
  img: img$1
};
const HandoutDialog = ({ onClose = () => {
} }) => {
  const { token: token2, theme } = useUserInfoStore();
  const { activityList } = useGameStore();
  const navigate = useNavigate();
  const [state2, setState] = reactExports.useState(false);
  const [checked, setChecked] = reactExports.useState(false);
  const [checked2, setChecked2] = reactExports.useState(false);
  const { t: t2, i18n } = useTranslation();
  const checkIconsMaps2 = {
    black: "/home/whiteGreen/check_icon.webp",
    blue: "/message/check_icon_blue.webp",
    whiteGreen: "/home/whiteGreen/check_icon.webp",
    purple: "/home/purple/check_icon.webp",
    oilyGreen: "/home/whiteGreen/check_icon.webp",
    whiteRed: "/home/whiteRed/check_icon.webp",
    versaceYellow: "/home/versaceYellow/check_icon.webp",
    lancomePeach: "/home/lancomePeach/check_icon.webp",
    hermesOrange: "/home/hermesOrange/check_icon.webp",
    whiteBlue: "/home/whiteBlue/check_icon.webp",
    sk2: "/home/sk2/check_icon.webp",
    whiteYellow: "/home/whiteYellow/check_icon.webp",
    lightBrown: "/home/lightBrown/check_icon.webp",
    whiteOrange: "/home/whiteOrange/check_icon.webp",
    furlaBlue: "/home/furlaBlue/check_icon.webp",
    whitePink: "/home/whitePink/check_icon.webp",
    bvGreen: "/home/bvGreen/check_icon.webp",
    whiteBrown: "/home/whiteBrown/check_icon.webp",
    AnnaSuiPurple: "/home/AnnaSuiPurple/check_icon.webp",
    whitePurple: "/home/whitePurple/check_icon.webp",
    burgundyRed: "/message/check_icon_whiteRed.webp",
    whiteDarkGreen: "/home/whiteDarkGreen/check_icon.webp"
  };
  const [dataList, setDataList] = reactExports.useState([]);
  const [handoutData, setHandoutData] = reactExports.useState({});
  const [title2, setTitle] = reactExports.useState("");
  reactExports.useEffect(() => {
    const today = localStorage.getItem(
      "firstChargeAllUserCheckTodayReminderMapper"
    );
    const permanent = localStorage.getItem(
      "firstChargeAllUserCheckNeverReminderMapper"
    );
    const dayType = localStorage.getItem(
      "allUserOpeningFirstChargeConstantRecord"
    );
    let dataDay = {};
    if (!token2) {
      if (!today) {
        let data = {
          today: false,
          permanent: false
        };
        localStorage.setItem(
          "firstChargeAllUserCheckTodayReminderMapper",
          JSON.stringify(data)
        );
      }
      if (dayType) {
        let day = JSON.parse(dayType);
        if (day.unLogin != dayjs.tz().endOf("day").format("DD")) {
          dataDay = {
            unLogin: dayjs.tz().endOf("day").format("DD")
          };
          let data = today ? JSON.parse(today) : {};
          data.today = false;
          localStorage.setItem(
            "firstChargeAllUserCheckTodayReminderMapper",
            JSON.stringify(data)
          );
          localStorage.setItem(
            "allUserOpeningFirstChargeConstantRecord",
            JSON.stringify(dataDay)
          );
        }
      } else {
        dataDay = {
          unLogin: dayjs.tz().endOf("day").format("DD")
        };
        localStorage.setItem(
          "allUserOpeningFirstChargeConstantRecord",
          JSON.stringify(dataDay)
        );
      }
      dataDay = {
        unLogin: dayjs.tz().endOf("day").format("DD")
      };
      if (today) {
        const todays = localStorage.getItem(
          "firstChargeAllUserCheckTodayReminderMapper"
        );
        const data = JSON.parse(todays);
        if (data.today || data.permanent) {
          onClose();
          return;
        }
      }
    } else {
      if (permanent) {
        let data = {
          today: false,
          permanent: false
        };
        localStorage.setItem(
          "firstChargeAllUserCheckTodayReminderMapper",
          JSON.stringify(data)
        );
      }
      localStorage.setItem(
        "allUserOpeningFirstChargeConstantRecord",
        JSON.stringify(dataDay)
      );
      if (dayType) {
        let day = JSON.parse(dayType);
        if (day.login != dayjs.tz().endOf("day").format("DD")) {
          let dataDay2 = {
            unLogin: day.unLogin,
            login: dayjs.tz().endOf("day").format("DD")
          };
          let data = permanent ? JSON.parse(permanent) : {};
          data.permanent = false;
          localStorage.setItem(
            "firstChargeAllUserCheckNeverReminderMapper",
            JSON.stringify(data)
          );
          localStorage.setItem(
            "allUserOpeningFirstChargeConstantRecord",
            JSON.stringify(dataDay2)
          );
        }
      } else {
        let dataDay2 = {
          unLogin: dayjs.tz().endOf("day").format("DD"),
          login: dayjs.tz().endOf("day").format("DD")
        };
        localStorage.setItem(
          "allUserOpeningFirstChargeConstantRecord",
          JSON.stringify(dataDay2)
        );
      }
      if (permanent) {
        const permanents = localStorage.getItem(
          "firstChargeAllUserCheckNeverReminderMapper"
        );
        const data = JSON.parse(permanents);
        if (data.today || data.permanent) {
          onClose();
          return;
        }
      }
    }
    const handoutItem = activityList.find(
      (item2) => item2.flag === "single_topup"
    );
    setHandoutData(handoutItem);
    if (handoutItem) {
      getPromoDetail({ id: handoutItem.id, flag: handoutItem.flag }).then(
        ([res]) => {
          var _a, _b;
          if (res) {
            setDataList(((_a = res.rules) == null ? void 0 : _a.bonus_list) || []);
            setTitle(((_b = res.config) == null ? void 0 : _b.title) || "");
          }
        }
      );
      setState(true);
    } else {
      onClose();
    }
  }, []);
  const bntCheck = () => {
    if (token2) {
      let data = {
        today: !checked,
        permanent: false
      };
      localStorage.setItem(
        "firstChargeAllUserCheckNeverReminderMapper",
        JSON.stringify(data)
      );
    } else {
      let data = {
        today: !checked,
        permanent: false
      };
      localStorage.setItem(
        "firstChargeAllUserCheckTodayReminderMapper",
        JSON.stringify(data)
      );
    }
    setChecked(!checked);
  };
  const bntCheck2 = () => {
    if (token2) {
      let lacalData = localStorage.getItem(
        "firstChargeAllUserCheckNeverReminderMapper"
      );
      let data = {
        today: false,
        permanent: !checked2
      };
      if (lacalData) {
        data = JSON.parse(lacalData);
        data.permanent = !checked2;
      }
      localStorage.setItem(
        "firstChargeAllUserCheckNeverReminderMapper",
        JSON.stringify(data)
      );
    } else {
      let lacalData = localStorage.getItem(
        "firstChargeAllUserCheckTodayReminderMapper"
      );
      console.log(lacalData);
      let data = {
        today: false,
        permanent: !checked2
      };
      if (lacalData) {
        data = JSON.parse(lacalData);
        data.permanent = !checked2;
      }
      localStorage.setItem(
        "firstChargeAllUserCheckTodayReminderMapper",
        JSON.stringify(data)
      );
    }
    setChecked2(!checked2);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: dataList && dataList.length > 0 && /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
      isOpen: state2, closeByClickOut: false, zIndex: 99, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$7.HandoutBox, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$7.context, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$7.head, children: title2 }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$7.table, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$7.tableHead, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: t2("首次存款") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: t2("报酬") })
              ]
            }),
              dataList.map((item2, index2) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                  className: css$7.tr, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                    children: [
                      "≥ ",
                      item2.deposit_amount
                    ]
                  }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: item2.bonus_amount })
                  ]
                }, index2);
              })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$7.foot, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$7.left, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: joinClass(css$7.checkBox, css$7.padd), children: [
                  checked ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Image,
                    {
                      onClick: () => {
                        bntCheck();
                      },
                      className: css$7.icon2,
                      src: checkIconsMaps2[theme] || "/home/whiteGreen/check_icon.webp"
                    }
                  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      onClick: () => {
                        bntCheck();
                      },
                      className: css$7.noCheckBox
                    }
                  ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: t2("今天我不再出现") })
                ]
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$7.checkBox, children: [
                  checked2 ? /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Image,
                    {
                      onClick: () => {
                        bntCheck2();
                      },
                      className: css$7.icon2,
                      src: checkIconsMaps2[theme] || "/home/whiteGreen/check_icon.webp"
                    }
                  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      onClick: () => {
                        bntCheck2();
                      },
                      className: css$7.noCheckBox
                    }
                  ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: t2("永久隐藏") })
                ]
              })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "button",
                {
                  onClick: () => {
                    navigate(
                      "/activity/top-up-winnings/".concat(handoutData.id, "/").concat(handoutData.flag)
                    );
                  },
                  className: joinClass(css$7.submitButton, "button"),
                  children: t2("待领取")
                }
              )
            })
            ]
          })
          ]
        }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$7.close, onClick: () => {
            setState(false);
            onClose();
          }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "60",
              height: "60",
              viewBox: "0 0 60 60",
              fill: "none",
              children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
                clipPath: "url(#clip0_1498_10067)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "path",
                  {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M57 30C57 44.9117 44.9117 57 30 57C15.0883 57 3 44.9117 3 30C3 15.0883 15.0883 3 30 3C44.9117 3 57 15.0883 57 30ZM60 30C60 46.5685 46.5685 60 30 60C13.4315 60 0 46.5685 0 30C0 13.4315 13.4315 0 30 0C46.5685 0 60 13.4315 60 30ZM19.768 19.232C20.7443 18.2557 22.3272 18.2557 23.3035 19.232L30.0005 25.9289L36.9101 19.0193C37.8865 18.043 39.4694 18.043 40.4457 19.0193C41.422 19.9956 41.422 21.5785 40.4457 22.5548L33.536 29.4645L40.9812 36.9097C41.9575 37.886 41.9575 39.4689 40.9812 40.4452C40.0049 41.4215 38.422 41.4215 37.4457 40.4452L30.0005 33L22.768 40.2325C21.7917 41.2088 20.2088 41.2088 19.2325 40.2325C18.2562 39.2562 18.2562 37.6733 19.2325 36.6969L26.465 29.4645L19.768 22.7675C18.7917 21.7912 18.7917 20.2083 19.768 19.232Z",
                    fill: "white"
                  }
                )
              }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1498_10067", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "60", height: "60", rx: "8", fill: "white" }) }) })
              ]
            }
          )
        })
        ]
      })
    })
  });
};
const svg_theme_fill_color$6 = "_svg_theme_fill_color_xtbi3_3";
const item = "_item_xtbi3_55";
const active = "_active_xtbi3_211";
const title$1 = "_title_xtbi3_394";
const content$1 = "_content_xtbi3_435";
const alert_box = "_alert_box_xtbi3_520";
const clsoe_box = "_clsoe_box_xtbi3_523";
const clsoeBtn = "_clsoeBtn_xtbi3_528";
const horizontal = "_horizontal_xtbi3_542";
const items = "_items_xtbi3_628";
const left$1 = "_left_xtbi3_802";
const right$1 = "_right_xtbi3_806";
const context = "_context_xtbi3_810";
const content_box = "_content_box_xtbi3_816";
const vertical = "_vertical_xtbi3_867";
const switch_left = "_switch_left_xtbi3_1120";
const switch_right = "_switch_right_xtbi3_1124";
const top = "_top_xtbi3_1128";
const bottom$1 = "_bottom_xtbi3_1143";
const no_show_select = "_no_show_select_xtbi3_1155";
const select_box = "_select_box_xtbi3_1162";
const selece_icon = "_selece_icon_xtbi3_1170";
const tipsSpan = "_tipsSpan_xtbi3_1174";
const no_read = "_no_read_xtbi3_1216";
const css$6 = {
  svg_theme_fill_color: svg_theme_fill_color$6,
  item,
  active,
  title: title$1,
  content: content$1,
  alert_box,
  clsoe_box,
  clsoeBtn,
  horizontal,
  items,
  left: left$1,
  right: right$1,
  context,
  content_box,
  vertical,
  "switch": "_switch_xtbi3_1112",
  switch_left,
  switch_right,
  top,
  bottom: bottom$1,
  no_show_select,
  select_box,
  selece_icon,
  tipsSpan,
  no_read
};
const Msg = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
    className, xmlns: "http://www.w3.org/2000/svg", width: "22", height: "22", viewBox: "0 0 22 22", fill: "none", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2 2C0.895431 2 0 2.89543 0 4V4.29894L11.1264 10.7472L22 4.29894V4C22 2.89543 21.1046 2 20 2H2Z", fill: "#A7B7D7" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M22 4.68974L13.9867 10.5515L22 16.7012L12.9315 11.3234L11.1264 12.6438L9.27943 11.3234L0 16.7012L8.19967 10.5515L0 4.68974V16.7012V18C0 19.1046 0.89543 20 2 20H20C21.1046 20 22 19.1046 22 18V16.7012V4.68974Z", fill: "#A7B7D7" })
    ]
  });
};
const Notice = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { className, xmlns: "http://www.w3.org/2000/svg", width: "26", height: "22", viewBox: "0 0 26 22", fill: "none", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M0 6.99938V14.9994C0 15.5517 0.447715 15.9994 1 15.9994H6.5L12.3753 20.6996C13.0301 21.2234 14 20.7573 14 19.9188V2.08C14 1.2415 13.0301 0.775323 12.3753 1.29913L6.5 5.99938H1C0.447715 5.99938 0 6.44709 0 6.99938ZM20.5409 3.39798C20.8337 3.10509 21.3086 3.10509 21.6015 3.39798C25.7996 7.59612 25.7996 14.4026 21.6015 18.6008C21.3086 18.8937 20.8337 18.8937 20.5409 18.6008C20.248 18.3079 20.248 17.833 20.5409 17.5401C24.1532 13.9278 24.1532 8.07099 20.5409 4.45864C20.248 4.16575 20.248 3.69087 20.5409 3.39798ZM17.7124 6.22641C18.0053 5.93351 18.4802 5.93351 18.7731 6.22641C21.4091 8.86245 21.4091 13.1363 18.7731 15.7723C18.4802 16.0652 18.0053 16.0652 17.7124 15.7723C17.4195 15.4795 17.4195 15.0046 17.7124 14.7117C19.7627 12.6614 19.7627 9.33732 17.7124 7.28707C17.4195 6.99417 17.4195 6.5193 17.7124 6.22641Z", fill: "#A7B7D7" }) });
};
const Items$1 = ({ popList, state: state2, setState, itemMode }) => {
  const containRef = reactExports.useRef();
  reactExports.useEffect(() => {
    if (containRef.current && containRef.current.childNodes[state2.index]) {
      const clientHeight = containRef.current.clientHeight;
      const itemHeight = containRef.current.childNodes[state2.index].clientHeight;
      const centerHeight = clientHeight / 2 - itemHeight / 2;
      if (itemHeight * state2.index > centerHeight) {
        containRef.current.scrollTop = itemHeight * state2.index - centerHeight;
      } else {
        containRef.current.scrollTop = 0;
      }
    }
  }, [state2.index]);
  const [readedPop, setReadedPop] = reactExports.useState(Array.from(new Set(Cache$1.get("readed_pop") || [])));
  reactExports.useEffect(() => {
    if (popList.length) {
      const rp = [...readedPop, popList[state2.index].id];
      Cache$1.set("readed_pop", rp);
      setReadedPop(rp);
    }
  }, [state2.index, popList]);
  const checkIsRead = (id2) => {
    return readedPop.includes(id2);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    ref: containRef, className: "".concat(css$6.items, " ").concat(css$6[itemMode]), children: popList.map((pop, i) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "".concat(css$6.item, " ").concat(state2.index == i && css$6.active, " ").concat(!checkIsRead(pop.id) && css$6.no_read), onClick: () => setState({ index: i }), children: [
        pop.pop_type == "pop" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
          children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Notice, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: pop.name })
          ]
        }),
        pop.pop_type == "notice" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
          children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Msg, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: pop.title })
          ]
        })
      ]
    }, i))
  });
};
const Horizontal = ({ itemMode = "right", state: state2, setState, popList, onClickToLink }) => {
  var _a, _b, _c, _d, _e;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$6.horizontal, children: [
      itemMode == "left" && /* @__PURE__ */ jsxRuntimeExports.jsx(Items$1, { popList, itemMode, state: state2, setState }),
      ((_a = popList[state2.index]) == null ? void 0 : _a["pop_type"]) == "pop" && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        onClick: () => {
          var _a2;
          return onClickToLink((_a2 = popList[state2.index]) == null ? void 0 : _a2.link);
        }, className: css$6.context, style: {
          backgroundImage: "url(".concat("https://dl-br-cf.sadslj88.com").concat((_b = popList[state2.index]) == null ? void 0 : _b.img, ")")
        }
      }),
      ((_c = popList[state2.index]) == null ? void 0 : _c["pop_type"]) == "notice" && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$6.context, onClick: () => {
          var _a2, _b2;
          if (((_a2 = popList[state2.index]) == null ? void 0 : _a2.redirect) == 1) {
            onClickToLink((_b2 = popList[state2.index]) == null ? void 0 : _b2.redirect_url);
          }
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$6.content_box, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$6.title, children: (_d = popList[state2.index]) == null ? void 0 : _d.title }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$6.content, children: (_e = popList[state2.index]) == null ? void 0 : _e.content })
          ]
        })
      }),
      itemMode == "right" && /* @__PURE__ */ jsxRuntimeExports.jsx(Items$1, { popList, itemMode, state: state2, setState })
    ]
  });
};
const Switch = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className,
      xmlns: "http://www.w3.org/2000/svg",
      width: "44",
      height: "44",
      viewBox: "0 0 44 44",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
        "clip-path": "url(#clip0_1587_200984)", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "44", height: "44", rx: "22", fill: "black", fillOpacity: "0.24" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            d: "M17.2949 12.375L26.9199 22L17.2949 31.625",
            stroke: "white",
            strokeWidth: "2.40625",
            strokeLinecap: "round"
          }
        )
        ]
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1587_200984", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "44", height: "44", rx: "11", fill: "white" }) }) })
      ]
    }
  );
};
const Items = ({ popList, state: state2, setState }) => {
  const containRef = reactExports.useRef();
  reactExports.useEffect(() => {
    if (containRef.current && containRef.current.childNodes[state2.index]) {
      const clientWidth = containRef.current.clientWidth;
      const itemWidth = containRef.current.childNodes[state2.index].clientWidth;
      const centerWidth = clientWidth / 2 - itemWidth / 2;
      if (itemWidth * state2.index > centerWidth) {
        containRef.current.scrollLeft = itemWidth * state2.index - centerWidth;
      } else {
        containRef.current.scrollLeft = 0;
      }
    }
  }, [state2.index]);
  const [readedPop, setReadedPop] = reactExports.useState(Array.from(new Set(Cache$1.get("readed_pop") || [])));
  reactExports.useEffect(() => {
    if (popList.length) {
      const rp = [...readedPop, popList[state2.index].id];
      Cache$1.set("readed_pop", rp);
      setReadedPop(rp);
    }
  }, [state2.index, popList]);
  const checkIsRead = (id2) => {
    return readedPop.includes(id2);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
    ref: containRef, className: "".concat(css$6.items), children: popList.map((pop, i) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "".concat(css$6.item, " ").concat(state2.index == i && css$6.active, " ").concat(!checkIsRead(pop.id) && css$6.no_read), onClick: () => setState({ index: i }), children: [
        pop.pop_type == "pop" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
          children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Notice, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: pop.name })
          ]
        }),
        pop.pop_type == "notice" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
          children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Msg, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: pop.title })
          ]
        })
      ]
    }, i))
  });
};
const Vertical = ({ itemMode = "top", state: state2, setState, popList, onClickToLink }) => {
  var _a, _b, _c, _d, _e;
  const onPre = () => {
    if (state2.index == 0) {
      setState({
        index: popList.length - 1
      });
    } else {
      setState({
        index: state2.index - 1
      });
    }
  };
  const onNext = () => {
    if (state2.index == popList.length - 1) {
      setState({
        index: 0
      });
    } else {
      setState({
        index: state2.index + 1
      });
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: "".concat(css$6.vertical, " ").concat(css$6[itemMode]), children: [
      itemMode == "top" && /* @__PURE__ */ jsxRuntimeExports.jsx(Items, { popList, itemMode, state: state2, setState }),
      ((_a = popList[state2.index]) == null ? void 0 : _a["pop_type"]) == "pop" && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        onClick: () => {
          var _a2;
          return onClickToLink((_a2 = popList[state2.index]) == null ? void 0 : _a2.link);
        }, className: css$6.context, style: {
          backgroundImage: "url(".concat("https://dl-br-cf.sadslj88.com").concat((_b = popList[state2.index]) == null ? void 0 : _b.img, ")")
        }
      }),
      ((_c = popList[state2.index]) == null ? void 0 : _c["pop_type"]) == "notice" && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$6.context, onClick: () => {
          var _a2, _b2;
          if (((_a2 = popList[state2.index]) == null ? void 0 : _a2.redirect) == 1) {
            onClickToLink((_b2 = popList[state2.index]) == null ? void 0 : _b2.redirect_url);
          }
        }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$6.content_box, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$6.title, children: (_d = popList[state2.index]) == null ? void 0 : _d.title }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$6.content, children: (_e = popList[state2.index]) == null ? void 0 : _e.content })
          ]
        })
      }),
      itemMode == "bottom" && /* @__PURE__ */ jsxRuntimeExports.jsx(Items, { popList, itemMode, state: state2, setState }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: onPre, className: "".concat(css$6.switch, " ").concat(css$6.switch_left), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Switch, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: onNext, className: "".concat(css$6.switch, " ").concat(css$6.switch_right), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Switch, {}) })
    ]
  });
};
const onceADayPop = Cache$1.get("onceADayPop") || {
  // 临时储存
  loginBF: {},
  loginAF: {},
  other: {}
};
const onceADay = (id2, loginType = "other") => {
  const onceADayPopRight = Cache$1.get("onceADayPop") || {
    // 临时储存
    loginBF: {},
    loginAF: {},
    other: {}
  };
  if (onceADayPopRight[loginType] && onceADayPopRight[loginType][id2]) {
    if (dayjs(onceADayPopRight[loginType][id2]).date() === dayjs().date()) {
      return false;
    }
  }
  onceADayPop[loginType][id2] = Date.now();
  return true;
};
const isShowPop = (item2) => {
  const token2 = Cache$1.get("token");
  let type4 = item2.login_bf;
  if (token2) {
    type4 = item2.login_af;
  }
  if (type4 == 0 || !type4) {
    return false;
  } else if (type4 == 1) {
    return true;
  } else if (type4 == 2) {
    return onceADay(item2.id, token2 ? "loginAF" : "loginBF");
  } else if (type4 == 3) {
    return window.isNewLogin ? true : false;
  }
};
const isShowToday = (item2) => {
  const data = Cache$1.get("no_need_show_today") || {};
  if (!data[item2.id]) {
    return true;
  }
  return dayjs(data[item2.id]).date() !== dayjs().date();
};
const no_need_show_today = Cache$1.get("no_need_show_today") || {};
const noNeedShowTodayClick = (item2, checked) => {
  if (checked) {
    no_need_show_today[item2.id] = Date.now();
  } else {
    no_need_show_today[item2.id] = void 0;
  }
};
const rightPopData = () => {
  console.log("no_need_show_today :>> ", no_need_show_today);
  Cache$1.set("onceADayPop", onceADayPop);
  Cache$1.set("no_need_show_today", no_need_show_today);
};
const NoCheck = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className,
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 32 32",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", {
        clipPath: "url(#clip0_1587_201048)", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "rect",
          {
            x: "0.533333",
            y: "0.533333",
            width: "30.9333",
            height: "30.9333",
            rx: "5.62051",
            stroke: "white",
            strokeWidth: "1.06667"
          }
        )
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", { id: "clip0_1587_201048", children: /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { width: "32", height: "32", fill: "white" }) }) })
      ]
    }
  );
};
const AlertBox = ({ showNextPop, onClickToLink, setLoading }) => {
  var _a;
  const { websetConfig, theme, token: token2 } = useUserInfoStore();
  const [state2, setState] = useSetState$1({
    index: 0,
    popList: [],
    noNeedShowMap: {}
  });
  useAsyncEffect(async () => {
    setLoading(true);
    const [webRes] = await memberWebsetList({ item: "pop" });
    const pop = (webRes == null ? void 0 : webRes.pop) || [];
    const [noticesRed] = await getNoticeList();
    const notices = noticesRed || [];
    const popList = [...notices.filter((item2) => item2.is_pop == 1).map((item2) => {
      return {
        pop_type: "notice",
        ...item2
      };
    }), ...pop.map((item2) => {
      return {
        pop_type: "pop",
        ...item2
      };
    })].filter((item2) => isShowPop(item2)).filter((item2) => isShowToday(item2));
    setState({ popList });
    setLoading(false);
    if (popList.length == 0) {
      showNextPop();
    }
    popList.forEach((item2) => {
      if (item2.img) {
        preloadImage("https://dl-br-cf.sadslj88.com/image-prod" + item2.img);
      }
    });
  }, [token2]);
  if (state2.loading) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$6.alert_box, style: {
      height: ["2", "3"].includes((websetConfig == null ? void 0 : websetConfig.homePopupStyle) || "1") ? "700rem" : "500rem"
    }, children: [
      ["2", "3"].includes((websetConfig == null ? void 0 : websetConfig.homePopupStyle) || "1") && /* @__PURE__ */ jsxRuntimeExports.jsx(Vertical, { onClickToLink, itemMode: ((websetConfig == null ? void 0 : websetConfig.homePopupStyle) || "1") == "2" ? "top" : "bottom", popList: state2.popList, state: state2, setState }),
      ["1", "4"].includes((websetConfig == null ? void 0 : websetConfig.homePopupStyle) || "1") && /* @__PURE__ */ jsxRuntimeExports.jsx(Horizontal, { onClickToLink, itemMode: ((websetConfig == null ? void 0 : websetConfig.homePopupStyle) || "1") == "1" ? "left" : "right", popList: state2.popList, state: state2, setState }),
      ((_a = state2.popList[state2.index]) == null ? void 0 : _a.close_today) == 1 && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$6.no_show_select, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$6.select_box, onClick: () => {
            setState({
              noNeedShowMap: {
                ...state2.noNeedShowMap,
                [state2.popList[state2.index].id]: !state2.noNeedShowMap[state2.popList[state2.index].id]
              }
            });
            noNeedShowTodayClick(state2.popList[state2.index], !state2.noNeedShowMap[state2.popList[state2.index].id]);
          }, children: [
            state2.noNeedShowMap[state2.popList[state2.index].id] ? /* @__PURE__ */ jsxRuntimeExports.jsx(
              Image,
              {
                className: css$6.selece_icon,
                src: checkIconsMaps$4[theme] || "/home/icons/lg_check_icon.webp"
              }
            ) : /* @__PURE__ */ jsxRuntimeExports.jsx(NoCheck, { className: css$6.selece_icon }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$6.tipsSpan, children: trans("Don't show again today") })
          ]
        })
      }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
        className: css$6.clsoe_box, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: css$6.clsoeBtn,
            onClick: () => {
              showNextPop();
            },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInLogin, {})
          }
        )
      })
    ]
  });
};
const PopBox$1 = ({ onClickToLink }) => {
  const location2 = useLocation();
  const { activityList } = useGameStore();
  const { token: token2 } = useUserInfoStore();
  const [state2, setState] = useSetState$1({
    index: 0,
    loading: false,
    popList: []
  });
  reactExports.useEffect(() => {
    const aList = activityList.filter((a) => {
      return isShowPop(a);
    });
    setState({
      index: 0,
      popList: [
        // 默认显示后台网站设置弹窗
        {
          name: "defaultPop"
        },
        ...aList.map((item2) => {
          return { name: item2.flag };
        })
      ]
    });
  }, [activityList, token2]);
  const showNextPop = () => {
    const index2 = state2.index + 1;
    setState({
      index: index2
    });
    if (!state2.popList[index2]) {
      rightPopData();
    }
  };
  if (location2.pathname !== "/") {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  if (!state2.popList[state2.index]) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Modal, {
    closeByClickOut: false, isOpen: true, isShow: !state2.loading, zIndex: 99, children: [
      state2.popList[state2.index].name == "defaultPop" && /* @__PURE__ */ jsxRuntimeExports.jsx(AlertBox, { onClickToLink, showNextPop, setLoading: (loading2) => setState({ loading: loading2 }) }),
      state2.popList[state2.index].name == "single_topup" && /* @__PURE__ */ jsxRuntimeExports.jsx(HandoutDialog, { onClose: showNextPop }),
      state2.popList[state2.index].name == "turntable" && /* @__PURE__ */ jsxRuntimeExports.jsx(LoginWheelDialog, { onClose: showNextPop })
    ]
  });
};
const svg_theme_fill_color$5 = "_svg_theme_fill_color_jffvk_3";
const xuanfu = "_xuanfu_jffvk_55";
const img = "_img_jffvk_61";
const click_close = "_click_close_jffvk_67";
const close$1 = "_close_jffvk_74";
const xuanfuGap = "_xuanfuGap_jffvk_81";
const kfContainer = "_kfContainer_jffvk_84";
const css$5 = {
  svg_theme_fill_color: svg_theme_fill_color$5,
  xuanfu,
  img,
  click_close,
  close: close$1,
  xuanfuGap,
  kfContainer
};
const XuanFuTG = () => {
  const closeIcon = {
    black: "/home/icons/reg_close.webp",
    blue: "/home/icons/reg_close.webp",
    whiteGreen: "/home/icons/whiteGreen_reg_close.webp",
    whiteRed: "/home/icons/whiteRed_reg_close.webp",
    whiteYellow: "/home/icons/whiteGreen_reg_close.webp",
    whitePink: "/home/icons/whiteGreen_reg_close.webp",
    whiteBlue: "/home/icons/whiteGreen_reg_close.webp",
    whitePurple: "/home/icons/whiteGreen_reg_close.webp",
    whiteBrown: "/home/icons/whiteGreen_reg_close.webp",
    whiteDarkGreen: "/home/icons/whiteRed_reg_close.webp"
  };
  const { theme } = useUserInfoStore();
  const location2 = useLocation();
  const [state2, setState] = reactExports.useState({});
  const [xuanfuList, setXuanfuList] = reactExports.useState([]);
  const getData = async () => {
    const [res = [], err] = await getMemberCustomerList({
      flag: "2"
    });
    if (err)
      return;
    if (!res || res.length === 0)
      return;
    let stateMap = {};
    for (let i = 0; i < res.length; i++) {
      stateMap[res[i].id] = true;
    }
    setState(stateMap);
    setXuanfuList(res != null ? res : []);
  };
  const renderList = reactExports.useMemo(() => {
    return xuanfuList.filter((item2) => {
      return state2[item2.id];
    });
  }, [xuanfuList, state2]);
  reactExports.useEffect(() => {
  }, [state2]);
  reactExports.useEffect(() => {
    getData();
  }, []);
  if (location2.pathname !== "/")
    return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    children: !!renderList.length && /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
      className: css$5.xuanfu, children: renderList.map((item2, index2) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$5.kfContainer, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
            Image,
            {
              className: css$5.img,
              onClick: () => {
                if (item2.link === "")
                  return;
                if (!item2.link.startsWith("http"))
                  return;
                if (!!navigator.standalone) {
                  window.location.href = item2.link;
                } else {
                  window.open(item2.link, "_blank");
                }
              },
              src: item2.im,
              remote: true,
              isGame: true
            }
          ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$5.xuanfuGap }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: css$5.click_close,
              onClick: () => {
                let stateMap = { ...state2 };
                stateMap[item2.id] = false;
                setState(stateMap);
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Image,
                {
                  className: css$5.close,
                  src: closeIcon[theme] || "/home/icons/reg_close.webp"
                }
              )
            }
          )
          ]
        }, item2.id);
      })
    })
  });
};
const svg_theme_fill_color$4 = "_svg_theme_fill_color_o3ezk_3";
const bottom_guide = "_bottom_guide_o3ezk_55";
const down_icon = "_down_icon_o3ezk_182";
const add_icon = "_add_icon_o3ezk_327";
const inline = "_inline_o3ezk_507";
const right = "_right_o3ezk_514";
const right_split = "_right_split_o3ezk_514";
const guide_box = "_guide_box_o3ezk_648";
const close = "_close_o3ezk_777";
const title = "_title_o3ezk_786";
const content = "_content_o3ezk_793";
const guide_1 = "_guide_1_o3ezk_799";
const guide_2 = "_guide_2_o3ezk_836";
const line = "_line_o3ezk_870";
const big_line = "_big_line_o3ezk_883";
const left = "_left_o3ezk_889";
const bottom = "_bottom_o3ezk_55";
const finger = "_finger_o3ezk_929";
const shake_animation = "_shake_animation_o3ezk_936";
const shake = "_shake_o3ezk_936";
const css$4 = {
  svg_theme_fill_color: svg_theme_fill_color$4,
  bottom_guide,
  down_icon,
  add_icon,
  inline,
  right,
  right_split,
  guide_box,
  close,
  title,
  content,
  guide_1,
  guide_2,
  line,
  big_line,
  left,
  bottom,
  finger,
  shake_animation,
  shake
};
const GuidePhone = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      className: joinClass(className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "48",
      height: "48",
      viewBox: "0 0 48 48",
      fill: "none",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M11 0C8.79085 0 6.99999 1.79086 6.99999 4V10H9.99999V9C9.99999 8.44772 10.4477 8 11 8H37C37.5523 8 38 8.44771 38 9V41C38 41.5523 37.5523 42 37 42H11C10.4477 42 9.99999 41.5523 9.99999 41V40H6.99999V44C6.99999 46.2091 8.79085 48 11 48H37C39.2091 48 41 46.2091 41 44V4C41 1.79086 39.2091 0 37 0H11ZM8.49475 16.3177C8.49475 15.4893 9.16632 14.8177 9.99475 14.8177H24.8819L26.3819 14.8177V16.3177V31.2049C26.3819 32.0333 25.7104 32.7049 24.8819 32.7049C24.0535 32.7049 23.3819 32.0333 23.3819 31.2049L23.3819 20.0282L8.29369 35.1164C7.70791 35.7022 6.75816 35.7022 6.17237 35.1164C5.58659 34.5307 5.58659 33.5809 6.17237 32.9951L21.3498 17.8177H9.99475C9.16632 17.8177 8.49475 17.1462 8.49475 16.3177Z",
          fill: "#FEE004"
        }
      )
    }
  );
};
const GuideDown = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "21",
      height: "13",
      viewBox: "0 0 21 13",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          opacity: "0.7",
          d: "M10.5 13L19.5933 3.25H1.40673L10.5 13Z",
          fill: "#161D29"
        }
      ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M1.40674 3.25L10.5 13L19.5933 3.25H18.2259L10.5 11.5338L2.77415 3.25L1.40674 3.25Z",
          fill: "white"
        }
      )
      ]
    }
  );
};
const GuideHand = ({ className } = {}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      className: joinClass(className),
      xmlns: "http://www.w3.org/2000/svg",
      width: "91",
      height: "107",
      viewBox: "0 0 91 107",
      fill: "none",
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("g", {
        clipPath: "url(#clip0_347_87400)", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            d: "M28.9273 63.4827C28.8974 61.0339 28.8473 58.5818 28.8054 56.1317L28.8046 56.128C28.6529 56.0789 28.4966 56.0269 28.3449 55.9778C27.3769 57.1213 26.4349 58.2943 25.4334 59.4099C21.8768 63.3667 16.1111 63.6826 12.2825 60.1568C8.47367 56.6501 8.24326 51.5628 11.8674 46.9294C14.8121 43.1651 17.9889 39.585 20.9571 35.839C26.6015 28.7124 32.1307 21.5248 32.4554 11.809C32.5204 9.88379 34.3055 8.48347 36.2853 8.45816C46.663 8.31718 57.0411 8.19569 67.4218 8.14019C70.3713 8.12624 71.7076 9.60036 72.0093 12.6124C72.4079 16.6056 72.7222 20.6252 74.8074 24.2187C77.3941 28.6737 78.3578 33.64 78.9827 38.6333C80.103 47.6144 80.0354 56.6789 80.526 65.6997C80.8405 71.5479 75.2832 76.1337 69.7571 73.9616C68.7332 73.5587 68.3478 73.874 67.8662 74.7702C65.7073 78.7975 62.0074 80.252 57.7064 78.7403C56.7134 78.3895 56.2941 78.5673 55.7404 79.4205C53.5177 82.8509 50.6207 84.0555 46.7395 83.067C45.2756 82.6937 45.1673 83.1481 45.2039 84.4088C45.3053 87.9737 45.3324 91.539 45.2853 95.105C45.2229 99.6767 41.7006 103.199 37.3262 103.18C32.8378 103.158 29.3717 99.7683 29.3042 95.1936C29.1486 84.6233 29.0514 74.052 28.9273 63.4827Z",
            fill: "white"
          }
        ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            d: "M28.8054 56.1317C28.8473 58.5818 28.8974 61.0339 28.9273 63.4827C29.0514 74.052 29.1486 84.6233 29.3042 95.1936C29.3717 99.7683 32.8378 103.158 37.3262 103.18C41.7006 103.199 45.2229 99.6767 45.2853 95.105C45.3324 91.539 45.3053 87.9737 45.2039 84.4088C45.1673 83.1481 45.2756 82.6937 46.7395 83.067C50.6207 84.0555 53.5177 82.8509 55.7404 79.4205C56.2941 78.5673 56.7134 78.3895 57.7064 78.7404C62.0074 80.252 65.7073 78.7975 67.8662 74.7702C68.3478 73.874 68.7332 73.5587 69.7571 73.9616C75.2832 76.1337 80.8405 71.5479 80.526 65.6997C80.0354 56.6789 80.103 47.6144 78.9827 38.6333C78.3578 33.64 77.3941 28.6737 74.8074 24.2187C72.7222 20.6252 72.4079 16.6056 72.0093 12.6124C71.7076 9.60037 70.3713 8.12624 67.4218 8.1402C57.0411 8.19569 46.663 8.31718 36.2853 8.45816C34.3055 8.48347 32.5203 9.88379 32.4554 11.8089C32.1307 21.5248 26.6015 28.7124 20.9571 35.839C17.9889 39.585 14.8121 43.1651 11.8674 46.9294C8.24326 51.5628 8.47367 56.6501 12.2825 60.1568C16.1111 63.6826 21.8768 63.3667 25.4334 59.4099C26.4349 58.2943 27.3769 57.1213 28.3449 55.9778C28.4966 56.0269 28.6529 56.0789 28.8046 56.128L28.8054 56.1317ZM73.9692 33.8783C74.4955 37.9181 75.1606 41.8767 75.414 45.886C75.8484 52.7497 76.1501 59.6149 76.1525 66.4907C76.1521 69.3925 73.3166 71.0576 70.7971 69.7597C69.4733 69.0778 68.8467 67.9303 68.7646 66.515C68.6535 64.6087 68.6632 62.6995 68.6062 60.7893C68.5634 59.3928 68.1745 58.1503 66.5276 58.1224C64.7741 58.0905 64.3442 59.367 64.2908 60.8432C64.2833 61.0955 64.3081 61.3524 64.3126 61.606C64.3484 64.727 64.3953 67.8455 64.4145 70.9623C64.4245 72.8006 63.6723 74.1789 61.8605 74.794C59.1774 75.7052 56.9853 73.9521 56.9 70.7479C56.8096 67.3765 56.8353 63.9993 56.7996 60.6277C56.7835 59.2097 56.1015 58.2388 54.6571 58.2058C53.158 58.1731 52.555 59.2486 52.507 60.6061C52.4559 62.0035 52.5161 63.4079 52.5318 64.8064C52.574 68.1179 52.6431 71.4274 52.6491 74.735C52.6523 77.3306 51.2434 79.0011 49.0691 79.1042C46.9645 79.2037 45.5268 77.7674 45.2109 75.2284C45.148 74.7253 45.1299 74.2123 45.1247 73.7044C45.0638 69.3749 44.9954 65.0471 44.9585 60.7203C44.9455 59.2625 44.2433 58.3429 42.8093 58.3391C41.3167 58.3362 40.7348 59.4188 40.7125 60.7865C40.6852 62.6329 40.7089 64.48 40.728 66.3241C40.828 75.7435 40.9214 85.1683 41.0529 94.5886C41.0765 96.3456 40.5387 97.7554 38.9126 98.5218C37.4674 99.2017 36.027 99.0074 34.8025 97.9553C33.6214 96.9406 33.5542 95.5221 33.5402 94.0958C33.3755 79.2004 33.1988 64.3038 33.0341 49.4084C33.0218 48.3303 33.2659 47.1178 31.9456 46.6309C30.6216 46.1449 30.0028 47.2199 29.3181 48.0469C27.0397 50.7925 24.7911 53.5667 22.4785 56.2805C20.5025 58.5997 17.6728 58.983 15.5172 57.308C13.3435 55.6214 13.0056 52.8562 14.6804 50.3052C15.0304 49.7745 15.426 49.2729 15.8216 48.7714C19.7641 43.767 24.1063 39.0865 27.844 33.9154C32.145 27.9711 35.8366 21.7646 36.5543 14.2419C36.6707 13.0182 37.3308 12.7056 38.4832 12.6927C47.5855 12.6111 56.6892 12.4822 65.79 12.3578C67.1914 12.3375 67.8119 12.8833 67.897 14.3841C68.155 18.9524 69.2561 23.2934 71.5701 27.3068C72.7508 29.3592 73.2678 31.6898 73.9759 33.8729L73.9692 33.8783Z",
            fill: "black"
          }
        )
        ]
      }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("defs", {
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("clipPath", {
          id: "clip0_347_87400", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "rect",
            {
              width: "71.7963",
              height: "93.0364",
              fill: "white",
              transform: "matrix(0.976955 -0.213446 -0.213446 -0.976955 20.7354 107)"
            }
          )
        })
      })
      ]
    }
  );
};
const Guide = ({
  onClose = () => {
  },
  downloadText,
  openPop = false,
  //默认关闭引导弹窗
  openGuide = true,
  //默认打开引导条
  event
}) => {
  const { t: t2 } = useTranslation();
  const [isOpen, setIsOpen] = reactExports.useState(openPop);
  const [showGuide, setShowGuide] = reactExports.useState(openGuide);
  const { websetConfig } = useUserInfoStore();
  const { promptEvent } = useGuideStore();
  const saveToDesktop = () => {
    setShowGuide(false);
    if (getBrowser().isIos) {
      setIsOpen(true);
    } else {
      if (promptEvent) {
        promptEvent.prompt();
        onClose("bottom_guide");
      }
    }
  };
  reactExports.useImperativeHandle(event, () => ({
    saveToDesktop
  }));
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
      reactDomExports.createPortal(
        showGuide && (promptEvent || getBrowser().isIos) && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$4.bottom_guide, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              className: css$4.inline,
              onClick: () => {
                saveToDesktop();
              },
              children: [
                getBrowser().isIos ? /* @__PURE__ */ jsxRuntimeExports.jsx(AddIcon, { className: css$4.add_icon }) : /* @__PURE__ */ jsxRuntimeExports.jsx(GuidePhone, { className: css$4.add_icon }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: downloadText ? downloadText : t2("首先添加到主屏幕") })
              ]
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              className: "".concat(css$4.inline, " ").concat(css$4.right),
              onClick: () => {
                setIsOpen(false);
                onClose("bottom_guide");
              },
              children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$4.right_split }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  onClick: () => {
                    setShowGuide(false);
                    onClose("bottom_guide");
                  },
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIcon, {})
                }
              )
              ]
            }
          ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(GuideDown, { className: css$4.down_icon })
          ]
        }),
        document.body
      ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
        isOpen, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
          className: css$4.guide_box, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              className: css$4.close,
              onClick: () => {
                setIsOpen(false);
                onClose("bottom_guide");
              },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(CloseIconInMineIcon, {})
            }
          ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.title, children: t2("添加到主屏幕") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.content, children: t2("1. 点击“更多”图标，然后点击添加到主屏幕") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$4.guide_1, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: t2("添加到快速备忘录") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: t2("在页面上查找") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: t2("添加到主屏幕") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: t2("荧光笔") })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.content, children: t2("2. 点击添加并选择“添加”") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
            className: css$4.guide_2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$4.line, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("取消") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("添加到主屏幕") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("加上") })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
              className: css$4.big_line, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: css$4.left, src: "/xxxx/h5/favicon.png" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
                className: css$4.right, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: websetConfig.guide_title }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.line, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: window.location.href }) })
                ]
              })
              ]
            }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$4.bottom, children: t2("您的主屏幕将添加一个图标以快速访问该网站") })
            ]
          }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "".concat(css$4.finger, " ").concat(css$4.shake_animation), children: /* @__PURE__ */ jsxRuntimeExports.jsx(GuideHand, {}) })
          ]
        })
      })
    ]
  });
};
const svg_theme_fill_color$3 = "_svg_theme_fill_color_1fxvk_3";
const download_app = "_download_app_1fxvk_55";
const fav = "_fav_1fxvk_129";
const download_container = "_download_container_1fxvk_136";
const download_context = "_download_context_1fxvk_141";
const download_btns = "_download_btns_1fxvk_176";
const cancel = "_cancel_1fxvk_195";
const sure = "_sure_1fxvk_199";
const css$3 = {
  svg_theme_fill_color: svg_theme_fill_color$3,
  download_app,
  fav,
  download_container,
  download_context,
  download_btns,
  cancel,
  sure
};
const DownloadPop = ({ onClose = () => {
}, downloadText }) => {
  reactExports.useState(false);
  const [show, setShow] = reactExports.useState(true);
  const { websetConfig, appUrl } = useUserInfoStore();
  const { t: t2 } = useTranslation();
  return show ? reactDomExports.createPortal(
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$3.download_app, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$3.fav, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, { className: css$3.fav, src: "/xxxx/h5/favicon.png" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$3.download_container, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$3.download_context, children: (websetConfig == null ? void 0 : websetConfig.banner_bottom_text) ? /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: websetConfig.banner_bottom_text }) : /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("下载并使用App即可参与更多活动，享受更多优惠！") }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$3.download_btns, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "button",
          {
            className: joinClass(css$3.cancel, "button"),
            onClick: () => {
              setShow(false);
              onClose("bottom_download_app");
            },
            children: t2("取消")
          }
        ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
          "button",
          {
            className: joinClass(css$3.sure, "button"),
            onClick: () => {
              window.open(appUrl, "_blank");
            },
            children: t2("继续")
          }
        )
        ]
      })
      ]
    })
    ]
  }),
    document.body
  ) : /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
};
const PopBox = ({ onClickToLink }) => {
  const location2 = useLocation();
  const today = dayjs().format("YYYY-MM-DD");
  const { token: token2, websetConfig } = useUserInfoStore();
  const [showType, setShowType] = reactExports.useState(null);
  const onClose = (type4) => {
    setShowType(null);
    Cache$1.set(type4, today);
  };
  const getPopSet = async () => {
    if (!+websetConfig.banner_bottom_switch) {
      setShowType(null);
      return;
    }
    switch (websetConfig.banner_bottom_switch) {
      case "1":
        setShowType("download");
        break;
      case "2":
        setShowType("guide");
    }
  };
  reactExports.useEffect(() => {
    getPopSet();
  }, [token2, websetConfig.banner_bottom_switch]);
  if (location2.pathname !== "/")
    return;
  if (!showType)
    return;
  if (showType === "guide") {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      Guide,
      {
        onClose
      }
    );
  }
  if (showType === "download") {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        DownloadPop,
        {
          onClose
        }
      )
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
};
const svg_theme_fill_color$2 = "_svg_theme_fill_color_n1uyq_3";
const ToTop$1 = "_ToTop_n1uyq_55";
const ToTop_svg = "_ToTop_svg_n1uyq_160";
const ToTop_svg_bg = "_ToTop_svg_bg_n1uyq_164";
const ToTop_svg_icon = "_ToTop_svg_icon_n1uyq_233";
const ToTop_hidden = "_ToTop_hidden_n1uyq_267";
const lightColor = "_lightColor_n1uyq_275";
const css$2 = {
  svg_theme_fill_color: svg_theme_fill_color$2,
  ToTop: ToTop$1,
  ToTop_svg,
  ToTop_svg_bg,
  ToTop_svg_icon,
  ToTop_hidden,
  lightColor
};
const ToTop = () => {
  const [show, setShow] = useGetState(false);
  const location2 = useLocation();
  const handleScroll = (e2) => {
    if (e2.target.scrollTop >= e2.target.clientHeight * 0.5) {
      setShow(true);
    } else {
      setShow(false);
    }
  };
  useEventListener$1("scroll", handleScroll, { target: document.getElementById("homeBoxScroll") });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {
    // 只在首页显示  
    children: location2.pathname === "/" && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: "".concat(css$2.ToTop, " ").concat(!show && css$2.ToTop_hidden), onClick: () => {
        const scrollEl = document.getElementById("homeBoxScroll");
        scrollEl.scrollTo({
          top: 0,
          behavior: "smooth"
        });
      }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", {
        xmlns: "http://www.w3.org/2000/svg", width: "41", height: "40", viewBox: "0 0 41 40", fill: "none", className: css$2.ToTop_svg, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "20.5", cy: "20", r: "20", fill: "#2FA33F", className: css$2.ToTop_svg_bg }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M14.5 10H26.5V11H14.5V10ZM17.5 26C17.5 26 14.5 25 14.5 23C14.5 22 15.5 20.5 16.5 20.5C16.5 17 17.5 15 20.5 13C23.5 15 24.5 17 24.5 20.5C25.5 20.5 26.5 22 26.5 23C26.5 25 23.5 26 23.5 26C23.5 25 22.9 25 22.5 25V26H18.5V25C18 25 17.5 25.2 17.5 26ZM18.5 27H19.5V29C19.1667 28.8333 18.5 28.2 18.5 27ZM20.5 27H22.5C22.5 28 22.1 30 20.5 30V27ZM20.5 20C21.6046 20 22.5 19.1046 22.5 18C22.5 16.8954 21.6046 16 20.5 16C19.3954 16 18.5 16.8954 18.5 18C18.5 19.1046 19.3954 20 20.5 20Z",
            fill: "white",
            className: css$2.ToTop_svg_icon
          }
        )
        ]
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: css$2.lightColor, children: trans("顶部") })
      ]
    })
  });
};
const FloatInHome = () => {
  useLocation();
  const navigate = useNavigate();
  const { standalone } = useGuideStore();
  const { isSetWithdrawPassword } = useUserInfoStore();
  const onClickToLink = (link) => {
    if (!link)
      return;
    if (link.indexOf("http") > -1) {
      window.open(link);
      return;
    }
    if (link === "登录") {
      useUserInfoStore.setState({ openForLogin: true });
      return;
    }
    if (link === "注册") {
      useUserInfoStore.setState({ openForRegister: true });
      return;
    }
    if (link === "推广") {
      navigate("/agent");
      return;
    }
    if (link === "充值") {
      navigate("/deposit");
      return;
    }
    if (link === "提现") {
      if (isSetWithdrawPassword) {
        navigate("/withdraw");
      } else {
        navigate("/set-withdraw-psw?to=withdraw");
      }
      return;
    }
    if (link === "客服") {
      navigate("/message?service=1");
      return;
    }
    if (link === "VIP") {
      navigate("/vip");
      return;
    }
    if (link === "个人中心") {
      navigate("/mine");
      return;
    }
    navigate(link);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$k.floatInHome, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(XuanFuTG, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FloatBox, { onClickToLink }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(PopBox$1, { onClickToLink }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ToTop, {}),
      browser$1.versions.mobile && !standalone && /* @__PURE__ */ jsxRuntimeExports.jsx(PopBox, {})
    ]
  });
};
const svg_theme_fill_color$1 = "_svg_theme_fill_color_eo3fq_3";
const ask_to_reload$1 = "_ask_to_reload_eo3fq_55";
const txt$1 = "_txt_eo3fq_73";
const btnBoxs$1 = "_btnBoxs_eo3fq_198";
const cancelBtn$1 = "_cancelBtn_eo3fq_204";
const sureBtn$1 = "_sureBtn_eo3fq_310";
const css$1 = {
  svg_theme_fill_color: svg_theme_fill_color$1,
  ask_to_reload: ask_to_reload$1,
  txt: txt$1,
  btnBoxs: btnBoxs$1,
  cancelBtn: cancelBtn$1,
  sureBtn: sureBtn$1
};
const cacheState$1 = {
  timer: null,
  count: 0,
  x: "",
  y: "",
  maxCount: 60 * 20,
  saveTime: 0
};
const AskToReload$1 = () => {
  const [isShow, setIsShow] = reactExports.useState(false);
  const startTimer = () => {
    cacheState$1.count = 0;
    cacheState$1.x = "";
    cacheState$1.y = "";
    clearInterval(cacheState$1.timer);
    function countTime() {
      cacheState$1.count++;
      if (cacheState$1.count >= cacheState$1.maxCount) {
        setIsShow(true);
        clearInterval(cacheState$1.timer);
        cacheState$1.count = 0;
        cacheState$1.x = "";
        cacheState$1.y = "";
      }
    }
    cacheState$1.timer = setInterval(countTime, 1 * 1e3);
  };
  reactExports.useEffect(() => {
    startTimer();
    const ontouchstart = (event) => {
      const touch = event.touches[0] || {};
      const x1 = touch.clientX || "";
      const y1 = touch.clientY || "";
      if (cacheState$1.x != x1 || cacheState$1.y != y1) {
        cacheState$1.count = 0;
      }
      cacheState$1.x = x1;
      cacheState$1.y = y1;
    };
    const onvisibilitychange = () => {
      if (document.visibilityState === "visible") {
        const cha = (/* @__PURE__ */ new Date()).valueOf() / 1e3 - cacheState$1.saveTime;
        if (cha > cacheState$1.maxCount) {
          cacheState$1.count = cacheState$1.maxCount + 1;
        }
      }
      if (document.visibilityState === "hidden") {
        cacheState$1.saveTime = (/* @__PURE__ */ new Date()).valueOf() / 1e3;
      }
    };
    window.addEventListener("ontouchstart", ontouchstart);
    window.addEventListener("visibilitychange", onvisibilitychange);
    return () => {
      window.removeEventListener("ontouchstart", ontouchstart);
      window.removeEventListener("visibilitychange", onvisibilitychange);
    };
  }, []);
  if (!isShow)
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
    isOpen: true, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css$1.ask_to_reload, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css$1.txt, children: trans("您已经很久没有操作，请刷新页面！") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css$1.btnBoxs, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$1.cancelBtn, onClick: () => {
            setIsShow(false);
            startTimer();
          }, children: trans("取消")
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css$1.sureBtn, onClick: () => {
            location.reload();
            startTimer();
          }, children: trans("确认")
        })
        ]
      })
      ]
    })
  });
};
const svg_theme_fill_color = "_svg_theme_fill_color_1qu7l_3";
const ask_to_reload = "_ask_to_reload_1qu7l_55";
const txt = "_txt_1qu7l_76";
const btnBoxs = "_btnBoxs_1qu7l_197";
const cancelBtn = "_cancelBtn_1qu7l_202";
const sureBtn = "_sureBtn_1qu7l_308";
const css = {
  svg_theme_fill_color,
  ask_to_reload,
  txt,
  btnBoxs,
  cancelBtn,
  sureBtn
};
const cacheState = {
  timer: null,
  count: 0,
  x: "",
  y: "",
  maxCount: 60 * 20,
  saveTime: 0
};
const AskToReload = () => {
  const [isShow, setIsShow] = reactExports.useState(false);
  const startTimer = () => {
    cacheState.count = 0;
    cacheState.x = "";
    cacheState.y = "";
    clearInterval(cacheState.timer);
    function countTime() {
      cacheState.count++;
      if (cacheState.count >= cacheState.maxCount) {
        setIsShow(true);
        clearInterval(cacheState.timer);
        cacheState.count = 0;
        cacheState.x = "";
        cacheState.y = "";
      }
    }
    cacheState.timer = setInterval(countTime, 1 * 1e3);
  };
  reactExports.useEffect(() => {
    startTimer();
    const onmousemove = (event) => {
      const x1 = event.clientX;
      const y1 = event.clientY;
      if (cacheState.x != x1 || cacheState.y != y1) {
        cacheState.count = 0;
      }
      cacheState.x = x1;
      cacheState.y = y1;
    };
    const onkeydown = () => {
      cacheState.count = 0;
    };
    const onvisibilitychange = () => {
      if (document.visibilityState === "visible") {
        const cha = (/* @__PURE__ */ new Date()).valueOf() / 1e3 - cacheState.saveTime;
        if (cha > cacheState.maxCount) {
          cacheState.count = cacheState.maxCount + 1;
        }
      }
      if (document.visibilityState === "hidden") {
        cacheState.saveTime = (/* @__PURE__ */ new Date()).valueOf() / 1e3;
      }
    };
    window.addEventListener("mousemove", onmousemove);
    window.addEventListener("keydown", onkeydown);
    window.addEventListener("visibilitychange", onvisibilitychange);
    return () => {
      window.removeEventListener("mousemove", onmousemove);
      window.removeEventListener("keydown", onkeydown);
      window.removeEventListener("visibilitychange", onvisibilitychange);
    };
  }, []);
  if (!isShow)
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Modal, {
    isOpen: true, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.ask_to_reload, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: css.txt, children: trans("您已经很久没有操作，请刷新页面！") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css.btnBoxs, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css.cancelBtn, onClick: () => {
            setIsShow(false);
            startTimer();
          }, children: trans("取消")
        }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", {
          className: css.sureBtn, onClick: () => {
            location.reload();
            startTimer();
          }, children: trans("确认")
        })
        ]
      })
      ]
    })
  });
};
function App() {
  const ref = reactExports.useRef(null);
  const element = useRoutes(routes);
  const {
    getUserBalanceByStore,
    websetConfig,
    getLogRegisterStyleByStore,
    logRegisterStyle
  } = useUserInfoStore();
  const [showHeader, setShowHeader] = reactExports.useState(true);
  const navigate = useNavigate();
  const isH52 = getH5Type();
  reactExports.useEffect(() => {
    getLogRegisterStyleByStore();
    if (Cache$1.get("token")) {
      postRecallbalance().then(() => {
        getUserBalanceByStore();
      });
    }
  }, []);
  reactExports.useEffect(() => {
    var _a;
    if ((_a = websetConfig == null ? void 0 : websetConfig.site_uphold) == null ? void 0 : _a.switch) {
      navigate("/maintain");
    }
    if (location.pathname === "/maintain") {
      setShowHeader(false);
    } else {
      setShowHeader(true);
    }
  }, [location.pathname, websetConfig]);
  useClickAway(() => {
    const dom = ref.current || {};
    dom.innerHTML = "";
  }, ref);
  if (!showHeader) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: css$1p.h5PageContentBox, children: element });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: css$1p.h5PageContentBox, id: "body", children: [
      element,
    /* @__PURE__ */ jsxRuntimeExports.jsx(SliderBox, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Container, { routesMaps }),
      logRegisterStyle == 1 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
        children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Login$3, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Register, {})
        ]
      }),
      logRegisterStyle == 2 && /* @__PURE__ */ jsxRuntimeExports.jsx(LogInRegister2$1, {}),
      logRegisterStyle == 3 && /* @__PURE__ */ jsxRuntimeExports.jsx(LogInRegister2, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Login, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AlertForOneSixSix, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FloatInHome, {}),
      isH52 ? /* @__PURE__ */ jsxRuntimeExports.jsx(AskToReload$1, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(AskToReload, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(RegisterByThree, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(InfoPreviewByThree, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(EditInfoByThree, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ChangeTheme, {}),
      location.pathname !== "/maintain" ? /* @__PURE__ */ jsxRuntimeExports.jsx(ShowAllSVG, {}) : null,
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref, className: css$1p.googleTipBnt, id: "g_id_signIn" })
    ]
  });
}
const App$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: App
}, Symbol.toStringTag, { value: "Module" }));
export {
  resetComponent as $,
  ArrowLeftInMineIcon as A,
  Button$1 as B,
  CountDown as C,
  DanceNum as D,
  _slicedToArray as E,
  Fresh as F,
  GameTabs as G,
  HomeBars as H,
  InfoTabs as I,
  classNames as J,
  _defineProperty as K,
  LoadingImg as L,
  Modal as M,
  _typeof as N,
  CSSMotionList as O,
  Progress as P,
  _objectWithoutProperties as Q,
  _objectSpread2 as R,
  ShareDialog as S,
  ToolTabs as T,
  UserFullIcon as U,
  _toConsumableArray as V,
  Wheel as W,
  genStyleHooks as X,
  merge as Y,
  Keyframe as Z,
  _extends$1 as _,
  useWebsetConfig as a,
  CONTAINER_MAX_OFFSET as a0,
  ConfigContext as a1,
  useCSSVarCls as a2,
  RefIcon$8 as a3,
  RefIcon$6 as a4,
  RefIcon$7 as a5,
  render as a6,
  ConfigProvider as a7,
  globalConfig as a8,
  InputClearIcon as a9,
  PescariaIcon as aA,
  lineCss as aB,
  css$1q as aC,
  index$1 as aD,
  App$1 as aE,
  Empty as aa,
  RectCopyIcon as ab,
  rebateTypes as ac,
  MoreInMineIcon as ad,
  CopyText as ae,
  PasswordInput as af,
  DownIcon as ag,
  useTimeRangeOptions as ah,
  getTimeRange as ai,
  Table as aj,
  InnerPageWithBackContext as ak,
  CloseIconInMineIcon as al,
  SearchToolIcon as am,
  browser as an,
  ShareInMineIcon as ao,
  css$1r as ap,
  useNavigateToActivity as aq,
  debounce$3 as ar,
  useRequest as as,
  useMemoizedFn$1 as at,
  useEventListener$1 as au,
  useUpdateEffect$1 as av,
  BlockchainIcon as aw,
  CartasIcon as ax,
  SlotsIcon as ay,
  ActiveSlots as az,
  Guide as b,
  DepositDialog as c,
  useReactive as d,
  useAsyncEffect as e,
  useGetState as f,
  gameTypeNames as g,
  useSetState$1 as h,
  LoadMore as i,
  clipboardExports as j,
  LeftNav as k,
  useTranslation as l,
  Button as m,
  FirstDialog as n,
  AutoScrollView as o,
  customFormatTimer as p,
  Form3 as q,
  PopCloseIcon as r,
  Input as s,
  PasswordFullIcon as t,
  useFlutterApp as u,
  Picker as v,
  PixAccountIcon as w,
  PhoneIcon as x,
  mineCss as y,
  Icon$1 as z
};

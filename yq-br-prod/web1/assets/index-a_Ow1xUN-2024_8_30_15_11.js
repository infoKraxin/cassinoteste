const __vite__fileDeps = ["assets/App-D9NLPZJN-2024_8_30_15_11.js", "assets/App-Bhaz6I2f-2024_8_30_15_11.css"], __vite__mapDeps = i => i.map(i => __vite__fileDeps[i]);
function __vite_legacy_guard() {
  import.meta.url;
  import("_").catch(() => 1);
  (async function* () {
  })().next();
}
;
function _mergeNamespaces(n2, m2) {
  for (var i = 0; i < m2.length; i++) {
    const e2 = m2[i];
    if (typeof e2 !== "string" && !Array.isArray(e2)) {
      for (const k2 in e2) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d = Object.getOwnPropertyDescriptor(e2, k2);
          if (d) {
            Object.defineProperty(n2, k2, d.get ? d : {
              enumerable: true,
              get: () => e2[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity)
      fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy)
      fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous")
      fetchOpts.credentials = "omit";
    else
      fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
const scriptRel = "modulepreload";
const assetsURL = function (dep) {
  return window.location.origin + "/yq-br-prod/web1/" + dep;
};
const seen = {};
const __vitePreload = function preload(baseModule, deps, importerUrl) {
  let promise = Promise.resolve();
  if (deps && deps.length > 0) {
    document.getElementsByTagName("link");
    const cspNonceMeta = document.querySelector("meta[property=csp-nonce]");
    const cspNonce = (cspNonceMeta == null ? void 0 : cspNonceMeta.nonce) || (cspNonceMeta == null ? void 0 : cspNonceMeta.getAttribute("nonce"));
    promise = Promise.all(deps.map((dep) => {
      dep = assetsURL(dep);
      if (dep in seen)
        return;
      seen[dep] = true;
      const isCss = dep.endsWith(".css");
      const cssSelector = isCss ? '[rel="stylesheet"]' : "";
      if (document.querySelector('link[href="'.concat(dep, '"]').concat(cssSelector))) {
        return;
      }
      const link = document.createElement("link");
      link.rel = isCss ? "stylesheet" : scriptRel;
      if (!isCss) {
        link.as = "script";
        link.crossOrigin = "";
      }
      link.href = dep;
      if (cspNonce) {
        link.setAttribute("nonce", cspNonce);
      }
      document.head.appendChild(link);
      if (isCss) {
        return new Promise((res, rej) => {
          link.addEventListener("load", res);
          link.addEventListener("error", () => rej(new Error("Unable to preload CSS for ".concat(dep))));
        });
      }
    }));
  }
  return promise.then(() => baseModule()).catch((err) => {
    const e2 = new Event("vite:preloadError", { cancelable: true });
    e2.payload = err;
    window.dispatchEvent(e2);
    if (!e2.defaultPrevented) {
      throw err;
    }
  });
};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var f2 = n2.default;
  if (typeof f2 == "function") {
    var a = function a2() {
      if (this instanceof a2) {
        return Reflect.construct(f2, arguments, this.constructor);
      }
      return f2.apply(this, arguments);
    };
    a.prototype = f2.prototype;
  } else
    a = {};
  Object.defineProperty(a, "__esModule", { value: true });
  Object.keys(n2).forEach(function (k2) {
    var d = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a, k2, d.get ? d : {
      enumerable: true,
      get: function () {
        return n2[k2];
      }
    });
  });
  return a;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$3 = Symbol.for("react.portal"), p$4 = Symbol.for("react.fragment"), q$3 = Symbol.for("react.strict_mode"), r$2 = Symbol.for("react.profiler"), t$3 = Symbol.for("react.provider"), u$2 = Symbol.for("react.context"), v$2 = Symbol.for("react.forward_ref"), w$1 = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z$1 = Symbol.iterator;
function A$1(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = z$1 && a[z$1] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B$1 = {
  isMounted: function () {
    return false;
  }, enqueueForceUpdate: function () {
  }, enqueueReplaceState: function () {
  }, enqueueSetState: function () {
  }
}, C$1 = Object.assign, D$1 = {};
function E$1(a, b, e2) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e2 || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E$1.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {
}
F.prototype = E$1.prototype;
function G$1(a, b, e2) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e2 || B$1;
}
var H$1 = G$1.prototype = new F();
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$1(a, b, e2) {
  var d, c = {}, k2 = null, h2 = null;
  if (null != b)
    for (d in void 0 !== b.ref && (h2 = b.ref), void 0 !== b.key && (k2 = "" + b.key), b)
      J.call(b, d) && !L$1.hasOwnProperty(d) && (c[d] = b[d]);
  var g = arguments.length - 2;
  if (1 === g)
    c.children = e2;
  else if (1 < g) {
    for (var f2 = Array(g), m2 = 0; m2 < g; m2++)
      f2[m2] = arguments[m2 + 2];
    c.children = f2;
  }
  if (a && a.defaultProps)
    for (d in g = a.defaultProps, g)
      void 0 === c[d] && (c[d] = g[d]);
  return { $$typeof: l$2, type: a, key: k2, ref: h2, props: c, _owner: K$1.current };
}
function N$1(a, b) {
  return { $$typeof: l$2, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$1(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l$2;
}
function escape$2(a) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function (a2) {
    return b[a2];
  });
}
var P$1 = /\/+/g;
function Q$1(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape$2("" + a.key) : b.toString(36);
}
function R$1(a, b, e2, d, c) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2)
    a = null;
  var h2 = false;
  if (null === a)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$2:
          case n$3:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a, c = c(h2), a = "" === d ? "." + Q$1(h2, 0) : d, I$1(c) ? (e2 = "", null != a && (e2 = a.replace(P$1, "$&/") + "/"), R$1(c, b, e2, "", function (a2) {
      return a2;
    })) : null != c && (O$1(c) && (c = N$1(c, e2 + (!c.key || h2 && h2.key === c.key ? "" : ("" + c.key).replace(P$1, "$&/") + "/") + a)), b.push(c)), 1;
  h2 = 0;
  d = "" === d ? "." : d + ":";
  if (I$1(a))
    for (var g = 0; g < a.length; g++) {
      k2 = a[g];
      var f2 = d + Q$1(k2, g);
      h2 += R$1(k2, b, e2, f2, c);
    }
  else if (f2 = A$1(a), "function" === typeof f2)
    for (a = f2.call(a), g = 0; !(k2 = a.next()).done;)
      k2 = k2.value, f2 = d + Q$1(k2, g++), h2 += R$1(k2, b, e2, f2, c);
  else if ("object" === k2)
    throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$1(a, b, e2) {
  if (null == a)
    return a;
  var d = [], c = 0;
  R$1(a, d, "", "", function (a2) {
    return b.call(e2, a2, c++);
  });
  return d;
}
function T$1(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function (b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 1, a._result = b2;
    }, function (b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 2, a._result = b2;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status)
    return a._result.default;
  throw a._result;
}
var U$1 = { current: null }, V$1 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$1, ReactCurrentOwner: K$1 };
function X$1() {
  throw Error("act(...) is not supported in production builds of React.");
}
react_production_min.Children = {
  map: S$1, forEach: function (a, b, e2) {
    S$1(a, function () {
      b.apply(this, arguments);
    }, e2);
  }, count: function (a) {
    var b = 0;
    S$1(a, function () {
      b++;
    });
    return b;
  }, toArray: function (a) {
    return S$1(a, function (a2) {
      return a2;
    }) || [];
  }, only: function (a) {
    if (!O$1(a))
      throw Error("React.Children.only expected to receive a single React element child.");
    return a;
  }
};
react_production_min.Component = E$1;
react_production_min.Fragment = p$4;
react_production_min.Profiler = r$2;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$3;
react_production_min.Suspense = w$1;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.act = X$1;
react_production_min.cloneElement = function (a, b, e2) {
  if (null === a || void 0 === a)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C$1({}, a.props), c = a.key, k2 = a.ref, h2 = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k2 = b.ref, h2 = K$1.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps)
      var g = a.type.defaultProps;
    for (f2 in b)
      J.call(b, f2) && !L$1.hasOwnProperty(f2) && (d[f2] = void 0 === b[f2] && void 0 !== g ? g[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d.children = e2;
  else if (1 < f2) {
    g = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g[m2] = arguments[m2 + 2];
    d.children = g;
  }
  return { $$typeof: l$2, type: a.type, key: c, ref: k2, props: d, _owner: h2 };
};
react_production_min.createContext = function (a) {
  a = { $$typeof: u$2, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t$3, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = M$1;
react_production_min.createFactory = function (a) {
  var b = M$1.bind(null, a);
  b.type = a;
  return b;
};
react_production_min.createRef = function () {
  return { current: null };
};
react_production_min.forwardRef = function (a) {
  return { $$typeof: v$2, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function (a) {
  return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function (a, b) {
  return { $$typeof: x, type: a, compare: void 0 === b ? null : b };
};
react_production_min.startTransition = function (a) {
  var b = V$1.transition;
  V$1.transition = {};
  try {
    a();
  } finally {
    V$1.transition = b;
  }
};
react_production_min.unstable_act = X$1;
react_production_min.useCallback = function (a, b) {
  return U$1.current.useCallback(a, b);
};
react_production_min.useContext = function (a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function () {
};
react_production_min.useDeferredValue = function (a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function (a, b) {
  return U$1.current.useEffect(a, b);
};
react_production_min.useId = function () {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function (a, b, e2) {
  return U$1.current.useImperativeHandle(a, b, e2);
};
react_production_min.useInsertionEffect = function (a, b) {
  return U$1.current.useInsertionEffect(a, b);
};
react_production_min.useLayoutEffect = function (a, b) {
  return U$1.current.useLayoutEffect(a, b);
};
react_production_min.useMemo = function (a, b) {
  return U$1.current.useMemo(a, b);
};
react_production_min.useReducer = function (a, b, e2) {
  return U$1.current.useReducer(a, b, e2);
};
react_production_min.useRef = function (a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function (a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function (a, b, e2) {
  return U$1.current.useSyncExternalStore(a, b, e2);
};
react_production_min.useTransition = function () {
  return U$1.current.useTransition();
};
react_production_min.version = "18.3.1";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = reactExports, k$1 = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$2 = Object.prototype.hasOwnProperty, n$2 = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$3 = { key: true, ref: true, __self: true, __source: true };
function q$2(c, a, g) {
  var b, d = {}, e2 = null, h2 = null;
  void 0 !== g && (e2 = "" + g);
  void 0 !== a.key && (e2 = "" + a.key);
  void 0 !== a.ref && (h2 = a.ref);
  for (b in a)
    m$2.call(a, b) && !p$3.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in a = c.defaultProps, a)
      void 0 === d[b] && (d[b] = a[b]);
  return { $$typeof: k$1, type: c, key: e2, ref: h2, props: d, _owner: n$2.current };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$2;
reactJsxRuntime_production_min.jsxs = q$2;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
(function (window2) {
  if (typeof window2 === "undefined") {
    throw new Error("Geetest requires browser environment");
  }
  var document2 = window2.document;
  var Math2 = window2.Math;
  var head = document2.getElementsByTagName("head")[0];
  var TIMEOUT = 1e4;
  function _Object(obj) {
    this._obj = obj;
  }
  _Object.prototype = {
    _each: function (process2) {
      var _obj = this._obj;
      for (var k2 in _obj) {
        if (_obj.hasOwnProperty(k2)) {
          process2(k2, _obj[k2]);
        }
      }
      return this;
    },
    _extend: function (obj) {
      var self2 = this;
      new _Object(obj)._each(function (key, value) {
        self2._obj[key] = value;
      });
    }
  };
  var uuid = function () {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
      var r2 = Math2.random() * 16 | 0;
      var v2 = c === "x" ? r2 : r2 & 3 | 8;
      return v2.toString(16);
    });
  };
  function Config(config) {
    var self2 = this;
    new _Object(config)._each(function (key, value) {
      self2[key] = value;
    });
  }
  Config.prototype = {
    apiServers: ["gcaptcha4.geetest.com", "gcaptcha4.geevisit.com", "gcaptcha4.gsensebot.com"],
    staticServers: ["static.geetest.com", "static.geevisit.com"],
    protocol: "http://",
    typePath: "/load",
    fallback_config: {
      bypass: {
        staticServers: ["static.geetest.com", "static.geevisit.com"],
        type: "bypass",
        bypass: "/v4/bypass.js"
      }
    },
    _get_fallback_config: function () {
      var self2 = this;
      if (isString2(self2.type)) {
        return self2.fallback_config[self2.type];
      } else {
        return self2.fallback_config.bypass;
      }
    },
    _extend: function (obj) {
      var self2 = this;
      new _Object(obj)._each(function (key, value) {
        self2[key] = value;
      });
    }
  };
  var isNumber2 = function (value) {
    return typeof value === "number";
  };
  var isString2 = function (value) {
    return typeof value === "string";
  };
  var isBoolean2 = function (value) {
    return typeof value === "boolean";
  };
  var isObject = function (value) {
    return typeof value === "object" && value !== null;
  };
  var isFunction2 = function (value) {
    return typeof value === "function";
  };
  var MOBILE = /Mobi/i.test(navigator.userAgent);
  var callbacks = {};
  var status = {};
  var random = function () {
    return parseInt(Math2.random() * 1e4) + (/* @__PURE__ */ new Date()).valueOf();
  };
  var bind3 = function (target, context) {
    if (typeof target !== "function") {
      return;
    }
    var args = Array.prototype.slice.call(arguments, 2);
    if (Function.prototype.bind) {
      return target.bind(context, args);
    } else {
      return function () {
        var _args = Array.prototype.slice.call(arguments);
        return target.apply(context, args.concat(_args));
      };
    }
  };
  var toString = Object.prototype.toString;
  var _isFunction = function (obj) {
    return typeof obj === "function";
  };
  var _isObject = function (obj) {
    return obj === Object(obj);
  };
  var _isArray = function (obj) {
    return toString.call(obj) == "[object Array]";
  };
  var _isDate = function (obj) {
    return toString.call(obj) == "[object Date]";
  };
  var _isRegExp = function (obj) {
    return toString.call(obj) == "[object RegExp]";
  };
  var _isBoolean = function (obj) {
    return toString.call(obj) == "[object Boolean]";
  };
  function resolveKey(input) {
    return input.replace(/(\S)(_([a-zA-Z]))/g, function (match, $1, $2, $3) {
      return $1 + $3.toUpperCase() || "";
    });
  }
  function camelizeKeys(input, convert) {
    if (!_isObject(input) || _isDate(input) || _isRegExp(input) || _isBoolean(input) || _isFunction(input)) {
      return convert ? resolveKey(input) : input;
    }
    if (_isArray(input)) {
      var temp = [];
      for (var i = 0; i < input.length; i++) {
        temp.push(camelizeKeys(input[i]));
      }
    } else {
      var temp = {};
      for (var prop in input) {
        if (input.hasOwnProperty(prop)) {
          temp[camelizeKeys(prop, true)] = camelizeKeys(input[prop]);
        }
      }
    }
    return temp;
  }
  var loadScript = function (url, cb2, timeout) {
    var script = document2.createElement("script");
    script.charset = "UTF-8";
    script.async = true;
    if (/static\.geetest\.com/g.test(url)) {
      script.crossOrigin = "anonymous";
    }
    script.onerror = function () {
      cb2(true);
      loaded = true;
    };
    var loaded = false;
    script.onload = script.onreadystatechange = function () {
      if (!loaded && (!script.readyState || "loaded" === script.readyState || "complete" === script.readyState)) {
        loaded = true;
        setTimeout(function () {
          cb2(false);
        }, 0);
      }
    };
    script.src = url;
    head.appendChild(script);
    setTimeout(function () {
      if (!loaded) {
        script.onerror = script.onload = null;
        script.remove && script.remove();
        cb2(true);
      }
    }, timeout || TIMEOUT);
  };
  var normalizeDomain = function (domain) {
    return domain.replace(/^https?:\/\/|\/$/g, "");
  };
  var normalizePath = function (path2) {
    path2 = path2 && path2.replace(/\/+/g, "/");
    if (path2.indexOf("/") !== 0) {
      path2 = "/" + path2;
    }
    return path2;
  };
  var normalizeQuery = function (query) {
    if (!query) {
      return "";
    }
    var q2 = "?";
    new _Object(query)._each(function (key, value) {
      if (isString2(value) || isNumber2(value) || isBoolean2(value)) {
        q2 = q2 + encodeURIComponent(key) + "=" + encodeURIComponent(value) + "&";
      }
    });
    if (q2 === "?") {
      q2 = "";
    }
    return q2.replace(/&$/, "");
  };
  var makeURL = function (protocol, domain, path2, query) {
    domain = normalizeDomain(domain);
    var url = normalizePath(path2) + normalizeQuery(query);
    if (domain) {
      url = protocol + domain + url;
    }
    return url;
  };
  var load = function (config, protocol, domains, path2, query, cb2, handleCb) {
    var tryRequest = function (at) {
      if (handleCb) {
        var cbName = "geetest_" + random();
        window2[cbName] = bind3(handleCb, null, cbName);
        query.callback = cbName;
      }
      var url = makeURL(protocol, domains[at], path2, query);
      loadScript(url, function (err) {
        if (err) {
          if (cbName) {
            try {
              window2[cbName] = function () {
                window2[cbName] = null;
              };
            } catch (e2) {
            }
          }
          if (at >= domains.length - 1) {
            cb2(true);
          } else {
            tryRequest(at + 1);
          }
        } else {
          cb2(false);
        }
      }, config.timeout);
    };
    tryRequest(0);
  };
  var jsonp = function (domains, path2, config, callback) {
    var handleCb = function (cbName, data) {
      if (data.status == "success") {
        callback(data.data);
      } else if (!data.status) {
        callback(data);
      } else {
        callback(data);
      }
      window2[cbName] = void 0;
      try {
        delete window2[cbName];
      } catch (e2) {
      }
    };
    load(config, config.protocol, domains, path2, {
      callback: "",
      captcha_id: config.captchaId,
      challenge: config.challenge || uuid(),
      client_type: MOBILE ? "h5" : "web",
      risk_type: config.riskType,
      user_info: config.userInfo,
      call_type: config.callType,
      lang: config.language ? config.language : navigator.appName === "Netscape" ? navigator.language.toLowerCase() : navigator.userLanguage.toLowerCase()
    }, function (err) {
      if (err && typeof config.offlineCb === "function") {
        config.offlineCb();
        return;
      }
      if (err) {
        callback(config._get_fallback_config());
      }
    }, handleCb);
  };
  var throwError = function (errorType, config, errObj) {
    var errors = {
      networkError: "缃戠粶閿欒",
      gtTypeError: "gt瀛楁涓嶆槸瀛楃涓茬被鍨�"
    };
    if (typeof config.onError === "function") {
      config.onError({
        desc: errObj.desc,
        msg: errObj.msg,
        code: errObj.code
      });
    } else {
      throw new Error(errors[errorType]);
    }
  };
  var detect = function () {
    return window2.Geetest || document2.getElementById("gt_lib");
  };
  if (detect()) {
    status.slide = "loaded";
  }
  var GeetestIsLoad = function (fname) {
    var GeetestIsLoad2 = false;
    var tags = { js: "script", css: "link" };
    var tagname = fname && tags[fname.split(".").pop()];
    if (tagname !== void 0) {
      var elts = document2.getElementsByTagName(tagname);
      for (var i in elts) {
        if (elts[i].href && elts[i].href.toString().indexOf(fname) > 0 || elts[i].src && elts[i].src.toString().indexOf(fname) > 0) {
          GeetestIsLoad2 = true;
        }
      }
    }
    return GeetestIsLoad2;
  };
  window2.initGeetest4 = function (userConfig, callback) {
    var config = new Config(userConfig);
    if (userConfig.https) {
      config.protocol = "https://";
    } else if (!userConfig.protocol) {
      config.protocol = window2.location.protocol + "//";
    }
    if (isObject(userConfig.getType)) {
      config._extend(userConfig.getType);
    }
    jsonp(config.apiServers, config.typePath, config, function (newConfig) {
      var newConfig = camelizeKeys(newConfig);
      if (newConfig.status === "error") {
        return throwError("networkError", config, newConfig);
      }
      var type2 = newConfig.type;
      if (config.debug) {
        new _Object(newConfig)._extend(config.debug);
      }
      var init = function () {
        config._extend(newConfig);
        callback(new window2.Geetest4(config));
      };
      callbacks[type2] = callbacks[type2] || [];
      var s = status[type2] || "init";
      if (s === "init") {
        status[type2] = "loading";
        callbacks[type2].push(init);
        if (newConfig.gctPath) {
          load(config, config.protocol, Object.hasOwnProperty.call(config, "staticServers") ? config.staticServers : newConfig.staticServers || config.staticServers, newConfig.gctPath, null, function (err) {
            if (err) {
              throwError("networkError", config, {
                code: "60205",
                msg: "Network failure",
                desc: {
                  detail: "gct resource load timeout"
                }
              });
            }
          });
        }
        load(config, config.protocol, Object.hasOwnProperty.call(config, "staticServers") ? config.staticServers : newConfig.staticServers || config.staticServers, newConfig.bypass || newConfig.staticPath + newConfig.js, null, function (err) {
          if (err) {
            status[type2] = "fail";
            throwError("networkError", config, {
              code: "60204",
              msg: "Network failure",
              desc: {
                detail: "js resource load timeout"
              }
            });
          } else {
            status[type2] = "loaded";
            var cbs = callbacks[type2];
            for (var i = 0, len = cbs.length; i < len; i = i + 1) {
              var cb2 = cbs[i];
              if (isFunction2(cb2)) {
                cb2();
              }
            }
            callbacks[type2] = [];
            status[type2] = "init";
          }
        });
      } else if (s === "loaded") {
        if (newConfig.gctPath && !GeetestIsLoad(newConfig.gctPath)) {
          load(config, config.protocol, Object.hasOwnProperty.call(config, "staticServers") ? config.staticServers : newConfig.staticServers || config.staticServers, newConfig.gctPath, null, function (err) {
            if (err) {
              throwError("networkError", config, {
                code: "60205",
                msg: "Network failure",
                desc: {
                  detail: "gct resource load timeout"
                }
              });
            }
          });
        }
        return init();
      } else if (s === "fail") {
        throwError("networkError", config, {
          code: "60204",
          msg: "Network failure",
          desc: {
            detail: "js resource load timeout"
          }
        });
      } else if (s === "loading") {
        callbacks[type2].push(init);
      }
    });
  };
})(window);
var client$1 = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function (exports) {
  function f2(a, b) {
    var c = a.length;
    a.push(b);
    a:
    for (; 0 < c;) {
      var d = c - 1 >>> 1, e2 = a[d];
      if (0 < g(e2, b))
        a[d] = b, a[c] = e2, c = d;
      else
        break a;
    }
  }
  function h2(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length)
      return null;
    var b = a[0], c = a.pop();
    if (c !== b) {
      a[0] = c;
      a:
      for (var d = 0, e2 = a.length, w2 = e2 >>> 1; d < w2;) {
        var m2 = 2 * (d + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
        if (0 > g(C2, c))
          n2 < e2 && 0 > g(x2, C2) ? (a[d] = x2, a[n2] = c, d = n2) : (a[d] = C2, a[m2] = c, d = m2);
        else if (n2 < e2 && 0 > g(x2, c))
          a[d] = x2, a[n2] = c, d = n2;
        else
          break a;
      }
    }
    return b;
  }
  function g(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function () {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function () {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b = h2(t2); null !== b;) {
      if (null === b.callback)
        k2(t2);
      else if (b.startTime <= a)
        k2(t2), b.sortIndex = b.expirationTime, f2(r2, b);
      else
        break;
      b = h2(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (null !== h2(r2))
        A2 = true, I2(J2);
      else {
        var b = h2(t2);
        null !== b && K2(H2, b.startTime - a);
      }
  }
  function J2(a, b) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c = y2;
    try {
      G2(b);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b) || a && !M2());) {
        var d = v2.callback;
        if ("function" === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e2 = d(v2.expirationTime <= b);
          b = exports.unstable_now();
          "function" === typeof e2 ? v2.callback = e2 : v2 === h2(r2) && k2(r2);
          G2(b);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports.unstable_now();
      Q2 = a;
      var b = true;
      try {
        b = O2(true, a);
      } finally {
        b ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function () {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function () {
      U2.postMessage(null);
    };
  } else
    S2 = function () {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b) {
    L2 = D2(function () {
      a(exports.unstable_now());
    }, b);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function (a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function () {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function (a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function () {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function () {
    return h2(r2);
  };
  exports.unstable_next = function (a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = y2;
    }
    var c = y2;
    y2 = b;
    try {
      return a();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_pauseExecution = function () {
  };
  exports.unstable_requestPaint = function () {
  };
  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c = y2;
    y2 = a;
    try {
      return b();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_scheduleCallback = function (a, b, c) {
    var d = exports.unstable_now();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch (a) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c + e2;
    a = { id: u2++, callback: b, priorityLevel: a, startTime: c, expirationTime: e2, sortIndex: -1 };
    c > d ? (a.sortIndex = c, f2(t2, a), null === h2(r2) && a === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c - d))) : (a.sortIndex = e2, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function (a) {
    var b = y2;
    return function () {
      var c = y2;
      y2 = b;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p$2(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + "Capture", b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++)
    da.add(b[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a) {
  if (ja.call(ma, a))
    return true;
  if (ja.call(la, a))
    return false;
  if (ka.test(a))
    return ma[a] = true;
  la[a] = true;
  return false;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type)
    return false;
  switch (typeof b) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d)
        return false;
      if (null !== c)
        return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return false;
  }
}
function qa(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a, b, c, d))
    return true;
  if (d)
    return false;
  if (null !== c)
    switch (c.type) {
      case 3:
        return !b;
      case 4:
        return false === b;
      case 5:
        return isNaN(b);
      case 6:
        return isNaN(b) || 1 > b;
    }
  return false;
}
function v$1(a, b, c, d, e2, f2, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e2;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  z[a] = new v$1(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  z[b] = new v$1(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  z[a] = new v$1(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  z[a] = new v$1(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  z[a] = new v$1(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  z[a] = new v$1(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function (a) {
  z[a] = new v$1(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  z[a] = new v$1(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function (a) {
  z[a] = new v$1(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(
    ra,
    sa
  );
  z[b] = new v$1(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v$1(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v$1(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  z[a] = new v$1(a, 1, false, a.toLowerCase(), null, false, false);
});
z.xlinkHref = new v$1("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function (a) {
  z[a] = new v$1(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta(a, b, c, d) {
  var e2 = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e2 ? 0 !== e2.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1])
    qa(b, c, e2, d) && (c = null), d || null === e2 ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e2.mustUseProperty ? a[e2.propertyName] = null === c ? 3 === e2.type ? false : "" : c : (b = e2.attributeName, d = e2.attributeNamespace, null === c ? a.removeAttribute(b) : (e2 = e2.type, c = 3 === e2 || 4 === e2 && true === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign, La;
function Ma(a) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c) {
      var b = c.stack.trim().match(/\n( *(at )?)/);
      La = b && b[1] || "";
    }
  return "\n" + La + a;
}
var Na = false;
function Oa(a, b) {
  if (!a || Na)
    return "";
  Na = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b)
      if (b = function () {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function () {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l2) {
          var d = l2;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l2) {
          d = l2;
        }
        a.call(b.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d && "string" === typeof l2.stack) {
      for (var e2 = l2.stack.split("\n"), f2 = d.stack.split("\n"), g = e2.length - 1, h2 = f2.length - 1; 1 <= g && 0 <= h2 && e2[g] !== f2[h2];)
        h2--;
      for (; 1 <= g && 0 <= h2; g--, h2--)
        if (e2[g] !== f2[h2]) {
          if (1 !== g || 1 !== h2) {
            do
              if (g--, h2--, 0 > h2 || e2[g] !== f2[h2]) {
                var k2 = "\n" + e2[g].replace(" at new ", " at ");
                a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
                return k2;
              }
            while (1 <= g && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, false), a;
    case 11:
      return a = Oa(a.type.render, false), a;
    case 1:
      return a = Oa(a.type, true), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Ca:
        return (a.displayName || "Context") + ".Consumer";
      case Ba:
        return (a._context.displayName || "Context") + ".Provider";
      case Da:
        var b = a.render;
        a = a.displayName;
        a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Ga:
        return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";
      case Ha:
        b = a._payload;
        a = a._init;
        try {
          return Qa(a(b));
        } catch (c) {
        }
    }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b)
        return b.displayName || b.name || null;
      if ("string" === typeof b)
        return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e2 = c.get, f2 = c.set;
    Object.defineProperty(a, b, {
      configurable: true, get: function () {
        return e2.call(this);
      }, set: function (a2) {
        d = "" + a2;
        f2.call(this, a2);
      }
    });
    Object.defineProperty(a, b, { enumerable: c.enumerable });
    return {
      getValue: function () {
        return d;
      }, setValue: function (a2) {
        d = "" + a2;
      }, stopTracking: function () {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a)
    return false;
  var b = a._valueTracker;
  if (!b)
    return true;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), true) : false;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a)
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked });
}
function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, "checked", b, false);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value), d = b.type;
  if (null != c)
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c)
        a.value = "" + c;
    } else
      a.value !== "" + c && (a.value = "" + c);
  else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value))
      return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a)
    null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e2 = 0; e2 < c.length; e2++)
      b["$" + c[e2]] = true;
    for (c = 0; c < a.length; c++)
      e2 = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e2 && (a[c].selected = e2), e2 && d && (a[c].defaultSelected = true);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e2 = 0; e2 < a.length; e2++) {
      if (a[e2].value === c) {
        a[e2].selected = true;
        d && (a[e2].defaultSelected = true);
        return;
      }
      null !== b || a[e2].disabled || (b = a[e2]);
    }
    null !== b && (b.selected = true);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML)
    throw Error(p$2(91));
  return A({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b)
        throw Error(p$2(92));
      if (eb(c)) {
        if (1 < c.length)
          throw Error(p$2(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = { initialValue: Sa(c) };
}
function ib(a, b) {
  var c = Sa(b.value), d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb, nb = function (a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e2) {
    MSApp.execUnsafeLocalFunction(function () {
      return a(b, c, d, e2);
    });
  } : a;
}(function (a, b) {
  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a)
    a.innerHTML = b;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
    for (b = mb.firstChild; a.firstChild;)
      a.removeChild(a.firstChild);
    for (; b.firstChild;)
      a.appendChild(b.firstChild);
  }
});
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
}
function sb(a, b) {
  a = a.style;
  for (var c in b)
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"), e2 = rb(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e2) : a[c] = e2;
    }
}
var tb = A({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML))
      throw Error(p$2(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children)
        throw Error(p$2(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML))
        throw Error(p$2(61));
    }
    if (null != b.style && "object" !== typeof b.style)
      throw Error(p$2(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf("-"))
    return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null, zb = null, Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb)
      throw Error(p$2(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb, b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b)
      for (a = 0; a < b.length; a++)
        Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {
}
var Ib = false;
function Jb(a, b, c) {
  if (Ib)
    return a(b, c);
  Ib = true;
  try {
    return Gb(a, b, c);
  } finally {
    if (Ib = false, null !== zb || null !== Ab)
      Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c)
    return null;
  var d = Db(c);
  if (null === d)
    return null;
  c = d[b];
  a:
  switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;
    default:
      a = false;
  }
  if (a)
    return null;
  if (c && "function" !== typeof c)
    throw Error(p$2(231, b, typeof c));
  return c;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", {
      get: function () {
        Lb = true;
      }
    });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a) {
    Lb = false;
  }
function Nb(a, b, c, d, e2, f2, g, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = {
  onError: function (a) {
    Ob = true;
    Pb = a;
  }
};
function Tb(a, b, c, d, e2, f2, g, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e2, f2, g, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else
      throw Error(p$2(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a) {
  var b = a, c = a;
  if (a.alternate)
    for (; b.return;)
      b = b.return;
  else {
    a = b;
    do
      b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
    while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b)
      return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a)
    throw Error(p$2(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b)
      throw Error(p$2(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b; ;) {
    var e2 = c.return;
    if (null === e2)
      break;
    var f2 = e2.alternate;
    if (null === f2) {
      d = e2.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2;) {
        if (f2 === c)
          return Xb(e2), a;
        if (f2 === d)
          return Xb(e2), b;
        f2 = f2.sibling;
      }
      throw Error(p$2(188));
    }
    if (c.return !== d.return)
      c = e2, d = f2;
    else {
      for (var g = false, h2 = e2.child; h2;) {
        if (h2 === c) {
          g = true;
          c = e2;
          d = f2;
          break;
        }
        if (h2 === d) {
          g = true;
          d = e2;
          c = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g) {
        for (h2 = f2.child; h2;) {
          if (h2 === c) {
            g = true;
            c = f2;
            d = e2;
            break;
          }
          if (h2 === d) {
            g = true;
            d = f2;
            c = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g)
          throw Error(p$2(189));
      }
    }
    if (c.alternate !== d)
      throw Error(p$2(190));
  }
  if (3 !== c.tag)
    throw Error(p$2(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag)
    return a;
  for (a = a.child; null !== a;) {
    var b = $b(a);
    if (null !== b)
      return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {
    }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c)
    return 0;
  var d = 0, e2 = a.suspendedLanes, f2 = a.pingedLanes, g = c & 268435455;
  if (0 !== g) {
    var h2 = g & ~e2;
    0 !== h2 ? d = tc(h2) : (f2 &= g, 0 !== f2 && (d = tc(f2)));
  } else
    g = c & ~e2, 0 !== g ? d = tc(g) : 0 !== f2 && (d = tc(f2));
  if (0 === d)
    return 0;
  if (0 !== b && b !== d && 0 === (b & e2) && (e2 = d & -d, f2 = b & -b, e2 >= f2 || 16 === e2 && 0 !== (f2 & 4194240)))
    return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b)
    for (a = a.entanglements, b &= d; 0 < b;)
      c = 31 - oc(b), e2 = 1 << c, d |= a[c], b &= ~e2;
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e2 = a.expirationTimes, f2 = a.pendingLanes; 0 < f2;) {
    var g = 31 - oc(f2), h2 = 1 << g, k2 = e2[g];
    if (-1 === k2) {
      if (0 === (h2 & c) || 0 !== (h2 & d))
        e2[g] = vc(h2, b);
    } else
      k2 <= b && (a.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++)
    b.push(a);
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c;) {
    var e2 = 31 - oc(c), f2 = 1 << e2;
    b[e2] = 0;
    d[e2] = -1;
    a[e2] = -1;
    c &= ~f2;
  }
}
function Cc(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c;) {
    var d = 31 - oc(c), e2 = 1 << d;
    e2 & b | a[d] & b && (a[d] |= b);
    c &= ~e2;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e2, f2) {
  if (null === a || a.nativeEvent !== f2)
    return a = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f2, targetContainers: [e2] }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e2 && -1 === b.indexOf(e2) && b.push(e2);
  return a;
}
function Uc(a, b, c, d, e2) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a, b, c, d, e2), true;
    case "dragenter":
      return Mc = Tc(Mc, a, b, c, d, e2), true;
    case "mouseover":
      return Nc = Tc(Nc, a, b, c, d, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a, b, c, d, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a, b, c, d, e2)), true;
  }
  return false;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) {
      if (b = c.tag, 13 === b) {
        if (b = Wb(c), null !== b) {
          a.blockedOn = b;
          Ic(a.priority, function () {
            Gc(c);
          });
          return;
        }
      } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn)
    return false;
  for (var b = a.targetContainers; 0 < b.length;) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else
      return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, false;
    b.shift();
  }
  return true;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b2) {
    return ad(b2, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++)
    d = Qc[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn);)
    Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a, b, c, d) {
  var e2 = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a, b, c, d);
  } finally {
    C = e2, cd.transition = f2;
  }
}
function gd(a, b, c, d) {
  var e2 = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a, b, c, d);
  } finally {
    C = e2, cd.transition = f2;
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e2 = Yc(a, b, c, d);
    if (null === e2)
      hd(a, b, d, id$1, c), Sc(a, d);
    else if (Uc(e2, a, b, c, d))
      d.stopPropagation();
    else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e2;) {
        var f2 = Cb(e2);
        null !== f2 && Ec(f2);
        f2 = Yc(a, b, c, d);
        null === f2 && hd(a, b, d, id$1, c);
        if (f2 === e2)
          break;
        e2 = f2;
      }
      null !== e2 && d.stopPropagation();
    } else
      hd(a, b, d, null, c);
  }
}
var id$1 = null;
function Yc(a, b, c, d) {
  id$1 = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a)
    if (b = Vb(a), null === b)
      a = null;
    else if (c = b.tag, 13 === c) {
      a = Wb(b);
      if (null !== a)
        return a;
      a = null;
    } else if (3 === c) {
      if (b.stateNode.current.memoizedState.isDehydrated)
        return 3 === b.tag ? b.stateNode.containerInfo : null;
      a = null;
    } else
      b !== a && (a = null);
  id$1 = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a, b = ld, c = b.length, d, e2 = "value" in kd ? kd.value : kd.textContent, f2 = e2.length;
  for (a = 0; a < c && b[a] === e2[a]; a++)
    ;
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e2[f2 - d]; d++)
    ;
  return md = e2.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b(b2, d, e2, f2, g) {
    this._reactName = b2;
    this._targetInst = e2;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g;
    this.currentTarget = null;
    for (var c in a)
      a.hasOwnProperty(c) && (b2 = a[c], this[c] = b2 ? b2(f2) : f2[c]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var a2 = this.nativeEvent;
      a2 && (a2.preventDefault ? a2.preventDefault() : "unknown" !== typeof a2.returnValue && (a2.returnValue = false), this.isDefaultPrevented = pd);
    }, stopPropagation: function () {
      var a2 = this.nativeEvent;
      a2 && (a2.stopPropagation ? a2.stopPropagation() : "unknown" !== typeof a2.cancelBubble && (a2.cancelBubble = true), this.isPropagationStopped = pd);
    }, persist: function () {
    }, isPersistent: pd
  });
  return b;
}
var sd = {
  eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function (a) {
    return a.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0
}, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, {
  screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function (a) {
    return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  }, movementX: function (a) {
    if ("movementX" in a)
      return a.movementX;
    a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
    return wd;
  }, movementY: function (a) {
    return "movementY" in a ? a.movementY : xd;
  }
}), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, {
  clipboardData: function (a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  }
}), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : false;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, {
  key: function (a) {
    if (a.key) {
      var b = Md[a.key] || a.key;
      if ("Unidentified" !== b)
        return b;
    }
    return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function (a) {
    return "keypress" === a.type ? od(a) : 0;
  }, keyCode: function (a) {
    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  }, which: function (a) {
    return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  }
}), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
  deltaX: function (a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function (a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = false;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie)
    return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length)
          return b.char;
        if (b.which)
          return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? true : false;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({ event: c, listeners: b }));
}
var pe = null, qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b))
    return a;
}
function ve(a, b) {
  if ("change" === a)
    return b;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a)
    return te(qe);
}
function Ee(a, b) {
  if ("click" === a)
    return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a)
    return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b))
    return true;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)
    return false;
  var c = Object.keys(a), d = Object.keys(b);
  if (c.length !== d.length)
    return false;
  for (d = 0; d < c.length; d++) {
    var e2 = c[d];
    if (!ja.call(b, e2) || !He(a[e2], b[e2]))
      return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild;)
    a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b)
        return { node: c, offset: b - a };
      a = d;
    }
    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? true : a && 3 === a.nodeType ? false : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : false : false;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = false;
    }
    if (c)
      a = b.contentWindow;
    else
      break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(), c = a.focusedElem, d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) {
      if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c)
        c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);
      else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e2 = c.textContent.length, f2 = Math.min(d.start, e2);
        d = void 0 === d.end ? f2 : Math.min(d.end, e2);
        !a.extend && f2 > d && (e2 = d, d = f2, f2 = e2);
        e2 = Ke(c, f2);
        var g = Ke(
          c,
          d
        );
        e2 && g && (1 !== a.rangeCount || a.anchorNode !== e2.node || a.anchorOffset !== e2.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e2.node, e2.offset), a.removeAllRanges(), f2 > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
      }
    }
    b = [];
    for (a = c; a = a.parentNode;)
      1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++)
      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({ event: b, listeners: d }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a])
    return Xe[a];
  if (!We[a])
    return a;
  var b = We[a], c;
  for (c in b)
    if (b.hasOwnProperty(c) && c in Ye)
      return Xe[a] = b[c];
  return a;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c], e2 = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b)
        for (var g = d.length - 1; 0 <= g; g--) {
          var h2 = d[g], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g = 0; g < d.length; g++) {
          h2 = d[g];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Qb)
    throw a = Rb, Qb = false, Rb = null, a;
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = /* @__PURE__ */ new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, false), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da.forEach(function (b2) {
      "selectionchange" !== b2 && (mf.has(b2) || qf(b2, false, a), qf(b2, true, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = true, qf("selectionchange", false, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e2 = ed;
      break;
    case 4:
      e2 = gd;
      break;
    default:
      e2 = fd;
  }
  c = e2.bind(null, b, c, a);
  e2 = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e2 = true);
  d ? void 0 !== e2 ? a.addEventListener(b, c, { capture: true, passive: e2 }) : a.addEventListener(b, c, true) : void 0 !== e2 ? a.addEventListener(b, c, { passive: e2 }) : a.addEventListener(b, c, false);
}
function hd(a, b, c, d, e2) {
  var f2 = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d)
    a:
    for (; ;) {
      if (null === d)
        return;
      var g = d.tag;
      if (3 === g || 4 === g) {
        var h2 = d.stateNode.containerInfo;
        if (h2 === e2 || 8 === h2.nodeType && h2.parentNode === e2)
          break;
        if (4 === g)
          for (g = d.return; null !== g;) {
            var k2 = g.tag;
            if (3 === k2 || 4 === k2) {
              if (k2 = g.stateNode.containerInfo, k2 === e2 || 8 === k2.nodeType && k2.parentNode === e2)
                return;
            }
            g = g.return;
          }
        for (; null !== h2;) {
          g = Wc(h2);
          if (null === g)
            return;
          k2 = g.tag;
          if (5 === k2 || 6 === k2) {
            d = f2 = g;
            continue a;
          }
          h2 = h2.parentNode;
        }
      }
      d = d.return;
    }
  Jb(function () {
    var d2 = f2, e3 = xb(c), g2 = [];
    a: {
      var h3 = df.get(a);
      if (void 0 !== h3) {
        var k3 = td, n2 = a;
        switch (a) {
          case "keypress":
            if (0 === od(c))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b & 4), J2 = !t2 && "scroll" === a, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d2, u2; null !== w2;) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c, e3), g2.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h3 = "mouseover" === a || "pointerover" === a;
        k3 = "mouseout" === a || "pointerout" === a;
        if (h3 && c !== wb && (n2 = c.relatedTarget || c.fromElement) && (Wc(n2) || n2[uf]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c.relatedTarget || c.toElement, k3 = d2, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d2;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a || "pointerover" === a)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c, e3);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e3) === d2 && (t2 = new t2(x2, w2 + "enter", n2, c, e3), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2;)
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2;)
                  x2 = vf(x2), u2--;
                for (; w2--;) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g2, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g2, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d2 ? ue(d2) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type)
          var na = ve;
        else if (me(h3))
          if (we)
            na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
        else
          (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
        if (na && (na = na(a, d2))) {
          ne(g2, na, c, e3);
          break a;
        }
        xa && xa(a, h3, d2);
        "focusout" === a && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d2 ? ue(d2) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable)
            Qe = xa, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g2, c, e3);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g2, c, e3);
      }
      var $a;
      if (ae)
        b: {
          switch (a) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
      else
        ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e3, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d2, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e3), g2.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c) : ke(a, c))
        d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e3 = new Ld("onBeforeInput", "beforeinput", null, c, e3), g2.push({ event: e3, listeners: d2 }), e3.data = $a);
    }
    se(g2, b);
  });
}
function tf(a, b, c) {
  return { instance: a, listener: b, currentTarget: c };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e2 = a, f2 = e2.stateNode;
    5 === e2.tag && null !== f2 && (e2 = f2, f2 = Kb(a, c), null != f2 && d.unshift(tf(a, f2, e2)), f2 = Kb(a, b), null != f2 && d.push(tf(a, f2, e2)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a)
    return null;
  do
    a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e2) {
  for (var f2 = b._reactName, g = []; null !== c && c !== d;) {
    var h2 = c, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d)
      break;
    5 === h2.tag && null !== l2 && (h2 = l2, e2 ? (k2 = Kb(c, f2), null != k2 && g.unshift(tf(c, k2, h2))) : e2 || (k2 = Kb(c, f2), null != k2 && g.push(tf(c, k2, h2))));
    c = c.return;
  }
  0 !== g.length && a.push({ event: b, listeners: g });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c)
    throw Error(p$2(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function (a) {
  return Hf.resolve(null).then(a).catch(If);
} : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, b) {
  var c = b, d = 0;
  do {
    var e2 = c.nextSibling;
    a.removeChild(c);
    if (e2 && 8 === e2.nodeType)
      if (c = e2.data, "/$" === c) {
        if (0 === d) {
          a.removeChild(e2);
          bd(b);
          return;
        }
        d--;
      } else
        "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e2;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b)
      break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b)
        break;
      if ("/$" === b)
        return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b)
          return a;
        b--;
      } else
        "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b = a[Of];
  if (b)
    return b;
  for (var c = a.parentNode; c;) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child)
        for (a = Mf(a); null !== a;) {
          if (c = a[Of])
            return c;
          a = Mf(a);
        }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag)
    return a.stateNode;
  throw Error(p$2(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a) {
  return { current: a };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c)
    return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
    return d.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c)
    e2[f2] = b[f2];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf)
    throw Error(p$2(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext)
    return c;
  d = d.getChildContext();
  for (var e2 in d)
    if (!(e2 in b))
      throw Error(p$2(108, Ra(a) || "Unknown", e2));
  return A({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return true;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d)
    throw Error(p$2(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c);
}
var eg = null, fg = false, gg = false;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = true;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a = 0, b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do
          d = d(true);
        while (null !== d);
      }
      eg = null;
      fg = false;
    } catch (e2) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e2;
    } finally {
      C = b, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e2 = 32 - oc(d) - 1;
  d &= ~(1 << e2);
  c += 1;
  var f2 = 32 - oc(b) + e2;
  if (30 < f2) {
    var g = e2 - e2 % 5;
    f2 = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e2 -= g;
    rg = 1 << 32 - oc(b) + e2 | c << e2 | d;
    sg = f2 + a;
  } else
    rg = 1 << f2 | c << e2 | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg;)
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg;)
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I = false, zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), true) : false;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, true) : false;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? { id: rg, overflow: sg } : null, a.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a))
          throw Error(p$2(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = false, xg = a);
      }
    } else {
      if (Dg(a))
        throw Error(p$2(418));
      a.flags = a.flags & -4097 | 2;
      I = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg)
    return false;
  if (!I)
    return Fg(a), I = true, false;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a))
      throw Hg(), Error(p$2(418));
    for (; b;)
      Ag(a, b), b = Lf(b.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a)
      throw Error(p$2(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else
            "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a = yg; a;)
    a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = false;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag)
          throw Error(p$2(309));
        var d = c.stateNode;
      }
      if (!d)
        throw Error(p$2(147, a));
      var e2 = d, f2 = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f2)
        return b.ref;
      b = function (a2) {
        var b2 = e2.refs;
        null === a2 ? delete b2[f2] : b2[f2] = a2;
      };
      b._stringRef = f2;
      return b;
    }
    if ("string" !== typeof a)
      throw Error(p$2(284));
    if (!c._owner)
      throw Error(p$2(290, a));
  }
  return a;
}
function Mg(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p$2(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function Ng(a) {
  var b = a._init;
  return b(a._payload);
}
function Og(a) {
  function b(b2, c2) {
    if (a) {
      var d2 = b2.deletions;
      null === d2 ? (b2.deletions = [c2], b2.flags |= 16) : d2.push(c2);
    }
  }
  function c(c2, d2) {
    if (!a)
      return null;
    for (; null !== d2;)
      b(c2, d2), d2 = d2.sibling;
    return null;
  }
  function d(a2, b2) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b2;)
      null !== b2.key ? a2.set(b2.key, b2) : a2.set(b2.index, b2), b2 = b2.sibling;
    return a2;
  }
  function e2(a2, b2) {
    a2 = Pg(a2, b2);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a)
      return b2.flags |= 1048576, c2;
    d2 = b2.alternate;
    if (null !== d2)
      return d2 = d2.index, d2 < c2 ? (b2.flags |= 2, c2) : d2;
    b2.flags |= 2;
    return c2;
  }
  function g(b2) {
    a && null === b2.alternate && (b2.flags |= 2);
    return b2;
  }
  function h2(a2, b2, c2, d2) {
    if (null === b2 || 6 !== b2.tag)
      return b2 = Qg(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e2(b2, c2);
    b2.return = a2;
    return b2;
  }
  function k2(a2, b2, c2, d2) {
    var f3 = c2.type;
    if (f3 === ya)
      return m2(a2, b2, c2.props.children, d2, c2.key);
    if (null !== b2 && (b2.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && Ng(f3) === b2.type))
      return d2 = e2(b2, c2.props), d2.ref = Lg(a2, b2, c2), d2.return = a2, d2;
    d2 = Rg(c2.type, c2.key, c2.props, null, a2.mode, d2);
    d2.ref = Lg(a2, b2, c2);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b2, c2, d2) {
    if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation)
      return b2 = Sg(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e2(b2, c2.children || []);
    b2.return = a2;
    return b2;
  }
  function m2(a2, b2, c2, d2, f3) {
    if (null === b2 || 7 !== b2.tag)
      return b2 = Tg(c2, a2.mode, d2, f3), b2.return = a2, b2;
    b2 = e2(b2, c2);
    b2.return = a2;
    return b2;
  }
  function q2(a2, b2, c2) {
    if ("string" === typeof b2 && "" !== b2 || "number" === typeof b2)
      return b2 = Qg("" + b2, a2.mode, c2), b2.return = a2, b2;
    if ("object" === typeof b2 && null !== b2) {
      switch (b2.$$typeof) {
        case va:
          return c2 = Rg(b2.type, b2.key, b2.props, null, a2.mode, c2), c2.ref = Lg(a2, null, b2), c2.return = a2, c2;
        case wa:
          return b2 = Sg(b2, a2.mode, c2), b2.return = a2, b2;
        case Ha:
          var d2 = b2._init;
          return q2(a2, d2(b2._payload), c2);
      }
      if (eb(b2) || Ka(b2))
        return b2 = Tg(b2, a2.mode, c2, null), b2.return = a2, b2;
      Mg(a2, b2);
    }
    return null;
  }
  function r2(a2, b2, c2, d2) {
    var e3 = null !== b2 ? b2.key : null;
    if ("string" === typeof c2 && "" !== c2 || "number" === typeof c2)
      return null !== e3 ? null : h2(a2, b2, "" + c2, d2);
    if ("object" === typeof c2 && null !== c2) {
      switch (c2.$$typeof) {
        case va:
          return c2.key === e3 ? k2(a2, b2, c2, d2) : null;
        case wa:
          return c2.key === e3 ? l2(a2, b2, c2, d2) : null;
        case Ha:
          return e3 = c2._init, r2(
            a2,
            b2,
            e3(c2._payload),
            d2
          );
      }
      if (eb(c2) || Ka(c2))
        return null !== e3 ? null : m2(a2, b2, c2, d2, null);
      Mg(a2, c2);
    }
    return null;
  }
  function y2(a2, b2, c2, d2, e3) {
    if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2)
      return a2 = a2.get(c2) || null, h2(b2, a2, "" + d2, e3);
    if ("object" === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, k2(b2, a2, d2, e3);
        case wa:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, l2(b2, a2, d2, e3);
        case Ha:
          var f3 = d2._init;
          return y2(a2, b2, c2, f3(d2._payload), e3);
      }
      if (eb(d2) || Ka(d2))
        return a2 = a2.get(c2) || null, m2(b2, a2, d2, e3, null);
      Mg(b2, d2);
    }
    return null;
  }
  function n2(e3, g2, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g2, w2 = g2 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e3, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b(e3, u2);
      g2 = f2(n3, g2, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length)
      return c(e3, u2), I && tg(e3, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++)
        u2 = q2(e3, h3[w2], k3), null !== u2 && (g2 = f2(u2, g2, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I && tg(e3, w2);
      return l3;
    }
    for (u2 = d(e3, u2); w2 < h3.length; w2++)
      x2 = y2(u2, e3, w2, h3[w2], k3), null !== x2 && (a && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g2 = f2(x2, g2, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a && u2.forEach(function (a2) {
      return b(e3, a2);
    });
    I && tg(e3, w2);
    return l3;
  }
  function t2(e3, g2, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3)
      throw Error(p$2(150));
    h3 = l3.call(h3);
    if (null == h3)
      throw Error(p$2(151));
    for (var u2 = l3 = null, m3 = g2, w2 = g2 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e3, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b(e3, m3);
      g2 = f2(t3, g2, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c(
        e3,
        m3
      ), I && tg(e3, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next())
        n3 = q2(e3, n3.value, k3), null !== n3 && (g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I && tg(e3, w2);
      return l3;
    }
    for (m3 = d(e3, m3); !n3.done; w2++, n3 = h3.next())
      n3 = y2(m3, e3, w2, n3.value, k3), null !== n3 && (a && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a && m3.forEach(function (a2) {
      return b(e3, a2);
    });
    I && tg(e3, w2);
    return l3;
  }
  function J2(a2, d2, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3;) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c(a2, l3.sibling);
                    d2 = e2(l3, f3.props.children);
                    d2.return = a2;
                    a2 = d2;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && Ng(k3) === l3.type) {
                  c(a2, l3.sibling);
                  d2 = e2(l3, f3.props);
                  d2.ref = Lg(a2, l3, f3);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                }
                c(a2, l3);
                break;
              } else
                b(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d2 = Tg(f3.props.children, a2.mode, h3, f3.key), d2.return = a2, a2 = d2) : (h3 = Rg(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = Lg(a2, d2, f3), h3.return = a2, a2 = h3);
          }
          return g(a2);
        case wa:
          a: {
            for (l3 = f3.key; null !== d2;) {
              if (d2.key === l3)
                if (4 === d2.tag && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                  c(a2, d2.sibling);
                  d2 = e2(d2, f3.children || []);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                } else {
                  c(a2, d2);
                  break;
                }
              else
                b(a2, d2);
              d2 = d2.sibling;
            }
            d2 = Sg(f3, a2.mode, h3);
            d2.return = a2;
            a2 = d2;
          }
          return g(a2);
        case Ha:
          return l3 = f3._init, J2(a2, d2, l3(f3._payload), h3);
      }
      if (eb(f3))
        return n2(a2, d2, f3, h3);
      if (Ka(f3))
        return t2(a2, d2, f3, h3);
      Mg(a2, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d2 && 6 === d2.tag ? (c(a2, d2.sibling), d2 = e2(d2, f3), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = Qg(f3, a2.mode, h3), d2.return = a2, a2 = d2), g(a2)) : c(a2, d2);
  }
  return J2;
}
var Ug = Og(true), Vg = Og(false), Wg = Uf(null), Xg = null, Yg = null, Zg = null;
function $g() {
  Zg = Yg = Xg = null;
}
function ah(a) {
  var b = Wg.current;
  E(Wg);
  a._currentValue = b;
}
function bh(a, b, c) {
  for (; null !== a;) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c)
      break;
    a = a.return;
  }
}
function ch(a, b) {
  Xg = a;
  Zg = Yg = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (dh = true), a.firstContext = null);
}
function eh(a) {
  var b = a._currentValue;
  if (Zg !== a)
    if (a = { context: a, memoizedValue: b, next: null }, null === Yg) {
      if (null === Xg)
        throw Error(p$2(308));
      Yg = a;
      Xg.dependencies = { lanes: 0, firstContext: a };
    } else
      Yg = Yg.next = a;
  return b;
}
var fh = null;
function gh(a) {
  null === fh ? fh = [a] : fh.push(a);
}
function hh(a, b, c, d) {
  var e2 = b.interleaved;
  null === e2 ? (c.next = c, gh(b)) : (c.next = e2.next, e2.next = c);
  b.interleaved = c;
  return ih(a, d);
}
function ih(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a;)
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  return 3 === c.tag ? c.stateNode : null;
}
var jh = false;
function kh(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function lh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function mh(a, b) {
  return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null };
}
function nh(a, b, c) {
  var d = a.updateQueue;
  if (null === d)
    return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e2 = d.pending;
    null === e2 ? b.next = b : (b.next = e2.next, e2.next = b);
    d.pending = b;
    return ih(a, c);
  }
  e2 = d.interleaved;
  null === e2 ? (b.next = b, gh(d)) : (b.next = e2.next, e2.next = b);
  d.interleaved = b;
  return ih(a, c);
}
function oh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function ph(a, b) {
  var c = a.updateQueue, d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e2 = null, f2 = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
        null === f2 ? e2 = f2 = g : f2 = f2.next = g;
        c = c.next;
      } while (null !== c);
      null === f2 ? e2 = f2 = b : f2 = f2.next = b;
    } else
      e2 = f2 = b;
    c = { baseState: d.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function qh(a, b, c, d) {
  var e2 = a.updateQueue;
  jh = false;
  var f2 = e2.firstBaseUpdate, g = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (null !== h2) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g ? f2 = l2 : g.next = l2;
    g = k2;
    var m2 = a.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e2.baseState;
    g = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a, t2 = h2;
          r2 = b;
          y2 = c;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A({}, q2, r2);
              break a;
            case 2:
              jh = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a.flags |= 64, r2 = e2.effects, null === r2 ? e2.effects = [h2] : r2.push(h2));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g |= r2;
      h2 = h2.next;
      if (null === h2)
        if (h2 = e2.shared.pending, null === h2)
          break;
        else
          r2 = h2, h2 = r2.next, r2.next = null, e2.lastBaseUpdate = r2, e2.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = m2;
    b = e2.shared.interleaved;
    if (null !== b) {
      e2 = b;
      do
        g |= e2.lane, e2 = e2.next;
      while (e2 !== b);
    } else
      null === f2 && (e2.shared.lanes = 0);
    rh |= g;
    a.lanes = g;
    a.memoizedState = q2;
  }
}
function sh(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a)
    for (b = 0; b < a.length; b++) {
      var d = a[b], e2 = d.callback;
      if (null !== e2) {
        d.callback = null;
        d = c;
        if ("function" !== typeof e2)
          throw Error(p$2(191, e2));
        e2.call(d);
      }
    }
}
var th = {}, uh = Uf(th), vh = Uf(th), wh = Uf(th);
function xh(a) {
  if (a === th)
    throw Error(p$2(174));
  return a;
}
function yh(a, b) {
  G(wh, b);
  G(vh, a);
  G(uh, th);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);
  }
  E(uh);
  G(uh, b);
}
function zh() {
  E(uh);
  E(vh);
  E(wh);
}
function Ah(a) {
  xh(wh.current);
  var b = xh(uh.current);
  var c = lb(b, a.type);
  b !== c && (G(vh, a), G(uh, c));
}
function Bh(a) {
  vh.current === a && (E(uh), E(vh));
}
var L = Uf(0);
function Ch(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data))
        return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128))
        return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a)
      break;
    for (; null === b.sibling;) {
      if (null === b.return || b.return === a)
        return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Dh = [];
function Eh() {
  for (var a = 0; a < Dh.length; a++)
    Dh[a]._workInProgressVersionPrimary = null;
  Dh.length = 0;
}
var Fh = ua.ReactCurrentDispatcher, Gh = ua.ReactCurrentBatchConfig, Hh = 0, M = null, N = null, O = null, Ih = false, Jh = false, Kh = 0, Lh = 0;
function P() {
  throw Error(p$2(321));
}
function Mh(a, b) {
  if (null === b)
    return false;
  for (var c = 0; c < b.length && c < a.length; c++)
    if (!He(a[c], b[c]))
      return false;
  return true;
}
function Nh(a, b, c, d, e2, f2) {
  Hh = f2;
  M = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Fh.current = null === a || null === a.memoizedState ? Oh : Ph;
  a = c(d, e2);
  if (Jh) {
    f2 = 0;
    do {
      Jh = false;
      Kh = 0;
      if (25 <= f2)
        throw Error(p$2(301));
      f2 += 1;
      O = N = null;
      b.updateQueue = null;
      Fh.current = Qh;
      a = c(d, e2);
    } while (Jh);
  }
  Fh.current = Rh;
  b = null !== N && null !== N.next;
  Hh = 0;
  O = N = M = null;
  Ih = false;
  if (b)
    throw Error(p$2(300));
  return a;
}
function Sh() {
  var a = 0 !== Kh;
  Kh = 0;
  return a;
}
function Th() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === O ? M.memoizedState = O = a : O = O.next = a;
  return O;
}
function Uh() {
  if (null === N) {
    var a = M.alternate;
    a = null !== a ? a.memoizedState : null;
  } else
    a = N.next;
  var b = null === O ? M.memoizedState : O.next;
  if (null !== b)
    O = b, N = a;
  else {
    if (null === a)
      throw Error(p$2(310));
    N = a;
    a = { memoizedState: N.memoizedState, baseState: N.baseState, baseQueue: N.baseQueue, queue: N.queue, next: null };
    null === O ? M.memoizedState = O = a : O = O.next = a;
  }
  return O;
}
function Vh(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function Wh(a) {
  var b = Uh(), c = b.queue;
  if (null === c)
    throw Error(p$2(311));
  c.lastRenderedReducer = a;
  var d = N, e2 = d.baseQueue, f2 = c.pending;
  if (null !== f2) {
    if (null !== e2) {
      var g = e2.next;
      e2.next = f2.next;
      f2.next = g;
    }
    d.baseQueue = e2 = f2;
    c.pending = null;
  }
  if (null !== e2) {
    f2 = e2.next;
    d = d.baseState;
    var h2 = g = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Hh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d = l2.hasEagerState ? l2.eagerState : a(d, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g = d) : k2 = k2.next = q2;
        M.lanes |= m2;
        rh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g = d : k2.next = h2;
    He(d, b.memoizedState) || (dh = true);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k2;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e2 = a;
    do
      f2 = e2.lane, M.lanes |= f2, rh |= f2, e2 = e2.next;
    while (e2 !== a);
  } else
    null === e2 && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function Xh(a) {
  var b = Uh(), c = b.queue;
  if (null === c)
    throw Error(p$2(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch, e2 = c.pending, f2 = b.memoizedState;
  if (null !== e2) {
    c.pending = null;
    var g = e2 = e2.next;
    do
      f2 = a(f2, g.action), g = g.next;
    while (g !== e2);
    He(f2, b.memoizedState) || (dh = true);
    b.memoizedState = f2;
    null === b.baseQueue && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function Yh() {
}
function Zh(a, b) {
  var c = M, d = Uh(), e2 = b(), f2 = !He(d.memoizedState, e2);
  f2 && (d.memoizedState = e2, dh = true);
  d = d.queue;
  $h(ai.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f2 || null !== O && O.memoizedState.tag & 1) {
    c.flags |= 2048;
    bi(9, ci.bind(null, c, d, e2, b), void 0, null);
    if (null === Q)
      throw Error(p$2(349));
    0 !== (Hh & 30) || di(c, b, e2);
  }
  return e2;
}
function di(a, b, c) {
  a.flags |= 16384;
  a = { getSnapshot: b, value: c };
  b = M.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, M.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function ci(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  ei(b) && fi(a);
}
function ai(a, b, c) {
  return c(function () {
    ei(b) && fi(a);
  });
}
function ei(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return true;
  }
}
function fi(a) {
  var b = ih(a, 1);
  null !== b && gi(b, a, 1, -1);
}
function hi$1(a) {
  var b = Th();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Vh, lastRenderedState: a };
  b.queue = a;
  a = a.dispatch = ii.bind(null, M, a);
  return [b.memoizedState, a];
}
function bi(a, b, c, d) {
  a = { tag: a, create: b, destroy: c, deps: d, next: null };
  b = M.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, M.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function ji() {
  return Uh().memoizedState;
}
function ki(a, b, c, d) {
  var e2 = Th();
  M.flags |= a;
  e2.memoizedState = bi(1 | b, c, void 0, void 0 === d ? null : d);
}
function li(a, b, c, d) {
  var e2 = Uh();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== N) {
    var g = N.memoizedState;
    f2 = g.destroy;
    if (null !== d && Mh(d, g.deps)) {
      e2.memoizedState = bi(b, c, f2, d);
      return;
    }
  }
  M.flags |= a;
  e2.memoizedState = bi(1 | b, c, f2, d);
}
function mi(a, b) {
  return ki(8390656, 8, a, b);
}
function $h(a, b) {
  return li(2048, 8, a, b);
}
function ni(a, b) {
  return li(4, 2, a, b);
}
function oi(a, b) {
  return li(4, 4, a, b);
}
function pi(a, b) {
  if ("function" === typeof b)
    return a = a(), b(a), function () {
      b(null);
    };
  if (null !== b && void 0 !== b)
    return a = a(), b.current = a, function () {
      b.current = null;
    };
}
function qi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return li(4, 4, pi.bind(null, b, a), c);
}
function ri() {
}
function si(a, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1]))
    return d[0];
  c.memoizedState = [a, b];
  return a;
}
function ti(a, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1]))
    return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function ui(a, b, c) {
  if (0 === (Hh & 21))
    return a.baseState && (a.baseState = false, dh = true), a.memoizedState = c;
  He(c, b) || (c = yc(), M.lanes |= c, rh |= c, a.baseState = true);
  return b;
}
function vi(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(true);
  var d = Gh.transition;
  Gh.transition = {};
  try {
    a(false), b();
  } finally {
    C = c, Gh.transition = d;
  }
}
function wi() {
  return Uh().memoizedState;
}
function xi(a, b, c) {
  var d = yi(a);
  c = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (zi(a))
    Ai(b, c);
  else if (c = hh(a, b, c, d), null !== c) {
    var e2 = R();
    gi(c, a, d, e2);
    Bi(c, b, d);
  }
}
function ii(a, b, c) {
  var d = yi(a), e2 = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (zi(a))
    Ai(b, e2);
  else {
    var f2 = a.alternate;
    if (0 === a.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b.lastRenderedReducer, null !== f2))
      try {
        var g = b.lastRenderedState, h2 = f2(g, c);
        e2.hasEagerState = true;
        e2.eagerState = h2;
        if (He(h2, g)) {
          var k2 = b.interleaved;
          null === k2 ? (e2.next = e2, gh(b)) : (e2.next = k2.next, k2.next = e2);
          b.interleaved = e2;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c = hh(a, b, e2, d);
    null !== c && (e2 = R(), gi(c, a, d, e2), Bi(c, b, d));
  }
}
function zi(a) {
  var b = a.alternate;
  return a === M || null !== b && b === M;
}
function Ai(a, b) {
  Jh = Ih = true;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Bi(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var Rh = { readContext: eh, useCallback: P, useContext: P, useEffect: P, useImperativeHandle: P, useInsertionEffect: P, useLayoutEffect: P, useMemo: P, useReducer: P, useRef: P, useState: P, useDebugValue: P, useDeferredValue: P, useTransition: P, useMutableSource: P, useSyncExternalStore: P, useId: P, unstable_isNewReconciler: false }, Oh = {
  readContext: eh, useCallback: function (a, b) {
    Th().memoizedState = [a, void 0 === b ? null : b];
    return a;
  }, useContext: eh, useEffect: mi, useImperativeHandle: function (a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null;
    return ki(
      4194308,
      4,
      pi.bind(null, b, a),
      c
    );
  }, useLayoutEffect: function (a, b) {
    return ki(4194308, 4, a, b);
  }, useInsertionEffect: function (a, b) {
    return ki(4, 2, a, b);
  }, useMemo: function (a, b) {
    var c = Th();
    b = void 0 === b ? null : b;
    a = a();
    c.memoizedState = [a, b];
    return a;
  }, useReducer: function (a, b, c) {
    var d = Th();
    b = void 0 !== c ? c(b) : b;
    d.memoizedState = d.baseState = b;
    a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
    d.queue = a;
    a = a.dispatch = xi.bind(null, M, a);
    return [d.memoizedState, a];
  }, useRef: function (a) {
    var b = Th();
    a = { current: a };
    return b.memoizedState = a;
  }, useState: hi$1, useDebugValue: ri, useDeferredValue: function (a) {
    return Th().memoizedState = a;
  }, useTransition: function () {
    var a = hi$1(false), b = a[0];
    a = vi.bind(null, a[1]);
    Th().memoizedState = a;
    return [b, a];
  }, useMutableSource: function () {
  }, useSyncExternalStore: function (a, b, c) {
    var d = M, e2 = Th();
    if (I) {
      if (void 0 === c)
        throw Error(p$2(407));
      c = c();
    } else {
      c = b();
      if (null === Q)
        throw Error(p$2(349));
      0 !== (Hh & 30) || di(d, b, c);
    }
    e2.memoizedState = c;
    var f2 = { value: c, getSnapshot: b };
    e2.queue = f2;
    mi(ai.bind(
      null,
      d,
      f2,
      a
    ), [a]);
    d.flags |= 2048;
    bi(9, ci.bind(null, d, f2, c, b), void 0, null);
    return c;
  }, useId: function () {
    var a = Th(), b = Q.identifierPrefix;
    if (I) {
      var c = sg;
      var d = rg;
      c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
      b = ":" + b + "R" + c;
      c = Kh++;
      0 < c && (b += "H" + c.toString(32));
      b += ":";
    } else
      c = Lh++, b = ":" + b + "r" + c.toString(32) + ":";
    return a.memoizedState = b;
  }, unstable_isNewReconciler: false
}, Ph = {
  readContext: eh,
  useCallback: si,
  useContext: eh,
  useEffect: $h,
  useImperativeHandle: qi,
  useInsertionEffect: ni,
  useLayoutEffect: oi,
  useMemo: ti,
  useReducer: Wh,
  useRef: ji,
  useState: function () {
    return Wh(Vh);
  },
  useDebugValue: ri,
  useDeferredValue: function (a) {
    var b = Uh();
    return ui(b, N.memoizedState, a);
  },
  useTransition: function () {
    var a = Wh(Vh)[0], b = Uh().memoizedState;
    return [a, b];
  },
  useMutableSource: Yh,
  useSyncExternalStore: Zh,
  useId: wi,
  unstable_isNewReconciler: false
}, Qh = {
  readContext: eh, useCallback: si, useContext: eh, useEffect: $h, useImperativeHandle: qi, useInsertionEffect: ni, useLayoutEffect: oi, useMemo: ti, useReducer: Xh, useRef: ji, useState: function () {
    return Xh(Vh);
  }, useDebugValue: ri, useDeferredValue: function (a) {
    var b = Uh();
    return null === N ? b.memoizedState = a : ui(b, N.memoizedState, a);
  }, useTransition: function () {
    var a = Xh(Vh)[0], b = Uh().memoizedState;
    return [a, b];
  }, useMutableSource: Yh, useSyncExternalStore: Zh, useId: wi, unstable_isNewReconciler: false
};
function Ci(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a)
      void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
function Di(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var Ei = {
  isMounted: function (a) {
    return (a = a._reactInternals) ? Vb(a) === a : false;
  }, enqueueSetState: function (a, b, c) {
    a = a._reactInternals;
    var d = R(), e2 = yi(a), f2 = mh(d, e2);
    f2.payload = b;
    void 0 !== c && null !== c && (f2.callback = c);
    b = nh(a, f2, e2);
    null !== b && (gi(b, a, e2, d), oh(b, a, e2));
  }, enqueueReplaceState: function (a, b, c) {
    a = a._reactInternals;
    var d = R(), e2 = yi(a), f2 = mh(d, e2);
    f2.tag = 1;
    f2.payload = b;
    void 0 !== c && null !== c && (f2.callback = c);
    b = nh(a, f2, e2);
    null !== b && (gi(b, a, e2, d), oh(b, a, e2));
  }, enqueueForceUpdate: function (a, b) {
    a = a._reactInternals;
    var c = R(), d = yi(a), e2 = mh(c, d);
    e2.tag = 2;
    void 0 !== b && null !== b && (e2.callback = b);
    b = nh(a, e2, d);
    null !== b && (gi(b, a, d, c), oh(b, a, d));
  }
};
function Fi(a, b, c, d, e2, f2, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f2, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e2, f2) : true;
}
function Gi(a, b, c) {
  var d = false, e2 = Vf;
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = eh(f2) : (e2 = Zf(b) ? Xf : H.current, d = b.contextTypes, f2 = (d = null !== d && void 0 !== d) ? Yf(a, e2) : Vf);
  b = new b(c, f2);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = Ei;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e2, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b;
}
function Hi(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && Ei.enqueueReplaceState(b, b.state, null);
}
function Ii(a, b, c, d) {
  var e2 = a.stateNode;
  e2.props = c;
  e2.state = a.memoizedState;
  e2.refs = {};
  kh(a);
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? e2.context = eh(f2) : (f2 = Zf(b) ? Xf : H.current, e2.context = Yf(a, f2));
  e2.state = a.memoizedState;
  f2 = b.getDerivedStateFromProps;
  "function" === typeof f2 && (Di(a, b, f2, c), e2.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e2.getSnapshotBeforeUpdate || "function" !== typeof e2.UNSAFE_componentWillMount && "function" !== typeof e2.componentWillMount || (b = e2.state, "function" === typeof e2.componentWillMount && e2.componentWillMount(), "function" === typeof e2.UNSAFE_componentWillMount && e2.UNSAFE_componentWillMount(), b !== e2.state && Ei.enqueueReplaceState(e2, e2.state, null), qh(a, c, e2, d), e2.state = a.memoizedState);
  "function" === typeof e2.componentDidMount && (a.flags |= 4194308);
}
function Ji(a, b) {
  try {
    var c = "", d = b;
    do
      c += Pa(d), d = d.return;
    while (d);
    var e2 = c;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b, stack: e2, digest: null };
}
function Ki(a, b, c) {
  return { value: a, source: null, stack: null != c ? c : null, digest: null != b ? b : null };
}
function Li(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}
var Mi = "function" === typeof WeakMap ? WeakMap : Map;
function Ni(a, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function () {
    Oi || (Oi = true, Pi = d);
    Li(a, b);
  };
  return c;
}
function Qi(a, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e2 = b.value;
    c.payload = function () {
      return d(e2);
    };
    c.callback = function () {
      Li(a, b);
    };
  }
  var f2 = a.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c.callback = function () {
    Li(a, b);
    "function" !== typeof d && (null === Ri ? Ri = /* @__PURE__ */ new Set([this]) : Ri.add(this));
    var c2 = b.stack;
    this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
  });
  return c;
}
function Si(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Mi();
    var e2 = /* @__PURE__ */ new Set();
    d.set(b, e2);
  } else
    e2 = d.get(b), void 0 === e2 && (e2 = /* @__PURE__ */ new Set(), d.set(b, e2));
  e2.has(c) || (e2.add(c), a = Ti.bind(null, a, b, c), b.then(a, a));
}
function Ui(a) {
  do {
    var b;
    if (b = 13 === a.tag)
      b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? true : false : true;
    if (b)
      return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Vi(a, b, c, d, e2) {
  if (0 === (a.mode & 1))
    return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = mh(-1, 1), b.tag = 2, nh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e2;
  return a;
}
var Wi = ua.ReactCurrentOwner, dh = false;
function Xi(a, b, c, d) {
  b.child = null === a ? Vg(b, null, c, d) : Ug(b, a.child, c, d);
}
function Yi(a, b, c, d, e2) {
  c = c.render;
  var f2 = b.ref;
  ch(b, e2);
  d = Nh(a, b, c, d, f2, e2);
  c = Sh();
  if (null !== a && !dh)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e2, Zi(a, b, e2);
  I && c && vg(b);
  b.flags |= 1;
  Xi(a, b, d, e2);
  return b.child;
}
function $i(a, b, c, d, e2) {
  if (null === a) {
    var f2 = c.type;
    if ("function" === typeof f2 && !aj(f2) && void 0 === f2.defaultProps && null === c.compare && void 0 === c.defaultProps)
      return b.tag = 15, b.type = f2, bj(a, b, f2, d, e2);
    a = Rg(c.type, null, d, b, b.mode, e2);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f2 = a.child;
  if (0 === (a.lanes & e2)) {
    var g = f2.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref)
      return Zi(a, b, e2);
  }
  b.flags |= 1;
  a = Pg(f2, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function bj(a, b, c, d, e2) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d) && a.ref === b.ref)
      if (dh = false, b.pendingProps = d = f2, 0 !== (a.lanes & e2))
        0 !== (a.flags & 131072) && (dh = true);
      else
        return b.lanes = a.lanes, Zi(a, b, e2);
  }
  return cj(a, b, c, d, e2);
}
function dj(a, b, c) {
  var d = b.pendingProps, e2 = d.children, f2 = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode)
    if (0 === (b.mode & 1))
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(ej, fj), fj |= c;
    else {
      if (0 === (c & 1073741824))
        return a = null !== f2 ? f2.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b.updateQueue = null, G(ej, fj), fj |= a, null;
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d = null !== f2 ? f2.baseLanes : c;
      G(ej, fj);
      fj |= d;
    }
  else
    null !== f2 ? (d = f2.baseLanes | c, b.memoizedState = null) : d = c, G(ej, fj), fj |= d;
  Xi(a, b, e2, c);
  return b.child;
}
function gj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c)
    b.flags |= 512, b.flags |= 2097152;
}
function cj(a, b, c, d, e2) {
  var f2 = Zf(c) ? Xf : H.current;
  f2 = Yf(b, f2);
  ch(b, e2);
  c = Nh(a, b, c, d, f2, e2);
  d = Sh();
  if (null !== a && !dh)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e2, Zi(a, b, e2);
  I && d && vg(b);
  b.flags |= 1;
  Xi(a, b, c, e2);
  return b.child;
}
function hj(a, b, c, d, e2) {
  if (Zf(c)) {
    var f2 = true;
    cg(b);
  } else
    f2 = false;
  ch(b, e2);
  if (null === b.stateNode)
    ij(a, b), Gi(b, c, d), Ii(b, c, d, e2), d = true;
  else if (null === a) {
    var g = b.stateNode, h2 = b.memoizedProps;
    g.props = h2;
    var k2 = g.context, l2 = c.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = eh(l2) : (l2 = Zf(c) ? Xf : H.current, l2 = Yf(b, l2));
    var m2 = c.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== d || k2 !== l2) && Hi(b, g, d, l2);
    jh = false;
    var r2 = b.memoizedState;
    g.state = r2;
    qh(b, d, g, e2);
    k2 = b.memoizedState;
    h2 !== d || r2 !== k2 || Wf.current || jh ? ("function" === typeof m2 && (Di(b, c, m2, d), k2 = b.memoizedState), (h2 = jh || Fi(b, c, h2, d, r2, k2, l2)) ? (q2 || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k2), g.props = d, g.state = k2, g.context = l2, d = h2) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = false);
  } else {
    g = b.stateNode;
    lh(a, b);
    h2 = b.memoizedProps;
    l2 = b.type === b.elementType ? h2 : Ci(b.type, h2);
    g.props = l2;
    q2 = b.pendingProps;
    r2 = g.context;
    k2 = c.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = eh(k2) : (k2 = Zf(c) ? Xf : H.current, k2 = Yf(b, k2));
    var y2 = c.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && Hi(b, g, d, k2);
    jh = false;
    r2 = b.memoizedState;
    g.state = r2;
    qh(b, d, g, e2);
    var n2 = b.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || jh ? ("function" === typeof y2 && (Di(b, c, y2, d), n2 = b.memoizedState), (l2 = jh || Fi(b, c, l2, d, r2, n2, k2) || false) ? (m2 || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n2, k2), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n2, k2)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n2), g.props = d, g.state = n2, g.context = k2, d = l2) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), d = false);
  }
  return jj(a, b, c, d, f2, e2);
}
function jj(a, b, c, d, e2, f2) {
  gj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g)
    return e2 && dg(b, c, false), Zi(a, b, f2);
  d = b.stateNode;
  Wi.current = b;
  var h2 = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Ug(b, a.child, null, f2), b.child = Ug(b, null, h2, f2)) : Xi(a, b, h2, f2);
  b.memoizedState = d.state;
  e2 && dg(b, c, true);
  return b.child;
}
function kj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, false);
  yh(a, b.containerInfo);
}
function lj(a, b, c, d, e2) {
  Ig();
  Jg(e2);
  b.flags |= 256;
  Xi(a, b, c, d);
  return b.child;
}
var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
function nj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function oj(a, b, c) {
  var d = b.pendingProps, e2 = L.current, f2 = false, g = 0 !== (b.flags & 128), h2;
  (h2 = g) || (h2 = null !== a && null === a.memoizedState ? false : 0 !== (e2 & 2));
  if (h2)
    f2 = true, b.flags &= -129;
  else if (null === a || null !== a.memoizedState)
    e2 |= 1;
  G(L, e2 & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a))
      return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f2 ? (d = b.mode, f2 = b.child, g = { mode: "hidden", children: g }, 0 === (d & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g) : f2 = pj(g, d, 0, null), a = Tg(a, d, c, null), f2.return = b, a.return = b, f2.sibling = a, b.child = f2, b.child.memoizedState = nj(c), b.memoizedState = mj, a) : qj(b, g);
  }
  e2 = a.memoizedState;
  if (null !== e2 && (h2 = e2.dehydrated, null !== h2))
    return rj(a, b, g, d, h2, e2, c);
  if (f2) {
    f2 = d.fallback;
    g = b.mode;
    e2 = a.child;
    h2 = e2.sibling;
    var k2 = { mode: "hidden", children: d.children };
    0 === (g & 1) && b.child !== e2 ? (d = b.child, d.childLanes = 0, d.pendingProps = k2, b.deletions = null) : (d = Pg(e2, k2), d.subtreeFlags = e2.subtreeFlags & 14680064);
    null !== h2 ? f2 = Pg(h2, f2) : (f2 = Tg(f2, g, c, null), f2.flags |= 2);
    f2.return = b;
    d.return = b;
    d.sibling = f2;
    b.child = d;
    d = f2;
    f2 = b.child;
    g = a.child.memoizedState;
    g = null === g ? nj(c) : { baseLanes: g.baseLanes | c, cachePool: null, transitions: g.transitions };
    f2.memoizedState = g;
    f2.childLanes = a.childLanes & ~c;
    b.memoizedState = mj;
    return d;
  }
  f2 = a.child;
  a = f2.sibling;
  d = Pg(f2, { mode: "visible", children: d.children });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function qj(a, b) {
  b = pj({ mode: "visible", children: b }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function sj(a, b, c, d) {
  null !== d && Jg(d);
  Ug(b, a.child, null, c);
  a = qj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function rj(a, b, c, d, e2, f2, g) {
  if (c) {
    if (b.flags & 256)
      return b.flags &= -257, d = Ki(Error(p$2(422))), sj(a, b, g, d);
    if (null !== b.memoizedState)
      return b.child = a.child, b.flags |= 128, null;
    f2 = d.fallback;
    e2 = b.mode;
    d = pj({ mode: "visible", children: d.children }, e2, 0, null);
    f2 = Tg(f2, e2, g, null);
    f2.flags |= 2;
    d.return = b;
    f2.return = b;
    d.sibling = f2;
    b.child = d;
    0 !== (b.mode & 1) && Ug(b, a.child, null, g);
    b.child.memoizedState = nj(g);
    b.memoizedState = mj;
    return f2;
  }
  if (0 === (b.mode & 1))
    return sj(a, b, g, null);
  if ("$!" === e2.data) {
    d = e2.nextSibling && e2.nextSibling.dataset;
    if (d)
      var h2 = d.dgst;
    d = h2;
    f2 = Error(p$2(419));
    d = Ki(f2, d, void 0);
    return sj(a, b, g, d);
  }
  h2 = 0 !== (g & a.childLanes);
  if (dh || h2) {
    d = Q;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e2 = 2;
          break;
        case 16:
          e2 = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e2 = 32;
          break;
        case 536870912:
          e2 = 268435456;
          break;
        default:
          e2 = 0;
      }
      e2 = 0 !== (e2 & (d.suspendedLanes | g)) ? 0 : e2;
      0 !== e2 && e2 !== f2.retryLane && (f2.retryLane = e2, ih(a, e2), gi(d, a, e2, -1));
    }
    tj();
    d = Ki(Error(p$2(421)));
    return sj(a, b, g, d);
  }
  if ("$?" === e2.data)
    return b.flags |= 128, b.child = a.child, b = uj.bind(null, a), e2._reactRetry = b, null;
  a = f2.treeContext;
  yg = Lf(e2.nextSibling);
  xg = b;
  I = true;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = qj(b, d.children);
  b.flags |= 4096;
  return b;
}
function vj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  bh(a.return, b, c);
}
function wj(a, b, c, d, e2) {
  var f2 = a.memoizedState;
  null === f2 ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e2 } : (f2.isBackwards = b, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d, f2.tail = c, f2.tailMode = e2);
}
function xj(a, b, c) {
  var d = b.pendingProps, e2 = d.revealOrder, f2 = d.tail;
  Xi(a, b, d.children, c);
  d = L.current;
  if (0 !== (d & 2))
    d = d & 1 | 2, b.flags |= 128;
  else {
    if (null !== a && 0 !== (a.flags & 128))
      a:
      for (a = b.child; null !== a;) {
        if (13 === a.tag)
          null !== a.memoizedState && vj(a, c, b);
        else if (19 === a.tag)
          vj(a, c, b);
        else if (null !== a.child) {
          a.child.return = a;
          a = a.child;
          continue;
        }
        if (a === b)
          break a;
        for (; null === a.sibling;) {
          if (null === a.return || a.return === b)
            break a;
          a = a.return;
        }
        a.sibling.return = a.return;
        a = a.sibling;
      }
    d &= 1;
  }
  G(L, d);
  if (0 === (b.mode & 1))
    b.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c = b.child;
        for (e2 = null; null !== c;)
          a = c.alternate, null !== a && null === Ch(a) && (e2 = c), c = c.sibling;
        c = e2;
        null === c ? (e2 = b.child, b.child = null) : (e2 = c.sibling, c.sibling = null);
        wj(b, false, e2, c, f2);
        break;
      case "backwards":
        c = null;
        e2 = b.child;
        for (b.child = null; null !== e2;) {
          a = e2.alternate;
          if (null !== a && null === Ch(a)) {
            b.child = e2;
            break;
          }
          a = e2.sibling;
          e2.sibling = c;
          c = e2;
          e2 = a;
        }
        wj(b, true, c, null, f2);
        break;
      case "together":
        wj(b, false, null, null, void 0);
        break;
      default:
        b.memoizedState = null;
    }
  return b.child;
}
function ij(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function Zi(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  rh |= b.lanes;
  if (0 === (c & b.childLanes))
    return null;
  if (null !== a && b.child !== a.child)
    throw Error(p$2(153));
  if (null !== b.child) {
    a = b.child;
    c = Pg(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling;)
      a = a.sibling, c = c.sibling = Pg(a, a.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function yj(a, b, c) {
  switch (b.tag) {
    case 3:
      kj(b);
      Ig();
      break;
    case 5:
      Ah(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      yh(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context, e2 = b.memoizedProps.value;
      G(Wg, d._currentValue);
      d._currentValue = e2;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated)
          return G(L, L.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes))
          return oj(a, b, c);
        G(L, L.current & 1);
        a = Zi(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(L, L.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d)
          return xj(a, b, c);
        b.flags |= 128;
      }
      e2 = b.memoizedState;
      null !== e2 && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
      G(L, L.current);
      if (d)
        break;
      else
        return null;
    case 22:
    case 23:
      return b.lanes = 0, dj(a, b, c);
  }
  return Zi(a, b, c);
}
var zj, Aj, Bj, Cj;
zj = function (a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag)
      a.appendChild(c.stateNode);
    else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b)
      break;
    for (; null === c.sibling;) {
      if (null === c.return || c.return === b)
        return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Aj = function () {
};
Bj = function (a, b, c, d) {
  var e2 = a.memoizedProps;
  if (e2 !== d) {
    a = b.stateNode;
    xh(uh.current);
    var f2 = null;
    switch (c) {
      case "input":
        e2 = Ya(a, e2);
        d = Ya(a, d);
        f2 = [];
        break;
      case "select":
        e2 = A({}, e2, { value: void 0 });
        d = A({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = gb(a, e2);
        d = gb(a, d);
        f2 = [];
        break;
      default:
        "function" !== typeof e2.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l2 in e2)
      if (!d.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && null != e2[l2])
        if ("style" === l2) {
          var h2 = e2[l2];
          for (g in h2)
            h2.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h2 = null != e2 ? e2[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2))
        if ("style" === l2)
          if (h2) {
            for (g in h2)
              !h2.hasOwnProperty(g) || k2 && k2.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
            for (g in k2)
              k2.hasOwnProperty(g) && h2[g] !== k2[g] && (c || (c = {}), c[g] = k2[g]);
          } else
            c || (f2 || (f2 = []), f2.push(
              l2,
              c
            )), c = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D("scroll", a), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c && (f2 = f2 || []).push("style", c);
    var l2 = f2;
    if (b.updateQueue = l2)
      b.flags |= 4;
  }
};
Cj = function (a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Dj(a, b) {
  if (!I)
    switch (a.tailMode) {
      case "hidden":
        b = a.tail;
        for (var c = null; null !== b;)
          null !== b.alternate && (c = b), b = b.sibling;
        null === c ? a.tail = null : c.sibling = null;
        break;
      case "collapsed":
        c = a.tail;
        for (var d = null; null !== c;)
          null !== c.alternate && (d = c), c = c.sibling;
        null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
  if (b)
    for (var e2 = a.child; null !== e2;)
      c |= e2.lanes | e2.childLanes, d |= e2.subtreeFlags & 14680064, d |= e2.flags & 14680064, e2.return = a, e2 = e2.sibling;
  else
    for (e2 = a.child; null !== e2;)
      c |= e2.lanes | e2.childLanes, d |= e2.subtreeFlags, d |= e2.flags, e2.return = a, e2 = e2.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Ej(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      zh();
      E(Wf);
      E(H);
      Eh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child)
        Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Fj(zg), zg = null));
      Aj(a, b);
      S(b);
      return null;
    case 5:
      Bh(b);
      var e2 = xh(wh.current);
      c = b.type;
      if (null !== a && null != b.stateNode)
        Bj(a, b, c, d, e2), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      else {
        if (!d) {
          if (null === b.stateNode)
            throw Error(p$2(166));
          S(b);
          return null;
        }
        a = xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f2;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < lf.length; e2++)
                D(lf[e2], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D(
                "error",
                d
              );
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f2);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f2), D("invalid", d);
          }
          ub(c, f2);
          e2 = null;
          for (var g in f2)
            if (f2.hasOwnProperty(g)) {
              var h2 = f2[g];
              "children" === g ? "string" === typeof h2 ? d.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d.textContent, h2, a), e2 = ["children", h2]) : "number" === typeof h2 && d.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
                d.textContent,
                h2,
                a
              ), e2 = ["children", "" + h2]) : ea.hasOwnProperty(g) && null != h2 && "onScroll" === g && D("scroll", d);
            }
          switch (c) {
            case "input":
              Va(d);
              db(d, f2, true);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e2;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e2.nodeType ? e2 : e2.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, { is: d.is }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = true : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          zj(a, b, false, false);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e2 = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e2 = d;
                break;
              case "video":
              case "audio":
                for (e2 = 0; e2 < lf.length; e2++)
                  D(lf[e2], a);
                e2 = d;
                break;
              case "source":
                D("error", a);
                e2 = d;
                break;
              case "img":
              case "image":
              case "link":
                D(
                  "error",
                  a
                );
                D("load", a);
                e2 = d;
                break;
              case "details":
                D("toggle", a);
                e2 = d;
                break;
              case "input":
                Za(a, d);
                e2 = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e2 = d;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d.multiple };
                e2 = A({}, d, { value: void 0 });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e2 = gb(a, d);
                D("invalid", a);
                break;
              default:
                e2 = d;
            }
            ub(c, e2);
            h2 = e2;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                "style" === f2 ? sb(a, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c || "" !== k2) && ob(a, k2) : "number" === typeof k2 && ob(a, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D("scroll", a) : null != k2 && ta(a, f2, k2, g));
              }
            switch (c) {
              case "input":
                Va(a);
                db(a, d, false);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f2 = d.value;
                null != f2 ? fb(a, !!d.multiple, f2, false) : null != d.defaultValue && fb(
                  a,
                  !!d.multiple,
                  d.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e2.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode)
        Cj(a, b, a.memoizedProps, d);
      else {
        if ("string" !== typeof d && null === b.stateNode)
          throw Error(p$2(166));
        c = xh(wh.current);
        xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f2 = d.nodeValue !== c) {
            if (a = xg, null !== a)
              switch (a.tag) {
                case 3:
                  Af(d.nodeValue, c, 0 !== (a.mode & 1));
                  break;
                case 5:
                  true !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
              }
          }
          f2 && (b.flags |= 4);
        } else
          d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(L);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128))
          Hg(), Ig(), b.flags |= 98560, f2 = false;
        else if (f2 = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f2)
              throw Error(p$2(318));
            f2 = b.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p$2(317));
            f2[Of] = b;
          } else
            Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f2 = false;
        } else
          null !== zg && (Fj(zg), zg = null), f2 = true;
        if (!f2)
          return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128))
        return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (L.current & 1) ? 0 === T && (T = 3) : tj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return zh(), Aj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return ah(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(L);
      f2 = b.memoizedState;
      if (null === f2)
        return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f2.rendering;
      if (null === g)
        if (d)
          Dj(f2, false);
        else {
          if (0 !== T || null !== a && 0 !== (a.flags & 128))
            for (a = b.child; null !== a;) {
              g = Ch(a);
              if (null !== g) {
                b.flags |= 128;
                Dj(f2, false);
                d = g.updateQueue;
                null !== d && (b.updateQueue = d, b.flags |= 4);
                b.subtreeFlags = 0;
                d = c;
                for (c = b.child; null !== c;)
                  f2 = c, a = d, f2.flags &= 14680066, g = f2.alternate, null === g ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g.childLanes, f2.lanes = g.lanes, f2.child = g.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g.memoizedProps, f2.memoizedState = g.memoizedState, f2.updateQueue = g.updateQueue, f2.type = g.type, a = g.dependencies, f2.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c = c.sibling;
                G(L, L.current & 1 | 2);
                return b.child;
              }
              a = a.sibling;
            }
          null !== f2.tail && B() > Gj && (b.flags |= 128, d = true, Dj(f2, false), b.lanes = 4194304);
        }
      else {
        if (!d)
          if (a = Ch(g), null !== a) {
            if (b.flags |= 128, d = true, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Dj(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g.alternate && !I)
              return S(b), null;
          } else
            2 * B() - f2.renderingStartTime > Gj && 1073741824 !== c && (b.flags |= 128, d = true, Dj(f2, false), b.lanes = 4194304);
        f2.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f2.last, null !== c ? c.sibling = g : b.child = g, f2.last = g);
      }
      if (null !== f2.tail)
        return b = f2.tail, f2.rendering = b, f2.tail = b.sibling, f2.renderingStartTime = B(), b.sibling = null, c = L.current, G(L, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Hj(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (fj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$2(156, b.tag));
}
function Ij(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return zh(), E(Wf), E(H), Eh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Bh(b), null;
    case 13:
      E(L);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate)
          throw Error(p$2(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E(L), null;
    case 4:
      return zh(), null;
    case 10:
      return ah(b.type._context), null;
    case 22:
    case 23:
      return Hj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Jj = false, U = false, Kj = "function" === typeof WeakSet ? WeakSet : Set, V = null;
function Lj(a, b) {
  var c = a.ref;
  if (null !== c)
    if ("function" === typeof c)
      try {
        c(null);
      } catch (d) {
        W(a, b, d);
      }
    else
      c.current = null;
}
function Mj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Nj = false;
function Oj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a)
      var c = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c = (c = a.ownerDocument) && c.defaultView || window;
        var d = c.getSelection && c.getSelection();
        if (d && 0 !== d.rangeCount) {
          c = d.anchorNode;
          var e2 = d.anchorOffset, f2 = d.focusNode;
          d = d.focusOffset;
          try {
            c.nodeType, f2.nodeType;
          } catch (F2) {
            c = null;
            break a;
          }
          var g = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a, r2 = null;
          b:
          for (; ;) {
            for (var y2; ;) {
              q2 !== c || 0 !== e2 && 3 !== q2.nodeType || (h2 = g + e2);
              q2 !== f2 || 0 !== d && 3 !== q2.nodeType || (k2 = g + d);
              3 === q2.nodeType && (g += q2.nodeValue.length);
              if (null === (y2 = q2.firstChild))
                break;
              r2 = q2;
              q2 = y2;
            }
            for (; ;) {
              if (q2 === a)
                break b;
              r2 === c && ++l2 === e2 && (h2 = g);
              r2 === f2 && ++m2 === d && (k2 = g);
              if (null !== (y2 = q2.nextSibling))
                break;
              q2 = r2;
              r2 = q2.parentNode;
            }
            q2 = y2;
          }
          c = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
        } else
          c = null;
      }
    c = c || { start: 0, end: 0 };
  } else
    c = null;
  Df = { focusedElem: a, selectionRange: c };
  dd = false;
  for (V = b; null !== V;)
    if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a)
      a.return = b, V = a;
    else
      for (; null !== V;) {
        b = V;
        try {
          var n2 = b.alternate;
          if (0 !== (b.flags & 1024))
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b.stateNode, w2 = x2.getSnapshotBeforeUpdate(b.elementType === b.type ? t2 : Ci(b.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$2(163));
            }
        } catch (F2) {
          W(b, b.return, F2);
        }
        a = b.sibling;
        if (null !== a) {
          a.return = b.return;
          V = a;
          break;
        }
        V = b.return;
      }
  n2 = Nj;
  Nj = false;
  return n2;
}
function Pj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e2 = d = d.next;
    do {
      if ((e2.tag & a) === a) {
        var f2 = e2.destroy;
        e2.destroy = void 0;
        void 0 !== f2 && Mj(b, c, f2);
      }
      e2 = e2.next;
    } while (e2 !== d);
  }
}
function Qj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Rj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Sj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Sj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Tj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Uj(a) {
  a:
  for (; ;) {
    for (; null === a.sibling;) {
      if (null === a.return || Tj(a.return))
        return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;) {
      if (a.flags & 2)
        continue a;
      if (null === a.child || 4 === a.tag)
        continue a;
      else
        a.child.return = a, a = a.child;
    }
    if (!(a.flags & 2))
      return a.stateNode;
  }
}
function Vj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));
  else if (4 !== d && (a = a.child, null !== a))
    for (Vj(a, b, c), a = a.sibling; null !== a;)
      Vj(a, b, c), a = a.sibling;
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);
  else if (4 !== d && (a = a.child, null !== a))
    for (Wj(a, b, c), a = a.sibling; null !== a;)
      Wj(a, b, c), a = a.sibling;
}
var X = null, Xj = false;
function Yj(a, b, c) {
  for (c = c.child; null !== c;)
    Zj(a, b, c), c = c.sibling;
}
function Zj(a, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c);
    } catch (h2) {
    }
  switch (c.tag) {
    case 5:
      U || Lj(c, b);
    case 6:
      var d = X, e2 = Xj;
      X = null;
      Yj(a, b, c);
      X = d;
      Xj = e2;
      null !== X && (Xj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Xj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e2 = Xj;
      X = c.stateNode.containerInfo;
      Xj = true;
      Yj(a, b, c);
      X = d;
      Xj = e2;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e2 = d = d.next;
        do {
          var f2 = e2, g = f2.destroy;
          f2 = f2.tag;
          void 0 !== g && (0 !== (f2 & 2) ? Mj(c, b, g) : 0 !== (f2 & 4) && Mj(c, b, g));
          e2 = e2.next;
        } while (e2 !== d);
      }
      Yj(a, b, c);
      break;
    case 1:
      if (!U && (Lj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount))
        try {
          d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
        } catch (h2) {
          W(c, b, h2);
        }
      Yj(a, b, c);
      break;
    case 21:
      Yj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Yj(a, b, c), U = d) : Yj(a, b, c);
      break;
    default:
      Yj(a, b, c);
  }
}
function ak(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Kj());
    b.forEach(function (b2) {
      var d = bk.bind(null, a, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function ck(a, b) {
  var c = b.deletions;
  if (null !== c)
    for (var d = 0; d < c.length; d++) {
      var e2 = c[d];
      try {
        var f2 = a, g = b, h2 = g;
        a:
        for (; null !== h2;) {
          switch (h2.tag) {
            case 5:
              X = h2.stateNode;
              Xj = false;
              break a;
            case 3:
              X = h2.stateNode.containerInfo;
              Xj = true;
              break a;
            case 4:
              X = h2.stateNode.containerInfo;
              Xj = true;
              break a;
          }
          h2 = h2.return;
        }
        if (null === X)
          throw Error(p$2(160));
        Zj(f2, g, e2);
        X = null;
        Xj = false;
        var k2 = e2.alternate;
        null !== k2 && (k2.return = null);
        e2.return = null;
      } catch (l2) {
        W(e2, b, l2);
      }
    }
  if (b.subtreeFlags & 12854)
    for (b = b.child; null !== b;)
      dk(b, a), b = b.sibling;
}
function dk(a, b) {
  var c = a.alternate, d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ck(b, a);
      ek(a);
      if (d & 4) {
        try {
          Pj(3, a, a.return), Qj(3, a);
        } catch (t2) {
          W(a, a.return, t2);
        }
        try {
          Pj(5, a, a.return);
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 1:
      ck(b, a);
      ek(a);
      d & 512 && null !== c && Lj(c, c.return);
      break;
    case 5:
      ck(b, a);
      ek(a);
      d & 512 && null !== c && Lj(c, c.return);
      if (a.flags & 32) {
        var e2 = a.stateNode;
        try {
          ob(e2, "");
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      if (d & 4 && (e2 = a.stateNode, null != e2)) {
        var f2 = a.memoizedProps, g = null !== c ? c.memoizedProps : f2, h2 = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h2 && "radio" === f2.type && null != f2.name && ab(e2, f2);
            vb(h2, g);
            var l2 = vb(h2, f2);
            for (g = 0; g < k2.length; g += 2) {
              var m2 = k2[g], q2 = k2[g + 1];
              "style" === m2 ? sb(e2, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e2, q2) : "children" === m2 ? ob(e2, q2) : ta(e2, m2, q2, l2);
            }
            switch (h2) {
              case "input":
                bb(e2, f2);
                break;
              case "textarea":
                ib(e2, f2);
                break;
              case "select":
                var r2 = e2._wrapperState.wasMultiple;
                e2._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb(e2, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                  e2,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb(e2, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e2[Pf] = f2;
          } catch (t2) {
            W(a, a.return, t2);
          }
      }
      break;
    case 6:
      ck(b, a);
      ek(a);
      if (d & 4) {
        if (null === a.stateNode)
          throw Error(p$2(162));
        e2 = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e2.nodeValue = f2;
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 3:
      ck(b, a);
      ek(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated)
        try {
          bd(b.containerInfo);
        } catch (t2) {
          W(a, a.return, t2);
        }
      break;
    case 4:
      ck(b, a);
      ek(a);
      break;
    case 13:
      ck(b, a);
      ek(a);
      e2 = a.child;
      e2.flags & 8192 && (f2 = null !== e2.memoizedState, e2.stateNode.isHidden = f2, !f2 || null !== e2.alternate && null !== e2.alternate.memoizedState || (fk = B()));
      d & 4 && ak(a);
      break;
    case 22:
      m2 = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U = (l2 = U) || m2, ck(b, a), U = l2) : ck(b, a);
      ek(a);
      if (d & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1))
          for (V = a, m2 = a.child; null !== m2;) {
            for (q2 = V = m2; null !== V;) {
              r2 = V;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Pj(4, r2, r2.return);
                  break;
                case 1:
                  Lj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d = r2;
                    c = r2.return;
                    try {
                      b = d, n2.props = b.memoizedProps, n2.state = b.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W(d, c, t2);
                    }
                  }
                  break;
                case 5:
                  Lj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    gk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V = y2) : gk(q2);
            }
            m2 = m2.sibling;
          }
        a:
        for (m2 = null, q2 = a; ;) {
          if (5 === q2.tag) {
            if (null === m2) {
              m2 = q2;
              try {
                e2 = q2.stateNode, l2 ? (f2 = e2.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g));
              } catch (t2) {
                W(a, a.return, t2);
              }
            }
          } else if (6 === q2.tag) {
            if (null === m2)
              try {
                q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
              } catch (t2) {
                W(a, a.return, t2);
              }
          } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a) && null !== q2.child) {
            q2.child.return = q2;
            q2 = q2.child;
            continue;
          }
          if (q2 === a)
            break a;
          for (; null === q2.sibling;) {
            if (null === q2.return || q2.return === a)
              break a;
            m2 === q2 && (m2 = null);
            q2 = q2.return;
          }
          m2 === q2 && (m2 = null);
          q2.sibling.return = q2.return;
          q2 = q2.sibling;
        }
      }
      break;
    case 19:
      ck(b, a);
      ek(a);
      d & 4 && ak(a);
      break;
    case 21:
      break;
    default:
      ck(
        b,
        a
      ), ek(a);
  }
}
function ek(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c;) {
          if (Tj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p$2(160));
      }
      switch (d.tag) {
        case 5:
          var e2 = d.stateNode;
          d.flags & 32 && (ob(e2, ""), d.flags &= -33);
          var f2 = Uj(a);
          Wj(a, f2, e2);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo, h2 = Uj(a);
          Vj(a, h2, g);
          break;
        default:
          throw Error(p$2(161));
      }
    } catch (k2) {
      W(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function hk(a, b, c) {
  V = a;
  ik(a);
}
function ik(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V;) {
    var e2 = V, f2 = e2.child;
    if (22 === e2.tag && d) {
      var g = null !== e2.memoizedState || Jj;
      if (!g) {
        var h2 = e2.alternate, k2 = null !== h2 && null !== h2.memoizedState || U;
        h2 = Jj;
        var l2 = U;
        Jj = g;
        if ((U = k2) && !l2)
          for (V = e2; null !== V;)
            g = V, k2 = g.child, 22 === g.tag && null !== g.memoizedState ? jk(e2) : null !== k2 ? (k2.return = g, V = k2) : jk(e2);
        for (; null !== f2;)
          V = f2, ik(f2), f2 = f2.sibling;
        V = e2;
        Jj = h2;
        U = l2;
      }
      kk(a);
    } else
      0 !== (e2.subtreeFlags & 8772) && null !== f2 ? (f2.return = e2, V = f2) : kk(a);
  }
}
function kk(a) {
  for (; null !== V;) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772))
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              U || Qj(5, b);
              break;
            case 1:
              var d = b.stateNode;
              if (b.flags & 4 && !U)
                if (null === c)
                  d.componentDidMount();
                else {
                  var e2 = b.elementType === b.type ? c.memoizedProps : Ci(b.type, c.memoizedProps);
                  d.componentDidUpdate(e2, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b.updateQueue;
              null !== f2 && sh(b, f2, d);
              break;
            case 3:
              var g = b.updateQueue;
              if (null !== g) {
                c = null;
                if (null !== b.child)
                  switch (b.child.tag) {
                    case 5:
                      c = b.child.stateNode;
                      break;
                    case 1:
                      c = b.child.stateNode;
                  }
                sh(b, g, c);
              }
              break;
            case 5:
              var h2 = b.stateNode;
              if (null === c && b.flags & 4) {
                c = h2;
                var k2 = b.memoizedProps;
                switch (b.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c.focus();
                    break;
                  case "img":
                    k2.src && (c.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b.memoizedState) {
                var l2 = b.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$2(163));
          }
        U || b.flags & 512 && Rj(b);
      } catch (r2) {
        W(b, b.return, r2);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function gk(a) {
  for (; null !== V;) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function jk(a) {
  for (; null !== V;) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Qj(4, b);
          } catch (k2) {
            W(b, c, k2);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e2 = b.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W(b, e2, k2);
            }
          }
          var f2 = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, f2, k2);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, g, k2);
          }
      }
    } catch (k2) {
      W(b, b.return, k2);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h2 = b.sibling;
    if (null !== h2) {
      h2.return = b.return;
      V = h2;
      break;
    }
    V = b.return;
  }
}
var lk = Math.ceil, mk = ua.ReactCurrentDispatcher, nk = ua.ReactCurrentOwner, ok = ua.ReactCurrentBatchConfig, K = 0, Q = null, Y = null, Z = 0, fj = 0, ej = Uf(0), T = 0, pk = null, rh = 0, qk = 0, rk = 0, sk = null, tk = null, fk = 0, Gj = Infinity, uk = null, Oi = false, Pi = null, Ri = null, vk = false, wk = null, xk = 0, yk = 0, zk = null, Ak = -1, Bk = 0;
function R() {
  return 0 !== (K & 6) ? B() : -1 !== Ak ? Ak : Ak = B();
}
function yi(a) {
  if (0 === (a.mode & 1))
    return 1;
  if (0 !== (K & 2) && 0 !== Z)
    return Z & -Z;
  if (null !== Kg.transition)
    return 0 === Bk && (Bk = yc()), Bk;
  a = C;
  if (0 !== a)
    return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function gi(a, b, c, d) {
  if (50 < yk)
    throw yk = 0, zk = null, Error(p$2(185));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== Q)
    a === Q && (0 === (K & 2) && (qk |= c), 4 === T && Ck(a, Z)), Dk(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Gj = B() + 500, fg && jg());
}
function Dk(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d)
    null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;
  else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b)
      0 === a.tag ? ig(Ek.bind(null, a)) : hg(Ek.bind(null, a)), Jf(function () {
        0 === (K & 6) && jg();
      }), c = null;
    else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Fk(c, Gk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Gk(a, b) {
  Ak = -1;
  Bk = 0;
  if (0 !== (K & 6))
    throw Error(p$2(327));
  var c = a.callbackNode;
  if (Hk() && a.callbackNode !== c)
    return null;
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d)
    return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b)
    b = Ik(a, d);
  else {
    b = d;
    var e2 = K;
    K |= 2;
    var f2 = Jk();
    if (Q !== a || Z !== b)
      uk = null, Gj = B() + 500, Kk(a, b);
    do
      try {
        Lk();
        break;
      } catch (h2) {
        Mk(a, h2);
      }
    while (1);
    $g();
    mk.current = f2;
    K = e2;
    null !== Y ? b = 0 : (Q = null, Z = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e2 = xc(a), 0 !== e2 && (d = e2, b = Nk(a, e2)));
    if (1 === b)
      throw c = pk, Kk(a, 0), Ck(a, d), Dk(a, B()), c;
    if (6 === b)
      Ck(a, d);
    else {
      e2 = a.current.alternate;
      if (0 === (d & 30) && !Ok(e2) && (b = Ik(a, d), 2 === b && (f2 = xc(a), 0 !== f2 && (d = f2, b = Nk(a, f2))), 1 === b))
        throw c = pk, Kk(a, 0), Ck(a, d), Dk(a, B()), c;
      a.finishedWork = e2;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p$2(345));
        case 2:
          Pk(a, tk, uk);
          break;
        case 3:
          Ck(a, d);
          if ((d & 130023424) === d && (b = fk + 500 - B(), 10 < b)) {
            if (0 !== uc(a, 0))
              break;
            e2 = a.suspendedLanes;
            if ((e2 & d) !== d) {
              R();
              a.pingedLanes |= a.suspendedLanes & e2;
              break;
            }
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), b);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 4:
          Ck(a, d);
          if ((d & 4194240) === d)
            break;
          b = a.eventTimes;
          for (e2 = -1; 0 < d;) {
            var g = 31 - oc(d);
            f2 = 1 << g;
            g = b[g];
            g > e2 && (e2 = g);
            d &= ~f2;
          }
          d = e2;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * lk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), d);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 5:
          Pk(a, tk, uk);
          break;
        default:
          throw Error(p$2(329));
      }
    }
  }
  Dk(a, B());
  return a.callbackNode === c ? Gk.bind(null, a) : null;
}
function Nk(a, b) {
  var c = sk;
  a.current.memoizedState.isDehydrated && (Kk(a, b).flags |= 256);
  a = Ik(a, b);
  2 !== a && (b = tk, tk = c, null !== b && Fj(b));
  return a;
}
function Fj(a) {
  null === tk ? tk = a : tk.push.apply(tk, a);
}
function Ok(a) {
  for (var b = a; ;) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c))
        for (var d = 0; d < c.length; d++) {
          var e2 = c[d], f2 = e2.getSnapshot;
          e2 = e2.value;
          try {
            if (!He(f2(), e2))
              return false;
          } catch (g) {
            return false;
          }
        }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c)
      c.return = b, b = c;
    else {
      if (b === a)
        break;
      for (; null === b.sibling;) {
        if (null === b.return || b.return === a)
          return true;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return true;
}
function Ck(a, b) {
  b &= ~rk;
  b &= ~qk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - oc(b), d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Ek(a) {
  if (0 !== (K & 6))
    throw Error(p$2(327));
  Hk();
  var b = uc(a, 0);
  if (0 === (b & 1))
    return Dk(a, B()), null;
  var c = Ik(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && (b = d, c = Nk(a, d));
  }
  if (1 === c)
    throw c = pk, Kk(a, 0), Ck(a, b), Dk(a, B()), c;
  if (6 === c)
    throw Error(p$2(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Pk(a, tk, uk);
  Dk(a, B());
  return null;
}
function Qk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    K = c, 0 === K && (Gj = B() + 500, fg && jg());
  }
}
function Rk(a) {
  null !== wk && 0 === wk.tag && 0 === (K & 6) && Hk();
  var b = K;
  K |= 1;
  var c = ok.transition, d = C;
  try {
    if (ok.transition = null, C = 1, a)
      return a();
  } finally {
    C = d, ok.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Hj() {
  fj = ej.current;
  E(ej);
}
function Kk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y)
    for (c = Y.return; null !== c;) {
      var d = c;
      wg(d);
      switch (d.tag) {
        case 1:
          d = d.type.childContextTypes;
          null !== d && void 0 !== d && $f();
          break;
        case 3:
          zh();
          E(Wf);
          E(H);
          Eh();
          break;
        case 5:
          Bh(d);
          break;
        case 4:
          zh();
          break;
        case 13:
          E(L);
          break;
        case 19:
          E(L);
          break;
        case 10:
          ah(d.type._context);
          break;
        case 22:
        case 23:
          Hj();
      }
      c = c.return;
    }
  Q = a;
  Y = a = Pg(a.current, null);
  Z = fj = b;
  T = 0;
  pk = null;
  rk = qk = rh = 0;
  tk = sk = null;
  if (null !== fh) {
    for (b = 0; b < fh.length; b++)
      if (c = fh[b], d = c.interleaved, null !== d) {
        c.interleaved = null;
        var e2 = d.next, f2 = c.pending;
        if (null !== f2) {
          var g = f2.next;
          f2.next = e2;
          d.next = g;
        }
        c.pending = d;
      }
    fh = null;
  }
  return a;
}
function Mk(a, b) {
  do {
    var c = Y;
    try {
      $g();
      Fh.current = Rh;
      if (Ih) {
        for (var d = M.memoizedState; null !== d;) {
          var e2 = d.queue;
          null !== e2 && (e2.pending = null);
          d = d.next;
        }
        Ih = false;
      }
      Hh = 0;
      O = N = M = null;
      Jh = false;
      Kh = 0;
      nk.current = null;
      if (null === c || null === c.return) {
        T = 1;
        pk = b;
        Y = null;
        break;
      }
      a: {
        var f2 = a, g = c.return, h2 = c, k2 = b;
        b = Z;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Ui(g);
          if (null !== y2) {
            y2.flags &= -257;
            Vi(y2, g, h2, f2, b);
            y2.mode & 1 && Si(f2, l2, b);
            b = y2;
            k2 = l2;
            var n2 = b.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b & 1)) {
              Si(f2, l2, b);
              tj();
              break a;
            }
            k2 = Error(p$2(426));
          }
        } else if (I && h2.mode & 1) {
          var J2 = Ui(g);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Vi(J2, g, h2, f2, b);
            Jg(Ji(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ji(k2, h2);
        4 !== T && (T = 2);
        null === sk ? sk = [f2] : sk.push(f2);
        f2 = g;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b &= -b;
              f2.lanes |= b;
              var x2 = Ni(f2, k2, b);
              ph(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Ri || !Ri.has(u2)))) {
                f2.flags |= 65536;
                b &= -b;
                f2.lanes |= b;
                var F2 = Qi(f2, h2, b);
                ph(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Sk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Jk() {
  var a = mk.current;
  mk.current = Rh;
  return null === a ? Rh : a;
}
function tj() {
  if (0 === T || 3 === T || 2 === T)
    T = 4;
  null === Q || 0 === (rh & 268435455) && 0 === (qk & 268435455) || Ck(Q, Z);
}
function Ik(a, b) {
  var c = K;
  K |= 2;
  var d = Jk();
  if (Q !== a || Z !== b)
    uk = null, Kk(a, b);
  do
    try {
      Tk();
      break;
    } catch (e2) {
      Mk(a, e2);
    }
  while (1);
  $g();
  K = c;
  mk.current = d;
  if (null !== Y)
    throw Error(p$2(261));
  Q = null;
  Z = 0;
  return T;
}
function Tk() {
  for (; null !== Y;)
    Uk(Y);
}
function Lk() {
  for (; null !== Y && !cc();)
    Uk(Y);
}
function Uk(a) {
  var b = Vk(a.alternate, a, fj);
  a.memoizedProps = a.pendingProps;
  null === b ? Sk(a) : Y = b;
  nk.current = null;
}
function Sk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Ej(c, b, fj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Ij(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a)
        a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Pk(a, b, c) {
  var d = C, e2 = ok.transition;
  try {
    ok.transition = null, C = 1, Wk(a, b, c, d);
  } finally {
    ok.transition = e2, C = d;
  }
  return null;
}
function Wk(a, b, c, d) {
  do
    Hk();
  while (null !== wk);
  if (0 !== (K & 6))
    throw Error(p$2(327));
  c = a.finishedWork;
  var e2 = a.finishedLanes;
  if (null === c)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current)
    throw Error(p$2(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c.lanes | c.childLanes;
  Bc(a, f2);
  a === Q && (Y = Q = null, Z = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || vk || (vk = true, Fk(hc, function () {
    Hk();
    return null;
  }));
  f2 = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f2) {
    f2 = ok.transition;
    ok.transition = null;
    var g = C;
    C = 1;
    var h2 = K;
    K |= 4;
    nk.current = null;
    Oj(a, c);
    dk(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    hk(c);
    dc();
    K = h2;
    C = g;
    ok.transition = f2;
  } else
    a.current = c;
  vk && (vk = false, wk = a, xk = e2);
  f2 = a.pendingLanes;
  0 === f2 && (Ri = null);
  mc(c.stateNode);
  Dk(a, B());
  if (null !== b)
    for (d = a.onRecoverableError, c = 0; c < b.length; c++)
      e2 = b[c], d(e2.value, { componentStack: e2.stack, digest: e2.digest });
  if (Oi)
    throw Oi = false, a = Pi, Pi = null, a;
  0 !== (xk & 1) && 0 !== a.tag && Hk();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? a === zk ? yk++ : (yk = 0, zk = a) : yk = 0;
  jg();
  return null;
}
function Hk() {
  if (null !== wk) {
    var a = Dc(xk), b = ok.transition, c = C;
    try {
      ok.transition = null;
      C = 16 > a ? 16 : a;
      if (null === wk)
        var d = false;
      else {
        a = wk;
        wk = null;
        xk = 0;
        if (0 !== (K & 6))
          throw Error(p$2(331));
        var e2 = K;
        K |= 4;
        for (V = a.current; null !== V;) {
          var f2 = V, g = f2.child;
          if (0 !== (V.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V = l2; null !== V;) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V = q2;
                  else
                    for (; null !== V;) {
                      m2 = V;
                      var r2 = m2.sibling, y2 = m2.return;
                      Sj(m2);
                      if (m2 === l2) {
                        V = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V = r2;
                        break;
                      }
                      V = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g)
            g.return = f2, V = g;
          else
            b:
            for (; null !== V;) {
              f2 = V;
              if (0 !== (f2.flags & 2048))
                switch (f2.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Pj(9, f2, f2.return);
                }
              var x2 = f2.sibling;
              if (null !== x2) {
                x2.return = f2.return;
                V = x2;
                break b;
              }
              V = f2.return;
            }
        }
        var w2 = a.current;
        for (V = w2; null !== V;) {
          g = V;
          var u2 = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u2)
            u2.return = g, V = u2;
          else
            b:
            for (g = w2; null !== V;) {
              h2 = V;
              if (0 !== (h2.flags & 2048))
                try {
                  switch (h2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, h2);
                  }
                } catch (na) {
                  W(h2, h2.return, na);
                }
              if (h2 === g) {
                V = null;
                break b;
              }
              var F2 = h2.sibling;
              if (null !== F2) {
                F2.return = h2.return;
                V = F2;
                break b;
              }
              V = h2.return;
            }
        }
        K = e2;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a);
          } catch (na) {
          }
        d = true;
      }
      return d;
    } finally {
      C = c, ok.transition = b;
    }
  }
  return false;
}
function Xk(a, b, c) {
  b = Ji(c, b);
  b = Ni(a, b, 1);
  a = nh(a, b, 1);
  b = R();
  null !== a && (Ac(a, 1, b), Dk(a, b));
}
function W(a, b, c) {
  if (3 === a.tag)
    Xk(a, a, c);
  else
    for (; null !== b;) {
      if (3 === b.tag) {
        Xk(b, a, c);
        break;
      } else if (1 === b.tag) {
        var d = b.stateNode;
        if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ri || !Ri.has(d))) {
          a = Ji(c, a);
          a = Qi(b, a, 1);
          b = nh(b, a, 1);
          a = R();
          null !== b && (Ac(b, 1, a), Dk(b, a));
          break;
        }
      }
      b = b.return;
    }
}
function Ti(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = R();
  a.pingedLanes |= a.suspendedLanes & c;
  Q === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - fk ? Kk(a, 0) : rk |= c);
  Dk(a, b);
}
function Yk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = R();
  a = ih(a, b);
  null !== a && (Ac(a, b, c), Dk(a, c));
}
function uj(a) {
  var b = a.memoizedState, c = 0;
  null !== b && (c = b.retryLane);
  Yk(a, c);
}
function bk(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e2 = a.memoizedState;
      null !== e2 && (c = e2.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p$2(314));
  }
  null !== d && d.delete(b);
  Yk(a, c);
}
var Vk;
Vk = function (a, b, c) {
  if (null !== a)
    if (a.memoizedProps !== b.pendingProps || Wf.current)
      dh = true;
    else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128))
        return dh = false, yj(a, b, c);
      dh = 0 !== (a.flags & 131072) ? true : false;
    }
  else
    dh = false, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      ij(a, b);
      a = b.pendingProps;
      var e2 = Yf(b, H.current);
      ch(b, c);
      e2 = Nh(null, b, d, a, e2, c);
      var f2 = Sh();
      b.flags |= 1;
      "object" === typeof e2 && null !== e2 && "function" === typeof e2.render && void 0 === e2.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f2 = true, cg(b)) : f2 = false, b.memoizedState = null !== e2.state && void 0 !== e2.state ? e2.state : null, kh(b), e2.updater = Ei, b.stateNode = e2, e2._reactInternals = b, Ii(b, d, a, c), b = jj(null, b, d, true, f2, c)) : (b.tag = 0, I && f2 && vg(b), Xi(null, b, e2, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        ij(a, b);
        a = b.pendingProps;
        e2 = d._init;
        d = e2(d._payload);
        b.type = d;
        e2 = b.tag = Zk(d);
        a = Ci(d, a);
        switch (e2) {
          case 0:
            b = cj(null, b, d, a, c);
            break a;
          case 1:
            b = hj(null, b, d, a, c);
            break a;
          case 11:
            b = Yi(null, b, d, a, c);
            break a;
          case 14:
            b = $i(null, b, d, Ci(d.type, a), c);
            break a;
        }
        throw Error(p$2(
          306,
          d,
          ""
        ));
      }
      return b;
    case 0:
      return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Ci(d, e2), cj(a, b, d, e2, c);
    case 1:
      return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Ci(d, e2), hj(a, b, d, e2, c);
    case 3:
      a: {
        kj(b);
        if (null === a)
          throw Error(p$2(387));
        d = b.pendingProps;
        f2 = b.memoizedState;
        e2 = f2.element;
        lh(a, b);
        qh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f2.isDehydrated)
          if (f2 = { element: d, isDehydrated: false, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }, b.updateQueue.baseState = f2, b.memoizedState = f2, b.flags & 256) {
            e2 = Ji(Error(p$2(423)), b);
            b = lj(a, b, d, c, e2);
            break a;
          } else if (d !== e2) {
            e2 = Ji(Error(p$2(424)), b);
            b = lj(a, b, d, c, e2);
            break a;
          } else
            for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = true, zg = null, c = Vg(b, null, d, c), b.child = c; c;)
              c.flags = c.flags & -3 | 4096, c = c.sibling;
        else {
          Ig();
          if (d === e2) {
            b = Zi(a, b, c);
            break a;
          }
          Xi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Ah(b), null === a && Eg(b), d = b.type, e2 = b.pendingProps, f2 = null !== a ? a.memoizedProps : null, g = e2.children, Ef(d, e2) ? g = null : null !== f2 && Ef(d, f2) && (b.flags |= 32), gj(a, b), Xi(a, b, g, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return oj(a, b, c);
    case 4:
      return yh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Ug(b, null, d, c) : Xi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Ci(d, e2), Yi(a, b, d, e2, c);
    case 7:
      return Xi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Xi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Xi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e2 = b.pendingProps;
        f2 = b.memoizedProps;
        g = e2.value;
        G(Wg, d._currentValue);
        d._currentValue = g;
        if (null !== f2)
          if (He(f2.value, g)) {
            if (f2.children === e2.children && !Wf.current) {
              b = Zi(a, b, c);
              break a;
            }
          } else
            for (f2 = b.child, null !== f2 && (f2.return = b); null !== f2;) {
              var h2 = f2.dependencies;
              if (null !== h2) {
                g = f2.child;
                for (var k2 = h2.firstContext; null !== k2;) {
                  if (k2.context === d) {
                    if (1 === f2.tag) {
                      k2 = mh(-1, c & -c);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c);
                    bh(
                      f2.return,
                      c,
                      b
                    );
                    h2.lanes |= c;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g = f2.type === b.type ? null : f2.child;
              else if (18 === f2.tag) {
                g = f2.return;
                if (null === g)
                  throw Error(p$2(341));
                g.lanes |= c;
                h2 = g.alternate;
                null !== h2 && (h2.lanes |= c);
                bh(g, c, b);
                g = f2.sibling;
              } else
                g = f2.child;
              if (null !== g)
                g.return = f2;
              else
                for (g = f2; null !== g;) {
                  if (g === b) {
                    g = null;
                    break;
                  }
                  f2 = g.sibling;
                  if (null !== f2) {
                    f2.return = g.return;
                    g = f2;
                    break;
                  }
                  g = g.return;
                }
              f2 = g;
            }
        Xi(a, b, e2.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e2 = b.type, d = b.pendingProps.children, ch(b, c), e2 = eh(e2), d = d(e2), b.flags |= 1, Xi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e2 = Ci(d, b.pendingProps), e2 = Ci(d.type, e2), $i(a, b, d, e2, c);
    case 15:
      return bj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Ci(d, e2), ij(a, b), b.tag = 1, Zf(d) ? (a = true, cg(b)) : a = false, ch(b, c), Gi(b, d, e2), Ii(b, d, e2, c), jj(null, b, d, true, a, c);
    case 19:
      return xj(a, b, c);
    case 22:
      return dj(a, b, c);
  }
  throw Error(p$2(156, b.tag));
};
function Fk(a, b) {
  return ac(a, b);
}
function $k(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new $k(a, b, c, d);
}
function aj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function Zk(a) {
  if ("function" === typeof a)
    return aj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da)
      return 11;
    if (a === Ga)
      return 14;
  }
  return 2;
}
function Pg(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function Rg(a, b, c, d, e2, f2) {
  var g = 2;
  d = a;
  if ("function" === typeof a)
    aj(a) && (g = 1);
  else if ("string" === typeof a)
    g = 5;
  else
    a:
    switch (a) {
      case ya:
        return Tg(c.children, e2, f2, b);
      case za:
        g = 8;
        e2 |= 8;
        break;
      case Aa:
        return a = Bg(12, c, b, e2 | 2), a.elementType = Aa, a.lanes = f2, a;
      case Ea:
        return a = Bg(13, c, b, e2), a.elementType = Ea, a.lanes = f2, a;
      case Fa:
        return a = Bg(19, c, b, e2), a.elementType = Fa, a.lanes = f2, a;
      case Ia:
        return pj(c, e2, f2, b);
      default:
        if ("object" === typeof a && null !== a)
          switch (a.$$typeof) {
            case Ba:
              g = 10;
              break a;
            case Ca:
              g = 9;
              break a;
            case Da:
              g = 11;
              break a;
            case Ga:
              g = 14;
              break a;
            case Ha:
              g = 16;
              d = null;
              break a;
          }
        throw Error(p$2(130, null == a ? a : typeof a, ""));
    }
  b = Bg(g, c, b, e2);
  b.elementType = a;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Tg(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function pj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = { isHidden: false };
  return a;
}
function Qg(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function Sg(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b;
}
function al(a, b, c, d, e2) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e2;
  this.mutableSourceEagerHydrationData = null;
}
function bl(a, b, c, d, e2, f2, g, h2, k2) {
  a = new al(a, b, c, h2, k2);
  1 === b ? (b = 1, true === f2 && (b |= 8)) : b = 0;
  f2 = Bg(3, null, null, b);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  kh(f2);
  return a;
}
function cl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
}
function dl(a) {
  if (!a)
    return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag)
      throw Error(p$2(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p$2(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c))
      return bg(a, c, b);
  }
  return b;
}
function el(a, b, c, d, e2, f2, g, h2, k2) {
  a = bl(c, d, true, a, e2, f2, g, h2, k2);
  a.context = dl(null);
  c = a.current;
  d = R();
  e2 = yi(c);
  f2 = mh(d, e2);
  f2.callback = void 0 !== b && null !== b ? b : null;
  nh(c, f2, e2);
  a.current.lanes = e2;
  Ac(a, e2, d);
  Dk(a, d);
  return a;
}
function fl(a, b, c, d) {
  var e2 = b.current, f2 = R(), g = yi(e2);
  c = dl(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = mh(f2, g);
  b.payload = { element: a };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = nh(e2, b, g);
  null !== a && (gi(a, e2, g, f2), oh(a, e2, g));
  return g;
}
function gl(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function hl(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function il(a, b) {
  hl(a, b);
  (a = a.alternate) && hl(a, b);
}
function jl() {
  return null;
}
var kl = "function" === typeof reportError ? reportError : function (a) {
  console.error(a);
};
function ll(a) {
  this._internalRoot = a;
}
ml.prototype.render = ll.prototype.render = function (a) {
  var b = this._internalRoot;
  if (null === b)
    throw Error(p$2(409));
  fl(a, b, null, null);
};
ml.prototype.unmount = ll.prototype.unmount = function () {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Rk(function () {
      fl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function ml(a) {
  this._internalRoot = a;
}
ml.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var b = Hc();
    a = { blockedOn: null, target: a, priority: b };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++)
      ;
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function nl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function pl() {
}
function ql(a, b, c, d, e2) {
  if (e2) {
    if ("function" === typeof d) {
      var f2 = d;
      d = function () {
        var a2 = gl(g);
        f2.call(a2);
      };
    }
    var g = el(b, d, a, 0, null, false, false, "", pl);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Rk();
    return g;
  }
  for (; e2 = a.lastChild;)
    a.removeChild(e2);
  if ("function" === typeof d) {
    var h2 = d;
    d = function () {
      var a2 = gl(k2);
      h2.call(a2);
    };
  }
  var k2 = bl(a, 0, false, null, null, false, false, "", pl);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Rk(function () {
    fl(b, k2, c, d);
  });
  return k2;
}
function rl(a, b, c, d, e2) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g = f2;
    if ("function" === typeof e2) {
      var h2 = e2;
      e2 = function () {
        var a2 = gl(g);
        h2.call(a2);
      };
    }
    fl(b, g, a, e2);
  } else
    g = ql(c, b, a, e2, d);
  return gl(g);
}
Ec = function (a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Dk(b, B()), 0 === (K & 6) && (Gj = B() + 500, jg()));
      }
      break;
    case 13:
      Rk(function () {
        var b2 = ih(a, 1);
        if (null !== b2) {
          var c2 = R();
          gi(b2, a, 1, c2);
        }
      }), il(a, 1);
  }
};
Fc = function (a) {
  if (13 === a.tag) {
    var b = ih(a, 134217728);
    if (null !== b) {
      var c = R();
      gi(b, a, 134217728, c);
    }
    il(a, 134217728);
  }
};
Gc = function (a) {
  if (13 === a.tag) {
    var b = yi(a), c = ih(a, b);
    if (null !== c) {
      var d = R();
      gi(c, a, b, d);
    }
    il(a, b);
  }
};
Hc = function () {
  return C;
};
Ic = function (a, b) {
  var c = C;
  try {
    return C = a, b();
  } finally {
    C = c;
  }
};
yb = function (a, b, c) {
  switch (b) {
    case "input":
      bb(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;)
          c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e2 = Db(d);
            if (!e2)
              throw Error(p$2(90));
            Wa(d);
            bb(d, e2);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, false);
  }
};
Gb = Qk;
Hb = Rk;
var sl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Qk] }, tl = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" };
var ul = {
  bundleType: tl.bundleType, version: tl.version, rendererPackageName: tl.rendererPackageName, rendererConfig: tl.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function (a) {
    a = Zb(a);
    return null === a ? null : a.stateNode;
  }, findFiberByHostInstance: tl.findFiberByHostInstance || jl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!vl.isDisabled && vl.supportsFiber)
    try {
      kc = vl.inject(ul), lc = vl;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
reactDom_production_min.createPortal = function (a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!nl(b))
    throw Error(p$2(200));
  return cl(a, b, null, c);
};
reactDom_production_min.createRoot = function (a, b) {
  if (!nl(a))
    throw Error(p$2(299));
  var c = false, d = "", e2 = kl;
  null !== b && void 0 !== b && (true === b.unstable_strictMode && (c = true), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e2 = b.onRecoverableError));
  b = bl(a, 1, false, null, null, c, false, d, e2);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ll(b);
};
reactDom_production_min.findDOMNode = function (a) {
  if (null == a)
    return null;
  if (1 === a.nodeType)
    return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render)
      throw Error(p$2(188));
    a = Object.keys(a).join(",");
    throw Error(p$2(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function (a) {
  return Rk(a);
};
reactDom_production_min.hydrate = function (a, b, c) {
  if (!ol(b))
    throw Error(p$2(200));
  return rl(null, a, b, true, c);
};
reactDom_production_min.hydrateRoot = function (a, b, c) {
  if (!nl(a))
    throw Error(p$2(405));
  var d = null != c && c.hydratedSources || null, e2 = false, f2 = "", g = kl;
  null !== c && void 0 !== c && (true === c.unstable_strictMode && (e2 = true), void 0 !== c.identifierPrefix && (f2 = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = el(b, null, a, 1, null != c ? c : null, e2, false, f2, g);
  a[uf] = b.current;
  sf(a);
  if (d)
    for (a = 0; a < d.length; a++)
      c = d[a], e2 = c._getVersion, e2 = e2(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e2] : b.mutableSourceEagerHydrationData.push(
        c,
        e2
      );
  return new ml(b);
};
reactDom_production_min.render = function (a, b, c) {
  if (!ol(b))
    throw Error(p$2(200));
  return rl(null, a, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function (a) {
  if (!ol(a))
    throw Error(p$2(40));
  return a._reactRootContainer ? (Rk(function () {
    rl(null, null, a, false, function () {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Qk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!ol(c))
    throw Error(p$2(200));
  if (null == a || void 0 === a._reactInternals)
    throw Error(p$2(38));
  return rl(a, b, c, false, d);
};
reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
const ReactDOM = /* @__PURE__ */ getDefaultExportFromCjs(reactDomExports);
const ReactDOM$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: ReactDOM
}, [reactDomExports]);
var createRoot;
var m$1 = reactDomExports;
{
  createRoot = client$1.createRoot = m$1.createRoot;
  client$1.hydrateRoot = m$1.hydrateRoot;
}
/**
 * @remix-run/router v1.16.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
var Action;
(function (Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message2) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message2);
  }
}
function warning(cond, message2) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message2);
    try {
      throw new Error(message2);
    } catch (e2) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location2, index) {
  return {
    usr: location2.state,
    key: location2.key,
    idx: index
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location2 = _extends$1({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location2;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path2) {
  let parsedPath = {};
  if (path2) {
    let hashIndex = path2.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path2.substr(hashIndex);
      path2 = path2.substr(0, hashIndex);
    }
    let searchIndex = path2.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path2.substr(searchIndex);
      path2 = path2.substr(0, searchIndex);
    }
    if (path2) {
      parsedPath.pathname = path2;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends$1({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({
        action,
        location: history.location,
        delta
      });
    }
  }
  function push2(to, state) {
    action = Action.Push;
    let location2 = createLocation(history.location, to, state);
    index = getIndex() + 1;
    let historyState = getHistoryState(location2, index);
    let url = history.createHref(location2);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace2(to, state) {
    action = Action.Replace;
    let location2 = createLocation(history.location, to, state);
    index = getIndex();
    let historyState = getHistoryState(location2, index);
    let url = history.createHref(location2);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    href = href.replace(/ $/, "%20");
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push: push2,
    replace: replace2,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
var ResultType;
(function (ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  let location2 = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location2.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(branches[i], decoded);
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path2 = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path2 + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path2);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path: path2,
      score: computeScore(path2, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path2) {
  let segments = path2.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path2.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:[\w-]+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s) => s === "*";
function computeScore(path2, index) {
  let segments = path2.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n2, i) => n2 === b[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match)
      return null;
    Object.assign(matchedParams, match.params);
    let route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match)
    return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce((memo, _ref, index) => {
    let {
      paramName,
      isOptional
    } = _ref;
    if (paramName === "*") {
      let splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    const value = captureGroups[index];
    if (isOptional && !value) {
      memo[paramName] = void 0;
    } else {
      memo[paramName] = (value || "").replace(/%2F/g, "/");
    }
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path2, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path2 === "*" || !path2.endsWith("*") || path2.endsWith("/*"), 'Route path "' + path2 + '" will be treated as if it were ' + ('"' + path2.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path2.replace(/\*$/, "/*") + '".'));
  let params = [];
  let regexpSource = "^" + path2.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_2, paramName, isOptional) => {
    params.push({
      paramName,
      isOptional: isOptional != null
    });
    return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
  });
  if (path2.endsWith("*")) {
    params.push({
      paramName: "*"
    });
    regexpSource += path2 === "*" || path2 === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path2 !== "" && path2 !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else
    ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v2) => decodeURIComponent(v2).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1)
        segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path2) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path2) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches(matches);
  if (v7_relativeSplatPath) {
    return pathMatches.map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);
  }
  return pathMatches.map((match) => match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$1({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path2 = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path2.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path2.pathname += "/";
  }
  return path2;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    future,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path2 = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path2.pathname = path2.pathname === "/" ? basename : joinPaths([basename, path2.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path2, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
function useParams() {
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location2;
  {
    location2 = locationFromContext;
  }
  let pathname = location2.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState, future);
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message2 = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message2), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState, future) {
  var _dataRouterState2;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (future === void 0) {
    future = null;
  }
  if (matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]) !== void 0);
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState && future && future.v7_partialHydration) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let {
          loaderData,
          errors: errors2
        } = dataRouterState;
        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === void 0 && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index === 0) {
          warningOnce("route-fallback");
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children = hydrateFallbackElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function (DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function (DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error !== void 0) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      router.navigate(to);
    } else {
      router.navigate(to, _extends({
        fromRouteId: id
      }, options));
    }
  }, [router, id]);
  return navigate;
}
const alreadyWarned = {};
function warningOnce(key, cond, message2) {
  if (!alreadyWarned[key]) {
    alreadyWarned[key] = true;
  }
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false,
    future
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp,
    future: _extends({
      v7_relativeSplatPath: false
    }, future)
  }), [basename, future, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
new Promise(() => {
});
/**
 * React Router DOM v6.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }
  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map((v2) => [key, v2]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    defaultSearchParams.forEach((_2, key) => {
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    });
  }
  return searchParams;
}
const REACT_ROUTER_VERSION = "6";
try {
  window.__reactRouterVersion = REACT_ROUTER_VERSION;
} catch (e2) {
}
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$1[START_TRANSITION];
function BrowserRouter(_ref4) {
  let {
    basename,
    children,
    future,
    window: window2
  } = _ref4;
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location
  });
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future
  });
}
var DataRouterHook;
(function (DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
  DataRouterHook2["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function (DataRouterStateHook2) {
  DataRouterStateHook2["UseFetcher"] = "useFetcher";
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useSearchParams(defaultInit) {
  let defaultSearchParamsRef = reactExports.useRef(createSearchParams(defaultInit));
  let hasSetSearchParamsRef = reactExports.useRef(false);
  let location2 = useLocation();
  let searchParams = reactExports.useMemo(() => (
    // Only merge in the defaults if we haven't yet called setSearchParams.
    // Once we call that we want those to take precedence, otherwise you can't
    // remove a param with setSearchParams({}) if it has an initial value
    getSearchParamsForLocation(location2.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
  ), [location2.search]);
  let navigate = useNavigate();
  let setSearchParams = reactExports.useCallback((nextInit, navigateOptions) => {
    const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = true;
    navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
const Loading = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
};
const CONTAINER_ID$1 = "loading_______container";
function createContainer$1() {
  let container = document.getElementById(CONTAINER_ID$1);
  if (!container) {
    container = document.createElement("div");
    container.setAttribute("id", CONTAINER_ID$1);
    document.body.appendChild(container);
  }
  return container;
}
let containerRoot$1;
function removeContainer() {
  if (containerRoot$1) {
    containerRoot$1.render(/* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {}));
  }
}
function renderLoading() {
  const container = createContainer$1();
  if (!containerRoot$1) {
    containerRoot$1 = createRoot(container);
  }
  containerRoot$1.render(/* @__PURE__ */ jsxRuntimeExports.jsx(Loading, {}));
}
const startLoading = () => {
  renderLoading();
};
const stopLoading = () => {
  removeContainer();
};
const createStoreImpl = (createState) => {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace2) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (!Object.is(nextState, state)) {
      const previousState = state;
      state = (replace2 != null ? replace2 : typeof nextState !== "object" || nextState === null) ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const getInitialState = () => initialState;
  const subscribe = (listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => {
    if (({ "BASE_URL": window.location.origin + "/yq-br-prod/web1", "MODE": "prod", "DEV": false, "PROD": true, "SSR": false, "LEGACY": false } ? "prod" : void 0) !== "production") {
      console.warn(
        "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
      );
    }
    listeners.clear();
  };
  const api = { setState, getState, getInitialState, subscribe, destroy };
  const initialState = state = createState(setState, getState, api);
  return api;
};
const createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;
var withSelector = { exports: {} };
var withSelector_production_min = {};
var shim = { exports: {} };
var useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var e = reactExports;
function h$1(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var k = "function" === typeof Object.is ? Object.is : h$1, l = e.useState, m = e.useEffect, n$1 = e.useLayoutEffect, p$1 = e.useDebugValue;
function q$1(a, b) {
  var d = b(), f2 = l({ inst: { value: d, getSnapshot: b } }), c = f2[0].inst, g = f2[1];
  n$1(function () {
    c.value = d;
    c.getSnapshot = b;
    r$1(c) && g({ inst: c });
  }, [a, d, b]);
  m(function () {
    r$1(c) && g({ inst: c });
    return a(function () {
      r$1(c) && g({ inst: c });
    });
  }, [a]);
  p$1(d);
  return d;
}
function r$1(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var d = b();
    return !k(a, d);
  } catch (f2) {
    return true;
  }
}
function t$2(a, b) {
  return b();
}
var u$1 = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? t$2 : q$1;
useSyncExternalStoreShim_production_min.useSyncExternalStore = void 0 !== e.useSyncExternalStore ? e.useSyncExternalStore : u$1;
{
  shim.exports = useSyncExternalStoreShim_production_min;
}
var shimExports = shim.exports;
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var h = reactExports, n = shimExports;
function p(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var q = "function" === typeof Object.is ? Object.is : p, r = n.useSyncExternalStore, t$1 = h.useRef, u = h.useEffect, v = h.useMemo, w = h.useDebugValue;
withSelector_production_min.useSyncExternalStoreWithSelector = function (a, b, e2, l2, g) {
  var c = t$1(null);
  if (null === c.current) {
    var f2 = { hasValue: false, value: null };
    c.current = f2;
  } else
    f2 = c.current;
  c = v(function () {
    function a2(a3) {
      if (!c2) {
        c2 = true;
        d2 = a3;
        a3 = l2(a3);
        if (void 0 !== g && f2.hasValue) {
          var b2 = f2.value;
          if (g(b2, a3))
            return k2 = b2;
        }
        return k2 = a3;
      }
      b2 = k2;
      if (q(d2, a3))
        return b2;
      var e3 = l2(a3);
      if (void 0 !== g && g(b2, e3))
        return b2;
      d2 = a3;
      return k2 = e3;
    }
    var c2 = false, d2, k2, m2 = void 0 === e2 ? null : e2;
    return [function () {
      return a2(b());
    }, null === m2 ? void 0 : function () {
      return a2(m2());
    }];
  }, [b, e2, l2, g]);
  var d = r(a, c[0], c[1]);
  u(function () {
    f2.hasValue = true;
    f2.value = d;
  }, [d]);
  w(d);
  return d;
};
{
  withSelector.exports = withSelector_production_min;
}
var withSelectorExports = withSelector.exports;
const useSyncExternalStoreExports = /* @__PURE__ */ getDefaultExportFromCjs(withSelectorExports);
const { useDebugValue } = React;
const { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;
let didWarnAboutEqualityFn = false;
const identity = (arg) => arg;
function useStore(api, selector = identity, equalityFn) {
  if (({ "BASE_URL": window.location.origin + "/yq-br-prod/web1", "MODE": "prod", "DEV": false, "PROD": true, "SSR": false, "LEGACY": false } ? "prod" : void 0) !== "production" && equalityFn && !didWarnAboutEqualityFn) {
    console.warn(
      "[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"
    );
    didWarnAboutEqualityFn = true;
  }
  const slice2 = useSyncExternalStoreWithSelector(
    api.subscribe,
    api.getState,
    api.getServerState || api.getInitialState,
    selector,
    equalityFn
  );
  useDebugValue(slice2);
  return slice2;
}
const createImpl = (createState) => {
  if (({ "BASE_URL": window.location.origin + "/yq-br-prod/web1", "MODE": "prod", "DEV": false, "PROD": true, "SSR": false, "LEGACY": false } ? "prod" : void 0) !== "production" && typeof createState !== "function") {
    console.warn(
      "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
    );
  }
  const api = typeof createState === "function" ? createStore(createState) : createState;
  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);
  Object.assign(useBoundStore, api);
  return useBoundStore;
};
const create = (createState) => createState ? createImpl(createState) : createImpl;
function mitt(n2) {
  return {
    all: n2 = n2 || /* @__PURE__ */ new Map(), on: function (t2, e2) {
      var i = n2.get(t2);
      i ? i.push(e2) : n2.set(t2, [e2]);
    }, off: function (t2, e2) {
      var i = n2.get(t2);
      i && (e2 ? i.splice(i.indexOf(e2) >>> 0, 1) : n2.set(t2, []));
    }, emit: function (t2, e2) {
      var i = n2.get(t2);
      i && i.slice().map(function (n3) {
        n3(e2);
      }), (i = n2.get("*")) && i.slice().map(function (n3) {
        n3(t2, e2);
      });
    }
  };
}
const consoleLogger = {
  type: "logger",
  log(args) {
    this.output("log", args);
  },
  warn(args) {
    this.output("warn", args);
  },
  error(args) {
    this.output("error", args);
  },
  output(type2, args) {
    if (console && console[type2])
      console[type2].apply(console, args);
  }
};
class Logger {
  constructor(concreteLogger) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(concreteLogger, options);
  }
  init(concreteLogger) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = options.prefix || "i18next:";
    this.logger = concreteLogger || consoleLogger;
    this.options = options;
    this.debug = options.debug;
  }
  log() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return this.forward(args, "log", "", true);
  }
  warn() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return this.forward(args, "warn", "", true);
  }
  error() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    return this.forward(args, "error", "");
  }
  deprecate() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    return this.forward(args, "warn", "WARNING DEPRECATED: ", true);
  }
  forward(args, lvl, prefix, debugOnly) {
    if (debugOnly && !this.debug)
      return null;
    if (typeof args[0] === "string")
      args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0]);
    return this.logger[lvl](args);
  }
  create(moduleName) {
    return new Logger(this.logger, {
      ...{
        prefix: "".concat(this.prefix, ":").concat(moduleName, ":")
      },
      ...this.options
    });
  }
  clone(options) {
    options = options || this.options;
    options.prefix = options.prefix || this.prefix;
    return new Logger(this.logger, options);
  }
}
var baseLogger = new Logger();
class EventEmitter {
  constructor() {
    this.observers = {};
  }
  on(events2, listener) {
    events2.split(" ").forEach((event) => {
      if (!this.observers[event])
        this.observers[event] = /* @__PURE__ */ new Map();
      const numListeners = this.observers[event].get(listener) || 0;
      this.observers[event].set(listener, numListeners + 1);
    });
    return this;
  }
  off(event, listener) {
    if (!this.observers[event])
      return;
    if (!listener) {
      delete this.observers[event];
      return;
    }
    this.observers[event].delete(listener);
  }
  emit(event) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (this.observers[event]) {
      const cloned = Array.from(this.observers[event].entries());
      cloned.forEach((_ref) => {
        let [observer, numTimesAdded] = _ref;
        for (let i = 0; i < numTimesAdded; i++) {
          observer(...args);
        }
      });
    }
    if (this.observers["*"]) {
      const cloned = Array.from(this.observers["*"].entries());
      cloned.forEach((_ref2) => {
        let [observer, numTimesAdded] = _ref2;
        for (let i = 0; i < numTimesAdded; i++) {
          observer.apply(observer, [event, ...args]);
        }
      });
    }
  }
}
function defer() {
  let res;
  let rej;
  const promise = new Promise((resolve, reject) => {
    res = resolve;
    rej = reject;
  });
  promise.resolve = res;
  promise.reject = rej;
  return promise;
}
function makeString(object) {
  if (object == null)
    return "";
  return "" + object;
}
function copy(a, s, t2) {
  a.forEach((m2) => {
    if (s[m2])
      t2[m2] = s[m2];
  });
}
const lastOfPathSeparatorRegExp = /###/g;
function getLastOfPath(object, path2, Empty) {
  function cleanKey(key) {
    return key && key.indexOf("###") > -1 ? key.replace(lastOfPathSeparatorRegExp, ".") : key;
  }
  function canNotTraverseDeeper() {
    return !object || typeof object === "string";
  }
  const stack = typeof path2 !== "string" ? path2 : path2.split(".");
  let stackIndex = 0;
  while (stackIndex < stack.length - 1) {
    if (canNotTraverseDeeper())
      return {};
    const key = cleanKey(stack[stackIndex]);
    if (!object[key] && Empty)
      object[key] = new Empty();
    if (Object.prototype.hasOwnProperty.call(object, key)) {
      object = object[key];
    } else {
      object = {};
    }
    ++stackIndex;
  }
  if (canNotTraverseDeeper())
    return {};
  return {
    obj: object,
    k: cleanKey(stack[stackIndex])
  };
}
function setPath(object, path2, newValue) {
  const {
    obj,
    k: k2
  } = getLastOfPath(object, path2, Object);
  if (obj !== void 0 || path2.length === 1) {
    obj[k2] = newValue;
    return;
  }
  let e2 = path2[path2.length - 1];
  let p2 = path2.slice(0, path2.length - 1);
  let last = getLastOfPath(object, p2, Object);
  while (last.obj === void 0 && p2.length) {
    e2 = "".concat(p2[p2.length - 1], ".").concat(e2);
    p2 = p2.slice(0, p2.length - 1);
    last = getLastOfPath(object, p2, Object);
    if (last && last.obj && typeof last.obj["".concat(last.k, ".").concat(e2)] !== "undefined") {
      last.obj = void 0;
    }
  }
  last.obj["".concat(last.k, ".").concat(e2)] = newValue;
}
function pushPath(object, path2, newValue, concat) {
  const {
    obj,
    k: k2
  } = getLastOfPath(object, path2, Object);
  obj[k2] = obj[k2] || [];
  obj[k2].push(newValue);
}
function getPath(object, path2) {
  const {
    obj,
    k: k2
  } = getLastOfPath(object, path2);
  if (!obj)
    return void 0;
  return obj[k2];
}
function getPathWithDefaults(data, defaultData, key) {
  const value = getPath(data, key);
  if (value !== void 0) {
    return value;
  }
  return getPath(defaultData, key);
}
function deepExtend(target, source, overwrite) {
  for (const prop in source) {
    if (prop !== "__proto__" && prop !== "constructor") {
      if (prop in target) {
        if (typeof target[prop] === "string" || target[prop] instanceof String || typeof source[prop] === "string" || source[prop] instanceof String) {
          if (overwrite)
            target[prop] = source[prop];
        } else {
          deepExtend(target[prop], source[prop], overwrite);
        }
      } else {
        target[prop] = source[prop];
      }
    }
  }
  return target;
}
function regexEscape(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var _entityMap = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
function escape$1(data) {
  if (typeof data === "string") {
    return data.replace(/[&<>"'\/]/g, (s) => _entityMap[s]);
  }
  return data;
}
class RegExpCache {
  constructor(capacity) {
    this.capacity = capacity;
    this.regExpMap = /* @__PURE__ */ new Map();
    this.regExpQueue = [];
  }
  getRegExp(pattern) {
    const regExpFromCache = this.regExpMap.get(pattern);
    if (regExpFromCache !== void 0) {
      return regExpFromCache;
    }
    const regExpNew = new RegExp(pattern);
    if (this.regExpQueue.length === this.capacity) {
      this.regExpMap.delete(this.regExpQueue.shift());
    }
    this.regExpMap.set(pattern, regExpNew);
    this.regExpQueue.push(pattern);
    return regExpNew;
  }
}
const chars = [" ", ",", "?", "!", ";"];
const looksLikeObjectPathRegExpCache = new RegExpCache(20);
function looksLikeObjectPath(key, nsSeparator, keySeparator) {
  nsSeparator = nsSeparator || "";
  keySeparator = keySeparator || "";
  const possibleChars = chars.filter((c) => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);
  if (possibleChars.length === 0)
    return true;
  const r2 = looksLikeObjectPathRegExpCache.getRegExp("(".concat(possibleChars.map((c) => c === "?" ? "\\?" : c).join("|"), ")"));
  let matched = !r2.test(key);
  if (!matched) {
    const ki2 = key.indexOf(keySeparator);
    if (ki2 > 0 && !r2.test(key.substring(0, ki2))) {
      matched = true;
    }
  }
  return matched;
}
function deepFind(obj, path2) {
  let keySeparator = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!obj)
    return void 0;
  if (obj[path2])
    return obj[path2];
  const tokens = path2.split(keySeparator);
  let current = obj;
  for (let i = 0; i < tokens.length;) {
    if (!current || typeof current !== "object") {
      return void 0;
    }
    let next;
    let nextPath = "";
    for (let j = i; j < tokens.length; ++j) {
      if (j !== i) {
        nextPath += keySeparator;
      }
      nextPath += tokens[j];
      next = current[nextPath];
      if (next !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof next) > -1 && j < tokens.length - 1) {
          continue;
        }
        i += j - i + 1;
        break;
      }
    }
    current = next;
  }
  return current;
}
function getCleanedCode(code) {
  if (code && code.indexOf("_") > 0)
    return code.replace("_", "-");
  return code;
}
class ResourceStore extends EventEmitter {
  constructor(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super();
    this.data = data || {};
    this.options = options;
    if (this.options.keySeparator === void 0) {
      this.options.keySeparator = ".";
    }
    if (this.options.ignoreJSONStructure === void 0) {
      this.options.ignoreJSONStructure = true;
    }
  }
  addNamespaces(ns) {
    if (this.options.ns.indexOf(ns) < 0) {
      this.options.ns.push(ns);
    }
  }
  removeNamespaces(ns) {
    const index = this.options.ns.indexOf(ns);
    if (index > -1) {
      this.options.ns.splice(index, 1);
    }
  }
  getResource(lng, ns, key) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    const ignoreJSONStructure = options.ignoreJSONStructure !== void 0 ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let path2;
    if (lng.indexOf(".") > -1) {
      path2 = lng.split(".");
    } else {
      path2 = [lng, ns];
      if (key) {
        if (Array.isArray(key)) {
          path2.push(...key);
        } else if (typeof key === "string" && keySeparator) {
          path2.push(...key.split(keySeparator));
        } else {
          path2.push(key);
        }
      }
    }
    const result = getPath(this.data, path2);
    if (!result && !ns && !key && lng.indexOf(".") > -1) {
      lng = path2[0];
      ns = path2[1];
      key = path2.slice(2).join(".");
    }
    if (result || !ignoreJSONStructure || typeof key !== "string")
      return result;
    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);
  }
  addResource(lng, ns, key, value) {
    let options = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: false
    };
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    let path2 = [lng, ns];
    if (key)
      path2 = path2.concat(keySeparator ? key.split(keySeparator) : key);
    if (lng.indexOf(".") > -1) {
      path2 = lng.split(".");
      value = ns;
      ns = path2[1];
    }
    this.addNamespaces(ns);
    setPath(this.data, path2, value);
    if (!options.silent)
      this.emit("added", lng, ns, key, value);
  }
  addResources(lng, ns, resources) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: false
    };
    for (const m2 in resources) {
      if (typeof resources[m2] === "string" || Array.isArray(resources[m2]))
        this.addResource(lng, ns, m2, resources[m2], {
          silent: true
        });
    }
    if (!options.silent)
      this.emit("added", lng, ns, resources);
  }
  addResourceBundle(lng, ns, resources, deep, overwrite) {
    let options = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: false,
      skipCopy: false
    };
    let path2 = [lng, ns];
    if (lng.indexOf(".") > -1) {
      path2 = lng.split(".");
      deep = resources;
      resources = ns;
      ns = path2[1];
    }
    this.addNamespaces(ns);
    let pack = getPath(this.data, path2) || {};
    if (!options.skipCopy)
      resources = JSON.parse(JSON.stringify(resources));
    if (deep) {
      deepExtend(pack, resources, overwrite);
    } else {
      pack = {
        ...pack,
        ...resources
      };
    }
    setPath(this.data, path2, pack);
    if (!options.silent)
      this.emit("added", lng, ns, resources);
  }
  removeResourceBundle(lng, ns) {
    if (this.hasResourceBundle(lng, ns)) {
      delete this.data[lng][ns];
    }
    this.removeNamespaces(ns);
    this.emit("removed", lng, ns);
  }
  hasResourceBundle(lng, ns) {
    return this.getResource(lng, ns) !== void 0;
  }
  getResourceBundle(lng, ns) {
    if (!ns)
      ns = this.options.defaultNS;
    if (this.options.compatibilityAPI === "v1")
      return {
        ...{},
        ...this.getResource(lng, ns)
      };
    return this.getResource(lng, ns);
  }
  getDataByLanguage(lng) {
    return this.data[lng];
  }
  hasLanguageSomeTranslations(lng) {
    const data = this.getDataByLanguage(lng);
    const n2 = data && Object.keys(data) || [];
    return !!n2.find((v2) => data[v2] && Object.keys(data[v2]).length > 0);
  }
  toJSON() {
    return this.data;
  }
}
var postProcessor = {
  processors: {},
  addPostProcessor(module) {
    this.processors[module.name] = module;
  },
  handle(processors, value, key, options, translator) {
    processors.forEach((processor) => {
      if (this.processors[processor])
        value = this.processors[processor].process(value, key, options, translator);
    });
    return value;
  }
};
const checkedLoadedFor = {};
class Translator extends EventEmitter {
  constructor(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super();
    copy(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], services, this);
    this.options = options;
    if (this.options.keySeparator === void 0) {
      this.options.keySeparator = ".";
    }
    this.logger = baseLogger.create("translator");
  }
  changeLanguage(lng) {
    if (lng)
      this.language = lng;
  }
  exists(key) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (key === void 0 || key === null) {
      return false;
    }
    const resolved = this.resolve(key, options);
    return resolved && resolved.res !== void 0;
  }
  extractFromKey(key, options) {
    let nsSeparator = options.nsSeparator !== void 0 ? options.nsSeparator : this.options.nsSeparator;
    if (nsSeparator === void 0)
      nsSeparator = ":";
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    let namespaces = options.ns || this.options.defaultNS || [];
    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;
    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);
    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {
      const m2 = key.match(this.interpolator.nestingRegexp);
      if (m2 && m2.length > 0) {
        return {
          key,
          namespaces
        };
      }
      const parts = key.split(nsSeparator);
      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1)
        namespaces = parts.shift();
      key = parts.join(keySeparator);
    }
    if (typeof namespaces === "string")
      namespaces = [namespaces];
    return {
      key,
      namespaces
    };
  }
  translate(keys, options, lastKey) {
    if (typeof options !== "object" && this.options.overloadTranslationOptionHandler) {
      options = this.options.overloadTranslationOptionHandler(arguments);
    }
    if (typeof options === "object")
      options = {
        ...options
      };
    if (!options)
      options = {};
    if (keys === void 0 || keys === null)
      return "";
    if (!Array.isArray(keys))
      keys = [String(keys)];
    const returnDetails = options.returnDetails !== void 0 ? options.returnDetails : this.options.returnDetails;
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    const {
      key,
      namespaces
    } = this.extractFromKey(keys[keys.length - 1], options);
    const namespace = namespaces[namespaces.length - 1];
    const lng = options.lng || this.language;
    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (lng && lng.toLowerCase() === "cimode") {
      if (appendNamespaceToCIMode) {
        const nsSeparator = options.nsSeparator || this.options.nsSeparator;
        if (returnDetails) {
          return {
            res: "".concat(namespace).concat(nsSeparator).concat(key),
            usedKey: key,
            exactUsedKey: key,
            usedLng: lng,
            usedNS: namespace,
            usedParams: this.getUsedParamsDetails(options)
          };
        }
        return "".concat(namespace).concat(nsSeparator).concat(key);
      }
      if (returnDetails) {
        return {
          res: key,
          usedKey: key,
          exactUsedKey: key,
          usedLng: lng,
          usedNS: namespace,
          usedParams: this.getUsedParamsDetails(options)
        };
      }
      return key;
    }
    const resolved = this.resolve(keys, options);
    let res = resolved && resolved.res;
    const resUsedKey = resolved && resolved.usedKey || key;
    const resExactUsedKey = resolved && resolved.exactUsedKey || key;
    const resType = Object.prototype.toString.apply(res);
    const noObject = ["[object Number]", "[object Function]", "[object RegExp]"];
    const joinArrays = options.joinArrays !== void 0 ? options.joinArrays : this.options.joinArrays;
    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
    const handleAsObject = typeof res !== "string" && typeof res !== "boolean" && typeof res !== "number";
    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === "string" && Array.isArray(res))) {
      if (!options.returnObjects && !this.options.returnObjects) {
        if (!this.options.returnedObjectHandler) {
          this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        }
        const r2 = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {
          ...options,
          ns: namespaces
        }) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.");
        if (returnDetails) {
          resolved.res = r2;
          resolved.usedParams = this.getUsedParamsDetails(options);
          return resolved;
        }
        return r2;
      }
      if (keySeparator) {
        const resTypeIsArray = Array.isArray(res);
        const copy2 = resTypeIsArray ? [] : {};
        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
        for (const m2 in res) {
          if (Object.prototype.hasOwnProperty.call(res, m2)) {
            const deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m2);
            copy2[m2] = this.translate(deepKey, {
              ...options,
              ...{
                joinArrays: false,
                ns: namespaces
              }
            });
            if (copy2[m2] === deepKey)
              copy2[m2] = res[m2];
          }
        }
        res = copy2;
      }
    } else if (handleAsObjectInI18nFormat && typeof joinArrays === "string" && Array.isArray(res)) {
      res = res.join(joinArrays);
      if (res)
        res = this.extendTranslation(res, keys, options, lastKey);
    } else {
      let usedDefault = false;
      let usedKey = false;
      const needsPluralHandling = options.count !== void 0 && typeof options.count !== "string";
      const hasDefaultValue = Translator.hasDefaultValue(options);
      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : "";
      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {
        ordinal: false
      }) : "";
      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();
      const defaultValue = needsZeroSuffixLookup && options["defaultValue".concat(this.options.pluralSeparator, "zero")] || options["defaultValue".concat(defaultValueSuffix)] || options["defaultValue".concat(defaultValueSuffixOrdinalFallback)] || options.defaultValue;
      if (!this.isValidLookup(res) && hasDefaultValue) {
        usedDefault = true;
        res = defaultValue;
      }
      if (!this.isValidLookup(res)) {
        usedKey = true;
        res = key;
      }
      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;
      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? void 0 : res;
      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
      if (usedKey || usedDefault || updateMissing) {
        this.logger.log(updateMissing ? "updateKey" : "missingKey", lng, namespace, key, updateMissing ? defaultValue : res);
        if (keySeparator) {
          const fk2 = this.resolve(key, {
            ...options,
            keySeparator: false
          });
          if (fk2 && fk2.res)
            this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let lngs = [];
        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && fallbackLngs && fallbackLngs[0]) {
          for (let i = 0; i < fallbackLngs.length; i++) {
            lngs.push(fallbackLngs[i]);
          }
        } else if (this.options.saveMissingTo === "all") {
          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
        } else {
          lngs.push(options.lng || this.language);
        }
        const send = (l2, k2, specificDefaultValue) => {
          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;
          if (this.options.missingKeyHandler) {
            this.options.missingKeyHandler(l2, namespace, k2, defaultForMissing, updateMissing, options);
          } else if (this.backendConnector && this.backendConnector.saveMissing) {
            this.backendConnector.saveMissing(l2, namespace, k2, defaultForMissing, updateMissing, options);
          }
          this.emit("missingKey", l2, namespace, k2, res);
        };
        if (this.options.saveMissing) {
          if (this.options.saveMissingPlurals && needsPluralHandling) {
            lngs.forEach((language) => {
              const suffixes = this.pluralResolver.getSuffixes(language, options);
              if (needsZeroSuffixLookup && options["defaultValue".concat(this.options.pluralSeparator, "zero")] && suffixes.indexOf("".concat(this.options.pluralSeparator, "zero")) < 0) {
                suffixes.push("".concat(this.options.pluralSeparator, "zero"));
              }
              suffixes.forEach((suffix2) => {
                send([language], key + suffix2, options["defaultValue".concat(suffix2)] || defaultValue);
              });
            });
          } else {
            send(lngs, key, defaultValue);
          }
        }
      }
      res = this.extendTranslation(res, keys, options, resolved, lastKey);
      if (usedKey && res === key && this.options.appendNamespaceToMissingKey)
        res = "".concat(namespace, ":").concat(key);
      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {
        if (this.options.compatibilityAPI !== "v1") {
          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(namespace, ":").concat(key) : key, usedDefault ? res : void 0);
        } else {
          res = this.options.parseMissingKeyHandler(res);
        }
      }
    }
    if (returnDetails) {
      resolved.res = res;
      resolved.usedParams = this.getUsedParamsDetails(options);
      return resolved;
    }
    return res;
  }
  extendTranslation(res, key, options, resolved, lastKey) {
    var _this = this;
    if (this.i18nFormat && this.i18nFormat.parse) {
      res = this.i18nFormat.parse(res, {
        ...this.options.interpolation.defaultVariables,
        ...options
      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {
        resolved
      });
    } else if (!options.skipInterpolation) {
      if (options.interpolation)
        this.interpolator.init({
          ...options,
          ...{
            interpolation: {
              ...this.options.interpolation,
              ...options.interpolation
            }
          }
        });
      const skipOnVariables = typeof res === "string" && (options && options.interpolation && options.interpolation.skipOnVariables !== void 0 ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let nestBef;
      if (skipOnVariables) {
        const nb2 = res.match(this.interpolator.nestingRegexp);
        nestBef = nb2 && nb2.length;
      }
      let data = options.replace && typeof options.replace !== "string" ? options.replace : options;
      if (this.options.interpolation.defaultVariables)
        data = {
          ...this.options.interpolation.defaultVariables,
          ...data
        };
      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);
      if (skipOnVariables) {
        const na = res.match(this.interpolator.nestingRegexp);
        const nestAft = na && na.length;
        if (nestBef < nestAft)
          options.nest = false;
      }
      if (!options.lng && this.options.compatibilityAPI !== "v1" && resolved && resolved.res)
        options.lng = resolved.usedLng;
      if (options.nest !== false)
        res = this.interpolator.nest(res, function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          if (lastKey && lastKey[0] === args[0] && !options.context) {
            _this.logger.warn("It seems you are nesting recursively key: ".concat(args[0], " in key: ").concat(key[0]));
            return null;
          }
          return _this.translate(...args, key);
        }, options);
      if (options.interpolation)
        this.interpolator.reset();
    }
    const postProcess = options.postProcess || this.options.postProcess;
    const postProcessorNames = typeof postProcess === "string" ? [postProcess] : postProcess;
    if (res !== void 0 && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {
      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {
        i18nResolved: {
          ...resolved,
          usedParams: this.getUsedParamsDetails(options)
        },
        ...options
      } : options, this);
    }
    return res;
  }
  resolve(keys) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let found;
    let usedKey;
    let exactUsedKey;
    let usedLng;
    let usedNS;
    if (typeof keys === "string")
      keys = [keys];
    keys.forEach((k2) => {
      if (this.isValidLookup(found))
        return;
      const extracted = this.extractFromKey(k2, options);
      const key = extracted.key;
      usedKey = key;
      let namespaces = extracted.namespaces;
      if (this.options.fallbackNS)
        namespaces = namespaces.concat(this.options.fallbackNS);
      const needsPluralHandling = options.count !== void 0 && typeof options.count !== "string";
      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();
      const needsContextHandling = options.context !== void 0 && (typeof options.context === "string" || typeof options.context === "number") && options.context !== "";
      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);
      namespaces.forEach((ns) => {
        if (this.isValidLookup(found))
          return;
        usedNS = ns;
        if (!checkedLoadedFor["".concat(codes[0], "-").concat(ns)] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {
          checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = true;
          this.logger.warn('key "'.concat(usedKey, '" for languages "').concat(codes.join(", "), '" won\'t get resolved as namespace "').concat(usedNS, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
        }
        codes.forEach((code) => {
          if (this.isValidLookup(found))
            return;
          usedLng = code;
          const finalKeys = [key];
          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {
            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
          } else {
            let pluralSuffix;
            if (needsPluralHandling)
              pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);
            const zeroSuffix = "".concat(this.options.pluralSeparator, "zero");
            const ordinalPrefix = "".concat(this.options.pluralSeparator, "ordinal").concat(this.options.pluralSeparator);
            if (needsPluralHandling) {
              finalKeys.push(key + pluralSuffix);
              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {
                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));
              }
              if (needsZeroSuffixLookup) {
                finalKeys.push(key + zeroSuffix);
              }
            }
            if (needsContextHandling) {
              const contextKey = "".concat(key).concat(this.options.contextSeparator).concat(options.context);
              finalKeys.push(contextKey);
              if (needsPluralHandling) {
                finalKeys.push(contextKey + pluralSuffix);
                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {
                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));
                }
                if (needsZeroSuffixLookup) {
                  finalKeys.push(contextKey + zeroSuffix);
                }
              }
            }
          }
          let possibleKey;
          while (possibleKey = finalKeys.pop()) {
            if (!this.isValidLookup(found)) {
              exactUsedKey = possibleKey;
              found = this.getResource(code, ns, possibleKey, options);
            }
          }
        });
      });
    });
    return {
      res: found,
      usedKey,
      exactUsedKey,
      usedLng,
      usedNS
    };
  }
  isValidLookup(res) {
    return res !== void 0 && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === "");
  }
  getResource(code, ns, key) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    if (this.i18nFormat && this.i18nFormat.getResource)
      return this.i18nFormat.getResource(code, ns, key, options);
    return this.resourceStore.getResource(code, ns, key, options);
  }
  getUsedParamsDetails() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const optionsKeys = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"];
    const useOptionsReplaceForData = options.replace && typeof options.replace !== "string";
    let data = useOptionsReplaceForData ? options.replace : options;
    if (useOptionsReplaceForData && typeof options.count !== "undefined") {
      data.count = options.count;
    }
    if (this.options.interpolation.defaultVariables) {
      data = {
        ...this.options.interpolation.defaultVariables,
        ...data
      };
    }
    if (!useOptionsReplaceForData) {
      data = {
        ...data
      };
      for (const key of optionsKeys) {
        delete data[key];
      }
    }
    return data;
  }
  static hasDefaultValue(options) {
    const prefix = "defaultValue";
    for (const option in options) {
      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && void 0 !== options[option]) {
        return true;
      }
    }
    return false;
  }
}
function capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
class LanguageUtil {
  constructor(options) {
    this.options = options;
    this.supportedLngs = this.options.supportedLngs || false;
    this.logger = baseLogger.create("languageUtils");
  }
  getScriptPartFromCode(code) {
    code = getCleanedCode(code);
    if (!code || code.indexOf("-") < 0)
      return null;
    const p2 = code.split("-");
    if (p2.length === 2)
      return null;
    p2.pop();
    if (p2[p2.length - 1].toLowerCase() === "x")
      return null;
    return this.formatLanguageCode(p2.join("-"));
  }
  getLanguagePartFromCode(code) {
    code = getCleanedCode(code);
    if (!code || code.indexOf("-") < 0)
      return code;
    const p2 = code.split("-");
    return this.formatLanguageCode(p2[0]);
  }
  formatLanguageCode(code) {
    if (typeof code === "string" && code.indexOf("-") > -1) {
      const specialCases = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
      let p2 = code.split("-");
      if (this.options.lowerCaseLng) {
        p2 = p2.map((part) => part.toLowerCase());
      } else if (p2.length === 2) {
        p2[0] = p2[0].toLowerCase();
        p2[1] = p2[1].toUpperCase();
        if (specialCases.indexOf(p2[1].toLowerCase()) > -1)
          p2[1] = capitalize(p2[1].toLowerCase());
      } else if (p2.length === 3) {
        p2[0] = p2[0].toLowerCase();
        if (p2[1].length === 2)
          p2[1] = p2[1].toUpperCase();
        if (p2[0] !== "sgn" && p2[2].length === 2)
          p2[2] = p2[2].toUpperCase();
        if (specialCases.indexOf(p2[1].toLowerCase()) > -1)
          p2[1] = capitalize(p2[1].toLowerCase());
        if (specialCases.indexOf(p2[2].toLowerCase()) > -1)
          p2[2] = capitalize(p2[2].toLowerCase());
      }
      return p2.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
  }
  isSupportedCode(code) {
    if (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) {
      code = this.getLanguagePartFromCode(code);
    }
    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
  }
  getBestMatchFromCodes(codes) {
    if (!codes)
      return null;
    let found;
    codes.forEach((code) => {
      if (found)
        return;
      const cleanedLng = this.formatLanguageCode(code);
      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng))
        found = cleanedLng;
    });
    if (!found && this.options.supportedLngs) {
      codes.forEach((code) => {
        if (found)
          return;
        const lngOnly = this.getLanguagePartFromCode(code);
        if (this.isSupportedCode(lngOnly))
          return found = lngOnly;
        found = this.options.supportedLngs.find((supportedLng) => {
          if (supportedLng === lngOnly)
            return supportedLng;
          if (supportedLng.indexOf("-") < 0 && lngOnly.indexOf("-") < 0)
            return;
          if (supportedLng.indexOf("-") > 0 && lngOnly.indexOf("-") < 0 && supportedLng.substring(0, supportedLng.indexOf("-")) === lngOnly)
            return supportedLng;
          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1)
            return supportedLng;
        });
      });
    }
    if (!found)
      found = this.getFallbackCodes(this.options.fallbackLng)[0];
    return found;
  }
  getFallbackCodes(fallbacks, code) {
    if (!fallbacks)
      return [];
    if (typeof fallbacks === "function")
      fallbacks = fallbacks(code);
    if (typeof fallbacks === "string")
      fallbacks = [fallbacks];
    if (Array.isArray(fallbacks))
      return fallbacks;
    if (!code)
      return fallbacks.default || [];
    let found = fallbacks[code];
    if (!found)
      found = fallbacks[this.getScriptPartFromCode(code)];
    if (!found)
      found = fallbacks[this.formatLanguageCode(code)];
    if (!found)
      found = fallbacks[this.getLanguagePartFromCode(code)];
    if (!found)
      found = fallbacks.default;
    return found || [];
  }
  toResolveHierarchy(code, fallbackCode) {
    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
    const codes = [];
    const addCode = (c) => {
      if (!c)
        return;
      if (this.isSupportedCode(c)) {
        codes.push(c);
      } else {
        this.logger.warn("rejecting language code not found in supportedLngs: ".concat(c));
      }
    };
    if (typeof code === "string" && (code.indexOf("-") > -1 || code.indexOf("_") > -1)) {
      if (this.options.load !== "languageOnly")
        addCode(this.formatLanguageCode(code));
      if (this.options.load !== "languageOnly" && this.options.load !== "currentOnly")
        addCode(this.getScriptPartFromCode(code));
      if (this.options.load !== "currentOnly")
        addCode(this.getLanguagePartFromCode(code));
    } else if (typeof code === "string") {
      addCode(this.formatLanguageCode(code));
    }
    fallbackCodes.forEach((fc2) => {
      if (codes.indexOf(fc2) < 0)
        addCode(this.formatLanguageCode(fc2));
    });
    return codes;
  }
}
let sets = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he", "iw"],
  nr: [1, 2, 20, 21],
  fc: 22
}];
let _rulesPluralsTypes = {
  1: function (n2) {
    return Number(n2 > 1);
  },
  2: function (n2) {
    return Number(n2 != 1);
  },
  3: function (n2) {
    return 0;
  },
  4: function (n2) {
    return Number(n2 % 10 == 1 && n2 % 100 != 11 ? 0 : n2 % 10 >= 2 && n2 % 10 <= 4 && (n2 % 100 < 10 || n2 % 100 >= 20) ? 1 : 2);
  },
  5: function (n2) {
    return Number(n2 == 0 ? 0 : n2 == 1 ? 1 : n2 == 2 ? 2 : n2 % 100 >= 3 && n2 % 100 <= 10 ? 3 : n2 % 100 >= 11 ? 4 : 5);
  },
  6: function (n2) {
    return Number(n2 == 1 ? 0 : n2 >= 2 && n2 <= 4 ? 1 : 2);
  },
  7: function (n2) {
    return Number(n2 == 1 ? 0 : n2 % 10 >= 2 && n2 % 10 <= 4 && (n2 % 100 < 10 || n2 % 100 >= 20) ? 1 : 2);
  },
  8: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 2 ? 1 : n2 != 8 && n2 != 11 ? 2 : 3);
  },
  9: function (n2) {
    return Number(n2 >= 2);
  },
  10: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 2 ? 1 : n2 < 7 ? 2 : n2 < 11 ? 3 : 4);
  },
  11: function (n2) {
    return Number(n2 == 1 || n2 == 11 ? 0 : n2 == 2 || n2 == 12 ? 1 : n2 > 2 && n2 < 20 ? 2 : 3);
  },
  12: function (n2) {
    return Number(n2 % 10 != 1 || n2 % 100 == 11);
  },
  13: function (n2) {
    return Number(n2 !== 0);
  },
  14: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 2 ? 1 : n2 == 3 ? 2 : 3);
  },
  15: function (n2) {
    return Number(n2 % 10 == 1 && n2 % 100 != 11 ? 0 : n2 % 10 >= 2 && (n2 % 100 < 10 || n2 % 100 >= 20) ? 1 : 2);
  },
  16: function (n2) {
    return Number(n2 % 10 == 1 && n2 % 100 != 11 ? 0 : n2 !== 0 ? 1 : 2);
  },
  17: function (n2) {
    return Number(n2 == 1 || n2 % 10 == 1 && n2 % 100 != 11 ? 0 : 1);
  },
  18: function (n2) {
    return Number(n2 == 0 ? 0 : n2 == 1 ? 1 : 2);
  },
  19: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 0 || n2 % 100 > 1 && n2 % 100 < 11 ? 1 : n2 % 100 > 10 && n2 % 100 < 20 ? 2 : 3);
  },
  20: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 0 || n2 % 100 > 0 && n2 % 100 < 20 ? 1 : 2);
  },
  21: function (n2) {
    return Number(n2 % 100 == 1 ? 1 : n2 % 100 == 2 ? 2 : n2 % 100 == 3 || n2 % 100 == 4 ? 3 : 0);
  },
  22: function (n2) {
    return Number(n2 == 1 ? 0 : n2 == 2 ? 1 : (n2 < 0 || n2 > 10) && n2 % 10 == 0 ? 2 : 3);
  }
};
const nonIntlVersions = ["v1", "v2", "v3"];
const intlVersions = ["v4"];
const suffixesOrder = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
};
function createRules() {
  const rules = {};
  sets.forEach((set) => {
    set.lngs.forEach((l2) => {
      rules[l2] = {
        numbers: set.nr,
        plurals: _rulesPluralsTypes[set.fc]
      };
    });
  });
  return rules;
}
class PluralResolver {
  constructor(languageUtils) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = languageUtils;
    this.options = options;
    this.logger = baseLogger.create("pluralResolver");
    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === "undefined" || !Intl.PluralRules)) {
      this.options.compatibilityJSON = "v3";
      this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.");
    }
    this.rules = createRules();
  }
  addRule(lng, obj) {
    this.rules[lng] = obj;
  }
  getRule(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.shouldUseIntlApi()) {
      try {
        return new Intl.PluralRules(getCleanedCode(code === "dev" ? "en" : code), {
          type: options.ordinal ? "ordinal" : "cardinal"
        });
      } catch (err) {
        return;
      }
    }
    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
  }
  needsPlural(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const rule = this.getRule(code, options);
    if (this.shouldUseIntlApi()) {
      return rule && rule.resolvedOptions().pluralCategories.length > 1;
    }
    return rule && rule.numbers.length > 1;
  }
  getPluralFormsOfKey(code, key) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(code, options).map((suffix2) => "".concat(key).concat(suffix2));
  }
  getSuffixes(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const rule = this.getRule(code, options);
    if (!rule) {
      return [];
    }
    if (this.shouldUseIntlApi()) {
      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map((pluralCategory) => "".concat(this.options.prepend).concat(options.ordinal ? "ordinal".concat(this.options.prepend) : "").concat(pluralCategory));
    }
    return rule.numbers.map((number) => this.getSuffix(code, number, options));
  }
  getSuffix(code, count) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const rule = this.getRule(code, options);
    if (rule) {
      if (this.shouldUseIntlApi()) {
        return "".concat(this.options.prepend).concat(options.ordinal ? "ordinal".concat(this.options.prepend) : "").concat(rule.select(count));
      }
      return this.getSuffixRetroCompatible(rule, count);
    }
    this.logger.warn("no plural rule found for: ".concat(code));
    return "";
  }
  getSuffixRetroCompatible(rule, count) {
    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
    let suffix2 = rule.numbers[idx];
    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
      if (suffix2 === 2) {
        suffix2 = "plural";
      } else if (suffix2 === 1) {
        suffix2 = "";
      }
    }
    const returnSuffix = () => this.options.prepend && suffix2.toString() ? this.options.prepend + suffix2.toString() : suffix2.toString();
    if (this.options.compatibilityJSON === "v1") {
      if (suffix2 === 1)
        return "";
      if (typeof suffix2 === "number")
        return "_plural_".concat(suffix2.toString());
      return returnSuffix();
    } else if (this.options.compatibilityJSON === "v2") {
      return returnSuffix();
    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
      return returnSuffix();
    }
    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();
  }
  shouldUseIntlApi() {
    return !nonIntlVersions.includes(this.options.compatibilityJSON);
  }
}
function deepFindWithDefaults(data, defaultData, key) {
  let keySeparator = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".";
  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;
  let path2 = getPathWithDefaults(data, defaultData, key);
  if (!path2 && ignoreJSONStructure && typeof key === "string") {
    path2 = deepFind(data, key, keySeparator);
    if (path2 === void 0)
      path2 = deepFind(defaultData, key, keySeparator);
  }
  return path2;
}
class Interpolator {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = baseLogger.create("interpolator");
    this.options = options;
    this.format = options.interpolation && options.interpolation.format || ((value) => value);
    this.init(options);
  }
  init() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!options.interpolation)
      options.interpolation = {
        escapeValue: true
      };
    const {
      escape: escape$1$1,
      escapeValue,
      useRawValueToEscape,
      prefix,
      prefixEscaped,
      suffix: suffix2,
      suffixEscaped,
      formatSeparator,
      unescapeSuffix,
      unescapePrefix,
      nestingPrefix,
      nestingPrefixEscaped,
      nestingSuffix,
      nestingSuffixEscaped,
      nestingOptionsSeparator,
      maxReplaces,
      alwaysFormat
    } = options.interpolation;
    this.escape = escape$1$1 !== void 0 ? escape$1$1 : escape$1;
    this.escapeValue = escapeValue !== void 0 ? escapeValue : true;
    this.useRawValueToEscape = useRawValueToEscape !== void 0 ? useRawValueToEscape : false;
    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || "{{";
    this.suffix = suffix2 ? regexEscape(suffix2) : suffixEscaped || "}}";
    this.formatSeparator = formatSeparator || ",";
    this.unescapePrefix = unescapeSuffix ? "" : unescapePrefix || "-";
    this.unescapeSuffix = this.unescapePrefix ? "" : unescapeSuffix || "";
    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape("$t(");
    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(")");
    this.nestingOptionsSeparator = nestingOptionsSeparator || ",";
    this.maxReplaces = maxReplaces || 1e3;
    this.alwaysFormat = alwaysFormat !== void 0 ? alwaysFormat : false;
    this.resetRegExp();
  }
  reset() {
    if (this.options)
      this.init(this.options);
  }
  resetRegExp() {
    const getOrResetRegExp = (existingRegExp, pattern) => {
      if (existingRegExp && existingRegExp.source === pattern) {
        existingRegExp.lastIndex = 0;
        return existingRegExp;
      }
      return new RegExp(pattern, "g");
    };
    this.regexp = getOrResetRegExp(this.regexp, "".concat(this.prefix, "(.+?)").concat(this.suffix));
    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix));
    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix));
  }
  interpolate(str, data, lng, options) {
    let match;
    let value;
    let replaces;
    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
    function regexSafe(val) {
      return val.replace(/\$/g, "$$$$");
    }
    const handleFormat = (key) => {
      if (key.indexOf(this.formatSeparator) < 0) {
        const path2 = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(path2, void 0, lng, {
          ...options,
          ...data,
          interpolationkey: key
        }) : path2;
      }
      const p2 = key.split(this.formatSeparator);
      const k2 = p2.shift().trim();
      const f2 = p2.join(this.formatSeparator).trim();
      return this.format(deepFindWithDefaults(data, defaultData, k2, this.options.keySeparator, this.options.ignoreJSONStructure), f2, lng, {
        ...options,
        ...data,
        interpolationkey: k2
      });
    };
    this.resetRegExp();
    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;
    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== void 0 ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    const todos = [{
      regex: this.regexpUnescape,
      safeValue: (val) => regexSafe(val)
    }, {
      regex: this.regexp,
      safeValue: (val) => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)
    }];
    todos.forEach((todo) => {
      replaces = 0;
      while (match = todo.regex.exec(str)) {
        const matchedVar = match[1].trim();
        value = handleFormat(matchedVar);
        if (value === void 0) {
          if (typeof missingInterpolationHandler === "function") {
            const temp = missingInterpolationHandler(str, match, options);
            value = typeof temp === "string" ? temp : "";
          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {
            value = "";
          } else if (skipOnVariables) {
            value = match[0];
            continue;
          } else {
            this.logger.warn("missed to pass in variable ".concat(matchedVar, " for interpolating ").concat(str));
            value = "";
          }
        } else if (typeof value !== "string" && !this.useRawValueToEscape) {
          value = makeString(value);
        }
        const safeValue = todo.safeValue(value);
        str = str.replace(match[0], safeValue);
        if (skipOnVariables) {
          todo.regex.lastIndex += value.length;
          todo.regex.lastIndex -= match[0].length;
        } else {
          todo.regex.lastIndex = 0;
        }
        replaces++;
        if (replaces >= this.maxReplaces) {
          break;
        }
      }
    });
    return str;
  }
  nest(str, fc2) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let match;
    let value;
    let clonedOptions;
    function handleHasOptions(key, inheritedOptions) {
      const sep = this.nestingOptionsSeparator;
      if (key.indexOf(sep) < 0)
        return key;
      const c = key.split(new RegExp("".concat(sep, "[ ]*{")));
      let optionsString = "{".concat(c[1]);
      key = c[0];
      optionsString = this.interpolate(optionsString, clonedOptions);
      const matchedSingleQuotes = optionsString.match(/'/g);
      const matchedDoubleQuotes = optionsString.match(/"/g);
      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {
        optionsString = optionsString.replace(/'/g, '"');
      }
      try {
        clonedOptions = JSON.parse(optionsString);
        if (inheritedOptions)
          clonedOptions = {
            ...inheritedOptions,
            ...clonedOptions
          };
      } catch (e2) {
        this.logger.warn("failed parsing options string in nesting for key ".concat(key), e2);
        return "".concat(key).concat(sep).concat(optionsString);
      }
      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1)
        delete clonedOptions.defaultValue;
      return key;
    }
    while (match = this.nestingRegexp.exec(str)) {
      let formatters = [];
      clonedOptions = {
        ...options
      };
      clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== "string" ? clonedOptions.replace : clonedOptions;
      clonedOptions.applyPostProcessor = false;
      delete clonedOptions.defaultValue;
      let doReduce = false;
      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {
        const r2 = match[1].split(this.formatSeparator).map((elem) => elem.trim());
        match[1] = r2.shift();
        formatters = r2;
        doReduce = true;
      }
      value = fc2(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);
      if (value && match[0] === str && typeof value !== "string")
        return value;
      if (typeof value !== "string")
        value = makeString(value);
      if (!value) {
        this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str));
        value = "";
      }
      if (doReduce) {
        value = formatters.reduce((v2, f2) => this.format(v2, f2, options.lng, {
          ...options,
          interpolationkey: match[1].trim()
        }), value.trim());
      }
      str = str.replace(match[0], value);
      this.regexp.lastIndex = 0;
    }
    return str;
  }
}
function parseFormatStr(formatStr) {
  let formatName = formatStr.toLowerCase().trim();
  const formatOptions = {};
  if (formatStr.indexOf("(") > -1) {
    const p2 = formatStr.split("(");
    formatName = p2[0].toLowerCase().trim();
    const optStr = p2[1].substring(0, p2[1].length - 1);
    if (formatName === "currency" && optStr.indexOf(":") < 0) {
      if (!formatOptions.currency)
        formatOptions.currency = optStr.trim();
    } else if (formatName === "relativetime" && optStr.indexOf(":") < 0) {
      if (!formatOptions.range)
        formatOptions.range = optStr.trim();
    } else {
      const opts = optStr.split(";");
      opts.forEach((opt) => {
        if (opt) {
          const [key, ...rest] = opt.split(":");
          const val = rest.join(":").trim().replace(/^'+|'+$/g, "");
          const trimmedKey = key.trim();
          if (!formatOptions[trimmedKey])
            formatOptions[trimmedKey] = val;
          if (val === "false")
            formatOptions[trimmedKey] = false;
          if (val === "true")
            formatOptions[trimmedKey] = true;
          if (!isNaN(val))
            formatOptions[trimmedKey] = parseInt(val, 10);
        }
      });
    }
  }
  return {
    formatName,
    formatOptions
  };
}
function createCachedFormatter(fn) {
  const cache = {};
  return function invokeFormatter(val, lng, options) {
    const key = lng + JSON.stringify(options);
    let formatter = cache[key];
    if (!formatter) {
      formatter = fn(getCleanedCode(lng), options);
      cache[key] = formatter;
    }
    return formatter(val);
  };
}
class Formatter {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = baseLogger.create("formatter");
    this.options = options;
    this.formats = {
      number: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.NumberFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      }),
      currency: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.NumberFormat(lng, {
          ...opt,
          style: "currency"
        });
        return (val) => formatter.format(val);
      }),
      datetime: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.DateTimeFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      }),
      relativetime: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.RelativeTimeFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val, opt.range || "day");
      }),
      list: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.ListFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      })
    };
    this.init(options);
  }
  init(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    const iOpts = options.interpolation;
    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ",";
  }
  add(name, fc2) {
    this.formats[name.toLowerCase().trim()] = fc2;
  }
  addCached(name, fc2) {
    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc2);
  }
  format(value, format, lng) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const formats2 = format.split(this.formatSeparator);
    const result = formats2.reduce((mem, f2) => {
      const {
        formatName,
        formatOptions
      } = parseFormatStr(f2);
      if (this.formats[formatName]) {
        let formatted = mem;
        try {
          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};
          const l2 = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;
          formatted = this.formats[formatName](mem, l2, {
            ...formatOptions,
            ...options,
            ...valOptions
          });
        } catch (error) {
          this.logger.warn(error);
        }
        return formatted;
      } else {
        this.logger.warn("there was no format function for ".concat(formatName));
      }
      return mem;
    }, value);
    return result;
  }
}
function removePending(q2, name) {
  if (q2.pending[name] !== void 0) {
    delete q2.pending[name];
    q2.pendingCount--;
  }
}
class Connector extends EventEmitter {
  constructor(backend, store, services) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super();
    this.backend = backend;
    this.store = store;
    this.services = services;
    this.languageUtils = services.languageUtils;
    this.options = options;
    this.logger = baseLogger.create("backendConnector");
    this.waitingReads = [];
    this.maxParallelReads = options.maxParallelReads || 10;
    this.readingCalls = 0;
    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;
    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;
    this.state = {};
    this.queue = [];
    if (this.backend && this.backend.init) {
      this.backend.init(services, options.backend, options);
    }
  }
  queueLoad(languages, namespaces, options, callback) {
    const toLoad = {};
    const pending = {};
    const toLoadLanguages = {};
    const toLoadNamespaces = {};
    languages.forEach((lng) => {
      let hasAllNamespaces = true;
      namespaces.forEach((ns) => {
        const name = "".concat(lng, "|").concat(ns);
        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {
          this.state[name] = 2;
        } else if (this.state[name] < 0)
          ;
        else if (this.state[name] === 1) {
          if (pending[name] === void 0)
            pending[name] = true;
        } else {
          this.state[name] = 1;
          hasAllNamespaces = false;
          if (pending[name] === void 0)
            pending[name] = true;
          if (toLoad[name] === void 0)
            toLoad[name] = true;
          if (toLoadNamespaces[ns] === void 0)
            toLoadNamespaces[ns] = true;
        }
      });
      if (!hasAllNamespaces)
        toLoadLanguages[lng] = true;
    });
    if (Object.keys(toLoad).length || Object.keys(pending).length) {
      this.queue.push({
        pending,
        pendingCount: Object.keys(pending).length,
        loaded: {},
        errors: [],
        callback
      });
    }
    return {
      toLoad: Object.keys(toLoad),
      pending: Object.keys(pending),
      toLoadLanguages: Object.keys(toLoadLanguages),
      toLoadNamespaces: Object.keys(toLoadNamespaces)
    };
  }
  loaded(name, err, data) {
    const s = name.split("|");
    const lng = s[0];
    const ns = s[1];
    if (err)
      this.emit("failedLoading", lng, ns, err);
    if (data) {
      this.store.addResourceBundle(lng, ns, data, void 0, void 0, {
        skipCopy: true
      });
    }
    this.state[name] = err ? -1 : 2;
    const loaded = {};
    this.queue.forEach((q2) => {
      pushPath(q2.loaded, [lng], ns);
      removePending(q2, name);
      if (err)
        q2.errors.push(err);
      if (q2.pendingCount === 0 && !q2.done) {
        Object.keys(q2.loaded).forEach((l2) => {
          if (!loaded[l2])
            loaded[l2] = {};
          const loadedKeys = q2.loaded[l2];
          if (loadedKeys.length) {
            loadedKeys.forEach((n2) => {
              if (loaded[l2][n2] === void 0)
                loaded[l2][n2] = true;
            });
          }
        });
        q2.done = true;
        if (q2.errors.length) {
          q2.callback(q2.errors);
        } else {
          q2.callback();
        }
      }
    });
    this.emit("loaded", loaded);
    this.queue = this.queue.filter((q2) => !q2.done);
  }
  read(lng, ns, fcName) {
    let tried = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    let wait = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout;
    let callback = arguments.length > 5 ? arguments[5] : void 0;
    if (!lng.length)
      return callback(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng,
        ns,
        fcName,
        tried,
        wait,
        callback
      });
      return;
    }
    this.readingCalls++;
    const resolver = (err, data) => {
      this.readingCalls--;
      if (this.waitingReads.length > 0) {
        const next = this.waitingReads.shift();
        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);
      }
      if (err && data && tried < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);
        }, wait);
        return;
      }
      callback(err, data);
    };
    const fc2 = this.backend[fcName].bind(this.backend);
    if (fc2.length === 2) {
      try {
        const r2 = fc2(lng, ns);
        if (r2 && typeof r2.then === "function") {
          r2.then((data) => resolver(null, data)).catch(resolver);
        } else {
          resolver(null, r2);
        }
      } catch (err) {
        resolver(err);
      }
      return;
    }
    return fc2(lng, ns, resolver);
  }
  prepareLoading(languages, namespaces) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let callback = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend) {
      this.logger.warn("No backend was added via i18next.use. Will not load resources.");
      return callback && callback();
    }
    if (typeof languages === "string")
      languages = this.languageUtils.toResolveHierarchy(languages);
    if (typeof namespaces === "string")
      namespaces = [namespaces];
    const toLoad = this.queueLoad(languages, namespaces, options, callback);
    if (!toLoad.toLoad.length) {
      if (!toLoad.pending.length)
        callback();
      return null;
    }
    toLoad.toLoad.forEach((name) => {
      this.loadOne(name);
    });
  }
  load(languages, namespaces, callback) {
    this.prepareLoading(languages, namespaces, {}, callback);
  }
  reload(languages, namespaces, callback) {
    this.prepareLoading(languages, namespaces, {
      reload: true
    }, callback);
  }
  loadOne(name) {
    let prefix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const s = name.split("|");
    const lng = s[0];
    const ns = s[1];
    this.read(lng, ns, "read", void 0, void 0, (err, data) => {
      if (err)
        this.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err);
      if (!err && data)
        this.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data);
      this.loaded(name, err, data);
    });
  }
  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
    let options = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
    let clb = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {
      this.logger.warn('did not save key "'.concat(key, '" as the namespace "').concat(namespace, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (key === void 0 || key === null || key === "")
      return;
    if (this.backend && this.backend.create) {
      const opts = {
        ...options,
        isUpdate
      };
      const fc2 = this.backend.create.bind(this.backend);
      if (fc2.length < 6) {
        try {
          let r2;
          if (fc2.length === 5) {
            r2 = fc2(languages, namespace, key, fallbackValue, opts);
          } else {
            r2 = fc2(languages, namespace, key, fallbackValue);
          }
          if (r2 && typeof r2.then === "function") {
            r2.then((data) => clb(null, data)).catch(clb);
          } else {
            clb(null, r2);
          }
        } catch (err) {
          clb(err);
        }
      } else {
        fc2(languages, namespace, key, fallbackValue, clb, opts);
      }
    }
    if (!languages || !languages[0])
      return;
    this.store.addResource(languages[0], namespace, key, fallbackValue);
  }
}
function get() {
  return {
    debug: false,
    initImmediate: true,
    ns: ["translation"],
    defaultNS: ["translation"],
    fallbackLng: ["dev"],
    fallbackNS: false,
    supportedLngs: false,
    nonExplicitSupportedLngs: false,
    load: "all",
    preload: false,
    simplifyPluralSuffix: true,
    keySeparator: ".",
    nsSeparator: ":",
    pluralSeparator: "_",
    contextSeparator: "_",
    partialBundledLanguages: false,
    saveMissing: false,
    updateMissing: false,
    saveMissingTo: "fallback",
    saveMissingPlurals: true,
    missingKeyHandler: false,
    missingInterpolationHandler: false,
    postProcess: false,
    postProcessPassResolved: false,
    returnNull: false,
    returnEmptyString: true,
    returnObjects: false,
    joinArrays: false,
    returnedObjectHandler: false,
    parseMissingKeyHandler: false,
    appendNamespaceToMissingKey: false,
    appendNamespaceToCIMode: false,
    overloadTranslationOptionHandler: function handle(args) {
      let ret = {};
      if (typeof args[1] === "object")
        ret = args[1];
      if (typeof args[1] === "string")
        ret.defaultValue = args[1];
      if (typeof args[2] === "string")
        ret.tDescription = args[2];
      if (typeof args[2] === "object" || typeof args[3] === "object") {
        const options = args[3] || args[2];
        Object.keys(options).forEach((key) => {
          ret[key] = options[key];
        });
      }
      return ret;
    },
    interpolation: {
      escapeValue: true,
      format: (value) => value,
      prefix: "{{",
      suffix: "}}",
      formatSeparator: ",",
      unescapePrefix: "-",
      nestingPrefix: "$t(",
      nestingSuffix: ")",
      nestingOptionsSeparator: ",",
      maxReplaces: 1e3,
      skipOnVariables: true
    }
  };
}
function transformOptions(options) {
  if (typeof options.ns === "string")
    options.ns = [options.ns];
  if (typeof options.fallbackLng === "string")
    options.fallbackLng = [options.fallbackLng];
  if (typeof options.fallbackNS === "string")
    options.fallbackNS = [options.fallbackNS];
  if (options.supportedLngs && options.supportedLngs.indexOf("cimode") < 0) {
    options.supportedLngs = options.supportedLngs.concat(["cimode"]);
  }
  return options;
}
function noop() {
}
function bindMemberFunctions(inst) {
  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));
  mems.forEach((mem) => {
    if (typeof inst[mem] === "function") {
      inst[mem] = inst[mem].bind(inst);
    }
  });
}
class I18n extends EventEmitter {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    super();
    this.options = transformOptions(options);
    this.services = {};
    this.logger = baseLogger;
    this.modules = {
      external: []
    };
    bindMemberFunctions(this);
    if (callback && !this.isInitialized && !options.isClone) {
      if (!this.options.initImmediate) {
        this.init(options, callback);
        return this;
      }
      setTimeout(() => {
        this.init(options, callback);
      }, 0);
    }
  }
  init() {
    var _this = this;
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = true;
    if (typeof options === "function") {
      callback = options;
      options = {};
    }
    if (!options.defaultNS && options.defaultNS !== false && options.ns) {
      if (typeof options.ns === "string") {
        options.defaultNS = options.ns;
      } else if (options.ns.indexOf("translation") < 0) {
        options.defaultNS = options.ns[0];
      }
    }
    const defOpts = get();
    this.options = {
      ...defOpts,
      ...this.options,
      ...transformOptions(options)
    };
    if (this.options.compatibilityAPI !== "v1") {
      this.options.interpolation = {
        ...defOpts.interpolation,
        ...this.options.interpolation
      };
    }
    if (options.keySeparator !== void 0) {
      this.options.userDefinedKeySeparator = options.keySeparator;
    }
    if (options.nsSeparator !== void 0) {
      this.options.userDefinedNsSeparator = options.nsSeparator;
    }
    function createClassOnDemand(ClassOrObject) {
      if (!ClassOrObject)
        return null;
      if (typeof ClassOrObject === "function")
        return new ClassOrObject();
      return ClassOrObject;
    }
    if (!this.options.isClone) {
      if (this.modules.logger) {
        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
      } else {
        baseLogger.init(null, this.options);
      }
      let formatter;
      if (this.modules.formatter) {
        formatter = this.modules.formatter;
      } else if (typeof Intl !== "undefined") {
        formatter = Formatter;
      }
      const lu = new LanguageUtil(this.options);
      this.store = new ResourceStore(this.options.resources, this.options);
      const s = this.services;
      s.logger = baseLogger;
      s.resourceStore = this.store;
      s.languageUtils = lu;
      s.pluralResolver = new PluralResolver(lu, {
        prepend: this.options.pluralSeparator,
        compatibilityJSON: this.options.compatibilityJSON,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      });
      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {
        s.formatter = createClassOnDemand(formatter);
        s.formatter.init(s, this.options);
        this.options.interpolation.format = s.formatter.format.bind(s.formatter);
      }
      s.interpolator = new Interpolator(this.options);
      s.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      };
      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
      s.backendConnector.on("*", function (event) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        _this.emit(event, ...args);
      });
      if (this.modules.languageDetector) {
        s.languageDetector = createClassOnDemand(this.modules.languageDetector);
        if (s.languageDetector.init)
          s.languageDetector.init(s, this.options.detection, this.options);
      }
      if (this.modules.i18nFormat) {
        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
        if (s.i18nFormat.init)
          s.i18nFormat.init(this);
      }
      this.translator = new Translator(this.services, this.options);
      this.translator.on("*", function (event) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        _this.emit(event, ...args);
      });
      this.modules.external.forEach((m2) => {
        if (m2.init)
          m2.init(this);
      });
    }
    this.format = this.options.interpolation.format;
    if (!callback)
      callback = noop;
    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      if (codes.length > 0 && codes[0] !== "dev")
        this.options.lng = codes[0];
    }
    if (!this.services.languageDetector && !this.options.lng) {
      this.logger.warn("init: no languageDetector is used and no lng is defined");
    }
    const storeApi = ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"];
    storeApi.forEach((fcName) => {
      this[fcName] = function () {
        return _this.store[fcName](...arguments);
      };
    });
    const storeApiChained = ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"];
    storeApiChained.forEach((fcName) => {
      this[fcName] = function () {
        _this.store[fcName](...arguments);
        return _this;
      };
    });
    const deferred = defer();
    const load = () => {
      const finish = (err, t2) => {
        this.isInitializing = false;
        if (this.isInitialized && !this.initializedStoreOnce)
          this.logger.warn("init: i18next is already initialized. You should call init just once!");
        this.isInitialized = true;
        if (!this.options.isClone)
          this.logger.log("initialized", this.options);
        this.emit("initialized", this.options);
        deferred.resolve(t2);
        callback(err, t2);
      };
      if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized)
        return finish(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, finish);
    };
    if (this.options.resources || !this.options.initImmediate) {
      load();
    } else {
      setTimeout(load, 0);
    }
    return deferred;
  }
  loadResources(language) {
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop;
    let usedCallback = callback;
    const usedLng = typeof language === "string" ? language : this.language;
    if (typeof language === "function")
      usedCallback = language;
    if (!this.options.resources || this.options.partialBundledLanguages) {
      if (usedLng && usedLng.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0))
        return usedCallback();
      const toLoad = [];
      const append = (lng) => {
        if (!lng)
          return;
        if (lng === "cimode")
          return;
        const lngs = this.services.languageUtils.toResolveHierarchy(lng);
        lngs.forEach((l2) => {
          if (l2 === "cimode")
            return;
          if (toLoad.indexOf(l2) < 0)
            toLoad.push(l2);
        });
      };
      if (!usedLng) {
        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
        fallbacks.forEach((l2) => append(l2));
      } else {
        append(usedLng);
      }
      if (this.options.preload) {
        this.options.preload.forEach((l2) => append(l2));
      }
      this.services.backendConnector.load(toLoad, this.options.ns, (e2) => {
        if (!e2 && !this.resolvedLanguage && this.language)
          this.setResolvedLanguage(this.language);
        usedCallback(e2);
      });
    } else {
      usedCallback(null);
    }
  }
  reloadResources(lngs, ns, callback) {
    const deferred = defer();
    if (!lngs)
      lngs = this.languages;
    if (!ns)
      ns = this.options.ns;
    if (!callback)
      callback = noop;
    this.services.backendConnector.reload(lngs, ns, (err) => {
      deferred.resolve();
      callback(err);
    });
    return deferred;
  }
  use(module) {
    if (!module)
      throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!module.type)
      throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    if (module.type === "backend") {
      this.modules.backend = module;
    }
    if (module.type === "logger" || module.log && module.warn && module.error) {
      this.modules.logger = module;
    }
    if (module.type === "languageDetector") {
      this.modules.languageDetector = module;
    }
    if (module.type === "i18nFormat") {
      this.modules.i18nFormat = module;
    }
    if (module.type === "postProcessor") {
      postProcessor.addPostProcessor(module);
    }
    if (module.type === "formatter") {
      this.modules.formatter = module;
    }
    if (module.type === "3rdParty") {
      this.modules.external.push(module);
    }
    return this;
  }
  setResolvedLanguage(l2) {
    if (!l2 || !this.languages)
      return;
    if (["cimode", "dev"].indexOf(l2) > -1)
      return;
    for (let li2 = 0; li2 < this.languages.length; li2++) {
      const lngInLngs = this.languages[li2];
      if (["cimode", "dev"].indexOf(lngInLngs) > -1)
        continue;
      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {
        this.resolvedLanguage = lngInLngs;
        break;
      }
    }
  }
  changeLanguage(lng, callback) {
    var _this2 = this;
    this.isLanguageChangingTo = lng;
    const deferred = defer();
    this.emit("languageChanging", lng);
    const setLngProps = (l2) => {
      this.language = l2;
      this.languages = this.services.languageUtils.toResolveHierarchy(l2);
      this.resolvedLanguage = void 0;
      this.setResolvedLanguage(l2);
    };
    const done = (err, l2) => {
      if (l2) {
        setLngProps(l2);
        this.translator.changeLanguage(l2);
        this.isLanguageChangingTo = void 0;
        this.emit("languageChanged", l2);
        this.logger.log("languageChanged", l2);
      } else {
        this.isLanguageChangingTo = void 0;
      }
      deferred.resolve(function () {
        return _this2.t(...arguments);
      });
      if (callback)
        callback(err, function () {
          return _this2.t(...arguments);
        });
    };
    const setLng = (lngs) => {
      if (!lng && !lngs && this.services.languageDetector)
        lngs = [];
      const l2 = typeof lngs === "string" ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);
      if (l2) {
        if (!this.language) {
          setLngProps(l2);
        }
        if (!this.translator.language)
          this.translator.changeLanguage(l2);
        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage)
          this.services.languageDetector.cacheUserLanguage(l2);
      }
      this.loadResources(l2, (err) => {
        done(err, l2);
      });
    };
    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {
      setLng(this.services.languageDetector.detect());
    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {
      if (this.services.languageDetector.detect.length === 0) {
        this.services.languageDetector.detect().then(setLng);
      } else {
        this.services.languageDetector.detect(setLng);
      }
    } else {
      setLng(lng);
    }
    return deferred;
  }
  getFixedT(lng, ns, keyPrefix) {
    var _this3 = this;
    const fixedT = function (key, opts) {
      let options;
      if (typeof opts !== "object") {
        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
          rest[_key3 - 2] = arguments[_key3];
        }
        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));
      } else {
        options = {
          ...opts
        };
      }
      options.lng = options.lng || fixedT.lng;
      options.lngs = options.lngs || fixedT.lngs;
      options.ns = options.ns || fixedT.ns;
      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;
      const keySeparator = _this3.options.keySeparator || ".";
      let resultKey;
      if (options.keyPrefix && Array.isArray(key)) {
        resultKey = key.map((k2) => "".concat(options.keyPrefix).concat(keySeparator).concat(k2));
      } else {
        resultKey = options.keyPrefix ? "".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;
      }
      return _this3.t(resultKey, options);
    };
    if (typeof lng === "string") {
      fixedT.lng = lng;
    } else {
      fixedT.lngs = lng;
    }
    fixedT.ns = ns;
    fixedT.keyPrefix = keyPrefix;
    return fixedT;
  }
  t() {
    return this.translator && this.translator.translate(...arguments);
  }
  exists() {
    return this.translator && this.translator.exists(...arguments);
  }
  setDefaultNamespace(ns) {
    this.options.defaultNS = ns;
  }
  hasLoadedNamespace(ns) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized) {
      this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages);
      return false;
    }
    if (!this.languages || !this.languages.length) {
      this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages);
      return false;
    }
    const lng = options.lng || this.resolvedLanguage || this.languages[0];
    const fallbackLng = this.options ? this.options.fallbackLng : false;
    const lastLng = this.languages[this.languages.length - 1];
    if (lng.toLowerCase() === "cimode")
      return true;
    const loadNotPending = (l2, n2) => {
      const loadState = this.services.backendConnector.state["".concat(l2, "|").concat(n2)];
      return loadState === -1 || loadState === 2;
    };
    if (options.precheck) {
      const preResult = options.precheck(this, loadNotPending);
      if (preResult !== void 0)
        return preResult;
    }
    if (this.hasResourceBundle(lng, ns))
      return true;
    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages)
      return true;
    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))
      return true;
    return false;
  }
  loadNamespaces(ns, callback) {
    const deferred = defer();
    if (!this.options.ns) {
      if (callback)
        callback();
      return Promise.resolve();
    }
    if (typeof ns === "string")
      ns = [ns];
    ns.forEach((n2) => {
      if (this.options.ns.indexOf(n2) < 0)
        this.options.ns.push(n2);
    });
    this.loadResources((err) => {
      deferred.resolve();
      if (callback)
        callback(err);
    });
    return deferred;
  }
  loadLanguages(lngs, callback) {
    const deferred = defer();
    if (typeof lngs === "string")
      lngs = [lngs];
    const preloaded = this.options.preload || [];
    const newLngs = lngs.filter((lng) => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));
    if (!newLngs.length) {
      if (callback)
        callback();
      return Promise.resolve();
    }
    this.options.preload = preloaded.concat(newLngs);
    this.loadResources((err) => {
      deferred.resolve();
      if (callback)
        callback(err);
    });
    return deferred;
  }
  dir(lng) {
    if (!lng)
      lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);
    if (!lng)
      return "rtl";
    const rtlLngs = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"];
    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());
    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    return new I18n(options, callback);
  }
  cloneInstance() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop;
    const forkResourceStore = options.forkResourceStore;
    if (forkResourceStore)
      delete options.forkResourceStore;
    const mergedOptions = {
      ...this.options,
      ...options,
      ...{
        isClone: true
      }
    };
    const clone = new I18n(mergedOptions);
    if (options.debug !== void 0 || options.prefix !== void 0) {
      clone.logger = clone.logger.clone(options);
    }
    const membersToCopy = ["store", "services", "language"];
    membersToCopy.forEach((m2) => {
      clone[m2] = this[m2];
    });
    clone.services = {
      ...this.services
    };
    clone.services.utils = {
      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
    };
    if (forkResourceStore) {
      clone.store = new ResourceStore(this.store.data, mergedOptions);
      clone.services.resourceStore = clone.store;
    }
    clone.translator = new Translator(clone.services, mergedOptions);
    clone.translator.on("*", function (event) {
      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        args[_key4 - 1] = arguments[_key4];
      }
      clone.emit(event, ...args);
    });
    clone.init(mergedOptions, callback);
    clone.translator.options = mergedOptions;
    clone.translator.backendConnector.services.utils = {
      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
    };
    return clone;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
}
const instance = I18n.createInstance();
instance.createInstance = I18n.createInstance;
instance.createInstance;
instance.dir;
instance.init;
instance.loadResources;
instance.reloadResources;
instance.use;
instance.changeLanguage;
instance.getFixedT;
instance.t;
instance.exists;
instance.setDefaultNamespace;
instance.hasLoadedNamespace;
instance.loadNamespaces;
instance.loadLanguages;
const matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;
const htmlEntities = {
  "&amp;": "&",
  "&#38;": "&",
  "&lt;": "<",
  "&#60;": "<",
  "&gt;": ">",
  "&#62;": ">",
  "&apos;": "'",
  "&#39;": "'",
  "&quot;": '"',
  "&#34;": '"',
  "&nbsp;": " ",
  "&#160;": " ",
  "&copy;": "©",
  "&#169;": "©",
  "&reg;": "®",
  "&#174;": "®",
  "&hellip;": "…",
  "&#8230;": "…",
  "&#x2F;": "/",
  "&#47;": "/"
};
const unescapeHtmlEntity = (m2) => htmlEntities[m2];
const unescape$1 = (text) => text.replace(matchHtmlEntity, unescapeHtmlEntity);
let defaultOptions = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: true,
  transWrapTextNodes: "",
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: true,
  unescape: unescape$1
};
function setDefaults() {
  let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  defaultOptions = {
    ...defaultOptions,
    ...options
  };
}
function getDefaults$2() {
  return defaultOptions;
}
let i18nInstance;
function setI18n(instance2) {
  i18nInstance = instance2;
}
function getI18n() {
  return i18nInstance;
}
const initReactI18next = {
  type: "3rdParty",
  init(instance2) {
    setDefaults(instance2.options.react);
    setI18n(instance2);
  }
};
const {
  slice,
  forEach
} = [];
function defaults$2(obj) {
  forEach.call(slice.call(arguments, 1), (source) => {
    if (source) {
      for (const prop in source) {
        if (obj[prop] === void 0)
          obj[prop] = source[prop];
      }
    }
  });
  return obj;
}
const fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
const serializeCookie = (name, val, options) => {
  const opt = options || {};
  opt.path = opt.path || "/";
  const value = encodeURIComponent(val);
  let str = "".concat(name, "=").concat(value);
  if (opt.maxAge > 0) {
    const maxAge = opt.maxAge - 0;
    if (Number.isNaN(maxAge))
      throw new Error("maxAge should be a Number");
    str += "; Max-Age=".concat(Math.floor(maxAge));
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=".concat(opt.domain);
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=".concat(opt.path);
  }
  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== "function") {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=".concat(opt.expires.toUTCString());
  }
  if (opt.httpOnly)
    str += "; HttpOnly";
  if (opt.secure)
    str += "; Secure";
  if (opt.sameSite) {
    const sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
};
const cookie = {
  create(name, value, minutes, domain) {
    let cookieOptions = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      path: "/",
      sameSite: "strict"
    };
    if (minutes) {
      cookieOptions.expires = /* @__PURE__ */ new Date();
      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1e3);
    }
    if (domain)
      cookieOptions.domain = domain;
    document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions);
  },
  read(name) {
    const nameEQ = "".concat(name, "=");
    const ca2 = document.cookie.split(";");
    for (let i = 0; i < ca2.length; i++) {
      let c = ca2[i];
      while (c.charAt(0) === " ")
        c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) === 0)
        return c.substring(nameEQ.length, c.length);
    }
    return null;
  },
  remove(name) {
    this.create(name, "", -1);
  }
};
var cookie$1 = {
  name: "cookie",
  // Deconstruct the options object and extract the lookupCookie property
  lookup(_ref) {
    let {
      lookupCookie
    } = _ref;
    if (lookupCookie && typeof document !== "undefined") {
      return cookie.read(lookupCookie) || void 0;
    }
    return void 0;
  },
  // Deconstruct the options object and extract the lookupCookie, cookieMinutes, cookieDomain, and cookieOptions properties
  cacheUserLanguage(lng, _ref2) {
    let {
      lookupCookie,
      cookieMinutes,
      cookieDomain,
      cookieOptions
    } = _ref2;
    if (lookupCookie && typeof document !== "undefined") {
      cookie.create(lookupCookie, lng, cookieMinutes, cookieDomain, cookieOptions);
    }
  }
};
var querystring = {
  name: "querystring",
  // Deconstruct the options object and extract the lookupQuerystring property
  lookup(_ref) {
    var _a;
    let {
      lookupQuerystring
    } = _ref;
    let found;
    if (typeof window !== "undefined") {
      let {
        search
      } = window.location;
      if (!window.location.search && ((_a = window.location.hash) == null ? void 0 : _a.indexOf("?")) > -1) {
        search = window.location.hash.substring(window.location.hash.indexOf("?"));
      }
      const query = search.substring(1);
      const params = query.split("&");
      for (let i = 0; i < params.length; i++) {
        const pos = params[i].indexOf("=");
        if (pos > 0) {
          const key = params[i].substring(0, pos);
          if (key === lookupQuerystring) {
            found = params[i].substring(pos + 1);
          }
        }
      }
    }
    return found;
  }
};
let hasLocalStorageSupport = null;
const localStorageAvailable = () => {
  if (hasLocalStorageSupport !== null)
    return hasLocalStorageSupport;
  try {
    hasLocalStorageSupport = window !== "undefined" && window.localStorage !== null;
    const testKey = "i18next.translate.boo";
    window.localStorage.setItem(testKey, "foo");
    window.localStorage.removeItem(testKey);
  } catch (e2) {
    hasLocalStorageSupport = false;
  }
  return hasLocalStorageSupport;
};
var localStorage$1 = {
  name: "localStorage",
  // Deconstruct the options object and extract the lookupLocalStorage property
  lookup(_ref) {
    let {
      lookupLocalStorage
    } = _ref;
    if (lookupLocalStorage && localStorageAvailable()) {
      return window.localStorage.getItem(lookupLocalStorage) || void 0;
    }
    return void 0;
  },
  // Deconstruct the options object and extract the lookupLocalStorage property
  cacheUserLanguage(lng, _ref2) {
    let {
      lookupLocalStorage
    } = _ref2;
    if (lookupLocalStorage && localStorageAvailable()) {
      window.localStorage.setItem(lookupLocalStorage, lng);
    }
  }
};
let hasSessionStorageSupport = null;
const sessionStorageAvailable = () => {
  if (hasSessionStorageSupport !== null)
    return hasSessionStorageSupport;
  try {
    hasSessionStorageSupport = window !== "undefined" && window.sessionStorage !== null;
    const testKey = "i18next.translate.boo";
    window.sessionStorage.setItem(testKey, "foo");
    window.sessionStorage.removeItem(testKey);
  } catch (e2) {
    hasSessionStorageSupport = false;
  }
  return hasSessionStorageSupport;
};
var sessionStorage$1 = {
  name: "sessionStorage",
  lookup(_ref) {
    let {
      lookupSessionStorage
    } = _ref;
    if (lookupSessionStorage && sessionStorageAvailable()) {
      return window.sessionStorage.getItem(lookupSessionStorage) || void 0;
    }
    return void 0;
  },
  cacheUserLanguage(lng, _ref2) {
    let {
      lookupSessionStorage
    } = _ref2;
    if (lookupSessionStorage && sessionStorageAvailable()) {
      window.sessionStorage.setItem(lookupSessionStorage, lng);
    }
  }
};
var navigator$1 = {
  name: "navigator",
  lookup(options) {
    const found = [];
    if (typeof navigator !== "undefined") {
      const {
        languages,
        userLanguage,
        language
      } = navigator;
      if (languages) {
        for (let i = 0; i < languages.length; i++) {
          found.push(languages[i]);
        }
      }
      if (userLanguage) {
        found.push(userLanguage);
      }
      if (language) {
        found.push(language);
      }
    }
    return found.length > 0 ? found : void 0;
  }
};
var htmlTag = {
  name: "htmlTag",
  // Deconstruct the options object and extract the htmlTag property
  lookup(_ref) {
    let {
      htmlTag: htmlTag2
    } = _ref;
    let found;
    const internalHtmlTag = htmlTag2 || (typeof document !== "undefined" ? document.documentElement : null);
    if (internalHtmlTag && typeof internalHtmlTag.getAttribute === "function") {
      found = internalHtmlTag.getAttribute("lang");
    }
    return found;
  }
};
var path = {
  name: "path",
  // Deconstruct the options object and extract the lookupFromPathIndex property
  lookup(_ref) {
    var _a;
    let {
      lookupFromPathIndex
    } = _ref;
    if (typeof window === "undefined")
      return void 0;
    const language = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
    if (!Array.isArray(language))
      return void 0;
    const index = typeof lookupFromPathIndex === "number" ? lookupFromPathIndex : 0;
    return (_a = language[index]) == null ? void 0 : _a.replace("/", "");
  }
};
var subdomain = {
  name: "subdomain",
  lookup(_ref) {
    var _a, _b;
    let {
      lookupFromSubdomainIndex
    } = _ref;
    const internalLookupFromSubdomainIndex = typeof lookupFromSubdomainIndex === "number" ? lookupFromSubdomainIndex + 1 : 1;
    const language = typeof window !== "undefined" && ((_b = (_a = window.location) == null ? void 0 : _a.hostname) == null ? void 0 : _b.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i));
    if (!language)
      return void 0;
    return language[internalLookupFromSubdomainIndex];
  }
};
function getDefaults$1() {
  return {
    order: ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"],
    lookupQuerystring: "lng",
    lookupCookie: "i18next",
    lookupLocalStorage: "i18nextLng",
    lookupSessionStorage: "i18nextLng",
    // cache user language
    caches: ["localStorage"],
    excludeCacheFor: ["cimode"],
    // cookieMinutes: 10,
    // cookieDomain: 'myDomain'
    convertDetectedLanguage: (l2) => l2
  };
}
class Browser {
  constructor(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.type = "languageDetector";
    this.detectors = {};
    this.init(services, options);
  }
  init(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let i18nOptions = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    this.services = services || {
      languageUtils: {}
    };
    this.options = defaults$2(options, this.options || {}, getDefaults$1());
    if (typeof this.options.convertDetectedLanguage === "string" && this.options.convertDetectedLanguage.indexOf("15897") > -1) {
      this.options.convertDetectedLanguage = (l2) => l2.replace("-", "_");
    }
    if (this.options.lookupFromUrlIndex)
      this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;
    this.i18nOptions = i18nOptions;
    this.addDetector(cookie$1);
    this.addDetector(querystring);
    this.addDetector(localStorage$1);
    this.addDetector(sessionStorage$1);
    this.addDetector(navigator$1);
    this.addDetector(htmlTag);
    this.addDetector(path);
    this.addDetector(subdomain);
  }
  addDetector(detector) {
    this.detectors[detector.name] = detector;
    return this;
  }
  detect(detectionOrder) {
    if (!detectionOrder)
      detectionOrder = this.options.order;
    let detected = [];
    detectionOrder.forEach((detectorName) => {
      if (this.detectors[detectorName]) {
        let lookup = this.detectors[detectorName].lookup(this.options);
        if (lookup && typeof lookup === "string")
          lookup = [lookup];
        if (lookup)
          detected = detected.concat(lookup);
      }
    });
    detected = detected.map((d) => this.options.convertDetectedLanguage(d));
    if (this.services.languageUtils.getBestMatchFromCodes)
      return detected;
    return detected.length > 0 ? detected[0] : null;
  }
  cacheUserLanguage(lng, caches) {
    if (!caches)
      caches = this.options.caches;
    if (!caches)
      return;
    if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1)
      return;
    caches.forEach((cacheName) => {
      if (this.detectors[cacheName])
        this.detectors[cacheName].cacheUserLanguage(lng, this.options);
    });
  }
}
Browser.type = "languageDetector";
function _typeof$2(o) {
  "@babel/helpers - typeof";
  return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o2) {
    return typeof o2;
  } : function (o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$2(o);
}
function hasXMLHttpRequest() {
  return typeof XMLHttpRequest === "function" || (typeof XMLHttpRequest === "undefined" ? "undefined" : _typeof$2(XMLHttpRequest)) === "object";
}
function isPromise(maybePromise) {
  return !!maybePromise && typeof maybePromise.then === "function";
}
function makePromise(maybePromise) {
  if (isPromise(maybePromise)) {
    return maybePromise;
  }
  return Promise.resolve(maybePromise);
}
function commonjsRequire(path2) {
  throw new Error('Could not dynamically require "' + path2 + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var getFetch$1 = { exports: {} };
var browserPonyfill = { exports: {} };
var hasRequiredBrowserPonyfill;
function requireBrowserPonyfill() {
  if (hasRequiredBrowserPonyfill)
    return browserPonyfill.exports;
  hasRequiredBrowserPonyfill = 1;
  (function (module, exports) {
    var __global__ = typeof globalThis !== "undefined" && globalThis || typeof self !== "undefined" && self || typeof commonjsGlobal !== "undefined" && commonjsGlobal;
    var __globalThis__ = function () {
      function F2() {
        this.fetch = false;
        this.DOMException = __global__.DOMException;
      }
      F2.prototype = __global__;
      return new F2();
    }();
    (function (globalThis2) {
      (function (exports2) {
        var global2 = typeof globalThis2 !== "undefined" && globalThis2 || typeof self !== "undefined" && self || typeof global2 !== "undefined" && global2;
        var support = {
          searchParams: "URLSearchParams" in global2,
          iterable: "Symbol" in global2 && "iterator" in Symbol,
          blob: "FileReader" in global2 && "Blob" in global2 && function () {
            try {
              new Blob();
              return true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in global2,
          arrayBuffer: "ArrayBuffer" in global2
        };
        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ];
          var isArrayBufferView = ArrayBuffer.isView || function (obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }
        function normalizeName(name) {
          if (typeof name !== "string") {
            name = String(name);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === "") {
            throw new TypeError('Invalid character in header field name: "' + name + '"');
          }
          return name.toLowerCase();
        }
        function normalizeValue(value) {
          if (typeof value !== "string") {
            value = String(value);
          }
          return value;
        }
        function iteratorFor(items) {
          var iterator = {
            next: function () {
              var value = items.shift();
              return { done: value === void 0, value };
            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function () {
              return iterator;
            };
          }
          return iterator;
        }
        function Headers(headers) {
          this.map = {};
          if (headers instanceof Headers) {
            headers.forEach(function (value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function (header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function (name) {
              this.append(name, headers[name]);
            }, this);
          }
        }
        Headers.prototype.append = function (name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ", " + value : value;
        };
        Headers.prototype["delete"] = function (name) {
          delete this.map[normalizeName(name)];
        };
        Headers.prototype.get = function (name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null;
        };
        Headers.prototype.has = function (name) {
          return this.map.hasOwnProperty(normalizeName(name));
        };
        Headers.prototype.set = function (name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };
        Headers.prototype.forEach = function (callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };
        Headers.prototype.keys = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push(name);
          });
          return iteratorFor(items);
        };
        Headers.prototype.values = function () {
          var items = [];
          this.forEach(function (value) {
            items.push(value);
          });
          return iteratorFor(items);
        };
        Headers.prototype.entries = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items);
        };
        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }
        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
          return new Promise(function (resolve, reject) {
            reader.onload = function () {
              resolve(reader.result);
            };
            reader.onerror = function () {
              reject(reader.error);
            };
          });
        }
        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }
        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }
        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars2 = new Array(view.length);
          for (var i = 0; i < view.length; i++) {
            chars2[i] = String.fromCharCode(view[i]);
          }
          return chars2.join("");
        }
        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }
        function Body() {
          this.bodyUsed = false;
          this._initBody = function (body) {
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
            }
          };
          if (support.blob) {
            this.blob = function () {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }
              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };
            this.arrayBuffer = function () {
              if (this._bodyArrayBuffer) {
                var isConsumed = consumed(this);
                if (isConsumed) {
                  return isConsumed;
                }
                if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                  return Promise.resolve(
                    this._bodyArrayBuffer.buffer.slice(
                      this._bodyArrayBuffer.byteOffset,
                      this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                    )
                  );
                } else {
                  return Promise.resolve(this._bodyArrayBuffer);
                }
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }
          this.text = function () {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }
            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };
          if (support.formData) {
            this.formData = function () {
              return this.text().then(decode2);
            };
          }
          this.json = function () {
            return this.text().then(JSON.parse);
          };
          return this;
        }
        var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          options = options || {};
          var body = options.body;
          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options.credentials || this.credentials || "same-origin";
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || "GET");
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;
          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);
          if (this.method === "GET" || this.method === "HEAD") {
            if (options.cache === "no-store" || options.cache === "no-cache") {
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                this.url = this.url.replace(reParamSearch, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
              } else {
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
              }
            }
          }
        }
        Request.prototype.clone = function () {
          return new Request(this, { body: this._bodyInit });
        };
        function decode2(body) {
          var form = new FormData();
          body.trim().split("&").forEach(function (bytes) {
            if (bytes) {
              var split = bytes.split("=");
              var name = split.shift().replace(/\+/g, " ");
              var value = split.join("=").replace(/\+/g, " ");
              form.append(decodeURIComponent(name), decodeURIComponent(value));
            }
          });
          return form;
        }
        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          preProcessedHeaders.split("\r").map(function (header) {
            return header.indexOf("\n") === 0 ? header.substr(1, header.length) : header;
          }).forEach(function (line) {
            var parts = line.split(":");
            var key = parts.shift().trim();
            if (key) {
              var value = parts.join(":").trim();
              headers.append(key, value);
            }
          });
          return headers;
        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          if (!options) {
            options = {};
          }
          this.type = "default";
          this.status = options.status === void 0 ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = options.statusText === void 0 ? "" : "" + options.statusText;
          this.headers = new Headers(options.headers);
          this.url = options.url || "";
          this._initBody(bodyInit);
        }
        Body.call(Response.prototype);
        Response.prototype.clone = function () {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
        };
        Response.error = function () {
          var response = new Response(null, { status: 0, statusText: "" });
          response.type = "error";
          return response;
        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response.redirect = function (url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }
          return new Response(null, { status, headers: { location: url } });
        };
        exports2.DOMException = global2.DOMException;
        try {
          new exports2.DOMException();
        } catch (err) {
          exports2.DOMException = function (message2, name) {
            this.message = message2;
            this.name = name;
            var error = Error(message2);
            this.stack = error.stack;
          };
          exports2.DOMException.prototype = Object.create(Error.prototype);
          exports2.DOMException.prototype.constructor = exports2.DOMException;
        }
        function fetch2(input, init) {
          return new Promise(function (resolve, reject) {
            var request3 = new Request(input, init);
            if (request3.signal && request3.signal.aborted) {
              return reject(new exports2.DOMException("Aborted", "AbortError"));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
              xhr.abort();
            }
            xhr.onload = function () {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || "")
              };
              options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              setTimeout(function () {
                resolve(new Response(body, options));
              }, 0);
            };
            xhr.onerror = function () {
              setTimeout(function () {
                reject(new TypeError("Network request failed"));
              }, 0);
            };
            xhr.ontimeout = function () {
              setTimeout(function () {
                reject(new TypeError("Network request failed"));
              }, 0);
            };
            xhr.onabort = function () {
              setTimeout(function () {
                reject(new exports2.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function fixUrl(url) {
              try {
                return url === "" && global2.location.href ? global2.location.href : url;
              } catch (e2) {
                return url;
              }
            }
            xhr.open(request3.method, fixUrl(request3.url), true);
            if (request3.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request3.credentials === "omit") {
              xhr.withCredentials = false;
            }
            if ("responseType" in xhr) {
              if (support.blob) {
                xhr.responseType = "blob";
              } else if (support.arrayBuffer && request3.headers.get("Content-Type") && request3.headers.get("Content-Type").indexOf("application/octet-stream") !== -1) {
                xhr.responseType = "arraybuffer";
              }
            }
            if (init && typeof init.headers === "object" && !(init.headers instanceof Headers)) {
              Object.getOwnPropertyNames(init.headers).forEach(function (name) {
                xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
              });
            } else {
              request3.headers.forEach(function (value, name) {
                xhr.setRequestHeader(name, value);
              });
            }
            if (request3.signal) {
              request3.signal.addEventListener("abort", abortXhr);
              xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                  request3.signal.removeEventListener("abort", abortXhr);
                }
              };
            }
            xhr.send(typeof request3._bodyInit === "undefined" ? null : request3._bodyInit);
          });
        }
        fetch2.polyfill = true;
        if (!global2.fetch) {
          global2.fetch = fetch2;
          global2.Headers = Headers;
          global2.Request = Request;
          global2.Response = Response;
        }
        exports2.Headers = Headers;
        exports2.Request = Request;
        exports2.Response = Response;
        exports2.fetch = fetch2;
        return exports2;
      })({});
    })(__globalThis__);
    __globalThis__.fetch.ponyfill = true;
    delete __globalThis__.fetch.polyfill;
    var ctx = __global__.fetch ? __global__ : __globalThis__;
    exports = ctx.fetch;
    exports.default = ctx.fetch;
    exports.fetch = ctx.fetch;
    exports.Headers = ctx.Headers;
    exports.Request = ctx.Request;
    exports.Response = ctx.Response;
    module.exports = exports;
  })(browserPonyfill, browserPonyfill.exports);
  return browserPonyfill.exports;
}
(function (module, exports) {
  var fetchApi2;
  if (typeof fetch === "function") {
    if (typeof commonjsGlobal !== "undefined" && commonjsGlobal.fetch) {
      fetchApi2 = commonjsGlobal.fetch;
    } else if (typeof window !== "undefined" && window.fetch) {
      fetchApi2 = window.fetch;
    } else {
      fetchApi2 = fetch;
    }
  }
  if (typeof commonjsRequire !== "undefined" && typeof window === "undefined") {
    var f2 = fetchApi2 || requireBrowserPonyfill();
    if (f2.default)
      f2 = f2.default;
    exports.default = f2;
    module.exports = exports.default;
  }
})(getFetch$1, getFetch$1.exports);
var getFetchExports = getFetch$1.exports;
const getFetch = /* @__PURE__ */ getDefaultExportFromCjs(getFetchExports);
const fetchNode = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: getFetch
}, [getFetchExports]);
function ownKeys$1(e2, r2) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e2);
    r2 && (o = o.filter(function (r3) {
      return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
function _objectSpread$1(e2) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$1(Object(t2), true).forEach(function (r3) {
      _defineProperty$1(e2, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1(Object(t2)).forEach(function (r3) {
      Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e2;
}
function _defineProperty$1(obj, key, value) {
  key = _toPropertyKey$1(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$1(t2) {
  var i = _toPrimitive$1(t2, "string");
  return "symbol" == _typeof$1(i) ? i : i + "";
}
function _toPrimitive$1(t2, r2) {
  if ("object" != _typeof$1(t2) || !t2)
    return t2;
  var e2 = t2[Symbol.toPrimitive];
  if (void 0 !== e2) {
    var i = e2.call(t2, r2 || "default");
    if ("object" != _typeof$1(i))
      return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _typeof$1(o) {
  "@babel/helpers - typeof";
  return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o2) {
    return typeof o2;
  } : function (o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$1(o);
}
var fetchApi;
if (typeof fetch === "function") {
  if (typeof global !== "undefined" && global.fetch) {
    fetchApi = global.fetch;
  } else if (typeof window !== "undefined" && window.fetch) {
    fetchApi = window.fetch;
  } else {
    fetchApi = fetch;
  }
}
var XmlHttpRequestApi;
if (hasXMLHttpRequest()) {
  if (typeof global !== "undefined" && global.XMLHttpRequest) {
    XmlHttpRequestApi = global.XMLHttpRequest;
  } else if (typeof window !== "undefined" && window.XMLHttpRequest) {
    XmlHttpRequestApi = window.XMLHttpRequest;
  }
}
var ActiveXObjectApi;
if (typeof ActiveXObject === "function") {
  if (typeof global !== "undefined" && global.ActiveXObject) {
    ActiveXObjectApi = global.ActiveXObject;
  } else if (typeof window !== "undefined" && window.ActiveXObject) {
    ActiveXObjectApi = window.ActiveXObject;
  }
}
if (!fetchApi && fetchNode && !XmlHttpRequestApi && !ActiveXObjectApi)
  fetchApi = getFetch || fetchNode;
if (typeof fetchApi !== "function")
  fetchApi = void 0;
var addQueryString = function addQueryString2(url, params) {
  if (params && _typeof$1(params) === "object") {
    var queryString = "";
    for (var paramName in params) {
      queryString += "&" + encodeURIComponent(paramName) + "=" + encodeURIComponent(params[paramName]);
    }
    if (!queryString)
      return url;
    url = url + (url.indexOf("?") !== -1 ? "&" : "?") + queryString.slice(1);
  }
  return url;
};
var fetchIt = function fetchIt2(url, fetchOptions, callback, altFetch) {
  var resolver = function resolver2(response) {
    if (!response.ok)
      return callback(response.statusText || "Error", {
        status: response.status
      });
    response.text().then(function (data) {
      callback(null, {
        status: response.status,
        data
      });
    }).catch(callback);
  };
  if (altFetch) {
    var altResponse = altFetch(url, fetchOptions);
    if (altResponse instanceof Promise) {
      altResponse.then(resolver).catch(callback);
      return;
    }
  }
  if (typeof fetch === "function") {
    fetch(url, fetchOptions).then(resolver).catch(callback);
  } else {
    fetchApi(url, fetchOptions).then(resolver).catch(callback);
  }
};
var omitFetchOptions = false;
var requestWithFetch = function requestWithFetch2(options, url, payload, callback) {
  if (options.queryStringParams) {
    url = addQueryString(url, options.queryStringParams);
  }
  var headers = _objectSpread$1({}, typeof options.customHeaders === "function" ? options.customHeaders() : options.customHeaders);
  if (typeof window === "undefined" && typeof global !== "undefined" && typeof global.process !== "undefined" && global.process.versions && global.process.versions.node) {
    headers["User-Agent"] = "i18next-http-backend (node/".concat(global.process.version, "; ").concat(global.process.platform, " ").concat(global.process.arch, ")");
  }
  if (payload)
    headers["Content-Type"] = "application/json";
  var reqOptions = typeof options.requestOptions === "function" ? options.requestOptions(payload) : options.requestOptions;
  var fetchOptions = _objectSpread$1({
    method: payload ? "POST" : "GET",
    body: payload ? options.stringify(payload) : void 0,
    headers
  }, omitFetchOptions ? {} : reqOptions);
  var altFetch = typeof options.alternateFetch === "function" && options.alternateFetch.length >= 1 ? options.alternateFetch : void 0;
  try {
    fetchIt(url, fetchOptions, callback, altFetch);
  } catch (e2) {
    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e2.message || e2.message.indexOf("not implemented") < 0) {
      return callback(e2);
    }
    try {
      Object.keys(reqOptions).forEach(function (opt) {
        delete fetchOptions[opt];
      });
      fetchIt(url, fetchOptions, callback, altFetch);
      omitFetchOptions = true;
    } catch (err) {
      callback(err);
    }
  }
};
var requestWithXmlHttpRequest = function requestWithXmlHttpRequest2(options, url, payload, callback) {
  if (payload && _typeof$1(payload) === "object") {
    payload = addQueryString("", payload).slice(1);
  }
  if (options.queryStringParams) {
    url = addQueryString(url, options.queryStringParams);
  }
  try {
    var x2;
    if (XmlHttpRequestApi) {
      x2 = new XmlHttpRequestApi();
    } else {
      x2 = new ActiveXObjectApi("MSXML2.XMLHTTP.3.0");
    }
    x2.open(payload ? "POST" : "GET", url, 1);
    if (!options.crossDomain) {
      x2.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    }
    x2.withCredentials = !!options.withCredentials;
    if (payload) {
      x2.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    }
    if (x2.overrideMimeType) {
      x2.overrideMimeType("application/json");
    }
    var h2 = options.customHeaders;
    h2 = typeof h2 === "function" ? h2() : h2;
    if (h2) {
      for (var i in h2) {
        x2.setRequestHeader(i, h2[i]);
      }
    }
    x2.onreadystatechange = function () {
      x2.readyState > 3 && callback(x2.status >= 400 ? x2.statusText : null, {
        status: x2.status,
        data: x2.responseText
      });
    };
    x2.send(payload);
  } catch (e2) {
    console && console.log(e2);
  }
};
var request$1 = function request(options, url, payload, callback) {
  if (typeof payload === "function") {
    callback = payload;
    payload = void 0;
  }
  callback = callback || function () {
  };
  if (fetchApi && url.indexOf("file:") !== 0) {
    return requestWithFetch(options, url, payload, callback);
  }
  if (hasXMLHttpRequest() || typeof ActiveXObject === "function") {
    return requestWithXmlHttpRequest(options, url, payload, callback);
  }
  callback(new Error("No fetch and no xhr implementation found!"));
};
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o2) {
    return typeof o2;
  } : function (o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function ownKeys(e2, r2) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e2);
    r2 && (o = o.filter(function (r3) {
      return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
function _objectSpread(e2) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys(Object(t2), true).forEach(function (r3) {
      _defineProperty(e2, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function (r3) {
      Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e2;
}
function _classCallCheck(instance2, Constructor) {
  if (!(instance2 instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(t2) {
  var i = _toPrimitive(t2, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t2, r2) {
  if ("object" != _typeof(t2) || !t2)
    return t2;
  var e2 = t2[Symbol.toPrimitive];
  if (void 0 !== e2) {
    var i = e2.call(t2, r2 || "default");
    if ("object" != _typeof(i))
      return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getDefaults = function getDefaults2() {
  return {
    loadPath: "/locales/{{lng}}/{{ns}}.json",
    addPath: "/locales/add/{{lng}}/{{ns}}",
    parse: function parse2(data) {
      return JSON.parse(data);
    },
    stringify: JSON.stringify,
    parsePayload: function parsePayload(namespace, key, fallbackValue) {
      return _defineProperty({}, key, fallbackValue || "");
    },
    parseLoadPayload: function parseLoadPayload(languages, namespaces) {
      return void 0;
    },
    request: request$1,
    reloadInterval: typeof window !== "undefined" ? false : 60 * 60 * 1e3,
    customHeaders: {},
    queryStringParams: {},
    crossDomain: false,
    withCredentials: false,
    overrideMimeType: false,
    requestOptions: {
      mode: "cors",
      credentials: "same-origin",
      cache: "default"
    }
  };
};
var Backend = function () {
  function Backend2(services) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var allOptions = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    _classCallCheck(this, Backend2);
    this.services = services;
    this.options = options;
    this.allOptions = allOptions;
    this.type = "backend";
    this.init(services, options, allOptions);
  }
  return _createClass(Backend2, [{
    key: "init",
    value: function init(services) {
      var _this = this;
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var allOptions = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      this.services = services;
      this.options = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), this.options || {}), options);
      this.allOptions = allOptions;
      if (this.services && this.options.reloadInterval) {
        var timer = setInterval(function () {
          return _this.reload();
        }, this.options.reloadInterval);
        if (_typeof(timer) === "object" && typeof timer.unref === "function")
          timer.unref();
      }
    }
  }, {
    key: "readMulti",
    value: function readMulti(languages, namespaces, callback) {
      this._readAny(languages, languages, namespaces, namespaces, callback);
    }
  }, {
    key: "read",
    value: function read(language, namespace, callback) {
      this._readAny([language], language, [namespace], namespace, callback);
    }
  }, {
    key: "_readAny",
    value: function _readAny(languages, loadUrlLanguages, namespaces, loadUrlNamespaces, callback) {
      var _this2 = this;
      var loadPath = this.options.loadPath;
      if (typeof this.options.loadPath === "function") {
        loadPath = this.options.loadPath(languages, namespaces);
      }
      loadPath = makePromise(loadPath);
      loadPath.then(function (resolvedLoadPath) {
        if (!resolvedLoadPath)
          return callback(null, {});
        var url = _this2.services.interpolator.interpolate(resolvedLoadPath, {
          lng: languages.join("+"),
          ns: namespaces.join("+")
        });
        _this2.loadUrl(url, callback, loadUrlLanguages, loadUrlNamespaces);
      });
    }
  }, {
    key: "loadUrl",
    value: function loadUrl(url, callback, languages, namespaces) {
      var _this3 = this;
      var lng = typeof languages === "string" ? [languages] : languages;
      var ns = typeof namespaces === "string" ? [namespaces] : namespaces;
      var payload = this.options.parseLoadPayload(lng, ns);
      this.options.request(this.options, url, payload, function (err, res) {
        if (res && (res.status >= 500 && res.status < 600 || !res.status))
          return callback("failed loading " + url + "; status code: " + res.status, true);
        if (res && res.status >= 400 && res.status < 500)
          return callback("failed loading " + url + "; status code: " + res.status, false);
        if (!res && err && err.message && err.message.indexOf("Failed to fetch") > -1)
          return callback("failed loading " + url + ": " + err.message, true);
        if (err)
          return callback(err, false);
        var ret, parseErr;
        try {
          if (typeof res.data === "string") {
            ret = _this3.options.parse(res.data, languages, namespaces);
          } else {
            ret = res.data;
          }
        } catch (e2) {
          parseErr = "failed parsing " + url + " to json";
        }
        if (parseErr)
          return callback(parseErr, false);
        callback(null, ret);
      });
    }
  }, {
    key: "create",
    value: function create2(languages, namespace, key, fallbackValue, callback) {
      var _this4 = this;
      if (!this.options.addPath)
        return;
      if (typeof languages === "string")
        languages = [languages];
      var payload = this.options.parsePayload(namespace, key, fallbackValue);
      var finished = 0;
      var dataArray = [];
      var resArray = [];
      languages.forEach(function (lng) {
        var addPath = _this4.options.addPath;
        if (typeof _this4.options.addPath === "function") {
          addPath = _this4.options.addPath(lng, namespace);
        }
        var url = _this4.services.interpolator.interpolate(addPath, {
          lng,
          ns: namespace
        });
        _this4.options.request(_this4.options, url, payload, function (data, res) {
          finished += 1;
          dataArray.push(data);
          resArray.push(res);
          if (finished === languages.length) {
            if (typeof callback === "function")
              callback(dataArray, resArray);
          }
        });
      });
    }
  }, {
    key: "reload",
    value: function reload() {
      var _this5 = this;
      var _this$services = this.services, backendConnector = _this$services.backendConnector, languageUtils = _this$services.languageUtils, logger = _this$services.logger;
      var currentLanguage = backendConnector.language;
      if (currentLanguage && currentLanguage.toLowerCase() === "cimode")
        return;
      var toLoad = [];
      var append = function append2(lng) {
        var lngs = languageUtils.toResolveHierarchy(lng);
        lngs.forEach(function (l2) {
          if (toLoad.indexOf(l2) < 0)
            toLoad.push(l2);
        });
      };
      append(currentLanguage);
      if (this.allOptions.preload)
        this.allOptions.preload.forEach(function (l2) {
          return append(l2);
        });
      toLoad.forEach(function (lng) {
        _this5.allOptions.ns.forEach(function (ns) {
          backendConnector.read(lng, ns, "read", null, null, function (err, data) {
            if (err)
              logger.warn("loading namespace ".concat(ns, " for language ").concat(lng, " failed"), err);
            if (!err && data)
              logger.log("loaded namespace ".concat(ns, " for language ").concat(lng), data);
            backendConnector.loaded("".concat(lng, "|").concat(ns), err, data);
          });
        });
      });
    }
  }]);
}();
Backend.type = "backend";
var en_GB$6 = {};
var interopRequireDefault = { exports: {} };
(function (module) {
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  module.exports = _interopRequireDefault2, module.exports.__esModule = true, module.exports["default"] = module.exports;
})(interopRequireDefault);
var interopRequireDefaultExports = interopRequireDefault.exports;
var en_GB$5 = {};
Object.defineProperty(en_GB$5, "__esModule", {
  value: true
});
en_GB$5.default = void 0;
var locale$b = {
  // Options
  items_per_page: "/ page",
  jump_to: "Go to",
  jump_to_confirm: "confirm",
  page: "Page",
  // Pagination
  prev_page: "Previous Page",
  next_page: "Next Page",
  prev_5: "Previous 5 Pages",
  next_5: "Next 5 Pages",
  prev_3: "Previous 3 Pages",
  next_3: "Next 3 Pages",
  page_size: "Page Size"
};
en_GB$5.default = locale$b;
var en_GB$4 = {};
var en_GB$3 = {};
var en_GB$2 = {};
Object.defineProperty(en_GB$2, "__esModule", {
  value: true
});
en_GB$2.default = void 0;
var locale$a = {
  locale: "en_GB",
  today: "Today",
  now: "Now",
  backToToday: "Back to today",
  ok: "OK",
  clear: "Clear",
  month: "Month",
  year: "Year",
  timeSelect: "Select time",
  dateSelect: "Select date",
  monthSelect: "Choose a month",
  yearSelect: "Choose a year",
  decadeSelect: "Choose a decade",
  yearFormat: "YYYY",
  dateFormat: "D/M/YYYY",
  dayFormat: "D",
  dateTimeFormat: "D/M/YYYY HH:mm:ss",
  monthBeforeYear: true,
  previousMonth: "Previous month (PageUp)",
  nextMonth: "Next month (PageDown)",
  previousYear: "Last year (Control + left)",
  nextYear: "Next year (Control + right)",
  previousDecade: "Last decade",
  nextDecade: "Next decade",
  previousCentury: "Last century",
  nextCentury: "Next century"
};
en_GB$2.default = locale$a;
var en_GB$1 = {};
Object.defineProperty(en_GB$1, "__esModule", {
  value: true
});
en_GB$1.default = void 0;
const locale$9 = {
  placeholder: "Select time"
};
en_GB$1.default = locale$9;
var _interopRequireDefault$8 = interopRequireDefaultExports.default;
Object.defineProperty(en_GB$3, "__esModule", {
  value: true
});
en_GB$3.default = void 0;
var _en_GB$2 = _interopRequireDefault$8(en_GB$2);
var _en_GB2$1 = _interopRequireDefault$8(en_GB$1);
const locale$8 = {
  lang: Object.assign({
    placeholder: "Select date",
    yearPlaceholder: "Select year",
    quarterPlaceholder: "Select quarter",
    monthPlaceholder: "Select month",
    weekPlaceholder: "Select week",
    rangePlaceholder: ["Start date", "End date"],
    rangeYearPlaceholder: ["Start year", "End year"],
    rangeQuarterPlaceholder: ["Start quarter", "End quarter"],
    rangeMonthPlaceholder: ["Start month", "End month"],
    rangeWeekPlaceholder: ["Start week", "End week"]
  }, _en_GB$2.default),
  timePickerLocale: Object.assign({}, _en_GB2$1.default)
};
en_GB$3.default = locale$8;
var _interopRequireDefault$7 = interopRequireDefaultExports.default;
Object.defineProperty(en_GB$4, "__esModule", {
  value: true
});
en_GB$4.default = void 0;
var _en_GB$1 = _interopRequireDefault$7(en_GB$3);
en_GB$4.default = _en_GB$1.default;
var _interopRequireDefault$6 = interopRequireDefaultExports.default;
Object.defineProperty(en_GB$6, "__esModule", {
  value: true
});
en_GB$6.default = void 0;
var _en_GB = _interopRequireDefault$6(en_GB$5);
var _en_GB2 = _interopRequireDefault$6(en_GB$4);
var _en_GB3 = _interopRequireDefault$6(en_GB$3);
var _en_GB4 = _interopRequireDefault$6(en_GB$1);
const typeTemplate$2 = "${label} is not a valid ${type}";
const localeValues$2 = {
  locale: "en-gb",
  Pagination: _en_GB.default,
  DatePicker: _en_GB3.default,
  TimePicker: _en_GB4.default,
  Calendar: _en_GB2.default,
  global: {
    placeholder: "Please select"
  },
  Table: {
    filterTitle: "Filter menu",
    filterConfirm: "OK",
    filterReset: "Reset",
    filterEmptyText: "No filters",
    filterCheckall: "Select all items",
    filterSearchPlaceholder: "Search in filters",
    emptyText: "No data",
    selectAll: "Select current page",
    selectInvert: "Invert current page",
    selectNone: "Clear all data",
    selectionAll: "Select all data",
    sortTitle: "Sort",
    expand: "Expand row",
    collapse: "Collapse row",
    triggerDesc: "Click to sort descending",
    triggerAsc: "Click to sort ascending",
    cancelSort: "Click to cancel sorting"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancel",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancel"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Search here",
    itemUnit: "item",
    itemsUnit: "items",
    remove: "Remove",
    selectCurrent: "Select current page",
    removeCurrent: "Remove current page",
    selectAll: "Select all data",
    removeAll: "Remove all data",
    selectInvert: "Invert current page"
  },
  Upload: {
    uploading: "Uploading...",
    removeFile: "Remove file",
    uploadError: "Upload error",
    previewFile: "Preview file",
    downloadFile: "Download file"
  },
  Empty: {
    description: "No Data"
  },
  Icon: {
    icon: "icon"
  },
  Text: {
    edit: "Edit",
    copy: "Copy",
    copied: "Copied",
    expand: "Expand"
  },
  Form: {
    optional: "(optional)",
    defaultValidateMessages: {
      default: "Field validation error for ${label}",
      required: "Please enter ${label}",
      enum: "${label} must be one of [${enum}]",
      whitespace: "${label} cannot be a blank character",
      date: {
        format: "${label} date format is invalid",
        parse: "${label} cannot be converted to a date",
        invalid: "${label} is an invalid date"
      },
      types: {
        string: typeTemplate$2,
        method: typeTemplate$2,
        array: typeTemplate$2,
        object: typeTemplate$2,
        number: typeTemplate$2,
        date: typeTemplate$2,
        boolean: typeTemplate$2,
        integer: typeTemplate$2,
        float: typeTemplate$2,
        regexp: typeTemplate$2,
        email: typeTemplate$2,
        url: typeTemplate$2,
        hex: typeTemplate$2
      },
      string: {
        len: "${label} must be ${len} characters",
        min: "${label} must be at least ${min} characters",
        max: "${label} must be up to ${max} characters",
        range: "${label} must be between ${min}-${max} characters"
      },
      number: {
        len: "${label} must be equal to ${len}",
        min: "${label} must be minimum ${min}",
        max: "${label} must be maximum ${max}",
        range: "${label} must be between ${min}-${max}"
      },
      array: {
        len: "Must be ${len} ${label}",
        min: "At least ${min} ${label}",
        max: "At most ${max} ${label}",
        range: "The amount of ${label} must be between ${min}-${max}"
      },
      pattern: {
        mismatch: "${label} does not match the pattern ${pattern}"
      }
    }
  },
  Image: {
    preview: "Preview"
  }
};
en_GB$6.default = localeValues$2;
var en_GB = en_GB$6;
const enGB = /* @__PURE__ */ getDefaultExportFromCjs(en_GB);
var hi_IN$6 = {};
var hi_IN$5 = {};
Object.defineProperty(hi_IN$5, "__esModule", {
  value: true
});
hi_IN$5.default = void 0;
var locale$7 = {
  // Options
  items_per_page: "/ पृष्ठ",
  jump_to: "इस पर चलें",
  jump_to_confirm: "पुष्टि करें",
  page: "",
  // Pagination
  prev_page: "पिछला पृष्ठ",
  next_page: "अगला पृष्ठ",
  prev_5: "पिछले 5 पृष्ठ",
  next_5: "अगले 5 पृष्ठ",
  prev_3: "पिछले 3 पृष्ठ",
  next_3: "अगले 3 पेज",
  page_size: "Page Size"
};
hi_IN$5.default = locale$7;
var hi_IN$4 = {};
var hi_IN$3 = {};
var hi_IN$2 = {};
Object.defineProperty(hi_IN$2, "__esModule", {
  value: true
});
hi_IN$2.default = void 0;
var locale$6 = {
  locale: "hi_IN",
  today: "आज",
  now: "अभी",
  backToToday: "आज तक",
  ok: "ठीक",
  clear: "स्पष्ट",
  month: "महीना",
  year: "साल",
  timeSelect: "समय का चयन करें",
  dateSelect: "तारीख़ चुनें",
  weekSelect: "एक सप्ताह चुनें",
  monthSelect: "एक महीना चुनें",
  yearSelect: "एक वर्ष चुनें",
  decadeSelect: "एक दशक चुनें",
  yearFormat: "YYYY",
  dateFormat: "M/D/YYYY",
  dayFormat: "D",
  dateTimeFormat: "M/D/YYYY HH:mm:ss",
  monthBeforeYear: true,
  previousMonth: "पिछला महीना (पेजअप)",
  nextMonth: "अगले महीने (पेजडाउन)",
  previousYear: "पिछले साल (Ctrl + बाएं)",
  nextYear: "अगले साल (Ctrl + दाहिना)",
  previousDecade: "पिछला दशक",
  nextDecade: "अगले दशक",
  previousCentury: "पीछ्ली शताब्दी",
  nextCentury: "अगली सदी"
};
hi_IN$2.default = locale$6;
var hi_IN$1 = {};
Object.defineProperty(hi_IN$1, "__esModule", {
  value: true
});
hi_IN$1.default = void 0;
const locale$5 = {
  placeholder: "समय का चयन करें",
  rangePlaceholder: ["आरंभिक समय", "अंत समय"]
};
hi_IN$1.default = locale$5;
var _interopRequireDefault$5 = interopRequireDefaultExports.default;
Object.defineProperty(hi_IN$3, "__esModule", {
  value: true
});
hi_IN$3.default = void 0;
var _hi_IN$2 = _interopRequireDefault$5(hi_IN$2);
var _hi_IN2$1 = _interopRequireDefault$5(hi_IN$1);
const locale$4 = {
  lang: Object.assign({
    placeholder: "तारीख़ चुनें",
    yearPlaceholder: "वर्ष चुनें",
    quarterPlaceholder: "तिमाही चुनें",
    monthPlaceholder: "महीना चुनिए",
    weekPlaceholder: "सप्ताह चुनें",
    rangePlaceholder: ["प्रारंभ तिथि", "समाप्ति तिथि"],
    rangeYearPlaceholder: ["आरंभिक वर्ष", "अंत वर्ष"],
    rangeMonthPlaceholder: ["आरंभिक महीना", "अंत महीना"],
    rangeWeekPlaceholder: ["आरंभिक सप्ताह", "अंत सप्ताह"]
  }, _hi_IN$2.default),
  timePickerLocale: Object.assign({}, _hi_IN2$1.default)
};
hi_IN$3.default = locale$4;
var _interopRequireDefault$4 = interopRequireDefaultExports.default;
Object.defineProperty(hi_IN$4, "__esModule", {
  value: true
});
hi_IN$4.default = void 0;
var _hi_IN$1 = _interopRequireDefault$4(hi_IN$3);
hi_IN$4.default = _hi_IN$1.default;
var _interopRequireDefault$3 = interopRequireDefaultExports.default;
Object.defineProperty(hi_IN$6, "__esModule", {
  value: true
});
hi_IN$6.default = void 0;
var _hi_IN = _interopRequireDefault$3(hi_IN$5);
var _hi_IN2 = _interopRequireDefault$3(hi_IN$4);
var _hi_IN3 = _interopRequireDefault$3(hi_IN$3);
var _hi_IN4 = _interopRequireDefault$3(hi_IN$1);
const typeTemplate$1 = "${label} मान्य ${type} नहीं है";
const localeValues$1 = {
  locale: "hi",
  Pagination: _hi_IN.default,
  DatePicker: _hi_IN3.default,
  TimePicker: _hi_IN4.default,
  Calendar: _hi_IN2.default,
  global: {
    placeholder: "कृपया चुनें"
  },
  Table: {
    filterTitle: "सूची बंद करें",
    filterConfirm: "अच्छी तरह से",
    filterReset: "रीसेट",
    filterEmptyText: "कोई फ़िल्टर नहीं",
    emptyText: "कोई जानकारी नहीं",
    selectAll: "वर्तमान पृष्ठ का चयन करें",
    selectInvert: "वर्तमान पृष्ठ घुमाएं",
    selectNone: "सभी डेटा साफ़ करें",
    selectionAll: "सभी डेटा का चयन करें",
    sortTitle: "द्वारा क्रमबद्ध करें",
    expand: "पंक्ति का विस्तार करें",
    collapse: "पंक्ति संक्षिप्त करें",
    triggerDesc: "अवरोही क्रमित करने के लिए क्लिक करें",
    triggerAsc: "आरोही क्रमित करने के लिए क्लिक करें",
    cancelSort: "छँटाई रद्द करने के लिए क्लिक करें"
  },
  Modal: {
    okText: "अच्छी तरह से",
    cancelText: "रद्द करना",
    justOkText: "अच्छी तरह से"
  },
  Popconfirm: {
    okText: "अच्छी तरह से",
    cancelText: "रद्द करना"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "यहां खोजें",
    itemUnit: "तत्त्व",
    itemsUnit: "विषय-वस्तु",
    remove: "हटाए",
    selectCurrent: "वर्तमान पृष्ठ का चयन करें",
    removeCurrent: "वर्तमान पृष्ठ हटाएं",
    selectAll: "सभी डेटा का चयन करें",
    removeAll: "सभी डेटा हटाएं",
    selectInvert: "वर्तमान पृष्ठ को उल्टा करें"
  },
  Upload: {
    uploading: "अपलोड हो रहा...",
    removeFile: "फ़ाइल निकालें",
    uploadError: "अपलोड में त्रुटि",
    previewFile: "फ़ाइल पूर्वावलोकन",
    downloadFile: "फ़ाइल डाउनलोड करें"
  },
  Empty: {
    description: "कोई आकड़ा उपलब्ध नहीं है"
  },
  Icon: {
    icon: "आइकन"
  },
  Text: {
    edit: "संपादित करें",
    copy: "प्रतिलिपि",
    copied: "कॉपी किया गया",
    expand: "विस्तार"
  },
  Form: {
    optional: "(ऐच्छिक)",
    defaultValidateMessages: {
      default: "${label} के लिए फील्ड सत्यापन त्रुटि",
      required: "कृपया ${label} दर्ज करें",
      enum: "${label} [${enum}] में से एक होना चाहिए",
      whitespace: "${label} एक खाली अक्षर नहीं हो सकता",
      date: {
        format: "${label} तिथि प्रारूप अमान्य है",
        parse: "${label} को तारीख में नहीं बदला जा सकता",
        invalid: "${label} एक अमान्य तिथि है"
      },
      types: {
        string: typeTemplate$1,
        method: typeTemplate$1,
        array: typeTemplate$1,
        object: typeTemplate$1,
        number: typeTemplate$1,
        date: typeTemplate$1,
        boolean: typeTemplate$1,
        integer: typeTemplate$1,
        float: typeTemplate$1,
        regexp: typeTemplate$1,
        email: typeTemplate$1,
        url: typeTemplate$1,
        hex: typeTemplate$1
      },
      string: {
        len: "${label} ${len} अक्षर का होना चाहिए",
        min: "${label} कम से कम ${min} वर्णों का होना चाहिए",
        max: "${label} अधिकतम ${max} वर्णों का होना चाहिए",
        range: "${label} ${min}-${max} वर्णों के बीच होना चाहिए"
      },
      number: {
        len: "${label} ${len} के बराबर होना चाहिए",
        min: "${label} कम से कम ${min} होना चाहिए",
        max: "${label} अधिकतम ${max} होना चाहिए",
        range: "${label} ${min}-${max} के बीच होना चाहिए"
      },
      array: {
        len: "${len} ${label} होना चाहिए",
        min: "कम से कम ${min} ${label}",
        max: "ज्यादा से ज्यादा ${max} ${label}",
        range: "${label} की राशि ${min}-${max} के बीच होनी चाहिए"
      },
      pattern: {
        mismatch: "${label} ${pattern} पैटर्न से मेल नहीं खाता"
      }
    }
  },
  Image: {
    preview: "पूर्वावलोकन"
  }
};
hi_IN$6.default = localeValues$1;
var hi_IN = hi_IN$6;
const hiIN = /* @__PURE__ */ getDefaultExportFromCjs(hi_IN);
var pt_BR$6 = {};
var pt_BR$5 = {};
Object.defineProperty(pt_BR$5, "__esModule", {
  value: true
});
pt_BR$5.default = void 0;
var locale$3 = {
  // Options
  items_per_page: "/ página",
  jump_to: "Vá até",
  jump_to_confirm: "confirme",
  page: "Página",
  // Pagination
  prev_page: "Página anterior",
  next_page: "Próxima página",
  prev_5: "5 páginas anteriores",
  next_5: "5 próximas páginas",
  prev_3: "3 páginas anteriores",
  next_3: "3 próximas páginas",
  page_size: "tamanho da página"
};
pt_BR$5.default = locale$3;
var pt_BR$4 = {};
var pt_BR$3 = {};
var pt_BR$2 = {};
Object.defineProperty(pt_BR$2, "__esModule", {
  value: true
});
pt_BR$2.default = void 0;
var locale$2 = {
  locale: "pt_BR",
  today: "Hoje",
  now: "Agora",
  backToToday: "Voltar para hoje",
  ok: "OK",
  clear: "Limpar",
  month: "Mês",
  year: "Ano",
  timeSelect: "Selecionar hora",
  dateSelect: "Selecionar data",
  monthSelect: "Escolher mês",
  yearSelect: "Escolher ano",
  decadeSelect: "Escolher década",
  yearFormat: "YYYY",
  dateFormat: "D/M/YYYY",
  dayFormat: "D",
  dateTimeFormat: "D/M/YYYY HH:mm:ss",
  monthBeforeYear: false,
  previousMonth: "Mês anterior (PageUp)",
  nextMonth: "Próximo mês (PageDown)",
  previousYear: "Ano anterior (Control + esquerda)",
  nextYear: "Próximo ano (Control + direita)",
  previousDecade: "Década anterior",
  nextDecade: "Próxima década",
  previousCentury: "Século anterior",
  nextCentury: "Próximo século",
  shortWeekDays: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
  shortMonths: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
};
pt_BR$2.default = locale$2;
var pt_BR$1 = {};
Object.defineProperty(pt_BR$1, "__esModule", {
  value: true
});
pt_BR$1.default = void 0;
const locale$1 = {
  placeholder: "Hora"
};
pt_BR$1.default = locale$1;
var _interopRequireDefault$2 = interopRequireDefaultExports.default;
Object.defineProperty(pt_BR$3, "__esModule", {
  value: true
});
pt_BR$3.default = void 0;
var _pt_BR$2 = _interopRequireDefault$2(pt_BR$2);
var _pt_BR2$1 = _interopRequireDefault$2(pt_BR$1);
const locale = {
  lang: Object.assign({
    placeholder: "Selecionar data",
    rangePlaceholder: ["Data inicial", "Data final"]
  }, _pt_BR$2.default),
  timePickerLocale: Object.assign({}, _pt_BR2$1.default)
};
pt_BR$3.default = locale;
var _interopRequireDefault$1 = interopRequireDefaultExports.default;
Object.defineProperty(pt_BR$4, "__esModule", {
  value: true
});
pt_BR$4.default = void 0;
var _pt_BR$1 = _interopRequireDefault$1(pt_BR$3);
pt_BR$4.default = _pt_BR$1.default;
var _interopRequireDefault = interopRequireDefaultExports.default;
Object.defineProperty(pt_BR$6, "__esModule", {
  value: true
});
pt_BR$6.default = void 0;
var _pt_BR = _interopRequireDefault(pt_BR$5);
var _pt_BR2 = _interopRequireDefault(pt_BR$4);
var _pt_BR3 = _interopRequireDefault(pt_BR$3);
var _pt_BR4 = _interopRequireDefault(pt_BR$1);
const typeTemplate = "${label} não é um ${type} válido";
const localeValues = {
  locale: "pt-br",
  Pagination: _pt_BR.default,
  DatePicker: _pt_BR3.default,
  TimePicker: _pt_BR4.default,
  Calendar: _pt_BR2.default,
  global: {
    placeholder: "Por favor escolha"
  },
  Table: {
    filterTitle: "Menu de Filtro",
    filterConfirm: "OK",
    filterReset: "Resetar",
    filterEmptyText: "Sem filtros",
    filterCheckall: "Selecionar todos os itens",
    filterSearchPlaceholder: "Pesquisar nos filtros",
    emptyText: "Sem conteúdo",
    selectAll: "Selecionar página atual",
    selectInvert: "Inverter seleção",
    selectNone: "Apagar todo o conteúdo",
    selectionAll: "Selecionar todo o conteúdo",
    sortTitle: "Ordenar título",
    expand: "Expandir linha",
    collapse: "Colapsar linha",
    triggerDesc: "Clique organiza por descendente",
    triggerAsc: "Clique organiza por ascendente",
    cancelSort: "Clique para cancelar organização"
  },
  Tour: {
    Next: "Próximo",
    Previous: "Anterior",
    Finish: "Finalizar"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancelar",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancelar"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Procurar",
    itemUnit: "item",
    itemsUnit: "items",
    remove: "Remover",
    selectCurrent: "Selecionar página atual",
    removeCurrent: "Remover página atual",
    selectAll: "Selecionar todos",
    removeAll: "Remover todos",
    selectInvert: "Inverter seleção atual"
  },
  Upload: {
    uploading: "Enviando...",
    removeFile: "Remover arquivo",
    uploadError: "Erro no envio",
    previewFile: "Visualizar arquivo",
    downloadFile: "Baixar arquivo"
  },
  Empty: {
    description: "Não há dados"
  },
  Icon: {
    icon: "ícone"
  },
  Text: {
    edit: "editar",
    copy: "copiar",
    copied: "copiado",
    expand: "expandir"
  },
  Form: {
    optional: "(opcional)",
    defaultValidateMessages: {
      default: "Erro ${label} na validação de campo",
      required: "Por favor, insira ${label}",
      enum: "${label} deve ser um dos seguinte: [${enum}]",
      whitespace: "${label} não pode ser um carácter vazio",
      date: {
        format: " O formato de data ${label} é inválido",
        parse: "${label} não pode ser convertido para uma data",
        invalid: "${label} é uma data inválida"
      },
      types: {
        string: typeTemplate,
        method: typeTemplate,
        array: typeTemplate,
        object: typeTemplate,
        number: typeTemplate,
        date: typeTemplate,
        boolean: typeTemplate,
        integer: typeTemplate,
        float: typeTemplate,
        regexp: typeTemplate,
        email: typeTemplate,
        url: typeTemplate,
        hex: typeTemplate
      },
      string: {
        len: "${label} deve possuir ${len} caracteres",
        min: "${label} deve possuir ao menos ${min} caracteres",
        max: "${label} deve possuir no máximo ${max} caracteres",
        range: "${label} deve possuir entre ${min} e ${max} caracteres"
      },
      number: {
        len: "${label} deve ser igual à ${len}",
        min: "O valor mínimo de ${label} é ${min}",
        max: "O valor máximo de ${label} é ${max}",
        range: "${label} deve estar entre ${min} e ${max}"
      },
      array: {
        len: "Deve ser ${len} ${label}",
        min: "No mínimo ${min} ${label}",
        max: "No máximo ${max} ${label}",
        range: "A quantidade de ${label} deve estar entre ${min} e ${max}"
      },
      pattern: {
        mismatch: "${label} não se encaixa no padrão ${pattern}"
      }
    }
  },
  Image: {
    preview: "Pré-visualização"
  }
};
pt_BR$6.default = localeValues;
var pt_BR = pt_BR$6;
const ptBR = /* @__PURE__ */ getDefaultExportFromCjs(pt_BR);
var ptBr = { exports: {} };
var dayjs_min = { exports: {} };
(function (module, exports) {
  !function (t2, e2) {
    module.exports = e2();
  }(commonjsGlobal, function () {
    var t2 = 1e3, e2 = 6e4, n2 = 36e5, r2 = "millisecond", i = "second", s = "minute", u2 = "hour", a = "day", o = "week", c = "month", f2 = "quarter", h2 = "year", d = "date", l2 = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y2 = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M2 = {
      name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function (t3) {
        var e3 = ["th", "st", "nd", "rd"], n3 = t3 % 100;
        return "[" + t3 + (e3[(n3 - 20) % 10] || e3[n3] || e3[0]) + "]";
      }
    }, m2 = function (t3, e3, n3) {
      var r3 = String(t3);
      return !r3 || r3.length >= e3 ? t3 : "" + Array(e3 + 1 - r3.length).join(n3) + t3;
    }, v2 = {
      s: m2, z: function (t3) {
        var e3 = -t3.utcOffset(), n3 = Math.abs(e3), r3 = Math.floor(n3 / 60), i2 = n3 % 60;
        return (e3 <= 0 ? "+" : "-") + m2(r3, 2, "0") + ":" + m2(i2, 2, "0");
      }, m: function t3(e3, n3) {
        if (e3.date() < n3.date())
          return -t3(n3, e3);
        var r3 = 12 * (n3.year() - e3.year()) + (n3.month() - e3.month()), i2 = e3.clone().add(r3, c), s2 = n3 - i2 < 0, u3 = e3.clone().add(r3 + (s2 ? -1 : 1), c);
        return +(-(r3 + (n3 - i2) / (s2 ? i2 - u3 : u3 - i2)) || 0);
      }, a: function (t3) {
        return t3 < 0 ? Math.ceil(t3) || 0 : Math.floor(t3);
      }, p: function (t3) {
        return { M: c, y: h2, w: o, d: a, D: d, h: u2, m: s, s: i, ms: r2, Q: f2 }[t3] || String(t3 || "").toLowerCase().replace(/s$/, "");
      }, u: function (t3) {
        return void 0 === t3;
      }
    }, g = "en", D2 = {};
    D2[g] = M2;
    var p2 = "$isDayjsObject", S2 = function (t3) {
      return t3 instanceof _2 || !(!t3 || !t3[p2]);
    }, w2 = function t3(e3, n3, r3) {
      var i2;
      if (!e3)
        return g;
      if ("string" == typeof e3) {
        var s2 = e3.toLowerCase();
        D2[s2] && (i2 = s2), n3 && (D2[s2] = n3, i2 = s2);
        var u3 = e3.split("-");
        if (!i2 && u3.length > 1)
          return t3(u3[0]);
      } else {
        var a2 = e3.name;
        D2[a2] = e3, i2 = a2;
      }
      return !r3 && i2 && (g = i2), i2 || !r3 && g;
    }, O2 = function (t3, e3) {
      if (S2(t3))
        return t3.clone();
      var n3 = "object" == typeof e3 ? e3 : {};
      return n3.date = t3, n3.args = arguments, new _2(n3);
    }, b = v2;
    b.l = w2, b.i = S2, b.w = function (t3, e3) {
      return O2(t3, { locale: e3.$L, utc: e3.$u, x: e3.$x, $offset: e3.$offset });
    };
    var _2 = function () {
      function M3(t3) {
        this.$L = w2(t3.locale, null, true), this.parse(t3), this.$x = this.$x || t3.x || {}, this[p2] = true;
      }
      var m3 = M3.prototype;
      return m3.parse = function (t3) {
        this.$d = function (t4) {
          var e3 = t4.date, n3 = t4.utc;
          if (null === e3)
            return /* @__PURE__ */ new Date(NaN);
          if (b.u(e3))
            return /* @__PURE__ */ new Date();
          if (e3 instanceof Date)
            return new Date(e3);
          if ("string" == typeof e3 && !/Z$/i.test(e3)) {
            var r3 = e3.match($);
            if (r3) {
              var i2 = r3[2] - 1 || 0, s2 = (r3[7] || "0").substring(0, 3);
              return n3 ? new Date(Date.UTC(r3[1], i2, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s2)) : new Date(r3[1], i2, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s2);
            }
          }
          return new Date(e3);
        }(t3), this.init();
      }, m3.init = function () {
        var t3 = this.$d;
        this.$y = t3.getFullYear(), this.$M = t3.getMonth(), this.$D = t3.getDate(), this.$W = t3.getDay(), this.$H = t3.getHours(), this.$m = t3.getMinutes(), this.$s = t3.getSeconds(), this.$ms = t3.getMilliseconds();
      }, m3.$utils = function () {
        return b;
      }, m3.isValid = function () {
        return !(this.$d.toString() === l2);
      }, m3.isSame = function (t3, e3) {
        var n3 = O2(t3);
        return this.startOf(e3) <= n3 && n3 <= this.endOf(e3);
      }, m3.isAfter = function (t3, e3) {
        return O2(t3) < this.startOf(e3);
      }, m3.isBefore = function (t3, e3) {
        return this.endOf(e3) < O2(t3);
      }, m3.$g = function (t3, e3, n3) {
        return b.u(t3) ? this[e3] : this.set(n3, t3);
      }, m3.unix = function () {
        return Math.floor(this.valueOf() / 1e3);
      }, m3.valueOf = function () {
        return this.$d.getTime();
      }, m3.startOf = function (t3, e3) {
        var n3 = this, r3 = !!b.u(e3) || e3, f3 = b.p(t3), l3 = function (t4, e4) {
          var i2 = b.w(n3.$u ? Date.UTC(n3.$y, e4, t4) : new Date(n3.$y, e4, t4), n3);
          return r3 ? i2 : i2.endOf(a);
        }, $2 = function (t4, e4) {
          return b.w(n3.toDate()[t4].apply(n3.toDate("s"), (r3 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e4)), n3);
        }, y3 = this.$W, M4 = this.$M, m4 = this.$D, v3 = "set" + (this.$u ? "UTC" : "");
        switch (f3) {
          case h2:
            return r3 ? l3(1, 0) : l3(31, 11);
          case c:
            return r3 ? l3(1, M4) : l3(0, M4 + 1);
          case o:
            var g2 = this.$locale().weekStart || 0, D3 = (y3 < g2 ? y3 + 7 : y3) - g2;
            return l3(r3 ? m4 - D3 : m4 + (6 - D3), M4);
          case a:
          case d:
            return $2(v3 + "Hours", 0);
          case u2:
            return $2(v3 + "Minutes", 1);
          case s:
            return $2(v3 + "Seconds", 2);
          case i:
            return $2(v3 + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, m3.endOf = function (t3) {
        return this.startOf(t3, false);
      }, m3.$set = function (t3, e3) {
        var n3, o2 = b.p(t3), f3 = "set" + (this.$u ? "UTC" : ""), l3 = (n3 = {}, n3[a] = f3 + "Date", n3[d] = f3 + "Date", n3[c] = f3 + "Month", n3[h2] = f3 + "FullYear", n3[u2] = f3 + "Hours", n3[s] = f3 + "Minutes", n3[i] = f3 + "Seconds", n3[r2] = f3 + "Milliseconds", n3)[o2], $2 = o2 === a ? this.$D + (e3 - this.$W) : e3;
        if (o2 === c || o2 === h2) {
          var y3 = this.clone().set(d, 1);
          y3.$d[l3]($2), y3.init(), this.$d = y3.set(d, Math.min(this.$D, y3.daysInMonth())).$d;
        } else
          l3 && this.$d[l3]($2);
        return this.init(), this;
      }, m3.set = function (t3, e3) {
        return this.clone().$set(t3, e3);
      }, m3.get = function (t3) {
        return this[b.p(t3)]();
      }, m3.add = function (r3, f3) {
        var d2, l3 = this;
        r3 = Number(r3);
        var $2 = b.p(f3), y3 = function (t3) {
          var e3 = O2(l3);
          return b.w(e3.date(e3.date() + Math.round(t3 * r3)), l3);
        };
        if ($2 === c)
          return this.set(c, this.$M + r3);
        if ($2 === h2)
          return this.set(h2, this.$y + r3);
        if ($2 === a)
          return y3(1);
        if ($2 === o)
          return y3(7);
        var M4 = (d2 = {}, d2[s] = e2, d2[u2] = n2, d2[i] = t2, d2)[$2] || 1, m4 = this.$d.getTime() + r3 * M4;
        return b.w(m4, this);
      }, m3.subtract = function (t3, e3) {
        return this.add(-1 * t3, e3);
      }, m3.format = function (t3) {
        var e3 = this, n3 = this.$locale();
        if (!this.isValid())
          return n3.invalidDate || l2;
        var r3 = t3 || "YYYY-MM-DDTHH:mm:ssZ", i2 = b.z(this), s2 = this.$H, u3 = this.$m, a2 = this.$M, o2 = n3.weekdays, c2 = n3.months, f3 = n3.meridiem, h3 = function (t4, n4, i3, s3) {
          return t4 && (t4[n4] || t4(e3, r3)) || i3[n4].slice(0, s3);
        }, d2 = function (t4) {
          return b.s(s2 % 12 || 12, t4, "0");
        }, $2 = f3 || function (t4, e4, n4) {
          var r4 = t4 < 12 ? "AM" : "PM";
          return n4 ? r4.toLowerCase() : r4;
        };
        return r3.replace(y2, function (t4, r4) {
          return r4 || function (t5) {
            switch (t5) {
              case "YY":
                return String(e3.$y).slice(-2);
              case "YYYY":
                return b.s(e3.$y, 4, "0");
              case "M":
                return a2 + 1;
              case "MM":
                return b.s(a2 + 1, 2, "0");
              case "MMM":
                return h3(n3.monthsShort, a2, c2, 3);
              case "MMMM":
                return h3(c2, a2);
              case "D":
                return e3.$D;
              case "DD":
                return b.s(e3.$D, 2, "0");
              case "d":
                return String(e3.$W);
              case "dd":
                return h3(n3.weekdaysMin, e3.$W, o2, 2);
              case "ddd":
                return h3(n3.weekdaysShort, e3.$W, o2, 3);
              case "dddd":
                return o2[e3.$W];
              case "H":
                return String(s2);
              case "HH":
                return b.s(s2, 2, "0");
              case "h":
                return d2(1);
              case "hh":
                return d2(2);
              case "a":
                return $2(s2, u3, true);
              case "A":
                return $2(s2, u3, false);
              case "m":
                return String(u3);
              case "mm":
                return b.s(u3, 2, "0");
              case "s":
                return String(e3.$s);
              case "ss":
                return b.s(e3.$s, 2, "0");
              case "SSS":
                return b.s(e3.$ms, 3, "0");
              case "Z":
                return i2;
            }
            return null;
          }(t4) || i2.replace(":", "");
        });
      }, m3.utcOffset = function () {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, m3.diff = function (r3, d2, l3) {
        var $2, y3 = this, M4 = b.p(d2), m4 = O2(r3), v3 = (m4.utcOffset() - this.utcOffset()) * e2, g2 = this - m4, D3 = function () {
          return b.m(y3, m4);
        };
        switch (M4) {
          case h2:
            $2 = D3() / 12;
            break;
          case c:
            $2 = D3();
            break;
          case f2:
            $2 = D3() / 3;
            break;
          case o:
            $2 = (g2 - v3) / 6048e5;
            break;
          case a:
            $2 = (g2 - v3) / 864e5;
            break;
          case u2:
            $2 = g2 / n2;
            break;
          case s:
            $2 = g2 / e2;
            break;
          case i:
            $2 = g2 / t2;
            break;
          default:
            $2 = g2;
        }
        return l3 ? $2 : b.a($2);
      }, m3.daysInMonth = function () {
        return this.endOf(c).$D;
      }, m3.$locale = function () {
        return D2[this.$L];
      }, m3.locale = function (t3, e3) {
        if (!t3)
          return this.$L;
        var n3 = this.clone(), r3 = w2(t3, e3, true);
        return r3 && (n3.$L = r3), n3;
      }, m3.clone = function () {
        return b.w(this.$d, this);
      }, m3.toDate = function () {
        return new Date(this.valueOf());
      }, m3.toJSON = function () {
        return this.isValid() ? this.toISOString() : null;
      }, m3.toISOString = function () {
        return this.$d.toISOString();
      }, m3.toString = function () {
        return this.$d.toUTCString();
      }, M3;
    }(), k2 = _2.prototype;
    return O2.prototype = k2, [["$ms", r2], ["$s", i], ["$m", s], ["$H", u2], ["$W", a], ["$M", c], ["$y", h2], ["$D", d]].forEach(function (t3) {
      k2[t3[1]] = function (e3) {
        return this.$g(e3, t3[0], t3[1]);
      };
    }), O2.extend = function (t3, e3) {
      return t3.$i || (t3(e3, _2, O2), t3.$i = true), O2;
    }, O2.locale = w2, O2.isDayjs = S2, O2.unix = function (t3) {
      return O2(1e3 * t3);
    }, O2.en = D2[g], O2.Ls = D2, O2.p = {}, O2;
  });
})(dayjs_min);
var dayjs_minExports = dayjs_min.exports;
const dayjs = /* @__PURE__ */ getDefaultExportFromCjs(dayjs_minExports);
(function (module, exports) {
  !function (e2, o) {
    module.exports = o(dayjs_minExports);
  }(commonjsGlobal, function (e2) {
    function o(e3) {
      return e3 && "object" == typeof e3 && "default" in e3 ? e3 : { default: e3 };
    }
    var a = o(e2), s = {
      name: "pt-br", weekdays: "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"), weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"), weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"), months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"), monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"), ordinal: function (e3) {
        return e3 + "º";
      }, formats: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D [de] MMMM [de] YYYY", LLL: "D [de] MMMM [de] YYYY [às] HH:mm", LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm" }, relativeTime: { future: "em %s", past: "há %s", s: "poucos segundos", m: "um minuto", mm: "%d minutos", h: "uma hora", hh: "%d horas", d: "um dia", dd: "%d dias", M: "um mês", MM: "%d meses", y: "um ano", yy: "%d anos" }
    };
    return a.default.locale(s, null, true), s;
  });
})(ptBr);
var enGb = { exports: {} };
(function (module, exports) {
  !function (e2, a) {
    module.exports = a(dayjs_minExports);
  }(commonjsGlobal, function (e2) {
    function a(e3) {
      return e3 && "object" == typeof e3 && "default" in e3 ? e3 : { default: e3 };
    }
    var t2 = a(e2), _2 = {
      name: "en-gb", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), weekStart: 1, yearStart: 4, relativeTime: { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" }, formats: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D MMMM YYYY", LLL: "D MMMM YYYY HH:mm", LLLL: "dddd, D MMMM YYYY HH:mm" }, ordinal: function (e3) {
        var a2 = ["th", "st", "nd", "rd"], t3 = e3 % 100;
        return "[" + e3 + (a2[(t3 - 20) % 10] || a2[t3] || a2[0]) + "]";
      }
    };
    return t2.default.locale(_2, null, true), _2;
  });
})(enGb);
var hi = { exports: {} };
(function (module, exports) {
  !function (_2, e2) {
    module.exports = e2(dayjs_minExports);
  }(commonjsGlobal, function (_2) {
    function e2(_3) {
      return _3 && "object" == typeof _3 && "default" in _3 ? _3 : { default: _3 };
    }
    var t2 = e2(_2), d = {
      name: "hi", weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"), months: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"), weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"), monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"), weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"), ordinal: function (_3) {
        return _3;
      }, formats: { LT: "A h:mm बजे", LTS: "A h:mm:ss बजे", L: "DD/MM/YYYY", LL: "D MMMM YYYY", LLL: "D MMMM YYYY, A h:mm बजे", LLLL: "dddd, D MMMM YYYY, A h:mm बजे" }, relativeTime: { future: "%s में", past: "%s पहले", s: "कुछ ही क्षण", m: "एक मिनट", mm: "%d मिनट", h: "एक घंटा", hh: "%d घंटे", d: "एक दिन", dd: "%d दिन", M: "एक महीने", MM: "%d महीने", y: "एक वर्ष", yy: "%d वर्ष" }
    };
    return t2.default.locale(d, null, true), d;
  });
})(hi);
const antdLocale = {
  "pt": ptBR,
  "en": enGB,
  "in": hiIN,
  "ph": enGB
};
const dayjsLocale = {
  "pt": "pt-br",
  "en": "en-gb",
  "in": "hi",
  "ph": "tl-ph"
};
const siteCountry = {
  "BR": "pt",
  "PH": "ph"
};
const defaultLang = siteCountry["BR"];
let initData = {
  preload: ["pt", "en", "in", "ph"],
  fallbackLng: defaultLang,
  // use pt if detected lng is not available
  interpolation: {
    escapeValue: false
    // react already safes from xss
  },
  backend: {
    // path where resources get loaded from, or a function
    // returning a path:
    // function(lngs, namespaces) { return customPath; }
    // the returned path will interpolate lng, ns if provided like giving a static path
    // the function might return a promise
    // returning falsy will abort the download
    loadPath(lngs, namespaces) {
      return "/locales/".concat(lngs[0], ".json?v=2024_8_30_15_11");
    }
  }
};
instance.use(Browser).use(Backend).use(initReactI18next).init(initData);
const languageOptions = [
  {
    label: "Português",
    value: "pt"
  },
  {
    label: "English",
    value: "en"
  },
  {
    label: "हिंदी",
    value: "in"
  },
  {
    label: "Pilipinas",
    value: "ph"
  }
];
const languageLoaded = () => {
  let language = Cache.get("language") || instance.language || defaultLang;
  if (!languageOptions.find((item) => item.value === language)) {
    language = defaultLang;
  }
  return new Promise((resolve) => {
    instance.on("loaded", (loadLanguage) => {
      if (loadLanguage[language]) {
        resolve(true);
      }
    });
  });
};
const t = instance.t;
const trans = (text = "", args = {}) => {
  if (!text)
    return "";
  return t(text, args);
};
const Cache = {
  set(key, value) {
    localStorage.setItem(key, JSON.stringify({ data: value }));
  },
  get(key) {
    let storage = localStorage.getItem(key);
    if (storage) {
      try {
        storage = JSON.parse(storage);
        return storage.data;
      } catch (e2) {
        return null;
      }
    }
    return null;
  },
  remove(key) {
    localStorage.removeItem(key);
  },
  clear() {
    localStorage.clear();
  }
};
function getBrowser() {
  const UserAgent = navigator.userAgent.toLowerCase();
  const browserInfo = {};
  const browserArray = {
    IE: "ActiveXObject" in window,
    // IE
    Chrome: UserAgent.indexOf("chrome") > -1 && UserAgent.indexOf("safari") > -1,
    // Chrome浏览器
    Firefox: UserAgent.indexOf("firefox") > -1,
    // 火狐浏览器
    Opera: UserAgent.indexOf("opera") > -1,
    // Opera浏览器
    Safari: UserAgent.indexOf("safari") > -1 && UserAgent.indexOf("chrome") === -1,
    // safari浏览器
    Edge: UserAgent.lastIndexOf("edg") > -1,
    // Edge浏览器
    QQBrowser: /qqbrowser/.test(UserAgent),
    // qq浏览器
    WeixinBrowser: /MicroMessenger/i.test(UserAgent)
    // 微信浏览器
  };
  for (const i in browserArray) {
    if (browserArray[i]) {
      if (i === "IE") {
        browserInfo.type = "IE";
      } else if (i === "Chrome") {
        browserInfo.type = "Chrome";
      } else if (i === "Firefox") {
        browserInfo.type = "Firefox";
      } else if (i === "Opera") {
        browserInfo.type = "Opera";
      } else if (i === "Safari") {
        browserInfo.type = "Safari";
      } else if (i === "Edge") {
        browserInfo.type = "Edge";
      }
    }
  }
  browserInfo.mobile = !!UserAgent.match(/applewebkit.*mobile.*/) ? "mobile" : "pc";
  browserInfo.isIos = !!UserAgent.match(/\(i[^;]+;( u;)? cpu.+mac os x/) || UserAgent.indexOf("intel mac os") > -1;
  browserInfo.isMobile = navigator.maxTouchPoints > 1;
  return browserInfo;
}
const getWebType = () => {
  if (/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) {
    return true;
  } else if (/(Android)/i.test(navigator.userAgent)) {
    return true;
  } else {
    document.documentElement.setAttribute("nested", "1");
    return true;
  }
};
const getH5Type = () => {
  if (/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) {
    return true;
  } else if (/(Android)/i.test(navigator.userAgent)) {
    return true;
  } else {
    document.documentElement.setAttribute("nested", "1");
    return false;
  }
};
const isH5$1 = getH5Type();
function getDeviceInfo() {
  return new Promise((resolve, reject) => {
    let webrtcid = localStorage.getItem("webrtcid") || "";
    if (!webrtcid) {
      webrtcid = "".concat(Math.random().toString(36).slice(-8)).concat(Math.random().toString(36).slice(-8)).concat(Math.random().toString(36).slice(-8)).concat(Math.random().toString(36).slice(-8));
      localStorage.setItem("webrtcid", webrtcid);
    }
    resolve({ webrtcid });
  });
}
const getPageHtmlFontSize = () => {
  let defaultMaxWidth = getMaxWidth();
  if (isH5$1) {
    const deviceWidth = document.documentElement.clientWidth;
    document.documentElement.style.fontSize = deviceWidth / 750 + "px";
  } else {
    const deviceWidth = document.documentElement.clientWidth > defaultMaxWidth ? defaultMaxWidth : document.documentElement.clientWidth;
    document.documentElement.style.fontSize = deviceWidth / 750 + "px";
  }
};
const browser = {
  versions: function () {
    const u2 = navigator.userAgent;
    return {
      //移动终端浏览器版本信息
      trident: u2.indexOf("Trident") > -1,
      //IE内核
      presto: u2.indexOf("Presto") > -1,
      //opera内核
      webKit: u2.indexOf("AppleWebKit") > -1,
      //苹果、谷歌内核
      gecko: u2.indexOf("Gecko") > -1 && u2.indexOf("KHTML") == -1,
      //火狐内核
      mobile: !!u2.match(/AppleWebKit.*Mobile.*/),
      //是否为移动终端
      ios: !!u2.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/) || u2.indexOf("Intel Mac OS") > -1,
      //ios终端
      android: u2.indexOf("Android") > -1 || u2.indexOf("Linux") > -1,
      //android终端或uc浏览器
      iPhone: u2.indexOf("iPhone") > -1,
      //是否为iPhone或者QQHD浏览器
      iPad: u2.indexOf("iPad") > -1,
      //是否iPad
      webApp: u2.indexOf("Safari") === -1,
      //是否web应该程序，没有头部与底部
      safari: u2.indexOf("Safari") !== -1,
      QQBrowser: u2.indexOf("qqbrowser") !== -1
      // qq浏览器
    };
  }(),
  language: navigator.language.toLowerCase()
};
var esErrors = Error;
var _eval = EvalError;
var range = RangeError;
var ref = ReferenceError;
var syntax = SyntaxError;
var type = TypeError;
var uri = URIError;
var shams = function hasSymbols() {
  if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
    return false;
  }
  if (typeof Symbol.iterator === "symbol") {
    return true;
  }
  var obj = {};
  var sym = Symbol("test");
  var symObj = Object(sym);
  if (typeof sym === "string") {
    return false;
  }
  if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
    return false;
  }
  if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
    return false;
  }
  var symVal = 42;
  obj[sym] = symVal;
  for (sym in obj) {
    return false;
  }
  if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
    return false;
  }
  if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
    return false;
  }
  var syms = Object.getOwnPropertySymbols(obj);
  if (syms.length !== 1 || syms[0] !== sym) {
    return false;
  }
  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
    return false;
  }
  if (typeof Object.getOwnPropertyDescriptor === "function") {
    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
    if (descriptor.value !== symVal || descriptor.enumerable !== true) {
      return false;
    }
  }
  return true;
};
var origSymbol = typeof Symbol !== "undefined" && Symbol;
var hasSymbolSham = shams;
var hasSymbols$1 = function hasNativeSymbols() {
  if (typeof origSymbol !== "function") {
    return false;
  }
  if (typeof Symbol !== "function") {
    return false;
  }
  if (typeof origSymbol("foo") !== "symbol") {
    return false;
  }
  if (typeof Symbol("bar") !== "symbol") {
    return false;
  }
  return hasSymbolSham();
};
var test = {
  __proto__: null,
  foo: {}
};
var $Object = Object;
var hasProto$1 = function hasProto() {
  return { __proto__: test }.foo === test.foo && !(test instanceof $Object);
};
var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
var toStr$1 = Object.prototype.toString;
var max = Math.max;
var funcType = "[object Function]";
var concatty = function concatty2(a, b) {
  var arr = [];
  for (var i = 0; i < a.length; i += 1) {
    arr[i] = a[i];
  }
  for (var j = 0; j < b.length; j += 1) {
    arr[j + a.length] = b[j];
  }
  return arr;
};
var slicy = function slicy2(arrLike, offset) {
  var arr = [];
  for (var i = offset, j = 0; i < arrLike.length; i += 1, j += 1) {
    arr[j] = arrLike[i];
  }
  return arr;
};
var joiny = function (arr, joiner) {
  var str = "";
  for (var i = 0; i < arr.length; i += 1) {
    str += arr[i];
    if (i + 1 < arr.length) {
      str += joiner;
    }
  }
  return str;
};
var implementation$1 = function bind(that) {
  var target = this;
  if (typeof target !== "function" || toStr$1.apply(target) !== funcType) {
    throw new TypeError(ERROR_MESSAGE + target);
  }
  var args = slicy(arguments, 1);
  var bound;
  var binder = function () {
    if (this instanceof bound) {
      var result = target.apply(
        this,
        concatty(args, arguments)
      );
      if (Object(result) === result) {
        return result;
      }
      return this;
    }
    return target.apply(
      that,
      concatty(args, arguments)
    );
  };
  var boundLength = max(0, target.length - args.length);
  var boundArgs = [];
  for (var i = 0; i < boundLength; i++) {
    boundArgs[i] = "$" + i;
  }
  bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
  if (target.prototype) {
    var Empty = function Empty2() {
    };
    Empty.prototype = target.prototype;
    bound.prototype = new Empty();
    Empty.prototype = null;
  }
  return bound;
};
var implementation = implementation$1;
var functionBind = Function.prototype.bind || implementation;
var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind$1 = functionBind;
var hasown = bind$1.call(call, $hasOwn);
var undefined$1;
var $Error = esErrors;
var $EvalError = _eval;
var $RangeError = range;
var $ReferenceError = ref;
var $SyntaxError$1 = syntax;
var $TypeError$3 = type;
var $URIError = uri;
var $Function = Function;
var getEvalledConstructor = function (expressionSyntax) {
  try {
    return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
  } catch (e2) {
  }
};
var $gOPD$1 = Object.getOwnPropertyDescriptor;
if ($gOPD$1) {
  try {
    $gOPD$1({}, "");
  } catch (e2) {
    $gOPD$1 = null;
  }
}
var throwTypeError = function () {
  throw new $TypeError$3();
};
var ThrowTypeError = $gOPD$1 ? function () {
  try {
    arguments.callee;
    return throwTypeError;
  } catch (calleeThrows) {
    try {
      return $gOPD$1(arguments, "callee").get;
    } catch (gOPDthrows) {
      return throwTypeError;
    }
  }
}() : throwTypeError;
var hasSymbols2 = hasSymbols$1();
var hasProto2 = hasProto$1();
var getProto = Object.getPrototypeOf || (hasProto2 ? function (x2) {
  return x2.__proto__;
} : null);
var needsEval = {};
var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined$1 : getProto(Uint8Array);
var INTRINSICS = {
  __proto__: null,
  "%AggregateError%": typeof AggregateError === "undefined" ? undefined$1 : AggregateError,
  "%Array%": Array,
  "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined$1 : ArrayBuffer,
  "%ArrayIteratorPrototype%": hasSymbols2 && getProto ? getProto([][Symbol.iterator]()) : undefined$1,
  "%AsyncFromSyncIteratorPrototype%": undefined$1,
  "%AsyncFunction%": needsEval,
  "%AsyncGenerator%": needsEval,
  "%AsyncGeneratorFunction%": needsEval,
  "%AsyncIteratorPrototype%": needsEval,
  "%Atomics%": typeof Atomics === "undefined" ? undefined$1 : Atomics,
  "%BigInt%": typeof BigInt === "undefined" ? undefined$1 : BigInt,
  "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined$1 : BigInt64Array,
  "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined$1 : BigUint64Array,
  "%Boolean%": Boolean,
  "%DataView%": typeof DataView === "undefined" ? undefined$1 : DataView,
  "%Date%": Date,
  "%decodeURI%": decodeURI,
  "%decodeURIComponent%": decodeURIComponent,
  "%encodeURI%": encodeURI,
  "%encodeURIComponent%": encodeURIComponent,
  "%Error%": $Error,
  "%eval%": eval,
  // eslint-disable-line no-eval
  "%EvalError%": $EvalError,
  "%Float32Array%": typeof Float32Array === "undefined" ? undefined$1 : Float32Array,
  "%Float64Array%": typeof Float64Array === "undefined" ? undefined$1 : Float64Array,
  "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined$1 : FinalizationRegistry,
  "%Function%": $Function,
  "%GeneratorFunction%": needsEval,
  "%Int8Array%": typeof Int8Array === "undefined" ? undefined$1 : Int8Array,
  "%Int16Array%": typeof Int16Array === "undefined" ? undefined$1 : Int16Array,
  "%Int32Array%": typeof Int32Array === "undefined" ? undefined$1 : Int32Array,
  "%isFinite%": isFinite,
  "%isNaN%": isNaN,
  "%IteratorPrototype%": hasSymbols2 && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined$1,
  "%JSON%": typeof JSON === "object" ? JSON : undefined$1,
  "%Map%": typeof Map === "undefined" ? undefined$1 : Map,
  "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols2 || !getProto ? undefined$1 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
  "%Math%": Math,
  "%Number%": Number,
  "%Object%": Object,
  "%parseFloat%": parseFloat,
  "%parseInt%": parseInt,
  "%Promise%": typeof Promise === "undefined" ? undefined$1 : Promise,
  "%Proxy%": typeof Proxy === "undefined" ? undefined$1 : Proxy,
  "%RangeError%": $RangeError,
  "%ReferenceError%": $ReferenceError,
  "%Reflect%": typeof Reflect === "undefined" ? undefined$1 : Reflect,
  "%RegExp%": RegExp,
  "%Set%": typeof Set === "undefined" ? undefined$1 : Set,
  "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols2 || !getProto ? undefined$1 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
  "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined$1 : SharedArrayBuffer,
  "%String%": String,
  "%StringIteratorPrototype%": hasSymbols2 && getProto ? getProto(""[Symbol.iterator]()) : undefined$1,
  "%Symbol%": hasSymbols2 ? Symbol : undefined$1,
  "%SyntaxError%": $SyntaxError$1,
  "%ThrowTypeError%": ThrowTypeError,
  "%TypedArray%": TypedArray,
  "%TypeError%": $TypeError$3,
  "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined$1 : Uint8Array,
  "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined$1 : Uint8ClampedArray,
  "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined$1 : Uint16Array,
  "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined$1 : Uint32Array,
  "%URIError%": $URIError,
  "%WeakMap%": typeof WeakMap === "undefined" ? undefined$1 : WeakMap,
  "%WeakRef%": typeof WeakRef === "undefined" ? undefined$1 : WeakRef,
  "%WeakSet%": typeof WeakSet === "undefined" ? undefined$1 : WeakSet
};
if (getProto) {
  try {
    null.error;
  } catch (e2) {
    var errorProto = getProto(getProto(e2));
    INTRINSICS["%Error.prototype%"] = errorProto;
  }
}
var doEval = function doEval2(name) {
  var value;
  if (name === "%AsyncFunction%") {
    value = getEvalledConstructor("async function () {}");
  } else if (name === "%GeneratorFunction%") {
    value = getEvalledConstructor("function* () {}");
  } else if (name === "%AsyncGeneratorFunction%") {
    value = getEvalledConstructor("async function* () {}");
  } else if (name === "%AsyncGenerator%") {
    var fn = doEval2("%AsyncGeneratorFunction%");
    if (fn) {
      value = fn.prototype;
    }
  } else if (name === "%AsyncIteratorPrototype%") {
    var gen = doEval2("%AsyncGenerator%");
    if (gen && getProto) {
      value = getProto(gen.prototype);
    }
  }
  INTRINSICS[name] = value;
  return value;
};
var LEGACY_ALIASES = {
  __proto__: null,
  "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
  "%ArrayPrototype%": ["Array", "prototype"],
  "%ArrayProto_entries%": ["Array", "prototype", "entries"],
  "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
  "%ArrayProto_keys%": ["Array", "prototype", "keys"],
  "%ArrayProto_values%": ["Array", "prototype", "values"],
  "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
  "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
  "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
  "%BooleanPrototype%": ["Boolean", "prototype"],
  "%DataViewPrototype%": ["DataView", "prototype"],
  "%DatePrototype%": ["Date", "prototype"],
  "%ErrorPrototype%": ["Error", "prototype"],
  "%EvalErrorPrototype%": ["EvalError", "prototype"],
  "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
  "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
  "%FunctionPrototype%": ["Function", "prototype"],
  "%Generator%": ["GeneratorFunction", "prototype"],
  "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
  "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
  "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
  "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
  "%JSONParse%": ["JSON", "parse"],
  "%JSONStringify%": ["JSON", "stringify"],
  "%MapPrototype%": ["Map", "prototype"],
  "%NumberPrototype%": ["Number", "prototype"],
  "%ObjectPrototype%": ["Object", "prototype"],
  "%ObjProto_toString%": ["Object", "prototype", "toString"],
  "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
  "%PromisePrototype%": ["Promise", "prototype"],
  "%PromiseProto_then%": ["Promise", "prototype", "then"],
  "%Promise_all%": ["Promise", "all"],
  "%Promise_reject%": ["Promise", "reject"],
  "%Promise_resolve%": ["Promise", "resolve"],
  "%RangeErrorPrototype%": ["RangeError", "prototype"],
  "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
  "%RegExpPrototype%": ["RegExp", "prototype"],
  "%SetPrototype%": ["Set", "prototype"],
  "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
  "%StringPrototype%": ["String", "prototype"],
  "%SymbolPrototype%": ["Symbol", "prototype"],
  "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
  "%TypedArrayPrototype%": ["TypedArray", "prototype"],
  "%TypeErrorPrototype%": ["TypeError", "prototype"],
  "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
  "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
  "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
  "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
  "%URIErrorPrototype%": ["URIError", "prototype"],
  "%WeakMapPrototype%": ["WeakMap", "prototype"],
  "%WeakSetPrototype%": ["WeakSet", "prototype"]
};
var bind2 = functionBind;
var hasOwn$1 = hasown;
var $concat$1 = bind2.call(Function.call, Array.prototype.concat);
var $spliceApply = bind2.call(Function.apply, Array.prototype.splice);
var $replace$1 = bind2.call(Function.call, String.prototype.replace);
var $strSlice = bind2.call(Function.call, String.prototype.slice);
var $exec = bind2.call(Function.call, RegExp.prototype.exec);
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = function stringToPath2(string) {
  var first = $strSlice(string, 0, 1);
  var last = $strSlice(string, -1);
  if (first === "%" && last !== "%") {
    throw new $SyntaxError$1("invalid intrinsic syntax, expected closing `%`");
  } else if (last === "%" && first !== "%") {
    throw new $SyntaxError$1("invalid intrinsic syntax, expected opening `%`");
  }
  var result = [];
  $replace$1(string, rePropName, function (match, number, quote2, subString) {
    result[result.length] = quote2 ? $replace$1(subString, reEscapeChar, "$1") : number || match;
  });
  return result;
};
var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
  var intrinsicName = name;
  var alias;
  if (hasOwn$1(LEGACY_ALIASES, intrinsicName)) {
    alias = LEGACY_ALIASES[intrinsicName];
    intrinsicName = "%" + alias[0] + "%";
  }
  if (hasOwn$1(INTRINSICS, intrinsicName)) {
    var value = INTRINSICS[intrinsicName];
    if (value === needsEval) {
      value = doEval(intrinsicName);
    }
    if (typeof value === "undefined" && !allowMissing) {
      throw new $TypeError$3("intrinsic " + name + " exists, but is not available. Please file an issue!");
    }
    return {
      alias,
      name: intrinsicName,
      value
    };
  }
  throw new $SyntaxError$1("intrinsic " + name + " does not exist!");
};
var getIntrinsic = function GetIntrinsic(name, allowMissing) {
  if (typeof name !== "string" || name.length === 0) {
    throw new $TypeError$3("intrinsic name must be a non-empty string");
  }
  if (arguments.length > 1 && typeof allowMissing !== "boolean") {
    throw new $TypeError$3('"allowMissing" argument must be a boolean');
  }
  if ($exec(/^%?[^%]*%?$/, name) === null) {
    throw new $SyntaxError$1("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
  }
  var parts = stringToPath(name);
  var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
  var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
  var intrinsicRealName = intrinsic.name;
  var value = intrinsic.value;
  var skipFurtherCaching = false;
  var alias = intrinsic.alias;
  if (alias) {
    intrinsicBaseName = alias[0];
    $spliceApply(parts, $concat$1([0, 1], alias));
  }
  for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    var part = parts[i];
    var first = $strSlice(part, 0, 1);
    var last = $strSlice(part, -1);
    if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
      throw new $SyntaxError$1("property names with quotes must have matching quotes");
    }
    if (part === "constructor" || !isOwn) {
      skipFurtherCaching = true;
    }
    intrinsicBaseName += "." + part;
    intrinsicRealName = "%" + intrinsicBaseName + "%";
    if (hasOwn$1(INTRINSICS, intrinsicRealName)) {
      value = INTRINSICS[intrinsicRealName];
    } else if (value != null) {
      if (!(part in value)) {
        if (!allowMissing) {
          throw new $TypeError$3("base intrinsic for " + name + " exists, but the property is not available.");
        }
        return void 0;
      }
      if ($gOPD$1 && i + 1 >= parts.length) {
        var desc = $gOPD$1(value, part);
        isOwn = !!desc;
        if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
          value = desc.get;
        } else {
          value = value[part];
        }
      } else {
        isOwn = hasOwn$1(value, part);
        value = value[part];
      }
      if (isOwn && !skipFurtherCaching) {
        INTRINSICS[intrinsicRealName] = value;
      }
    }
  }
  return value;
};
var callBind$1 = { exports: {} };
var esDefineProperty;
var hasRequiredEsDefineProperty;
function requireEsDefineProperty() {
  if (hasRequiredEsDefineProperty)
    return esDefineProperty;
  hasRequiredEsDefineProperty = 1;
  var GetIntrinsic3 = getIntrinsic;
  var $defineProperty2 = GetIntrinsic3("%Object.defineProperty%", true) || false;
  if ($defineProperty2) {
    try {
      $defineProperty2({}, "a", { value: 1 });
    } catch (e2) {
      $defineProperty2 = false;
    }
  }
  esDefineProperty = $defineProperty2;
  return esDefineProperty;
}
var GetIntrinsic$3 = getIntrinsic;
var $gOPD = GetIntrinsic$3("%Object.getOwnPropertyDescriptor%", true);
if ($gOPD) {
  try {
    $gOPD([], "length");
  } catch (e2) {
    $gOPD = null;
  }
}
var gopd$1 = $gOPD;
var $defineProperty$1 = requireEsDefineProperty();
var $SyntaxError = syntax;
var $TypeError$2 = type;
var gopd = gopd$1;
var defineDataProperty = function defineDataProperty2(obj, property, value) {
  if (!obj || typeof obj !== "object" && typeof obj !== "function") {
    throw new $TypeError$2("`obj` must be an object or a function`");
  }
  if (typeof property !== "string" && typeof property !== "symbol") {
    throw new $TypeError$2("`property` must be a string or a symbol`");
  }
  if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
    throw new $TypeError$2("`nonEnumerable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
    throw new $TypeError$2("`nonWritable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
    throw new $TypeError$2("`nonConfigurable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
    throw new $TypeError$2("`loose`, if provided, must be a boolean");
  }
  var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
  var nonWritable = arguments.length > 4 ? arguments[4] : null;
  var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
  var loose = arguments.length > 6 ? arguments[6] : false;
  var desc = !!gopd && gopd(obj, property);
  if ($defineProperty$1) {
    $defineProperty$1(obj, property, {
      configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
      enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
      value,
      writable: nonWritable === null && desc ? desc.writable : !nonWritable
    });
  } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
    obj[property] = value;
  } else {
    throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
  }
};
var $defineProperty = requireEsDefineProperty();
var hasPropertyDescriptors = function hasPropertyDescriptors2() {
  return !!$defineProperty;
};
hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
  if (!$defineProperty) {
    return null;
  }
  try {
    return $defineProperty([], "length", { value: 1 }).length !== 1;
  } catch (e2) {
    return true;
  }
};
var hasPropertyDescriptors_1 = hasPropertyDescriptors;
var GetIntrinsic$2 = getIntrinsic;
var define = defineDataProperty;
var hasDescriptors = hasPropertyDescriptors_1();
var gOPD = gopd$1;
var $TypeError$1 = type;
var $floor$1 = GetIntrinsic$2("%Math.floor%");
var setFunctionLength = function setFunctionLength2(fn, length) {
  if (typeof fn !== "function") {
    throw new $TypeError$1("`fn` is not a function");
  }
  if (typeof length !== "number" || length < 0 || length > 4294967295 || $floor$1(length) !== length) {
    throw new $TypeError$1("`length` must be a positive 32-bit integer");
  }
  var loose = arguments.length > 2 && !!arguments[2];
  var functionLengthIsConfigurable = true;
  var functionLengthIsWritable = true;
  if ("length" in fn && gOPD) {
    var desc = gOPD(fn, "length");
    if (desc && !desc.configurable) {
      functionLengthIsConfigurable = false;
    }
    if (desc && !desc.writable) {
      functionLengthIsWritable = false;
    }
  }
  if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
    if (hasDescriptors) {
      define(
        /** @type {Parameters<define>[0]} */
        fn,
        "length",
        length,
        true,
        true
      );
    } else {
      define(
        /** @type {Parameters<define>[0]} */
        fn,
        "length",
        length
      );
    }
  }
  return fn;
};
(function (module) {
  var bind3 = functionBind;
  var GetIntrinsic3 = getIntrinsic;
  var setFunctionLength$1 = setFunctionLength;
  var $TypeError2 = type;
  var $apply = GetIntrinsic3("%Function.prototype.apply%");
  var $call = GetIntrinsic3("%Function.prototype.call%");
  var $reflectApply = GetIntrinsic3("%Reflect.apply%", true) || bind3.call($call, $apply);
  var $defineProperty2 = requireEsDefineProperty();
  var $max = GetIntrinsic3("%Math.max%");
  module.exports = function callBind2(originalFunction) {
    if (typeof originalFunction !== "function") {
      throw new $TypeError2("a function is required");
    }
    var func = $reflectApply(bind3, $call, arguments);
    return setFunctionLength$1(
      func,
      1 + $max(0, originalFunction.length - (arguments.length - 1)),
      true
    );
  };
  var applyBind = function applyBind2() {
    return $reflectApply(bind3, $apply, arguments);
  };
  if ($defineProperty2) {
    $defineProperty2(module.exports, "apply", { value: applyBind });
  } else {
    module.exports.apply = applyBind;
  }
})(callBind$1);
var callBindExports = callBind$1.exports;
var GetIntrinsic$1 = getIntrinsic;
var callBind = callBindExports;
var $indexOf = callBind(GetIntrinsic$1("String.prototype.indexOf"));
var callBound$1 = function callBoundIntrinsic(name, allowMissing) {
  var intrinsic = GetIntrinsic$1(name, !!allowMissing);
  if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
    return callBind(intrinsic);
  }
  return intrinsic;
};
const __viteBrowserExternal = {};
const __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" }));
const require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var hasMap = typeof Map === "function" && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === "function" && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;
var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function (O2) {
  return O2.__proto__;
} : null);
function addNumericSeparator(num, str) {
  if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
    return str;
  }
  var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
  if (typeof num === "number") {
    var int = num < 0 ? -$floor(-num) : $floor(num);
    if (int !== num) {
      var intStr = String(int);
      var dec = $slice.call(str, intStr.length + 1);
      return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
    }
  }
  return $replace.call(str, sepRegex, "$&_");
}
var utilInspect = require$$0;
var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
var objectInspect = function inspect_(obj, options, depth, seen2) {
  var opts = options || {};
  if (has$3(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
    throw new TypeError('option "quoteStyle" must be "single" or "double"');
  }
  if (has$3(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
    throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
  }
  var customInspect = has$3(opts, "customInspect") ? opts.customInspect : true;
  if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
    throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
  }
  if (has$3(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
    throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
  }
  if (has$3(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
    throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
  }
  var numericSeparator = opts.numericSeparator;
  if (typeof obj === "undefined") {
    return "undefined";
  }
  if (obj === null) {
    return "null";
  }
  if (typeof obj === "boolean") {
    return obj ? "true" : "false";
  }
  if (typeof obj === "string") {
    return inspectString(obj, opts);
  }
  if (typeof obj === "number") {
    if (obj === 0) {
      return Infinity / obj > 0 ? "0" : "-0";
    }
    var str = String(obj);
    return numericSeparator ? addNumericSeparator(obj, str) : str;
  }
  if (typeof obj === "bigint") {
    var bigIntStr = String(obj) + "n";
    return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
  }
  var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
  if (typeof depth === "undefined") {
    depth = 0;
  }
  if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
    return isArray$3(obj) ? "[Array]" : "[Object]";
  }
  var indent = getIndent(opts, depth);
  if (typeof seen2 === "undefined") {
    seen2 = [];
  } else if (indexOf(seen2, obj) >= 0) {
    return "[Circular]";
  }
  function inspect2(value, from, noIndent) {
    if (from) {
      seen2 = $arrSlice.call(seen2);
      seen2.push(from);
    }
    if (noIndent) {
      var newOpts = {
        depth: opts.depth
      };
      if (has$3(opts, "quoteStyle")) {
        newOpts.quoteStyle = opts.quoteStyle;
      }
      return inspect_(value, newOpts, depth + 1, seen2);
    }
    return inspect_(value, opts, depth + 1, seen2);
  }
  if (typeof obj === "function" && !isRegExp$1(obj)) {
    var name = nameOf(obj);
    var keys = arrObjKeys(obj, inspect2);
    return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
  }
  if (isSymbol(obj)) {
    var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
    return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
  }
  if (isElement(obj)) {
    var s = "<" + $toLowerCase.call(String(obj.nodeName));
    var attrs = obj.attributes || [];
    for (var i = 0; i < attrs.length; i++) {
      s += " " + attrs[i].name + "=" + wrapQuotes(quote(attrs[i].value), "double", opts);
    }
    s += ">";
    if (obj.childNodes && obj.childNodes.length) {
      s += "...";
    }
    s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
    return s;
  }
  if (isArray$3(obj)) {
    if (obj.length === 0) {
      return "[]";
    }
    var xs = arrObjKeys(obj, inspect2);
    if (indent && !singleLineValues(xs)) {
      return "[" + indentedJoin(xs, indent) + "]";
    }
    return "[ " + $join.call(xs, ", ") + " ]";
  }
  if (isError(obj)) {
    var parts = arrObjKeys(obj, inspect2);
    if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
      return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect2(obj.cause), parts), ", ") + " }";
    }
    if (parts.length === 0) {
      return "[" + String(obj) + "]";
    }
    return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
  }
  if (typeof obj === "object" && customInspect) {
    if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
      return utilInspect(obj, { depth: maxDepth - depth });
    } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
      return obj.inspect();
    }
  }
  if (isMap(obj)) {
    var mapParts = [];
    if (mapForEach) {
      mapForEach.call(obj, function (value, key) {
        mapParts.push(inspect2(key, obj, true) + " => " + inspect2(value, obj));
      });
    }
    return collectionOf("Map", mapSize.call(obj), mapParts, indent);
  }
  if (isSet(obj)) {
    var setParts = [];
    if (setForEach) {
      setForEach.call(obj, function (value) {
        setParts.push(inspect2(value, obj));
      });
    }
    return collectionOf("Set", setSize.call(obj), setParts, indent);
  }
  if (isWeakMap(obj)) {
    return weakCollectionOf("WeakMap");
  }
  if (isWeakSet(obj)) {
    return weakCollectionOf("WeakSet");
  }
  if (isWeakRef(obj)) {
    return weakCollectionOf("WeakRef");
  }
  if (isNumber(obj)) {
    return markBoxed(inspect2(Number(obj)));
  }
  if (isBigInt(obj)) {
    return markBoxed(inspect2(bigIntValueOf.call(obj)));
  }
  if (isBoolean(obj)) {
    return markBoxed(booleanValueOf.call(obj));
  }
  if (isString(obj)) {
    return markBoxed(inspect2(String(obj)));
  }
  if (typeof window !== "undefined" && obj === window) {
    return "{ [object Window] }";
  }
  if (obj === commonjsGlobal) {
    return "{ [object globalThis] }";
  }
  if (!isDate(obj) && !isRegExp$1(obj)) {
    var ys = arrObjKeys(obj, inspect2);
    var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
    var protoTag = obj instanceof Object ? "" : "null prototype";
    var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
    var constructorTag = isPlainObject || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
    var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
    if (ys.length === 0) {
      return tag + "{}";
    }
    if (indent) {
      return tag + "{" + indentedJoin(ys, indent) + "}";
    }
    return tag + "{ " + $join.call(ys, ", ") + " }";
  }
  return String(obj);
};
function wrapQuotes(s, defaultStyle, opts) {
  var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
  return quoteChar + s + quoteChar;
}
function quote(s) {
  return $replace.call(String(s), /"/g, "&quot;");
}
function isArray$3(obj) {
  return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isDate(obj) {
  return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isRegExp$1(obj) {
  return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isError(obj) {
  return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isString(obj) {
  return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isNumber(obj) {
  return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isBoolean(obj) {
  return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
}
function isSymbol(obj) {
  if (hasShammedSymbols) {
    return obj && typeof obj === "object" && obj instanceof Symbol;
  }
  if (typeof obj === "symbol") {
    return true;
  }
  if (!obj || typeof obj !== "object" || !symToString) {
    return false;
  }
  try {
    symToString.call(obj);
    return true;
  } catch (e2) {
  }
  return false;
}
function isBigInt(obj) {
  if (!obj || typeof obj !== "object" || !bigIntValueOf) {
    return false;
  }
  try {
    bigIntValueOf.call(obj);
    return true;
  } catch (e2) {
  }
  return false;
}
var hasOwn = Object.prototype.hasOwnProperty || function (key) {
  return key in this;
};
function has$3(obj, key) {
  return hasOwn.call(obj, key);
}
function toStr(obj) {
  return objectToString.call(obj);
}
function nameOf(f2) {
  if (f2.name) {
    return f2.name;
  }
  var m2 = $match.call(functionToString.call(f2), /^function\s*([\w$]+)/);
  if (m2) {
    return m2[1];
  }
  return null;
}
function indexOf(xs, x2) {
  if (xs.indexOf) {
    return xs.indexOf(x2);
  }
  for (var i = 0, l2 = xs.length; i < l2; i++) {
    if (xs[i] === x2) {
      return i;
    }
  }
  return -1;
}
function isMap(x2) {
  if (!mapSize || !x2 || typeof x2 !== "object") {
    return false;
  }
  try {
    mapSize.call(x2);
    try {
      setSize.call(x2);
    } catch (s) {
      return true;
    }
    return x2 instanceof Map;
  } catch (e2) {
  }
  return false;
}
function isWeakMap(x2) {
  if (!weakMapHas || !x2 || typeof x2 !== "object") {
    return false;
  }
  try {
    weakMapHas.call(x2, weakMapHas);
    try {
      weakSetHas.call(x2, weakSetHas);
    } catch (s) {
      return true;
    }
    return x2 instanceof WeakMap;
  } catch (e2) {
  }
  return false;
}
function isWeakRef(x2) {
  if (!weakRefDeref || !x2 || typeof x2 !== "object") {
    return false;
  }
  try {
    weakRefDeref.call(x2);
    return true;
  } catch (e2) {
  }
  return false;
}
function isSet(x2) {
  if (!setSize || !x2 || typeof x2 !== "object") {
    return false;
  }
  try {
    setSize.call(x2);
    try {
      mapSize.call(x2);
    } catch (m2) {
      return true;
    }
    return x2 instanceof Set;
  } catch (e2) {
  }
  return false;
}
function isWeakSet(x2) {
  if (!weakSetHas || !x2 || typeof x2 !== "object") {
    return false;
  }
  try {
    weakSetHas.call(x2, weakSetHas);
    try {
      weakMapHas.call(x2, weakMapHas);
    } catch (s) {
      return true;
    }
    return x2 instanceof WeakSet;
  } catch (e2) {
  }
  return false;
}
function isElement(x2) {
  if (!x2 || typeof x2 !== "object") {
    return false;
  }
  if (typeof HTMLElement !== "undefined" && x2 instanceof HTMLElement) {
    return true;
  }
  return typeof x2.nodeName === "string" && typeof x2.getAttribute === "function";
}
function inspectString(str, opts) {
  if (str.length > opts.maxStringLength) {
    var remaining = str.length - opts.maxStringLength;
    var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
    return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
  }
  var s = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
  return wrapQuotes(s, "single", opts);
}
function lowbyte(c) {
  var n2 = c.charCodeAt(0);
  var x2 = {
    8: "b",
    9: "t",
    10: "n",
    12: "f",
    13: "r"
  }[n2];
  if (x2) {
    return "\\" + x2;
  }
  return "\\x" + (n2 < 16 ? "0" : "") + $toUpperCase.call(n2.toString(16));
}
function markBoxed(str) {
  return "Object(" + str + ")";
}
function weakCollectionOf(type2) {
  return type2 + " { ? }";
}
function collectionOf(type2, size, entries, indent) {
  var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
  return type2 + " (" + size + ") {" + joinedEntries + "}";
}
function singleLineValues(xs) {
  for (var i = 0; i < xs.length; i++) {
    if (indexOf(xs[i], "\n") >= 0) {
      return false;
    }
  }
  return true;
}
function getIndent(opts, depth) {
  var baseIndent;
  if (opts.indent === "	") {
    baseIndent = "	";
  } else if (typeof opts.indent === "number" && opts.indent > 0) {
    baseIndent = $join.call(Array(opts.indent + 1), " ");
  } else {
    return null;
  }
  return {
    base: baseIndent,
    prev: $join.call(Array(depth + 1), baseIndent)
  };
}
function indentedJoin(xs, indent) {
  if (xs.length === 0) {
    return "";
  }
  var lineJoiner = "\n" + indent.prev + indent.base;
  return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
}
function arrObjKeys(obj, inspect2) {
  var isArr = isArray$3(obj);
  var xs = [];
  if (isArr) {
    xs.length = obj.length;
    for (var i = 0; i < obj.length; i++) {
      xs[i] = has$3(obj, i) ? inspect2(obj[i], obj) : "";
    }
  }
  var syms = typeof gOPS === "function" ? gOPS(obj) : [];
  var symMap;
  if (hasShammedSymbols) {
    symMap = {};
    for (var k2 = 0; k2 < syms.length; k2++) {
      symMap["$" + syms[k2]] = syms[k2];
    }
  }
  for (var key in obj) {
    if (!has$3(obj, key)) {
      continue;
    }
    if (isArr && String(Number(key)) === key && key < obj.length) {
      continue;
    }
    if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
      continue;
    } else if ($test.call(/[^\w$]/, key)) {
      xs.push(inspect2(key, obj) + ": " + inspect2(obj[key], obj));
    } else {
      xs.push(key + ": " + inspect2(obj[key], obj));
    }
  }
  if (typeof gOPS === "function") {
    for (var j = 0; j < syms.length; j++) {
      if (isEnumerable.call(obj, syms[j])) {
        xs.push("[" + inspect2(syms[j]) + "]: " + inspect2(obj[syms[j]], obj));
      }
    }
  }
  return xs;
}
var GetIntrinsic2 = getIntrinsic;
var callBound = callBound$1;
var inspect = objectInspect;
var $TypeError = type;
var $WeakMap = GetIntrinsic2("%WeakMap%", true);
var $Map = GetIntrinsic2("%Map%", true);
var $weakMapGet = callBound("WeakMap.prototype.get", true);
var $weakMapSet = callBound("WeakMap.prototype.set", true);
var $weakMapHas = callBound("WeakMap.prototype.has", true);
var $mapGet = callBound("Map.prototype.get", true);
var $mapSet = callBound("Map.prototype.set", true);
var $mapHas = callBound("Map.prototype.has", true);
var listGetNode = function (list, key) {
  var prev = list;
  var curr;
  for (; (curr = prev.next) !== null; prev = curr) {
    if (curr.key === key) {
      prev.next = curr.next;
      curr.next = /** @type {NonNullable<typeof list.next>} */
        list.next;
      list.next = curr;
      return curr;
    }
  }
};
var listGet = function (objects, key) {
  var node = listGetNode(objects, key);
  return node && node.value;
};
var listSet = function (objects, key, value) {
  var node = listGetNode(objects, key);
  if (node) {
    node.value = value;
  } else {
    objects.next = /** @type {import('.').ListNode<typeof value>} */
    {
      // eslint-disable-line no-param-reassign, no-extra-parens
      key,
      next: objects.next,
      value
    };
  }
};
var listHas = function (objects, key) {
  return !!listGetNode(objects, key);
};
var sideChannel = function getSideChannel() {
  var $wm;
  var $m;
  var $o;
  var channel = {
    assert: function (key) {
      if (!channel.has(key)) {
        throw new $TypeError("Side channel does not contain " + inspect(key));
      }
    },
    get: function (key) {
      if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
        if ($wm) {
          return $weakMapGet($wm, key);
        }
      } else if ($Map) {
        if ($m) {
          return $mapGet($m, key);
        }
      } else {
        if ($o) {
          return listGet($o, key);
        }
      }
    },
    has: function (key) {
      if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
        if ($wm) {
          return $weakMapHas($wm, key);
        }
      } else if ($Map) {
        if ($m) {
          return $mapHas($m, key);
        }
      } else {
        if ($o) {
          return listHas($o, key);
        }
      }
      return false;
    },
    set: function (key, value) {
      if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
        if (!$wm) {
          $wm = new $WeakMap();
        }
        $weakMapSet($wm, key, value);
      } else if ($Map) {
        if (!$m) {
          $m = new $Map();
        }
        $mapSet($m, key, value);
      } else {
        if (!$o) {
          $o = { key: {}, next: null };
        }
        listSet($o, key, value);
      }
    }
  };
  return channel;
};
var replace = String.prototype.replace;
var percentTwenties = /%20/g;
var Format = {
  RFC1738: "RFC1738",
  RFC3986: "RFC3986"
};
var formats$3 = {
  "default": Format.RFC3986,
  formatters: {
    RFC1738: function (value) {
      return replace.call(value, percentTwenties, "+");
    },
    RFC3986: function (value) {
      return String(value);
    }
  },
  RFC1738: Format.RFC1738,
  RFC3986: Format.RFC3986
};
var formats$2 = formats$3;
var has$2 = Object.prototype.hasOwnProperty;
var isArray$2 = Array.isArray;
var hexTable = function () {
  var array = [];
  for (var i = 0; i < 256; ++i) {
    array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
  }
  return array;
}();
var compactQueue = function compactQueue2(queue) {
  while (queue.length > 1) {
    var item = queue.pop();
    var obj = item.obj[item.prop];
    if (isArray$2(obj)) {
      var compacted = [];
      for (var j = 0; j < obj.length; ++j) {
        if (typeof obj[j] !== "undefined") {
          compacted.push(obj[j]);
        }
      }
      item.obj[item.prop] = compacted;
    }
  }
};
var arrayToObject = function arrayToObject2(source, options) {
  var obj = options && options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var i = 0; i < source.length; ++i) {
    if (typeof source[i] !== "undefined") {
      obj[i] = source[i];
    }
  }
  return obj;
};
var merge = function merge2(target, source, options) {
  if (!source) {
    return target;
  }
  if (typeof source !== "object") {
    if (isArray$2(target)) {
      target.push(source);
    } else if (target && typeof target === "object") {
      if (options && (options.plainObjects || options.allowPrototypes) || !has$2.call(Object.prototype, source)) {
        target[source] = true;
      }
    } else {
      return [target, source];
    }
    return target;
  }
  if (!target || typeof target !== "object") {
    return [target].concat(source);
  }
  var mergeTarget = target;
  if (isArray$2(target) && !isArray$2(source)) {
    mergeTarget = arrayToObject(target, options);
  }
  if (isArray$2(target) && isArray$2(source)) {
    source.forEach(function (item, i) {
      if (has$2.call(target, i)) {
        var targetItem = target[i];
        if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
          target[i] = merge2(targetItem, item, options);
        } else {
          target.push(item);
        }
      } else {
        target[i] = item;
      }
    });
    return target;
  }
  return Object.keys(source).reduce(function (acc, key) {
    var value = source[key];
    if (has$2.call(acc, key)) {
      acc[key] = merge2(acc[key], value, options);
    } else {
      acc[key] = value;
    }
    return acc;
  }, mergeTarget);
};
var assign = function assignSingleSource(target, source) {
  return Object.keys(source).reduce(function (acc, key) {
    acc[key] = source[key];
    return acc;
  }, target);
};
var decode = function (str, decoder, charset) {
  var strWithoutPlus = str.replace(/\+/g, " ");
  if (charset === "iso-8859-1") {
    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
  }
  try {
    return decodeURIComponent(strWithoutPlus);
  } catch (e2) {
    return strWithoutPlus;
  }
};
var limit = 1024;
var encode = function encode2(str, defaultEncoder, charset, kind, format) {
  if (str.length === 0) {
    return str;
  }
  var string = str;
  if (typeof str === "symbol") {
    string = Symbol.prototype.toString.call(str);
  } else if (typeof str !== "string") {
    string = String(str);
  }
  if (charset === "iso-8859-1") {
    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
      return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
    });
  }
  var out = "";
  for (var j = 0; j < string.length; j += limit) {
    var segment = string.length >= limit ? string.slice(j, j + limit) : string;
    var arr = [];
    for (var i = 0; i < segment.length; ++i) {
      var c = segment.charCodeAt(i);
      if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats$2.RFC1738 && (c === 40 || c === 41)) {
        arr[arr.length] = segment.charAt(i);
        continue;
      }
      if (c < 128) {
        arr[arr.length] = hexTable[c];
        continue;
      }
      if (c < 2048) {
        arr[arr.length] = hexTable[192 | c >> 6] + hexTable[128 | c & 63];
        continue;
      }
      if (c < 55296 || c >= 57344) {
        arr[arr.length] = hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
        continue;
      }
      i += 1;
      c = 65536 + ((c & 1023) << 10 | segment.charCodeAt(i) & 1023);
      arr[arr.length] = hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
    }
    out += arr.join("");
  }
  return out;
};
var compact = function compact2(value) {
  var queue = [{ obj: { o: value }, prop: "o" }];
  var refs = [];
  for (var i = 0; i < queue.length; ++i) {
    var item = queue[i];
    var obj = item.obj[item.prop];
    var keys = Object.keys(obj);
    for (var j = 0; j < keys.length; ++j) {
      var key = keys[j];
      var val = obj[key];
      if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
        queue.push({ obj, prop: key });
        refs.push(val);
      }
    }
  }
  compactQueue(queue);
  return value;
};
var isRegExp = function isRegExp2(obj) {
  return Object.prototype.toString.call(obj) === "[object RegExp]";
};
var isBuffer$1 = function isBuffer(obj) {
  if (!obj || typeof obj !== "object") {
    return false;
  }
  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};
var combine = function combine2(a, b) {
  return [].concat(a, b);
};
var maybeMap = function maybeMap2(val, fn) {
  if (isArray$2(val)) {
    var mapped = [];
    for (var i = 0; i < val.length; i += 1) {
      mapped.push(fn(val[i]));
    }
    return mapped;
  }
  return fn(val);
};
var utils$2 = {
  arrayToObject,
  assign,
  combine,
  compact,
  decode,
  encode,
  isBuffer: isBuffer$1,
  isRegExp,
  maybeMap,
  merge
};
var getSideChannel2 = sideChannel;
var utils$1 = utils$2;
var formats$1 = formats$3;
var has$1 = Object.prototype.hasOwnProperty;
var arrayPrefixGenerators = {
  brackets: function brackets(prefix) {
    return prefix + "[]";
  },
  comma: "comma",
  indices: function indices(prefix, key) {
    return prefix + "[" + key + "]";
  },
  repeat: function repeat(prefix) {
    return prefix;
  }
};
var isArray$1 = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function (arr, valueOrArray) {
  push.apply(arr, isArray$1(valueOrArray) ? valueOrArray : [valueOrArray]);
};
var toISO = Date.prototype.toISOString;
var defaultFormat = formats$1["default"];
var defaults$1 = {
  addQueryPrefix: false,
  allowDots: false,
  allowEmptyArrays: false,
  arrayFormat: "indices",
  charset: "utf-8",
  charsetSentinel: false,
  delimiter: "&",
  encode: true,
  encodeDotInKeys: false,
  encoder: utils$1.encode,
  encodeValuesOnly: false,
  format: defaultFormat,
  formatter: formats$1.formatters[defaultFormat],
  // deprecated
  indices: false,
  serializeDate: function serializeDate(date) {
    return toISO.call(date);
  },
  skipNulls: false,
  strictNullHandling: false
};
var isNonNullishPrimitive = function isNonNullishPrimitive2(v2) {
  return typeof v2 === "string" || typeof v2 === "number" || typeof v2 === "boolean" || typeof v2 === "symbol" || typeof v2 === "bigint";
};
var sentinel = {};
var stringify$1 = function stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate2, format, formatter, encodeValuesOnly, charset, sideChannel2) {
  var obj = object;
  var tmpSc = sideChannel2;
  var step = 0;
  var findFlag = false;
  while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
    var pos = tmpSc.get(object);
    step += 1;
    if (typeof pos !== "undefined") {
      if (pos === step) {
        throw new RangeError("Cyclic object value");
      } else {
        findFlag = true;
      }
    }
    if (typeof tmpSc.get(sentinel) === "undefined") {
      step = 0;
    }
  }
  if (typeof filter === "function") {
    obj = filter(prefix, obj);
  } else if (obj instanceof Date) {
    obj = serializeDate2(obj);
  } else if (generateArrayPrefix === "comma" && isArray$1(obj)) {
    obj = utils$1.maybeMap(obj, function (value2) {
      if (value2 instanceof Date) {
        return serializeDate2(value2);
      }
      return value2;
    });
  }
  if (obj === null) {
    if (strictNullHandling) {
      return encoder && !encodeValuesOnly ? encoder(prefix, defaults$1.encoder, charset, "key", format) : prefix;
    }
    obj = "";
  }
  if (isNonNullishPrimitive(obj) || utils$1.isBuffer(obj)) {
    if (encoder) {
      var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults$1.encoder, charset, "key", format);
      return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults$1.encoder, charset, "value", format))];
    }
    return [formatter(prefix) + "=" + formatter(String(obj))];
  }
  var values = [];
  if (typeof obj === "undefined") {
    return values;
  }
  var objKeys;
  if (generateArrayPrefix === "comma" && isArray$1(obj)) {
    if (encodeValuesOnly && encoder) {
      obj = utils$1.maybeMap(obj, encoder);
    }
    objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
  } else if (isArray$1(filter)) {
    objKeys = filter;
  } else {
    var keys = Object.keys(obj);
    objKeys = sort ? keys.sort(sort) : keys;
  }
  var encodedPrefix = encodeDotInKeys ? prefix.replace(/\./g, "%2E") : prefix;
  var adjustedPrefix = commaRoundTrip && isArray$1(obj) && obj.length === 1 ? encodedPrefix + "[]" : encodedPrefix;
  if (allowEmptyArrays && isArray$1(obj) && obj.length === 0) {
    return adjustedPrefix + "[]";
  }
  for (var j = 0; j < objKeys.length; ++j) {
    var key = objKeys[j];
    var value = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
    if (skipNulls && value === null) {
      continue;
    }
    var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\./g, "%2E") : key;
    var keyPrefix = isArray$1(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + encodedKey : "[" + encodedKey + "]");
    sideChannel2.set(object, step);
    var valueSideChannel = getSideChannel2();
    valueSideChannel.set(sentinel, sideChannel2);
    pushToArray(values, stringify(
      value,
      keyPrefix,
      generateArrayPrefix,
      commaRoundTrip,
      allowEmptyArrays,
      strictNullHandling,
      skipNulls,
      encodeDotInKeys,
      generateArrayPrefix === "comma" && encodeValuesOnly && isArray$1(obj) ? null : encoder,
      filter,
      sort,
      allowDots,
      serializeDate2,
      format,
      formatter,
      encodeValuesOnly,
      charset,
      valueSideChannel
    ));
  }
  return values;
};
var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
  if (!opts) {
    return defaults$1;
  }
  if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  }
  if (typeof opts.encodeDotInKeys !== "undefined" && typeof opts.encodeDotInKeys !== "boolean") {
    throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
  }
  if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
    throw new TypeError("Encoder has to be a function.");
  }
  var charset = opts.charset || defaults$1.charset;
  if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  }
  var format = formats$1["default"];
  if (typeof opts.format !== "undefined") {
    if (!has$1.call(formats$1.formatters, opts.format)) {
      throw new TypeError("Unknown format option provided.");
    }
    format = opts.format;
  }
  var formatter = formats$1.formatters[format];
  var filter = defaults$1.filter;
  if (typeof opts.filter === "function" || isArray$1(opts.filter)) {
    filter = opts.filter;
  }
  var arrayFormat;
  if (opts.arrayFormat in arrayPrefixGenerators) {
    arrayFormat = opts.arrayFormat;
  } else if ("indices" in opts) {
    arrayFormat = opts.indices ? "indices" : "repeat";
  } else {
    arrayFormat = defaults$1.arrayFormat;
  }
  if ("commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
    throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
  }
  var allowDots = typeof opts.allowDots === "undefined" ? opts.encodeDotInKeys === true ? true : defaults$1.allowDots : !!opts.allowDots;
  return {
    addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults$1.addQueryPrefix,
    allowDots,
    allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults$1.allowEmptyArrays,
    arrayFormat,
    charset,
    charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults$1.charsetSentinel,
    commaRoundTrip: opts.commaRoundTrip,
    delimiter: typeof opts.delimiter === "undefined" ? defaults$1.delimiter : opts.delimiter,
    encode: typeof opts.encode === "boolean" ? opts.encode : defaults$1.encode,
    encodeDotInKeys: typeof opts.encodeDotInKeys === "boolean" ? opts.encodeDotInKeys : defaults$1.encodeDotInKeys,
    encoder: typeof opts.encoder === "function" ? opts.encoder : defaults$1.encoder,
    encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults$1.encodeValuesOnly,
    filter,
    format,
    formatter,
    serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults$1.serializeDate,
    skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults$1.skipNulls,
    sort: typeof opts.sort === "function" ? opts.sort : null,
    strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults$1.strictNullHandling
  };
};
var stringify_1 = function (object, opts) {
  var obj = object;
  var options = normalizeStringifyOptions(opts);
  var objKeys;
  var filter;
  if (typeof options.filter === "function") {
    filter = options.filter;
    obj = filter("", obj);
  } else if (isArray$1(options.filter)) {
    filter = options.filter;
    objKeys = filter;
  }
  var keys = [];
  if (typeof obj !== "object" || obj === null) {
    return "";
  }
  var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];
  var commaRoundTrip = generateArrayPrefix === "comma" && options.commaRoundTrip;
  if (!objKeys) {
    objKeys = Object.keys(obj);
  }
  if (options.sort) {
    objKeys.sort(options.sort);
  }
  var sideChannel2 = getSideChannel2();
  for (var i = 0; i < objKeys.length; ++i) {
    var key = objKeys[i];
    if (options.skipNulls && obj[key] === null) {
      continue;
    }
    pushToArray(keys, stringify$1(
      obj[key],
      key,
      generateArrayPrefix,
      commaRoundTrip,
      options.allowEmptyArrays,
      options.strictNullHandling,
      options.skipNulls,
      options.encodeDotInKeys,
      options.encode ? options.encoder : null,
      options.filter,
      options.sort,
      options.allowDots,
      options.serializeDate,
      options.format,
      options.formatter,
      options.encodeValuesOnly,
      options.charset,
      sideChannel2
    ));
  }
  var joined = keys.join(options.delimiter);
  var prefix = options.addQueryPrefix === true ? "?" : "";
  if (options.charsetSentinel) {
    if (options.charset === "iso-8859-1") {
      prefix += "utf8=%26%2310003%3B&";
    } else {
      prefix += "utf8=%E2%9C%93&";
    }
  }
  return joined.length > 0 ? prefix + joined : "";
};
var utils = utils$2;
var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var defaults = {
  allowDots: false,
  allowEmptyArrays: false,
  allowPrototypes: false,
  allowSparse: false,
  arrayLimit: 20,
  charset: "utf-8",
  charsetSentinel: false,
  comma: false,
  decodeDotInKeys: false,
  decoder: utils.decode,
  delimiter: "&",
  depth: 5,
  duplicates: "combine",
  ignoreQueryPrefix: false,
  interpretNumericEntities: false,
  parameterLimit: 1e3,
  parseArrays: true,
  plainObjects: false,
  strictNullHandling: false
};
var interpretNumericEntities = function (str) {
  return str.replace(/&#(\d+);/g, function ($0, numberStr) {
    return String.fromCharCode(parseInt(numberStr, 10));
  });
};
var parseArrayValue = function (val, options) {
  if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
    return val.split(",");
  }
  return val;
};
var isoSentinel = "utf8=%26%2310003%3B";
var charsetSentinel = "utf8=%E2%9C%93";
var parseValues = function parseQueryStringValues(str, options) {
  var obj = { __proto__: null };
  var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
  var limit2 = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
  var parts = cleanStr.split(options.delimiter, limit2);
  var skipIndex = -1;
  var i;
  var charset = options.charset;
  if (options.charsetSentinel) {
    for (i = 0; i < parts.length; ++i) {
      if (parts[i].indexOf("utf8=") === 0) {
        if (parts[i] === charsetSentinel) {
          charset = "utf-8";
        } else if (parts[i] === isoSentinel) {
          charset = "iso-8859-1";
        }
        skipIndex = i;
        i = parts.length;
      }
    }
  }
  for (i = 0; i < parts.length; ++i) {
    if (i === skipIndex) {
      continue;
    }
    var part = parts[i];
    var bracketEqualsPos = part.indexOf("]=");
    var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
    var key, val;
    if (pos === -1) {
      key = options.decoder(part, defaults.decoder, charset, "key");
      val = options.strictNullHandling ? null : "";
    } else {
      key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
      val = utils.maybeMap(
        parseArrayValue(part.slice(pos + 1), options),
        function (encodedVal) {
          return options.decoder(encodedVal, defaults.decoder, charset, "value");
        }
      );
    }
    if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
      val = interpretNumericEntities(val);
    }
    if (part.indexOf("[]=") > -1) {
      val = isArray(val) ? [val] : val;
    }
    var existing = has.call(obj, key);
    if (existing && options.duplicates === "combine") {
      obj[key] = utils.combine(obj[key], val);
    } else if (!existing || options.duplicates === "last") {
      obj[key] = val;
    }
  }
  return obj;
};
var parseObject = function (chain, val, options, valuesParsed) {
  var leaf = valuesParsed ? val : parseArrayValue(val, options);
  for (var i = chain.length - 1; i >= 0; --i) {
    var obj;
    var root2 = chain[i];
    if (root2 === "[]" && options.parseArrays) {
      obj = options.allowEmptyArrays && leaf === "" ? [] : [].concat(leaf);
    } else {
      obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var cleanRoot = root2.charAt(0) === "[" && root2.charAt(root2.length - 1) === "]" ? root2.slice(1, -1) : root2;
      var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, ".") : cleanRoot;
      var index = parseInt(decodedRoot, 10);
      if (!options.parseArrays && decodedRoot === "") {
        obj = { 0: leaf };
      } else if (!isNaN(index) && root2 !== decodedRoot && String(index) === decodedRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
        obj = [];
        obj[index] = leaf;
      } else if (decodedRoot !== "__proto__") {
        obj[decodedRoot] = leaf;
      }
    }
    leaf = obj;
  }
  return leaf;
};
var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
  if (!givenKey) {
    return;
  }
  var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
  var brackets2 = /(\[[^[\]]*])/;
  var child = /(\[[^[\]]*])/g;
  var segment = options.depth > 0 && brackets2.exec(key);
  var parent = segment ? key.slice(0, segment.index) : key;
  var keys = [];
  if (parent) {
    if (!options.plainObjects && has.call(Object.prototype, parent)) {
      if (!options.allowPrototypes) {
        return;
      }
    }
    keys.push(parent);
  }
  var i = 0;
  while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
    i += 1;
    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
      if (!options.allowPrototypes) {
        return;
      }
    }
    keys.push(segment[1]);
  }
  if (segment) {
    keys.push("[" + key.slice(segment.index) + "]");
  }
  return parseObject(keys, val, options, valuesParsed);
};
var normalizeParseOptions = function normalizeParseOptions2(opts) {
  if (!opts) {
    return defaults;
  }
  if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  }
  if (typeof opts.decodeDotInKeys !== "undefined" && typeof opts.decodeDotInKeys !== "boolean") {
    throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
  }
  if (opts.decoder !== null && typeof opts.decoder !== "undefined" && typeof opts.decoder !== "function") {
    throw new TypeError("Decoder has to be a function.");
  }
  if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  }
  var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
  var duplicates = typeof opts.duplicates === "undefined" ? defaults.duplicates : opts.duplicates;
  if (duplicates !== "combine" && duplicates !== "first" && duplicates !== "last") {
    throw new TypeError("The duplicates option must be either combine, first, or last");
  }
  var allowDots = typeof opts.allowDots === "undefined" ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
  return {
    allowDots,
    allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
    allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
    allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
    arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
    charset,
    charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
    comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
    decodeDotInKeys: typeof opts.decodeDotInKeys === "boolean" ? opts.decodeDotInKeys : defaults.decodeDotInKeys,
    decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
    delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
    // eslint-disable-next-line no-implicit-coercion, no-extra-parens
    depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
    duplicates,
    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
    interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
    parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
    parseArrays: opts.parseArrays !== false,
    plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
    strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
  };
};
var parse$1 = function (str, opts) {
  var options = normalizeParseOptions(opts);
  if (str === "" || str === null || typeof str === "undefined") {
    return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  }
  var tempObj = typeof str === "string" ? parseValues(str, options) : str;
  var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  var keys = Object.keys(tempObj);
  for (var i = 0; i < keys.length; ++i) {
    var key = keys[i];
    var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
    obj = utils.merge(obj, newObj, options);
  }
  if (options.allowSparse === true) {
    return obj;
  }
  return utils.compact(obj);
};
var stringify2 = stringify_1;
var parse = parse$1;
var formats = formats$3;
var lib = {
  formats,
  parse,
  stringify: stringify2
};
const qs = /* @__PURE__ */ getDefaultExportFromCjs(lib);
const svg_theme_fill_color$2 = "_svg_theme_fill_color_1rmjt_3";
const inViewPoint = "_inViewPoint_1rmjt_55";
const css$2 = {
  svg_theme_fill_color: svg_theme_fill_color$2,
  inViewPoint
};
var __assign = function () {
  __assign = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function (resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = {
    label: 0, sent: function () {
      if (t2[0] & 1)
        throw t2[1];
      return t2[1];
    }, trys: [], ops: []
  }, f2, y2, t2, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n2) {
    return function (v2) {
      return step([n2, v2]);
    };
  }
  function step(op) {
    if (f2)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_2 = 0)), _2)
      try {
        if (f2 = 1, y2 && (t2 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t2 = y2["return"]) && t2.call(y2), 0) : y2.next) && !(t2 = t2.call(y2, op[1])).done)
          return t2;
        if (y2 = 0, t2)
          op = [op[0] & 2, t2.value];
        switch (op[0]) {
          case 0:
          case 1:
            t2 = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t2 = _2.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t2[1]) {
              _2.label = t2[1];
              t2 = op;
              break;
            }
            if (t2 && _2.label < t2[2]) {
              _2.label = t2[2];
              _2.ops.push(op);
              break;
            }
            if (t2[2])
              _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body.call(thisArg, _2);
      } catch (e2) {
        op = [6, e2];
        y2 = 0;
      } finally {
        f2 = t2 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m2 = s && o[s], i = 0;
  if (m2)
    return m2.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function () {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n2) {
  var m2 = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m2)
    return o;
  var i = m2.call(o), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l2 = from.length, ar; i < l2; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}
typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message2) {
  var e2 = new Error(message2);
  return e2.name = "SuppressedError", e2.error = error, e2.suppressed = suppressed, e2;
};
var isFunction = function (value) {
  return typeof value === "function";
};
function depsAreSame(oldDeps, deps) {
  if (oldDeps === deps)
    return true;
  for (var i = 0; i < oldDeps.length; i++) {
    if (!Object.is(oldDeps[i], deps[i]))
      return false;
  }
  return true;
}
function useLatest(value) {
  var ref2 = reactExports.useRef(value);
  ref2.current = value;
  return ref2;
}
var useUnmount = function (fn) {
  var fnRef = useLatest(fn);
  reactExports.useEffect(function () {
    return function () {
      fnRef.current();
    };
  }, []);
};
var isBrowser = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function getTargetElement(target, defaultElement) {
  if (!isBrowser) {
    return void 0;
  }
  if (!target) {
    return defaultElement;
  }
  var targetElement;
  if (isFunction(target)) {
    targetElement = target();
  } else if ("current" in target) {
    targetElement = target.current;
  } else {
    targetElement = target;
  }
  return targetElement;
}
var createEffectWithTarget = function (useEffectType) {
  var useEffectWithTarget2 = function (effect, deps, target) {
    var hasInitRef = reactExports.useRef(false);
    var lastElementRef = reactExports.useRef([]);
    var lastDepsRef = reactExports.useRef([]);
    var unLoadRef = reactExports.useRef();
    useEffectType(function () {
      var _a;
      var targets = Array.isArray(target) ? target : [target];
      var els = targets.map(function (item) {
        return getTargetElement(item);
      });
      if (!hasInitRef.current) {
        hasInitRef.current = true;
        lastElementRef.current = els;
        lastDepsRef.current = deps;
        unLoadRef.current = effect();
        return;
      }
      if (els.length !== lastElementRef.current.length || !depsAreSame(lastElementRef.current, els) || !depsAreSame(lastDepsRef.current, deps)) {
        (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);
        lastElementRef.current = els;
        lastDepsRef.current = deps;
        unLoadRef.current = effect();
      }
    });
    useUnmount(function () {
      var _a;
      (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);
      hasInitRef.current = false;
    });
  };
  return useEffectWithTarget2;
};
var useEffectWithTarget = createEffectWithTarget(reactExports.useEffect);
(function () {
  if (typeof window !== "object") {
    return;
  }
  if ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype) {
    if (!("isIntersecting" in window.IntersectionObserverEntry.prototype)) {
      Object.defineProperty(
        window.IntersectionObserverEntry.prototype,
        "isIntersecting",
        {
          get: function () {
            return this.intersectionRatio > 0;
          }
        }
      );
    }
    return;
  }
  function getFrameElement(doc) {
    try {
      return doc.defaultView && doc.defaultView.frameElement || null;
    } catch (e2) {
      return null;
    }
  }
  var document2 = function (startDoc) {
    var doc = startDoc;
    var frame = getFrameElement(doc);
    while (frame) {
      doc = frame.ownerDocument;
      frame = getFrameElement(doc);
    }
    return doc;
  }(window.document);
  var registry = [];
  var crossOriginUpdater = null;
  var crossOriginRect = null;
  function IntersectionObserverEntry(entry) {
    this.time = entry.time;
    this.target = entry.target;
    this.rootBounds = ensureDOMRect(entry.rootBounds);
    this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);
    this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());
    this.isIntersecting = !!entry.intersectionRect;
    var targetRect = this.boundingClientRect;
    var targetArea = targetRect.width * targetRect.height;
    var intersectionRect = this.intersectionRect;
    var intersectionArea = intersectionRect.width * intersectionRect.height;
    if (targetArea) {
      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
    } else {
      this.intersectionRatio = this.isIntersecting ? 1 : 0;
    }
  }
  function IntersectionObserver2(callback, opt_options) {
    var options = opt_options || {};
    if (typeof callback != "function") {
      throw new Error("callback must be a function");
    }
    if (options.root && options.root.nodeType != 1 && options.root.nodeType != 9) {
      throw new Error("root must be a Document or Element");
    }
    this._checkForIntersections = throttle(
      this._checkForIntersections.bind(this),
      this.THROTTLE_TIMEOUT
    );
    this._callback = callback;
    this._observationTargets = [];
    this._queuedEntries = [];
    this._rootMarginValues = this._parseRootMargin(options.rootMargin);
    this.thresholds = this._initThresholds(options.threshold);
    this.root = options.root || null;
    this.rootMargin = this._rootMarginValues.map(function (margin) {
      return margin.value + margin.unit;
    }).join(" ");
    this._monitoringDocuments = [];
    this._monitoringUnsubscribes = [];
  }
  IntersectionObserver2.prototype.THROTTLE_TIMEOUT = 100;
  IntersectionObserver2.prototype.POLL_INTERVAL = null;
  IntersectionObserver2.prototype.USE_MUTATION_OBSERVER = true;
  IntersectionObserver2._setupCrossOriginUpdater = function () {
    if (!crossOriginUpdater) {
      crossOriginUpdater = function (boundingClientRect, intersectionRect) {
        if (!boundingClientRect || !intersectionRect) {
          crossOriginRect = getEmptyRect();
        } else {
          crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);
        }
        registry.forEach(function (observer) {
          observer._checkForIntersections();
        });
      };
    }
    return crossOriginUpdater;
  };
  IntersectionObserver2._resetCrossOriginUpdater = function () {
    crossOriginUpdater = null;
    crossOriginRect = null;
  };
  IntersectionObserver2.prototype.observe = function (target) {
    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {
      return item.element == target;
    });
    if (isTargetAlreadyObserved) {
      return;
    }
    if (!(target && target.nodeType == 1)) {
      throw new Error("target must be an Element");
    }
    this._registerInstance();
    this._observationTargets.push({ element: target, entry: null });
    this._monitorIntersections(target.ownerDocument);
    this._checkForIntersections();
  };
  IntersectionObserver2.prototype.unobserve = function (target) {
    this._observationTargets = this._observationTargets.filter(function (item) {
      return item.element != target;
    });
    this._unmonitorIntersections(target.ownerDocument);
    if (this._observationTargets.length == 0) {
      this._unregisterInstance();
    }
  };
  IntersectionObserver2.prototype.disconnect = function () {
    this._observationTargets = [];
    this._unmonitorAllIntersections();
    this._unregisterInstance();
  };
  IntersectionObserver2.prototype.takeRecords = function () {
    var records = this._queuedEntries.slice();
    this._queuedEntries = [];
    return records;
  };
  IntersectionObserver2.prototype._initThresholds = function (opt_threshold) {
    var threshold = opt_threshold || [0];
    if (!Array.isArray(threshold))
      threshold = [threshold];
    return threshold.sort().filter(function (t2, i, a) {
      if (typeof t2 != "number" || isNaN(t2) || t2 < 0 || t2 > 1) {
        throw new Error("threshold must be a number between 0 and 1 inclusively");
      }
      return t2 !== a[i - 1];
    });
  };
  IntersectionObserver2.prototype._parseRootMargin = function (opt_rootMargin) {
    var marginString = opt_rootMargin || "0px";
    var margins = marginString.split(/\s+/).map(function (margin) {
      var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
      if (!parts) {
        throw new Error("rootMargin must be specified in pixels or percent");
      }
      return { value: parseFloat(parts[1]), unit: parts[2] };
    });
    margins[1] = margins[1] || margins[0];
    margins[2] = margins[2] || margins[0];
    margins[3] = margins[3] || margins[1];
    return margins;
  };
  IntersectionObserver2.prototype._monitorIntersections = function (doc) {
    var win = doc.defaultView;
    if (!win) {
      return;
    }
    if (this._monitoringDocuments.indexOf(doc) != -1) {
      return;
    }
    var callback = this._checkForIntersections;
    var monitoringInterval = null;
    var domObserver = null;
    if (this.POLL_INTERVAL) {
      monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);
    } else {
      addEvent(win, "resize", callback, true);
      addEvent(doc, "scroll", callback, true);
      if (this.USE_MUTATION_OBSERVER && "MutationObserver" in win) {
        domObserver = new win.MutationObserver(callback);
        domObserver.observe(doc, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      }
    }
    this._monitoringDocuments.push(doc);
    this._monitoringUnsubscribes.push(function () {
      var win2 = doc.defaultView;
      if (win2) {
        if (monitoringInterval) {
          win2.clearInterval(monitoringInterval);
        }
        removeEvent(win2, "resize", callback, true);
      }
      removeEvent(doc, "scroll", callback, true);
      if (domObserver) {
        domObserver.disconnect();
      }
    });
    var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
    if (doc != rootDoc) {
      var frame = getFrameElement(doc);
      if (frame) {
        this._monitorIntersections(frame.ownerDocument);
      }
    }
  };
  IntersectionObserver2.prototype._unmonitorIntersections = function (doc) {
    var index = this._monitoringDocuments.indexOf(doc);
    if (index == -1) {
      return;
    }
    var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
    var hasDependentTargets = this._observationTargets.some(function (item) {
      var itemDoc = item.element.ownerDocument;
      if (itemDoc == doc) {
        return true;
      }
      while (itemDoc && itemDoc != rootDoc) {
        var frame2 = getFrameElement(itemDoc);
        itemDoc = frame2 && frame2.ownerDocument;
        if (itemDoc == doc) {
          return true;
        }
      }
      return false;
    });
    if (hasDependentTargets) {
      return;
    }
    var unsubscribe = this._monitoringUnsubscribes[index];
    this._monitoringDocuments.splice(index, 1);
    this._monitoringUnsubscribes.splice(index, 1);
    unsubscribe();
    if (doc != rootDoc) {
      var frame = getFrameElement(doc);
      if (frame) {
        this._unmonitorIntersections(frame.ownerDocument);
      }
    }
  };
  IntersectionObserver2.prototype._unmonitorAllIntersections = function () {
    var unsubscribes = this._monitoringUnsubscribes.slice(0);
    this._monitoringDocuments.length = 0;
    this._monitoringUnsubscribes.length = 0;
    for (var i = 0; i < unsubscribes.length; i++) {
      unsubscribes[i]();
    }
  };
  IntersectionObserver2.prototype._checkForIntersections = function () {
    if (!this.root && crossOriginUpdater && !crossOriginRect) {
      return;
    }
    var rootIsInDom = this._rootIsInDom();
    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();
    this._observationTargets.forEach(function (item) {
      var target = item.element;
      var targetRect = getBoundingClientRect(target);
      var rootContainsTarget = this._rootContainsTarget(target);
      var oldEntry = item.entry;
      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, targetRect, rootRect);
      var rootBounds = null;
      if (!this._rootContainsTarget(target)) {
        rootBounds = getEmptyRect();
      } else if (!crossOriginUpdater || this.root) {
        rootBounds = rootRect;
      }
      var newEntry = item.entry = new IntersectionObserverEntry({
        time: now2(),
        target,
        boundingClientRect: targetRect,
        rootBounds,
        intersectionRect
      });
      if (!oldEntry) {
        this._queuedEntries.push(newEntry);
      } else if (rootIsInDom && rootContainsTarget) {
        if (this._hasCrossedThreshold(oldEntry, newEntry)) {
          this._queuedEntries.push(newEntry);
        }
      } else {
        if (oldEntry && oldEntry.isIntersecting) {
          this._queuedEntries.push(newEntry);
        }
      }
    }, this);
    if (this._queuedEntries.length) {
      this._callback(this.takeRecords(), this);
    }
  };
  IntersectionObserver2.prototype._computeTargetAndRootIntersection = function (target, targetRect, rootRect) {
    if (window.getComputedStyle(target).display == "none")
      return;
    var intersectionRect = targetRect;
    var parent = getParentNode(target);
    var atRoot = false;
    while (!atRoot && parent) {
      var parentRect = null;
      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};
      if (parentComputedStyle.display == "none")
        return null;
      if (parent == this.root || parent.nodeType == /* DOCUMENT */
        9) {
        atRoot = true;
        if (parent == this.root || parent == document2) {
          if (crossOriginUpdater && !this.root) {
            if (!crossOriginRect || crossOriginRect.width == 0 && crossOriginRect.height == 0) {
              parent = null;
              parentRect = null;
              intersectionRect = null;
            } else {
              parentRect = crossOriginRect;
            }
          } else {
            parentRect = rootRect;
          }
        } else {
          var frame = getParentNode(parent);
          var frameRect = frame && getBoundingClientRect(frame);
          var frameIntersect = frame && this._computeTargetAndRootIntersection(frame, frameRect, rootRect);
          if (frameRect && frameIntersect) {
            parent = frame;
            parentRect = convertFromParentRect(frameRect, frameIntersect);
          } else {
            parent = null;
            intersectionRect = null;
          }
        }
      } else {
        var doc = parent.ownerDocument;
        if (parent != doc.body && parent != doc.documentElement && parentComputedStyle.overflow != "visible") {
          parentRect = getBoundingClientRect(parent);
        }
      }
      if (parentRect) {
        intersectionRect = computeRectIntersection(parentRect, intersectionRect);
      }
      if (!intersectionRect)
        break;
      parent = parent && getParentNode(parent);
    }
    return intersectionRect;
  };
  IntersectionObserver2.prototype._getRootRect = function () {
    var rootRect;
    if (this.root && !isDoc(this.root)) {
      rootRect = getBoundingClientRect(this.root);
    } else {
      var doc = isDoc(this.root) ? this.root : document2;
      var html = doc.documentElement;
      var body = doc.body;
      rootRect = {
        top: 0,
        left: 0,
        right: html.clientWidth || body.clientWidth,
        width: html.clientWidth || body.clientWidth,
        bottom: html.clientHeight || body.clientHeight,
        height: html.clientHeight || body.clientHeight
      };
    }
    return this._expandRectByRootMargin(rootRect);
  };
  IntersectionObserver2.prototype._expandRectByRootMargin = function (rect) {
    var margins = this._rootMarginValues.map(function (margin, i) {
      return margin.unit == "px" ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;
    });
    var newRect = {
      top: rect.top - margins[0],
      right: rect.right + margins[1],
      bottom: rect.bottom + margins[2],
      left: rect.left - margins[3]
    };
    newRect.width = newRect.right - newRect.left;
    newRect.height = newRect.bottom - newRect.top;
    return newRect;
  };
  IntersectionObserver2.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {
    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;
    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;
    if (oldRatio === newRatio)
      return;
    for (var i = 0; i < this.thresholds.length; i++) {
      var threshold = this.thresholds[i];
      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {
        return true;
      }
    }
  };
  IntersectionObserver2.prototype._rootIsInDom = function () {
    return !this.root || containsDeep(document2, this.root);
  };
  IntersectionObserver2.prototype._rootContainsTarget = function (target) {
    var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
    return containsDeep(rootDoc, target) && (!this.root || rootDoc == target.ownerDocument);
  };
  IntersectionObserver2.prototype._registerInstance = function () {
    if (registry.indexOf(this) < 0) {
      registry.push(this);
    }
  };
  IntersectionObserver2.prototype._unregisterInstance = function () {
    var index = registry.indexOf(this);
    if (index != -1)
      registry.splice(index, 1);
  };
  function now2() {
    return window.performance && performance.now && performance.now();
  }
  function throttle(fn, timeout) {
    var timer = null;
    return function () {
      if (!timer) {
        timer = setTimeout(function () {
          fn();
          timer = null;
        }, timeout);
      }
    };
  }
  function addEvent(node, event, fn, opt_useCapture) {
    if (typeof node.addEventListener == "function") {
      node.addEventListener(event, fn, opt_useCapture);
    } else if (typeof node.attachEvent == "function") {
      node.attachEvent("on" + event, fn);
    }
  }
  function removeEvent(node, event, fn, opt_useCapture) {
    if (typeof node.removeEventListener == "function") {
      node.removeEventListener(event, fn, opt_useCapture);
    } else if (typeof node.detachEvent == "function") {
      node.detachEvent("on" + event, fn);
    }
  }
  function computeRectIntersection(rect1, rect2) {
    var top = Math.max(rect1.top, rect2.top);
    var bottom = Math.min(rect1.bottom, rect2.bottom);
    var left = Math.max(rect1.left, rect2.left);
    var right = Math.min(rect1.right, rect2.right);
    var width = right - left;
    var height = bottom - top;
    return width >= 0 && height >= 0 && {
      top,
      bottom,
      left,
      right,
      width,
      height
    } || null;
  }
  function getBoundingClientRect(el2) {
    var rect;
    try {
      rect = el2.getBoundingClientRect();
    } catch (err) {
    }
    if (!rect)
      return getEmptyRect();
    if (!(rect.width && rect.height)) {
      rect = {
        top: rect.top,
        right: rect.right,
        bottom: rect.bottom,
        left: rect.left,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
      };
    }
    return rect;
  }
  function getEmptyRect() {
    return {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      width: 0,
      height: 0
    };
  }
  function ensureDOMRect(rect) {
    if (!rect || "x" in rect) {
      return rect;
    }
    return {
      top: rect.top,
      y: rect.top,
      bottom: rect.bottom,
      left: rect.left,
      x: rect.left,
      right: rect.right,
      width: rect.width,
      height: rect.height
    };
  }
  function convertFromParentRect(parentBoundingRect, parentIntersectionRect) {
    var top = parentIntersectionRect.top - parentBoundingRect.top;
    var left = parentIntersectionRect.left - parentBoundingRect.left;
    return {
      top,
      left,
      height: parentIntersectionRect.height,
      width: parentIntersectionRect.width,
      bottom: top + parentIntersectionRect.height,
      right: left + parentIntersectionRect.width
    };
  }
  function containsDeep(parent, child) {
    var node = child;
    while (node) {
      if (node == parent)
        return true;
      node = getParentNode(node);
    }
    return false;
  }
  function getParentNode(node) {
    var parent = node.parentNode;
    if (node.nodeType == /* DOCUMENT */
      9 && node != document2) {
      return getFrameElement(node);
    }
    if (parent && parent.assignedSlot) {
      parent = parent.assignedSlot.parentNode;
    }
    if (parent && parent.nodeType == 11 && parent.host) {
      return parent.host;
    }
    return parent;
  }
  function isDoc(node) {
    return node && node.nodeType === 9;
  }
  window.IntersectionObserver = IntersectionObserver2;
  window.IntersectionObserverEntry = IntersectionObserverEntry;
})();
function useInViewport(target, options) {
  var _a = {}, callback = _a.callback, option = __rest(_a, ["callback"]);
  var _b = __read(reactExports.useState(), 2), state = _b[0], setState = _b[1];
  var _c = __read(reactExports.useState(), 2), ratio = _c[0], setRatio = _c[1];
  useEffectWithTarget(function () {
    var targets = Array.isArray(target) ? target : [target];
    var els = targets.map(function (element) {
      return getTargetElement(element);
    }).filter(Boolean);
    if (!els.length) {
      return;
    }
    var observer = new IntersectionObserver(function (entries) {
      var e_1, _a2;
      try {
        for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {
          var entry = entries_1_1.value;
          setRatio(entry.intersectionRatio);
          setState(entry.isIntersecting);
          callback === null || callback === void 0 ? void 0 : callback(entry);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (entries_1_1 && !entries_1_1.done && (_a2 = entries_1.return))
            _a2.call(entries_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    }, __assign(__assign({}, option), {
      root: getTargetElement(void 0)
    }));
    els.forEach(function (el2) {
      return observer.observe(el2);
    });
    return function () {
      observer.disconnect();
    };
  }, [void 0, void 0, callback], target);
  return [state, ratio];
}
const Image$1 = (props = {}) => {
  const imgRef = reactExports.useRef(null);
  const [inViewport] = useInViewport(imgRef);
  const [isOk, setIsOk] = reactExports.useState(false);
  const {
    src,
    remote = false,
    isGame = false,
    alt = "",
    loading,
    ...ps
  } = props;
  const path2 = remote ? "" : "/bximages/h5";
  let cdn = "https://dl-br-cf.sadslj88.com/yq-br-prod/web1";
  if (isGame) {
    cdn = window.location.origin;
  } else {
    cdn = "https://dl-br-cf.sadslj88.com/image-prod";
  }
  const url = "".concat(cdn).concat(path2).concat(src);
  const imgUlr = (src == null ? void 0 : src.indexOf("xxxx")) > -1 ? src : url;
  reactExports.useEffect(() => {
    if (loading && inViewport) {
      const imgDom = document.createElement("img");
      imgDom.onload = () => {
        setIsOk(true);
      };
      imgDom.src = imgUlr;
    }
  }, [imgUlr, inViewport]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
    children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: imgRef, className: css$2.inViewPoint }),
      loading && !isOk ? loading : /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: imgUlr, alt, ...ps })
    ]
  });
};
var Motion$1 = { exports: {} };
var mapToZero = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = mapToZero2;
  function mapToZero2(obj) {
    var ret = {};
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        ret[key] = 0;
      }
    }
    return ret;
  }
  module.exports = exports["default"];
})(mapToZero, mapToZero.exports);
var mapToZeroExports = mapToZero.exports;
var stripStyle = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = stripStyle2;
  function stripStyle2(style) {
    var ret = {};
    for (var key in style) {
      if (!Object.prototype.hasOwnProperty.call(style, key)) {
        continue;
      }
      ret[key] = typeof style[key] === "number" ? style[key] : style[key].val;
    }
    return ret;
  }
  module.exports = exports["default"];
})(stripStyle, stripStyle.exports);
var stripStyleExports = stripStyle.exports;
var stepper = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = stepper2;
  var reusedTuple = [0, 0];
  function stepper2(secondPerFrame, x2, v2, destX, k2, b, precision) {
    var Fspring = -k2 * (x2 - destX);
    var Fdamper = -b * v2;
    var a = Fspring + Fdamper;
    var newV = v2 + a * secondPerFrame;
    var newX = x2 + newV * secondPerFrame;
    if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
      reusedTuple[0] = destX;
      reusedTuple[1] = 0;
      return reusedTuple;
    }
    reusedTuple[0] = newX;
    reusedTuple[1] = newV;
    return reusedTuple;
  }
  module.exports = exports["default"];
})(stepper, stepper.exports);
var stepperExports = stepper.exports;
var performanceNow$1 = { exports: {} };
(function () {
  var getNanoSeconds, hrtime, loadTime;
  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    performanceNow$1.exports = function () {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    performanceNow$1.exports = function () {
      return (getNanoSeconds() - loadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function () {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    loadTime = getNanoSeconds();
  } else if (Date.now) {
    performanceNow$1.exports = function () {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    performanceNow$1.exports = function () {
      return (/* @__PURE__ */ new Date()).getTime() - loadTime;
    };
    loadTime = (/* @__PURE__ */ new Date()).getTime();
  }
}).call(commonjsGlobal);
var performanceNowExports$1 = performanceNow$1.exports;
var raf$1 = { exports: {} };
var performanceNow = { exports: {} };
(function () {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    performanceNow.exports = function () {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    performanceNow.exports = function () {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function () {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    performanceNow.exports = function () {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    performanceNow.exports = function () {
      return (/* @__PURE__ */ new Date()).getTime() - loadTime;
    };
    loadTime = (/* @__PURE__ */ new Date()).getTime();
  }
}).call(commonjsGlobal);
var performanceNowExports = performanceNow.exports;
var now = performanceNowExports, root = typeof window === "undefined" ? commonjsGlobal : window, vendors = ["moz", "webkit"], suffix = "AnimationFrame", raf = root["request" + suffix], caf = root["cancel" + suffix] || root["cancelRequest" + suffix];
for (var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + "Request" + suffix];
  caf = root[vendors[i] + "Cancel" + suffix] || root[vendors[i] + "CancelRequest" + suffix];
}
if (!raf || !caf) {
  var last = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
  raf = function (callback) {
    if (queue.length === 0) {
      var _now = now(), next = Math.max(0, frameDuration - (_now - last));
      last = next + _now;
      setTimeout(function () {
        var cp = queue.slice(0);
        queue.length = 0;
        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last);
            } catch (e2) {
              setTimeout(function () {
                throw e2;
              }, 0);
            }
          }
        }
      }, Math.round(next));
    }
    queue.push({
      handle: ++id,
      callback,
      cancelled: false
    });
    return id;
  };
  caf = function (handle) {
    for (var i = 0; i < queue.length; i++) {
      if (queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}
raf$1.exports = function (fn) {
  return raf.call(root, fn);
};
raf$1.exports.cancel = function () {
  caf.apply(root, arguments);
};
raf$1.exports.polyfill = function (object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf;
  object.cancelAnimationFrame = caf;
};
var rafExports = raf$1.exports;
var shouldStopAnimation = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = shouldStopAnimation2;
  function shouldStopAnimation2(currentStyle, style, currentVelocity) {
    for (var key in style) {
      if (!Object.prototype.hasOwnProperty.call(style, key)) {
        continue;
      }
      if (currentVelocity[key] !== 0) {
        return false;
      }
      var styleValue = typeof style[key] === "number" ? style[key] : style[key].val;
      if (currentStyle[key] !== styleValue) {
        return false;
      }
    }
    return true;
  }
  module.exports = exports["default"];
})(shouldStopAnimation, shouldStopAnimation.exports);
var shouldStopAnimationExports = shouldStopAnimation.exports;
var propTypes = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function () {
  function shim2(props, propName, componentName, location2, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim2.isRequired = shim2;
  function getShim() {
    return shim2;
  }
  var ReactPropTypes = {
    array: shim2,
    bigint: shim2,
    bool: shim2,
    func: shim2,
    number: shim2,
    object: shim2,
    string: shim2,
    symbol: shim2,
    any: shim2,
    arrayOf: getShim,
    element: shim2,
    elementType: shim2,
    instanceOf: getShim,
    node: shim2,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes.exports = factoryWithThrowingShims();
}
var propTypesExports = propTypes.exports;
(function (module, exports) {
  exports.__esModule = true;
  var _extends2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass2 = /* @__PURE__ */ function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  function _classCallCheck2(instance2, Constructor) {
    if (!(instance2 instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero = mapToZeroExports;
  var _mapToZero2 = _interopRequireDefault2(_mapToZero);
  var _stripStyle2 = stripStyleExports;
  var _stripStyle22 = _interopRequireDefault2(_stripStyle2);
  var _stepper3 = stepperExports;
  var _stepper4 = _interopRequireDefault2(_stepper3);
  var _performanceNow = performanceNowExports$1;
  var _performanceNow2 = _interopRequireDefault2(_performanceNow);
  var _raf = rafExports;
  var _raf2 = _interopRequireDefault2(_raf);
  var _shouldStopAnimation = shouldStopAnimationExports;
  var _shouldStopAnimation2 = _interopRequireDefault2(_shouldStopAnimation);
  var _react = reactExports;
  var _react2 = _interopRequireDefault2(_react);
  var _propTypes = propTypesExports;
  var _propTypes2 = _interopRequireDefault2(_propTypes);
  var msPerFrame = 1e3 / 60;
  var Motion2 = function (_React$Component) {
    _inherits(Motion3, _React$Component);
    _createClass2(Motion3, null, [{
      key: "propTypes",
      value: {
        // TOOD: warn against putting a config in here
        defaultStyle: _propTypes2["default"].objectOf(_propTypes2["default"].number),
        style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired,
        children: _propTypes2["default"].func.isRequired,
        onRest: _propTypes2["default"].func
      },
      enumerable: true
    }]);
    function Motion3(props) {
      var _this = this;
      _classCallCheck2(this, Motion3);
      _React$Component.call(this, props);
      this.wasAnimating = false;
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyle = null;
      this.clearUnreadPropStyle = function (destStyle) {
        var dirty = false;
        var _state = _this.state;
        var currentStyle = _state.currentStyle;
        var currentVelocity = _state.currentVelocity;
        var lastIdealStyle = _state.lastIdealStyle;
        var lastIdealVelocity = _state.lastIdealVelocity;
        for (var key in destStyle) {
          if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
            continue;
          }
          var styleValue = destStyle[key];
          if (typeof styleValue === "number") {
            if (!dirty) {
              dirty = true;
              currentStyle = _extends2({}, currentStyle);
              currentVelocity = _extends2({}, currentVelocity);
              lastIdealStyle = _extends2({}, lastIdealStyle);
              lastIdealVelocity = _extends2({}, lastIdealVelocity);
            }
            currentStyle[key] = styleValue;
            currentVelocity[key] = 0;
            lastIdealStyle[key] = styleValue;
            lastIdealVelocity[key] = 0;
          }
        }
        if (dirty) {
          _this.setState({ currentStyle, currentVelocity, lastIdealStyle, lastIdealVelocity });
        }
      };
      this.startAnimationIfNecessary = function () {
        _this.animationID = _raf2["default"](function (timestamp) {
          var propsStyle = _this.props.style;
          if (_shouldStopAnimation2["default"](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
            if (_this.wasAnimating && _this.props.onRest) {
              _this.props.onRest();
            }
            _this.animationID = null;
            _this.wasAnimating = false;
            _this.accumulatedTime = 0;
            return;
          }
          _this.wasAnimating = true;
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var newLastIdealStyle = {};
          var newLastIdealVelocity = {};
          var newCurrentStyle = {};
          var newCurrentVelocity = {};
          for (var key in propsStyle) {
            if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {
              continue;
            }
            var styleValue = propsStyle[key];
            if (typeof styleValue === "number") {
              newCurrentStyle[key] = styleValue;
              newCurrentVelocity[key] = 0;
              newLastIdealStyle[key] = styleValue;
              newLastIdealVelocity[key] = 0;
            } else {
              var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
              var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
              for (var i = 0; i < framesToCatchUp; i++) {
                var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                newLastIdealStyleValue = _stepper[0];
                newLastIdealVelocityValue = _stepper[1];
              }
              var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
              var nextIdealX = _stepper2[0];
              var nextIdealV = _stepper2[1];
              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
              newLastIdealStyle[key] = newLastIdealStyleValue;
              newLastIdealVelocity[key] = newLastIdealVelocityValue;
            }
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyle: newCurrentStyle,
            currentVelocity: newCurrentVelocity,
            lastIdealStyle: newLastIdealStyle,
            lastIdealVelocity: newLastIdealVelocity
          });
          _this.unreadPropStyle = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    Motion3.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyle = _props.defaultStyle;
      var style = _props.style;
      var currentStyle = defaultStyle || _stripStyle22["default"](style);
      var currentVelocity = _mapToZero2["default"](currentStyle);
      return {
        currentStyle,
        currentVelocity,
        lastIdealStyle: currentStyle,
        lastIdealVelocity: currentVelocity
      };
    };
    Motion3.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    Motion3.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
      if (this.unreadPropStyle != null) {
        this.clearUnreadPropStyle(this.unreadPropStyle);
      }
      this.unreadPropStyle = props.style;
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    Motion3.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    Motion3.prototype.render = function render() {
      var renderedChildren = this.props.children(this.state.currentStyle);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return Motion3;
  }(_react2["default"].Component);
  exports["default"] = Motion2;
  module.exports = exports["default"];
})(Motion$1, Motion$1.exports);
var MotionExports = Motion$1.exports;
var StaggeredMotion = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  var _extends2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass2 = /* @__PURE__ */ function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  function _classCallCheck2(instance2, Constructor) {
    if (!(instance2 instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero = mapToZeroExports;
  var _mapToZero2 = _interopRequireDefault2(_mapToZero);
  var _stripStyle2 = stripStyleExports;
  var _stripStyle22 = _interopRequireDefault2(_stripStyle2);
  var _stepper3 = stepperExports;
  var _stepper4 = _interopRequireDefault2(_stepper3);
  var _performanceNow = performanceNowExports$1;
  var _performanceNow2 = _interopRequireDefault2(_performanceNow);
  var _raf = rafExports;
  var _raf2 = _interopRequireDefault2(_raf);
  var _shouldStopAnimation = shouldStopAnimationExports;
  var _shouldStopAnimation2 = _interopRequireDefault2(_shouldStopAnimation);
  var _react = reactExports;
  var _react2 = _interopRequireDefault2(_react);
  var _propTypes = propTypesExports;
  var _propTypes2 = _interopRequireDefault2(_propTypes);
  var msPerFrame = 1e3 / 60;
  function shouldStopAnimationAll(currentStyles, styles, currentVelocities) {
    for (var i = 0; i < currentStyles.length; i++) {
      if (!_shouldStopAnimation2["default"](currentStyles[i], styles[i], currentVelocities[i])) {
        return false;
      }
    }
    return true;
  }
  var StaggeredMotion2 = function (_React$Component) {
    _inherits(StaggeredMotion3, _React$Component);
    _createClass2(StaggeredMotion3, null, [{
      key: "propTypes",
      value: {
        // TOOD: warn against putting a config in here
        defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].objectOf(_propTypes2["default"].number)),
        styles: _propTypes2["default"].func.isRequired,
        children: _propTypes2["default"].func.isRequired
      },
      enumerable: true
    }]);
    function StaggeredMotion3(props) {
      var _this = this;
      _classCallCheck2(this, StaggeredMotion3);
      _React$Component.call(this, props);
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyles = null;
      this.clearUnreadPropStyle = function (unreadPropStyles) {
        var _state = _this.state;
        var currentStyles = _state.currentStyles;
        var currentVelocities = _state.currentVelocities;
        var lastIdealStyles = _state.lastIdealStyles;
        var lastIdealVelocities = _state.lastIdealVelocities;
        var someDirty = false;
        for (var i = 0; i < unreadPropStyles.length; i++) {
          var unreadPropStyle = unreadPropStyles[i];
          var dirty = false;
          for (var key in unreadPropStyle) {
            if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
              continue;
            }
            var styleValue = unreadPropStyle[key];
            if (typeof styleValue === "number") {
              if (!dirty) {
                dirty = true;
                someDirty = true;
                currentStyles[i] = _extends2({}, currentStyles[i]);
                currentVelocities[i] = _extends2({}, currentVelocities[i]);
                lastIdealStyles[i] = _extends2({}, lastIdealStyles[i]);
                lastIdealVelocities[i] = _extends2({}, lastIdealVelocities[i]);
              }
              currentStyles[i][key] = styleValue;
              currentVelocities[i][key] = 0;
              lastIdealStyles[i][key] = styleValue;
              lastIdealVelocities[i][key] = 0;
            }
          }
        }
        if (someDirty) {
          _this.setState({ currentStyles, currentVelocities, lastIdealStyles, lastIdealVelocities });
        }
      };
      this.startAnimationIfNecessary = function () {
        _this.animationID = _raf2["default"](function (timestamp) {
          var destStyles = _this.props.styles(_this.state.lastIdealStyles);
          if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
            _this.animationID = null;
            _this.accumulatedTime = 0;
            return;
          }
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var newLastIdealStyles = [];
          var newLastIdealVelocities = [];
          var newCurrentStyles = [];
          var newCurrentVelocities = [];
          for (var i = 0; i < destStyles.length; i++) {
            var destStyle = destStyles[i];
            var newCurrentStyle = {};
            var newCurrentVelocity = {};
            var newLastIdealStyle = {};
            var newLastIdealVelocity = {};
            for (var key in destStyle) {
              if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
                continue;
              }
              var styleValue = destStyle[key];
              if (typeof styleValue === "number") {
                newCurrentStyle[key] = styleValue;
                newCurrentVelocity[key] = 0;
                newLastIdealStyle[key] = styleValue;
                newLastIdealVelocity[key] = 0;
              } else {
                var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
                var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
                for (var j = 0; j < framesToCatchUp; j++) {
                  var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                  newLastIdealStyleValue = _stepper[0];
                  newLastIdealVelocityValue = _stepper[1];
                }
                var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                var nextIdealX = _stepper2[0];
                var nextIdealV = _stepper2[1];
                newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                newLastIdealStyle[key] = newLastIdealStyleValue;
                newLastIdealVelocity[key] = newLastIdealVelocityValue;
              }
            }
            newCurrentStyles[i] = newCurrentStyle;
            newCurrentVelocities[i] = newCurrentVelocity;
            newLastIdealStyles[i] = newLastIdealStyle;
            newLastIdealVelocities[i] = newLastIdealVelocity;
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyles: newCurrentStyles,
            currentVelocities: newCurrentVelocities,
            lastIdealStyles: newLastIdealStyles,
            lastIdealVelocities: newLastIdealVelocities
          });
          _this.unreadPropStyles = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    StaggeredMotion3.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyles = _props.defaultStyles;
      var styles = _props.styles;
      var currentStyles = defaultStyles || styles().map(_stripStyle22["default"]);
      var currentVelocities = currentStyles.map(function (currentStyle) {
        return _mapToZero2["default"](currentStyle);
      });
      return {
        currentStyles,
        currentVelocities,
        lastIdealStyles: currentStyles,
        lastIdealVelocities: currentVelocities
      };
    };
    StaggeredMotion3.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    StaggeredMotion3.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
      if (this.unreadPropStyles != null) {
        this.clearUnreadPropStyle(this.unreadPropStyles);
      }
      this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    StaggeredMotion3.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    StaggeredMotion3.prototype.render = function render() {
      var renderedChildren = this.props.children(this.state.currentStyles);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return StaggeredMotion3;
  }(_react2["default"].Component);
  exports["default"] = StaggeredMotion2;
  module.exports = exports["default"];
})(StaggeredMotion, StaggeredMotion.exports);
var StaggeredMotionExports = StaggeredMotion.exports;
var TransitionMotion = { exports: {} };
var mergeDiff = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = mergeDiff2;
  function mergeDiff2(prev, next, onRemove) {
    var prevKeyIndex = {};
    for (var i = 0; i < prev.length; i++) {
      prevKeyIndex[prev[i].key] = i;
    }
    var nextKeyIndex = {};
    for (var i = 0; i < next.length; i++) {
      nextKeyIndex[next[i].key] = i;
    }
    var ret = [];
    for (var i = 0; i < next.length; i++) {
      ret[i] = next[i];
    }
    for (var i = 0; i < prev.length; i++) {
      if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {
        var fill = onRemove(i, prev[i]);
        if (fill != null) {
          ret.push(fill);
        }
      }
    }
    return ret.sort(function (a, b) {
      var nextOrderA = nextKeyIndex[a.key];
      var nextOrderB = nextKeyIndex[b.key];
      var prevOrderA = prevKeyIndex[a.key];
      var prevOrderB = prevKeyIndex[b.key];
      if (nextOrderA != null && nextOrderB != null) {
        return nextKeyIndex[a.key] - nextKeyIndex[b.key];
      } else if (prevOrderA != null && prevOrderB != null) {
        return prevKeyIndex[a.key] - prevKeyIndex[b.key];
      } else if (nextOrderA != null) {
        for (var i2 = 0; i2 < next.length; i2++) {
          var pivot = next[i2].key;
          if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
            continue;
          }
          if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
            return -1;
          } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
            return 1;
          }
        }
        return 1;
      }
      for (var i2 = 0; i2 < next.length; i2++) {
        var pivot = next[i2].key;
        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
          continue;
        }
        if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
          return 1;
        } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
          return -1;
        }
      }
      return -1;
    });
  }
  module.exports = exports["default"];
})(mergeDiff, mergeDiff.exports);
var mergeDiffExports = mergeDiff.exports;
(function (module, exports) {
  exports.__esModule = true;
  var _extends2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass2 = /* @__PURE__ */ function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  function _classCallCheck2(instance2, Constructor) {
    if (!(instance2 instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero = mapToZeroExports;
  var _mapToZero2 = _interopRequireDefault2(_mapToZero);
  var _stripStyle2 = stripStyleExports;
  var _stripStyle22 = _interopRequireDefault2(_stripStyle2);
  var _stepper3 = stepperExports;
  var _stepper4 = _interopRequireDefault2(_stepper3);
  var _mergeDiff = mergeDiffExports;
  var _mergeDiff2 = _interopRequireDefault2(_mergeDiff);
  var _performanceNow = performanceNowExports$1;
  var _performanceNow2 = _interopRequireDefault2(_performanceNow);
  var _raf = rafExports;
  var _raf2 = _interopRequireDefault2(_raf);
  var _shouldStopAnimation = shouldStopAnimationExports;
  var _shouldStopAnimation2 = _interopRequireDefault2(_shouldStopAnimation);
  var _react = reactExports;
  var _react2 = _interopRequireDefault2(_react);
  var _propTypes = propTypesExports;
  var _propTypes2 = _interopRequireDefault2(_propTypes);
  var msPerFrame = 1e3 / 60;
  function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
    var cUnreadPropStyles = unreadPropStyles;
    if (cUnreadPropStyles == null) {
      return mergedPropsStyles.map(function (mergedPropsStyle, i) {
        return {
          key: mergedPropsStyle.key,
          data: mergedPropsStyle.data,
          style: plainStyles[i]
        };
      });
    }
    return mergedPropsStyles.map(function (mergedPropsStyle, i) {
      for (var j = 0; j < cUnreadPropStyles.length; j++) {
        if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {
          return {
            key: cUnreadPropStyles[j].key,
            data: cUnreadPropStyles[j].data,
            style: plainStyles[i]
          };
        }
      }
      return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
    });
  }
  function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
    if (mergedPropsStyles.length !== destStyles.length) {
      return false;
    }
    for (var i = 0; i < mergedPropsStyles.length; i++) {
      if (mergedPropsStyles[i].key !== destStyles[i].key) {
        return false;
      }
    }
    for (var i = 0; i < mergedPropsStyles.length; i++) {
      if (!_shouldStopAnimation2["default"](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
        return false;
      }
    }
    return true;
  }
  function mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
    var newMergedPropsStyles = _mergeDiff2["default"](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {
      var leavingStyle = willLeave(oldMergedPropsStyle);
      if (leavingStyle == null) {
        didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
        return null;
      }
      if (_shouldStopAnimation2["default"](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
        didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
        return null;
      }
      return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
    });
    var newCurrentStyles = [];
    var newCurrentVelocities = [];
    var newLastIdealStyles = [];
    var newLastIdealVelocities = [];
    for (var i = 0; i < newMergedPropsStyles.length; i++) {
      var newMergedPropsStyleCell = newMergedPropsStyles[i];
      var foundOldIndex = null;
      for (var j = 0; j < oldMergedPropsStyles.length; j++) {
        if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
          foundOldIndex = j;
          break;
        }
      }
      if (foundOldIndex == null) {
        var plainStyle = willEnter(newMergedPropsStyleCell);
        newCurrentStyles[i] = plainStyle;
        newLastIdealStyles[i] = plainStyle;
        var velocity = _mapToZero2["default"](newMergedPropsStyleCell.style);
        newCurrentVelocities[i] = velocity;
        newLastIdealVelocities[i] = velocity;
      } else {
        newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
        newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
        newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
        newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
      }
    }
    return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
  }
  var TransitionMotion2 = function (_React$Component) {
    _inherits(TransitionMotion3, _React$Component);
    _createClass2(TransitionMotion3, null, [{
      key: "propTypes",
      value: {
        defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
          key: _propTypes2["default"].string.isRequired,
          data: _propTypes2["default"].any,
          style: _propTypes2["default"].objectOf(_propTypes2["default"].number).isRequired
        })),
        styles: _propTypes2["default"].oneOfType([_propTypes2["default"].func, _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
          key: _propTypes2["default"].string.isRequired,
          data: _propTypes2["default"].any,
          style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired
        }))]).isRequired,
        children: _propTypes2["default"].func.isRequired,
        willEnter: _propTypes2["default"].func,
        willLeave: _propTypes2["default"].func,
        didLeave: _propTypes2["default"].func
      },
      enumerable: true
    }, {
      key: "defaultProps",
      value: {
        willEnter: function willEnter(styleThatEntered) {
          return _stripStyle22["default"](styleThatEntered.style);
        },
        // recall: returning null makes the current unmounting TransitionStyle
        // disappear immediately
        willLeave: function willLeave() {
          return null;
        },
        didLeave: function didLeave() {
        }
      },
      enumerable: true
    }]);
    function TransitionMotion3(props) {
      var _this = this;
      _classCallCheck2(this, TransitionMotion3);
      _React$Component.call(this, props);
      this.unmounting = false;
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyles = null;
      this.clearUnreadPropStyle = function (unreadPropStyles) {
        var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
        var mergedPropsStyles = _mergeAndSync[0];
        var currentStyles = _mergeAndSync[1];
        var currentVelocities = _mergeAndSync[2];
        var lastIdealStyles = _mergeAndSync[3];
        var lastIdealVelocities = _mergeAndSync[4];
        for (var i = 0; i < unreadPropStyles.length; i++) {
          var unreadPropStyle = unreadPropStyles[i].style;
          var dirty = false;
          for (var key in unreadPropStyle) {
            if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
              continue;
            }
            var styleValue = unreadPropStyle[key];
            if (typeof styleValue === "number") {
              if (!dirty) {
                dirty = true;
                currentStyles[i] = _extends2({}, currentStyles[i]);
                currentVelocities[i] = _extends2({}, currentVelocities[i]);
                lastIdealStyles[i] = _extends2({}, lastIdealStyles[i]);
                lastIdealVelocities[i] = _extends2({}, lastIdealVelocities[i]);
                mergedPropsStyles[i] = {
                  key: mergedPropsStyles[i].key,
                  data: mergedPropsStyles[i].data,
                  style: _extends2({}, mergedPropsStyles[i].style)
                };
              }
              currentStyles[i][key] = styleValue;
              currentVelocities[i][key] = 0;
              lastIdealStyles[i][key] = styleValue;
              lastIdealVelocities[i][key] = 0;
              mergedPropsStyles[i].style[key] = styleValue;
            }
          }
        }
        _this.setState({
          currentStyles,
          currentVelocities,
          mergedPropsStyles,
          lastIdealStyles,
          lastIdealVelocities
        });
      };
      this.startAnimationIfNecessary = function () {
        if (_this.unmounting) {
          return;
        }
        _this.animationID = _raf2["default"](function (timestamp) {
          if (_this.unmounting) {
            return;
          }
          var propStyles = _this.props.styles;
          var destStyles = typeof propStyles === "function" ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;
          if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
            _this.animationID = null;
            _this.accumulatedTime = 0;
            return;
          }
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
          var newMergedPropsStyles = _mergeAndSync2[0];
          var newCurrentStyles = _mergeAndSync2[1];
          var newCurrentVelocities = _mergeAndSync2[2];
          var newLastIdealStyles = _mergeAndSync2[3];
          var newLastIdealVelocities = _mergeAndSync2[4];
          for (var i = 0; i < newMergedPropsStyles.length; i++) {
            var newMergedPropsStyle = newMergedPropsStyles[i].style;
            var newCurrentStyle = {};
            var newCurrentVelocity = {};
            var newLastIdealStyle = {};
            var newLastIdealVelocity = {};
            for (var key in newMergedPropsStyle) {
              if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {
                continue;
              }
              var styleValue = newMergedPropsStyle[key];
              if (typeof styleValue === "number") {
                newCurrentStyle[key] = styleValue;
                newCurrentVelocity[key] = 0;
                newLastIdealStyle[key] = styleValue;
                newLastIdealVelocity[key] = 0;
              } else {
                var newLastIdealStyleValue = newLastIdealStyles[i][key];
                var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
                for (var j = 0; j < framesToCatchUp; j++) {
                  var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                  newLastIdealStyleValue = _stepper[0];
                  newLastIdealVelocityValue = _stepper[1];
                }
                var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                var nextIdealX = _stepper2[0];
                var nextIdealV = _stepper2[1];
                newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                newLastIdealStyle[key] = newLastIdealStyleValue;
                newLastIdealVelocity[key] = newLastIdealVelocityValue;
              }
            }
            newLastIdealStyles[i] = newLastIdealStyle;
            newLastIdealVelocities[i] = newLastIdealVelocity;
            newCurrentStyles[i] = newCurrentStyle;
            newCurrentVelocities[i] = newCurrentVelocity;
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyles: newCurrentStyles,
            currentVelocities: newCurrentVelocities,
            lastIdealStyles: newLastIdealStyles,
            lastIdealVelocities: newLastIdealVelocities,
            mergedPropsStyles: newMergedPropsStyles
          });
          _this.unreadPropStyles = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    TransitionMotion3.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyles = _props.defaultStyles;
      var styles = _props.styles;
      var willEnter = _props.willEnter;
      var willLeave = _props.willLeave;
      var didLeave = _props.didLeave;
      var destStyles = typeof styles === "function" ? styles(defaultStyles) : styles;
      var oldMergedPropsStyles = void 0;
      if (defaultStyles == null) {
        oldMergedPropsStyles = destStyles;
      } else {
        oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {
          for (var i = 0; i < destStyles.length; i++) {
            if (destStyles[i].key === defaultStyleCell.key) {
              return destStyles[i];
            }
          }
          return defaultStyleCell;
        });
      }
      var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {
        return _stripStyle22["default"](s.style);
      }) : defaultStyles.map(function (s) {
        return _stripStyle22["default"](s.style);
      });
      var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {
        return _mapToZero2["default"](s.style);
      }) : defaultStyles.map(function (s) {
        return _mapToZero2["default"](s.style);
      });
      var _mergeAndSync3 = mergeAndSync(
        // Because this is an old-style createReactClass component, Flow doesn't
        // understand that the willEnter and willLeave props have default values
        // and will always be present.
        willEnter,
        willLeave,
        didLeave,
        oldMergedPropsStyles,
        destStyles,
        oldCurrentStyles,
        oldCurrentVelocities,
        oldCurrentStyles,
        // oldLastIdealStyles really
        oldCurrentVelocities
      );
      var mergedPropsStyles = _mergeAndSync3[0];
      var currentStyles = _mergeAndSync3[1];
      var currentVelocities = _mergeAndSync3[2];
      var lastIdealStyles = _mergeAndSync3[3];
      var lastIdealVelocities = _mergeAndSync3[4];
      return {
        currentStyles,
        currentVelocities,
        lastIdealStyles,
        lastIdealVelocities,
        mergedPropsStyles
      };
    };
    TransitionMotion3.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    TransitionMotion3.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
      if (this.unreadPropStyles) {
        this.clearUnreadPropStyle(this.unreadPropStyles);
      }
      var styles = props.styles;
      if (typeof styles === "function") {
        this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
      } else {
        this.unreadPropStyles = styles;
      }
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    TransitionMotion3.prototype.componentWillUnmount = function componentWillUnmount() {
      this.unmounting = true;
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    TransitionMotion3.prototype.render = function render() {
      var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
      var renderedChildren = this.props.children(hydratedStyles);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return TransitionMotion3;
  }(_react2["default"].Component);
  exports["default"] = TransitionMotion2;
  module.exports = exports["default"];
})(TransitionMotion, TransitionMotion.exports);
var TransitionMotionExports = TransitionMotion.exports;
var spring$1 = { exports: {} };
var presets = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = {
    noWobble: { stiffness: 170, damping: 26 },
    // the default, if nothing provided
    gentle: { stiffness: 120, damping: 14 },
    wobbly: { stiffness: 180, damping: 12 },
    stiff: { stiffness: 210, damping: 20 }
  };
  module.exports = exports["default"];
})(presets, presets.exports);
var presetsExports = presets.exports;
(function (module, exports) {
  exports.__esModule = true;
  var _extends2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports["default"] = spring2;
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  var _presets2 = presetsExports;
  var _presets22 = _interopRequireDefault2(_presets2);
  var defaultConfig = _extends2({}, _presets22["default"].noWobble, {
    precision: 0.01
  });
  function spring2(val, config) {
    return _extends2({}, defaultConfig, config, { val });
  }
  module.exports = exports["default"];
})(spring$1, spring$1.exports);
var springExports = spring$1.exports;
var reorderKeys = { exports: {} };
(function (module, exports) {
  exports.__esModule = true;
  exports["default"] = reorderKeys2;
  function reorderKeys2() {
  }
  module.exports = exports["default"];
})(reorderKeys, reorderKeys.exports);
var reorderKeysExports = reorderKeys.exports;
function _interopRequire(obj) {
  return obj && obj.__esModule ? obj["default"] : obj;
}
var _Motion = MotionExports;
var Motion = _interopRequire(_Motion);
var _StaggeredMotion = StaggeredMotionExports;
_interopRequire(_StaggeredMotion);
var _TransitionMotion = TransitionMotionExports;
_interopRequire(_TransitionMotion);
var _spring = springExports;
var spring = _interopRequire(_spring);
var _presets = presetsExports;
_interopRequire(_presets);
var _stripStyle = stripStyleExports;
_interopRequire(_stripStyle);
var _reorderKeys = reorderKeysExports;
_interopRequire(_reorderKeys);
const svg_theme_fill_color$1 = "_svg_theme_fill_color_1fuhn_3";
const messageBox = "_messageBox_1fuhn_55";
const messagePc = "_messagePc_1fuhn_65";
const visible = "_visible_1fuhn_96";
const hidden = "_hidden_1fuhn_100";
const message = "_message_1fuhn_55";
const css$1 = {
  svg_theme_fill_color: svg_theme_fill_color$1,
  messageBox,
  messagePc,
  visible,
  hidden,
  message
};
const CONTAINER_ID = "message__container";
const cacheState$1 = {};
const MESSAGE_QUEUE = [];
function useCssClassManager(cssClassMap) {
  const [classMap, setClassMap] = reactExports.useState({
    base: cssClassMap.base
  });
  const [classList, setClassList] = reactExports.useState("");
  const removeClassName = (classKey) => {
    setClassMap((prev) => {
      const template = { ...prev };
      delete template[classKey];
      return template;
    });
  };
  const addClassName = (classKey) => {
    setClassMap((prev) => ({ ...prev, [classKey]: cssClassMap[classKey] }));
  };
  const hasClassName = (className) => {
    return Object.keys(classMap).find((c) => c === className);
  };
  reactExports.useEffect(() => {
    setClassList(Object.values(classMap).join(" "));
  }, [classMap]);
  return {
    removeClassName,
    addClassName,
    classList,
    hasClassName
  };
}
function createContainer() {
  let container = document.getElementById(CONTAINER_ID);
  if (!container) {
    container = document.createElement("div");
    container.setAttribute("id", CONTAINER_ID);
    container.classList.add(css$1.messageBox);
    document.body.appendChild(container);
  }
  return container;
}
function addMessage(params) {
  const id = (/* @__PURE__ */ new Date()).valueOf() + Math.floor(Math.random() * 1e3);
  MESSAGE_QUEUE.push({ ...params, id });
  renderMessage([...MESSAGE_QUEUE]);
}
function removeMessage(id) {
  const position = MESSAGE_QUEUE.findIndex((item) => item.id === id);
  MESSAGE_QUEUE.splice(position, 1);
  renderMessage([...MESSAGE_QUEUE]);
}
function BaseMessage(props) {
  const { type: type2, message: message2, id } = props;
  const refMessage = reactExports.useRef();
  const classMap = {
    base: "",
    visible: css$1.visible,
    hidden: css$1.hidden
  };
  const { addClassName, classList } = useCssClassManager(classMap);
  const clear = () => removeMessage(id);
  const handleHidden = () => {
    if (refMessage.current) {
      refMessage.current.addEventListener("animationend", clear, {
        once: true
      });
    }
    addClassName("hidden");
  };
  reactExports.useEffect(() => {
    addClassName("visible");
    clearInterval(cacheState$1[id]);
    cacheState$1[id] = setTimeout(() => {
      handleHidden();
    }, 3e3);
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      ref: refMessage,
      onClick: () => {
        clearInterval(cacheState$1[id]);
        handleHidden();
      },
      className: joinClass(isH5$1 ? css$1.message : css$1.messagePc, classList),
      children: [
        (() => {
          if (type2 === "info")
            return null;
          return /* @__PURE__ */ jsxRuntimeExports.jsx(Image$1, { src: "/message/".concat(type2, "_icon.webp") });
        })(),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: message2 })
      ]
    }
  );
}
let containerRoot;
function renderMessage(messageQueue) {
  const container = createContainer();
  if (!containerRoot) {
    containerRoot = createRoot(container);
  }
  const MessageComponents = messageQueue.map((props) => {
    return /* @__PURE__ */ reactExports.createElement(BaseMessage, { ...props, key: props.id });
  });
  containerRoot.render(MessageComponents);
}
const Message = {
  info: (message2) => addMessage({ type: "info", message: message2 }),
  warn: (message2) => addMessage({ type: "warning", message: message2 }),
  error: (message2) => addMessage({ type: "error", message: message2 }),
  success: (message2) => addMessage({ type: "success", message: message2 }),
  danger: (message2) => addMessage({ type: "danger", message: message2 })
};
var lodash = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
lodash.exports;
(function (module, exports) {
  (function () {
    var undefined$12;
    var VERSION = "4.17.21";
    var LARGE_ARRAY_SIZE = 200;
    var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var MAX_MEMOIZE_SIZE = 500;
    var PLACEHOLDER = "__lodash_placeholder__";
    var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
    var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
    var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
    var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
    var HOT_COUNT = 800, HOT_SPAN = 16;
    var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
    var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
    var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    var wrapFlags = [
      ["ary", WRAP_ARY_FLAG],
      ["bind", WRAP_BIND_FLAG],
      ["bindKey", WRAP_BIND_KEY_FLAG],
      ["curry", WRAP_CURRY_FLAG],
      ["curryRight", WRAP_CURRY_RIGHT_FLAG],
      ["flip", WRAP_FLIP_FLAG],
      ["partial", WRAP_PARTIAL_FLAG],
      ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
      ["rearg", WRAP_REARG_FLAG]
    ];
    var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
    var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
    var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
    var reTrimStart = /^\s+/;
    var reWhitespace = /\s/;
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
    var reEscapeChar2 = /\\(\\)?/g;
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var reFlags = /\w*$/;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var reNoMatch = /($^)/;
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
    var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reApos = RegExp(rsApos, "g");
    var reComboMark = RegExp(rsCombo, "g");
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
      rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
      rsUpper + "+" + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var contextProps = [
      "Array",
      "Buffer",
      "DataView",
      "Date",
      "Error",
      "Float32Array",
      "Float64Array",
      "Function",
      "Int8Array",
      "Int16Array",
      "Int32Array",
      "Map",
      "Math",
      "Object",
      "Promise",
      "RegExp",
      "Set",
      "String",
      "Symbol",
      "TypeError",
      "Uint8Array",
      "Uint8ClampedArray",
      "Uint16Array",
      "Uint32Array",
      "WeakMap",
      "_",
      "clearTimeout",
      "isFinite",
      "parseInt",
      "setTimeout"
    ];
    var templateCounter = -1;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    var deburredLetters = {
      // Latin-1 Supplement block.
      "À": "A",
      "Á": "A",
      "Â": "A",
      "Ã": "A",
      "Ä": "A",
      "Å": "A",
      "à": "a",
      "á": "a",
      "â": "a",
      "ã": "a",
      "ä": "a",
      "å": "a",
      "Ç": "C",
      "ç": "c",
      "Ð": "D",
      "ð": "d",
      "È": "E",
      "É": "E",
      "Ê": "E",
      "Ë": "E",
      "è": "e",
      "é": "e",
      "ê": "e",
      "ë": "e",
      "Ì": "I",
      "Í": "I",
      "Î": "I",
      "Ï": "I",
      "ì": "i",
      "í": "i",
      "î": "i",
      "ï": "i",
      "Ñ": "N",
      "ñ": "n",
      "Ò": "O",
      "Ó": "O",
      "Ô": "O",
      "Õ": "O",
      "Ö": "O",
      "Ø": "O",
      "ò": "o",
      "ó": "o",
      "ô": "o",
      "õ": "o",
      "ö": "o",
      "ø": "o",
      "Ù": "U",
      "Ú": "U",
      "Û": "U",
      "Ü": "U",
      "ù": "u",
      "ú": "u",
      "û": "u",
      "ü": "u",
      "Ý": "Y",
      "ý": "y",
      "ÿ": "y",
      "Æ": "Ae",
      "æ": "ae",
      "Þ": "Th",
      "þ": "th",
      "ß": "ss",
      // Latin Extended-A block.
      "Ā": "A",
      "Ă": "A",
      "Ą": "A",
      "ā": "a",
      "ă": "a",
      "ą": "a",
      "Ć": "C",
      "Ĉ": "C",
      "Ċ": "C",
      "Č": "C",
      "ć": "c",
      "ĉ": "c",
      "ċ": "c",
      "č": "c",
      "Ď": "D",
      "Đ": "D",
      "ď": "d",
      "đ": "d",
      "Ē": "E",
      "Ĕ": "E",
      "Ė": "E",
      "Ę": "E",
      "Ě": "E",
      "ē": "e",
      "ĕ": "e",
      "ė": "e",
      "ę": "e",
      "ě": "e",
      "Ĝ": "G",
      "Ğ": "G",
      "Ġ": "G",
      "Ģ": "G",
      "ĝ": "g",
      "ğ": "g",
      "ġ": "g",
      "ģ": "g",
      "Ĥ": "H",
      "Ħ": "H",
      "ĥ": "h",
      "ħ": "h",
      "Ĩ": "I",
      "Ī": "I",
      "Ĭ": "I",
      "Į": "I",
      "İ": "I",
      "ĩ": "i",
      "ī": "i",
      "ĭ": "i",
      "į": "i",
      "ı": "i",
      "Ĵ": "J",
      "ĵ": "j",
      "Ķ": "K",
      "ķ": "k",
      "ĸ": "k",
      "Ĺ": "L",
      "Ļ": "L",
      "Ľ": "L",
      "Ŀ": "L",
      "Ł": "L",
      "ĺ": "l",
      "ļ": "l",
      "ľ": "l",
      "ŀ": "l",
      "ł": "l",
      "Ń": "N",
      "Ņ": "N",
      "Ň": "N",
      "Ŋ": "N",
      "ń": "n",
      "ņ": "n",
      "ň": "n",
      "ŋ": "n",
      "Ō": "O",
      "Ŏ": "O",
      "Ő": "O",
      "ō": "o",
      "ŏ": "o",
      "ő": "o",
      "Ŕ": "R",
      "Ŗ": "R",
      "Ř": "R",
      "ŕ": "r",
      "ŗ": "r",
      "ř": "r",
      "Ś": "S",
      "Ŝ": "S",
      "Ş": "S",
      "Š": "S",
      "ś": "s",
      "ŝ": "s",
      "ş": "s",
      "š": "s",
      "Ţ": "T",
      "Ť": "T",
      "Ŧ": "T",
      "ţ": "t",
      "ť": "t",
      "ŧ": "t",
      "Ũ": "U",
      "Ū": "U",
      "Ŭ": "U",
      "Ů": "U",
      "Ű": "U",
      "Ų": "U",
      "ũ": "u",
      "ū": "u",
      "ŭ": "u",
      "ů": "u",
      "ű": "u",
      "ų": "u",
      "Ŵ": "W",
      "ŵ": "w",
      "Ŷ": "Y",
      "ŷ": "y",
      "Ÿ": "Y",
      "Ź": "Z",
      "Ż": "Z",
      "Ž": "Z",
      "ź": "z",
      "ż": "z",
      "ž": "z",
      "Ĳ": "IJ",
      "ĳ": "ij",
      "Œ": "Oe",
      "œ": "oe",
      "ŉ": "'n",
      "ſ": "s"
    };
    var htmlEscapes = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    };
    var htmlUnescapes = {
      "&amp;": "&",
      "&lt;": "<",
      "&gt;": ">",
      "&quot;": '"',
      "&#39;": "'"
    };
    var stringEscapes = {
      "\\": "\\",
      "'": "'",
      "\n": "n",
      "\r": "r",
      "\u2028": "u2028",
      "\u2029": "u2029"
    };
    var freeParseFloat = parseFloat, freeParseInt = parseInt;
    var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;
      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEvery(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1, length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    var asciiSize = baseProperty("length");
    function asciiToArray(string) {
      return string.split("");
    }
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection2) {
        if (predicate(value, key, collection2)) {
          result = key;
          return false;
        }
      });
      return result;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }
    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined$12 : object[key];
      };
    }
    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined$12 : object[key];
      };
    }
    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection2) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
      });
      return accumulator;
    }
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    function baseSum(array, iteratee) {
      var result, index = -1, length = array.length;
      while (++index < length) {
        var current = iteratee(array[index]);
        if (current !== undefined$12) {
          result = result === undefined$12 ? current : result + current;
        }
      }
      return result;
    }
    function baseTimes(n2, iteratee) {
      var index = -1, result = Array(n2);
      while (++index < n2) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }
    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1, length = strSymbols.length;
      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
      }
      return index;
    }
    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;
      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
      }
      return index;
    }
    function countHolders(array, placeholder) {
      var length = array.length, result = 0;
      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }
      return result;
    }
    var deburrLetter = basePropertyOf(deburredLetters);
    var escapeHtmlChar = basePropertyOf(htmlEscapes);
    function escapeStringChar(chr) {
      return "\\" + stringEscapes[chr];
    }
    function getValue(object, key) {
      return object == null ? undefined$12 : object[key];
    }
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    function iteratorToArray(iterator) {
      var data, result = [];
      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }
      return result;
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }
    function replaceHolders(array, placeholder) {
      var index = -1, length = array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }
    function setToPairs(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return index;
    }
    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;
      while (reUnicode.test(string)) {
        ++result;
      }
      return result;
    }
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    var runInContext = function runInContext2(context) {
      context = context == null ? root2 : _2.defaults(root2.Object(), context, _2.pick(root2, contextProps));
      var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
      var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
      var coreJsData = context["__core-js_shared__"];
      var funcToString = funcProto.toString;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var idCounter = 0;
      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
        return uid ? "Symbol(src)_1." + uid : "";
      }();
      var nativeObjectToString = objectProto.toString;
      var objectCtorString = funcToString.call(Object2);
      var oldDash = root2._;
      var reIsNative = RegExp2(
        "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
      );
      var Buffer = moduleExports ? context.Buffer : undefined$12, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$12, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined$12, symIterator = Symbol2 ? Symbol2.iterator : undefined$12, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined$12;
      var defineProperty = function () {
        try {
          var func = getNative(Object2, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e2) {
        }
      }();
      var ctxClearTimeout = context.clearTimeout !== root2.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root2.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root2.setTimeout && context.setTimeout;
      var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$12, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
      var DataView2 = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
      var metaMap = WeakMap2 && new WeakMap2();
      var realNames = {};
      var dataViewCtorString = toSource(DataView2), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
      var symbolProto = Symbol2 ? Symbol2.prototype : undefined$12, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$12, symbolToString = symbolProto ? symbolProto.toString : undefined$12;
      function lodash2(value) {
        if (isObjectLike(value) && !isArray2(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }
          if (hasOwnProperty.call(value, "__wrapped__")) {
            return wrapperClone(value);
          }
        }
        return new LodashWrapper(value);
      }
      var baseCreate = /* @__PURE__ */ function () {
        function object() {
        }
        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto);
          }
          object.prototype = proto;
          var result2 = new object();
          object.prototype = undefined$12;
          return result2;
        };
      }();
      function baseLodash() {
      }
      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined$12;
      }
      lodash2.templateSettings = {
        /**
         * Used to detect `data` property values to be HTML-escaped.
         *
         * @memberOf _.templateSettings
         * @type {RegExp}
         */
        "escape": reEscape,
        /**
         * Used to detect code to be evaluated.
         *
         * @memberOf _.templateSettings
         * @type {RegExp}
         */
        "evaluate": reEvaluate,
        /**
         * Used to detect `data` property values to inject.
         *
         * @memberOf _.templateSettings
         * @type {RegExp}
         */
        "interpolate": reInterpolate,
        /**
         * Used to reference the data object in the template text.
         *
         * @memberOf _.templateSettings
         * @type {string}
         */
        "variable": "",
        /**
         * Used to import variables into the compiled template.
         *
         * @memberOf _.templateSettings
         * @type {Object}
         */
        "imports": {
          /**
           * A reference to the `lodash` function.
           *
           * @memberOf _.templateSettings.imports
           * @type {Function}
           */
          "_": lodash2
        }
      };
      lodash2.prototype = baseLodash.prototype;
      lodash2.prototype.constructor = lodash2;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;
      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }
      function lazyClone() {
        var result2 = new LazyWrapper(this.__wrapped__);
        result2.__actions__ = copyArray(this.__actions__);
        result2.__dir__ = this.__dir__;
        result2.__filtered__ = this.__filtered__;
        result2.__iteratees__ = copyArray(this.__iteratees__);
        result2.__takeCount__ = this.__takeCount__;
        result2.__views__ = copyArray(this.__views__);
        return result2;
      }
      function lazyReverse() {
        if (this.__filtered__) {
          var result2 = new LazyWrapper(this);
          result2.__dir__ = -1;
          result2.__filtered__ = true;
        } else {
          result2 = this.clone();
          result2.__dir__ *= -1;
        }
        return result2;
      }
      function lazyValue() {
        var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray2(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }
        var result2 = [];
        outer:
        while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1, value = array[index];
          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex], iteratee2 = data.iteratee, type2 = data.type, computed = iteratee2(value);
            if (type2 == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type2 == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }
          result2[resIndex++] = value;
        }
        return result2;
      }
      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;
      function Hash(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }
      function hashDelete(key) {
        var result2 = this.has(key) && delete this.__data__[key];
        this.size -= result2 ? 1 : 0;
        return result2;
      }
      function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate) {
          var result2 = data[key];
          return result2 === HASH_UNDEFINED ? undefined$12 : result2;
        }
        return hasOwnProperty.call(data, key) ? data[key] : undefined$12;
      }
      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined$12 : hasOwnProperty.call(data, key);
      }
      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined$12 ? HASH_UNDEFINED : value;
        return this;
      }
      Hash.prototype.clear = hashClear;
      Hash.prototype["delete"] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;
      function ListCache(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }
      function listCacheDelete(key) {
        var data = this.__data__, index = assocIndexOf(data, key);
        if (index < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }
        --this.size;
        return true;
      }
      function listCacheGet(key) {
        var data = this.__data__, index = assocIndexOf(data, key);
        return index < 0 ? undefined$12 : data[index][1];
      }
      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }
      function listCacheSet(key, value) {
        var data = this.__data__, index = assocIndexOf(data, key);
        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }
        return this;
      }
      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype["delete"] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;
      function MapCache(entries) {
        var index = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }
      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          "hash": new Hash(),
          "map": new (Map2 || ListCache)(),
          "string": new Hash()
        };
      }
      function mapCacheDelete(key) {
        var result2 = getMapData(this, key)["delete"](key);
        this.size -= result2 ? 1 : 0;
        return result2;
      }
      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }
      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }
      function mapCacheSet(key, value) {
        var data = getMapData(this, key), size2 = data.size;
        data.set(key, value);
        this.size += data.size == size2 ? 0 : 1;
        return this;
      }
      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype["delete"] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;
      function SetCache(values2) {
        var index = -1, length = values2 == null ? 0 : values2.length;
        this.__data__ = new MapCache();
        while (++index < length) {
          this.add(values2[index]);
        }
      }
      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);
        return this;
      }
      function setCacheHas(value) {
        return this.__data__.has(value);
      }
      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;
      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }
      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }
      function stackDelete(key) {
        var data = this.__data__, result2 = data["delete"](key);
        this.size = data.size;
        return result2;
      }
      function stackGet(key) {
        return this.__data__.get(key);
      }
      function stackHas(key) {
        return this.__data__.has(key);
      }
      function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
          var pairs = data.__data__;
          if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      Stack.prototype.clear = stackClear;
      Stack.prototype["delete"] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;
      function arrayLikeKeys(value, inherited) {
        var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer3(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
              isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
              isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
              isIndex(key, length)))) {
            result2.push(key);
          }
        }
        return result2;
      }
      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined$12;
      }
      function arraySampleSize(array, n2) {
        return shuffleSelf(copyArray(array), baseClamp(n2, 0, array.length));
      }
      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }
      function assignMergeValue(object, key, value) {
        if (value !== undefined$12 && !eq(object[key], value) || value === undefined$12 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function assignValue(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$12 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      function baseAggregator(collection, setter, iteratee2, accumulator) {
        baseEach(collection, function (value, key, collection2) {
          setter(accumulator, value, iteratee2(value), collection2);
        });
        return accumulator;
      }
      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }
      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }
      function baseAssignValue(object, key, value) {
        if (key == "__proto__" && defineProperty) {
          defineProperty(object, key, {
            "configurable": true,
            "enumerable": true,
            "value": value,
            "writable": true
          });
        } else {
          object[key] = value;
        }
      }
      function baseAt(object, paths) {
        var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
        while (++index < length) {
          result2[index] = skip ? undefined$12 : get2(object, paths[index]);
        }
        return result2;
      }
      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined$12) {
            number = number <= upper ? number : upper;
          }
          if (lower !== undefined$12) {
            number = number >= lower ? number : lower;
          }
        }
        return number;
      }
      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
        if (customizer) {
          result2 = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result2 !== undefined$12) {
          return result2;
        }
        if (!isObject(value)) {
          return value;
        }
        var isArr = isArray2(value);
        if (isArr) {
          result2 = initCloneArray(value);
          if (!isDeep) {
            return copyArray(value, result2);
          }
        } else {
          var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
          if (isBuffer3(value)) {
            return cloneBuffer(value, isDeep);
          }
          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result2 = isFlat || isFunc ? {} : initCloneObject(value);
            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }
            result2 = initCloneByTag(value, tag, isDeep);
          }
        }
        stack || (stack = new Stack());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result2);
        if (isSet2(value)) {
          value.forEach(function (subValue) {
            result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap2(value)) {
          value.forEach(function (subValue, key2) {
            result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined$12 : keysFunc(value);
        arrayEach(props || value, function (subValue, key2) {
          if (props) {
            key2 = subValue;
            subValue = value[key2];
          }
          assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
        return result2;
      }
      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }
      function baseConformsTo(object, source, props) {
        var length = props.length;
        if (object == null) {
          return !length;
        }
        object = Object2(object);
        while (length--) {
          var key = props[length], predicate = source[key], value = object[key];
          if (value === undefined$12 && !(key in object) || !predicate(value)) {
            return false;
          }
        }
        return true;
      }
      function baseDelay(func, wait, args) {
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        return setTimeout2(function () {
          func.apply(undefined$12, args);
        }, wait);
      }
      function baseDifference(array, values2, iteratee2, comparator) {
        var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
        if (!length) {
          return result2;
        }
        if (iteratee2) {
          values2 = arrayMap(values2, baseUnary(iteratee2));
        }
        if (comparator) {
          includes2 = arrayIncludesWith;
          isCommon = false;
        } else if (values2.length >= LARGE_ARRAY_SIZE) {
          includes2 = cacheHas;
          isCommon = false;
          values2 = new SetCache(values2);
        }
        outer:
        while (++index < length) {
          var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values2[valuesIndex] === computed) {
                continue outer;
              }
            }
            result2.push(value);
          } else if (!includes2(values2, computed, comparator)) {
            result2.push(value);
          }
        }
        return result2;
      }
      var baseEach = createBaseEach(baseForOwn);
      var baseEachRight = createBaseEach(baseForOwnRight, true);
      function baseEvery(collection, predicate) {
        var result2 = true;
        baseEach(collection, function (value, index, collection2) {
          result2 = !!predicate(value, index, collection2);
          return result2;
        });
        return result2;
      }
      function baseExtremum(array, iteratee2, comparator) {
        var index = -1, length = array.length;
        while (++index < length) {
          var value = array[index], current = iteratee2(value);
          if (current != null && (computed === undefined$12 ? current === current && !isSymbol2(current) : comparator(current, computed))) {
            var computed = current, result2 = value;
          }
        }
        return result2;
      }
      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end === undefined$12 || end > length ? length : toInteger(end);
        if (end < 0) {
          end += length;
        }
        end = start > end ? 0 : toLength(end);
        while (start < end) {
          array[start++] = value;
        }
        return array;
      }
      function baseFilter(collection, predicate) {
        var result2 = [];
        baseEach(collection, function (value, index, collection2) {
          if (predicate(value, index, collection2)) {
            result2.push(value);
          }
        });
        return result2;
      }
      function baseFlatten(array, depth, predicate, isStrict, result2) {
        var index = -1, length = array.length;
        predicate || (predicate = isFlattenable);
        result2 || (result2 = []);
        while (++index < length) {
          var value = array[index];
          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result2);
            } else {
              arrayPush(result2, value);
            }
          } else if (!isStrict) {
            result2[result2.length] = value;
          }
        }
        return result2;
      }
      var baseFor = createBaseFor();
      var baseForRight = createBaseFor(true);
      function baseForOwn(object, iteratee2) {
        return object && baseFor(object, iteratee2, keys);
      }
      function baseForOwnRight(object, iteratee2) {
        return object && baseForRight(object, iteratee2, keys);
      }
      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction2(object[key]);
        });
      }
      function baseGet(object, path2) {
        path2 = castPath(path2, object);
        var index = 0, length = path2.length;
        while (object != null && index < length) {
          object = object[toKey(path2[index++])];
        }
        return index && index == length ? object : undefined$12;
      }
      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result2 = keysFunc(object);
        return isArray2(object) ? result2 : arrayPush(result2, symbolsFunc(object));
      }
      function baseGetTag(value) {
        if (value == null) {
          return value === undefined$12 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString2(value);
      }
      function baseGt(value, other) {
        return value > other;
      }
      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }
      function baseHasIn(object, key) {
        return object != null && key in Object2(object);
      }
      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }
      function baseIntersection(arrays, iteratee2, comparator) {
        var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
        while (othIndex--) {
          var array = arrays[othIndex];
          if (othIndex && iteratee2) {
            array = arrayMap(array, baseUnary(iteratee2));
          }
          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$12;
        }
        array = arrays[0];
        var index = -1, seen2 = caches[0];
        outer:
        while (++index < length && result2.length < maxLength) {
          var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (!(seen2 ? cacheHas(seen2, computed) : includes2(result2, computed, comparator))) {
            othIndex = othLength;
            while (--othIndex) {
              var cache = caches[othIndex];
              if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }
            if (seen2) {
              seen2.push(computed);
            }
            result2.push(value);
          }
        }
        return result2;
      }
      function baseInverter(object, setter, iteratee2, accumulator) {
        baseForOwn(object, function (value, key, object2) {
          setter(accumulator, iteratee2(value), key, object2);
        });
        return accumulator;
      }
      function baseInvoke(object, path2, args) {
        path2 = castPath(path2, object);
        object = parent(object, path2);
        var func = object == null ? object : object[toKey(last(path2))];
        return func == null ? undefined$12 : apply(func, object, args);
      }
      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }
      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }
      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }
      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }
        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }
      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
        if (isSameTag && isBuffer3(object)) {
          if (!isBuffer3(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }
      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }
      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length, length = index, noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object2(object);
        while (index--) {
          var data = matchData[index];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index < length) {
          data = matchData[index];
          var key = data[0], objValue = object[key], srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === undefined$12 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();
            if (customizer) {
              var result2 = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result2 === undefined$12 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
              return false;
            }
          }
        }
        return true;
      }
      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }
        var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }
      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }
      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }
      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }
      function baseIteratee(value) {
        if (typeof value == "function") {
          return value;
        }
        if (value == null) {
          return identity2;
        }
        if (typeof value == "object") {
          return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }
        return property(value);
      }
      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }
        var result2 = [];
        for (var key in Object2(object)) {
          if (hasOwnProperty.call(object, key) && key != "constructor") {
            result2.push(key);
          }
        }
        return result2;
      }
      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object), result2 = [];
        for (var key in object) {
          if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
            result2.push(key);
          }
        }
        return result2;
      }
      function baseLt(value, other) {
        return value < other;
      }
      function baseMap(collection, iteratee2) {
        var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
        baseEach(collection, function (value, key, collection2) {
          result2[++index] = iteratee2(value, key, collection2);
        });
        return result2;
      }
      function baseMatches(source) {
        var matchData = getMatchData(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }
        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }
      function baseMatchesProperty(path2, srcValue) {
        if (isKey(path2) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path2), srcValue);
        }
        return function (object) {
          var objValue = get2(object, path2);
          return objValue === undefined$12 && objValue === srcValue ? hasIn(object, path2) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }
      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());
          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined$12;
            if (newValue === undefined$12) {
              newValue = srcValue;
            }
            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }
      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined$12;
        var isCommon = newValue === undefined$12;
        if (isCommon) {
          var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer3(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray2(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;
            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction2(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack["delete"](srcValue);
        }
        assignMergeValue(object, key, newValue);
      }
      function baseNth(array, n2) {
        var length = array.length;
        if (!length) {
          return;
        }
        n2 += n2 < 0 ? length : 0;
        return isIndex(n2, length) ? array[n2] : undefined$12;
      }
      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee2) {
            if (isArray2(iteratee2)) {
              return function (value) {
                return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
              };
            }
            return iteratee2;
          });
        } else {
          iteratees = [identity2];
        }
        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result2 = baseMap(collection, function (value, key, collection2) {
          var criteria = arrayMap(iteratees, function (iteratee2) {
            return iteratee2(value);
          });
          return { "criteria": criteria, "index": ++index, "value": value };
        });
        return baseSortBy(result2, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }
      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path2) {
          return hasIn(object, path2);
        });
      }
      function basePickBy(object, paths, predicate) {
        var index = -1, length = paths.length, result2 = {};
        while (++index < length) {
          var path2 = paths[index], value = baseGet(object, path2);
          if (predicate(value, path2)) {
            baseSet(result2, castPath(path2, object), value);
          }
        }
        return result2;
      }
      function basePropertyDeep(path2) {
        return function (object) {
          return baseGet(object, path2);
        };
      }
      function basePullAll(array, values2, iteratee2, comparator) {
        var indexOf3 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen2 = array;
        if (array === values2) {
          values2 = copyArray(values2);
        }
        if (iteratee2) {
          seen2 = arrayMap(array, baseUnary(iteratee2));
        }
        while (++index < length) {
          var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
          while ((fromIndex = indexOf3(seen2, computed, fromIndex, comparator)) > -1) {
            if (seen2 !== array) {
              splice.call(seen2, fromIndex, 1);
            }
            splice.call(array, fromIndex, 1);
          }
        }
        return array;
      }
      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0, lastIndex = length - 1;
        while (length--) {
          var index = indexes[length];
          if (length == lastIndex || index !== previous) {
            var previous = index;
            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }
        return array;
      }
      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }
      function baseRange(start, end, step, fromRight) {
        var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
        while (length--) {
          result2[fromRight ? length : ++index] = start;
          start += step;
        }
        return result2;
      }
      function baseRepeat(string, n2) {
        var result2 = "";
        if (!string || n2 < 1 || n2 > MAX_SAFE_INTEGER) {
          return result2;
        }
        do {
          if (n2 % 2) {
            result2 += string;
          }
          n2 = nativeFloor(n2 / 2);
          if (n2) {
            string += string;
          }
        } while (n2);
        return result2;
      }
      function baseRest(func, start) {
        return setToString(overRest(func, start, identity2), func + "");
      }
      function baseSample(collection) {
        return arraySample(values(collection));
      }
      function baseSampleSize(collection, n2) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n2, 0, array.length));
      }
      function baseSet(object, path2, value, customizer) {
        if (!isObject(object)) {
          return object;
        }
        path2 = castPath(path2, object);
        var index = -1, length = path2.length, lastIndex = length - 1, nested = object;
        while (nested != null && ++index < length) {
          var key = toKey(path2[index]), newValue = value;
          if (key === "__proto__" || key === "constructor" || key === "prototype") {
            return object;
          }
          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined$12;
            if (newValue === undefined$12) {
              newValue = isObject(objValue) ? objValue : isIndex(path2[index + 1]) ? [] : {};
            }
          }
          assignValue(nested, key, newValue);
          nested = nested[key];
        }
        return object;
      }
      var baseSetData = !metaMap ? identity2 : function (func, data) {
        metaMap.set(func, data);
        return func;
      };
      var baseSetToString = !defineProperty ? identity2 : function (func, string) {
        return defineProperty(func, "toString", {
          "configurable": true,
          "enumerable": false,
          "value": constant(string),
          "writable": true
        });
      };
      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }
      function baseSlice(array, start, end) {
        var index = -1, length = array.length;
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end > length ? length : end;
        if (end < 0) {
          end += length;
        }
        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result2 = Array2(length);
        while (++index < length) {
          result2[index] = array[index + start];
        }
        return result2;
      }
      function baseSome(collection, predicate) {
        var result2;
        baseEach(collection, function (value, index, collection2) {
          result2 = predicate(value, index, collection2);
          return !result2;
        });
        return !!result2;
      }
      function baseSortedIndex(array, value, retHighest) {
        var low = 0, high = array == null ? low : array.length;
        if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1, computed = array[mid];
            if (computed !== null && !isSymbol2(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return high;
        }
        return baseSortedIndexBy(array, value, identity2, retHighest);
      }
      function baseSortedIndexBy(array, value, iteratee2, retHighest) {
        var low = 0, high = array == null ? 0 : array.length;
        if (high === 0) {
          return 0;
        }
        value = iteratee2(value);
        var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol2(value), valIsUndefined = value === undefined$12;
        while (low < high) {
          var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined$12, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol2(computed);
          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }
          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return nativeMin(high, MAX_ARRAY_INDEX);
      }
      function baseSortedUniq(array, iteratee2) {
        var index = -1, length = array.length, resIndex = 0, result2 = [];
        while (++index < length) {
          var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
          if (!index || !eq(computed, seen2)) {
            var seen2 = computed;
            result2[resIndex++] = value === 0 ? 0 : value;
          }
        }
        return result2;
      }
      function baseToNumber(value) {
        if (typeof value == "number") {
          return value;
        }
        if (isSymbol2(value)) {
          return NAN;
        }
        return +value;
      }
      function baseToString(value) {
        if (typeof value == "string") {
          return value;
        }
        if (isArray2(value)) {
          return arrayMap(value, baseToString) + "";
        }
        if (isSymbol2(value)) {
          return symbolToString ? symbolToString.call(value) : "";
        }
        var result2 = value + "";
        return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
      }
      function baseUniq(array, iteratee2, comparator) {
        var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen2 = result2;
        if (comparator) {
          isCommon = false;
          includes2 = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set2 = iteratee2 ? null : createSet(array);
          if (set2) {
            return setToArray(set2);
          }
          isCommon = false;
          includes2 = cacheHas;
          seen2 = new SetCache();
        } else {
          seen2 = iteratee2 ? [] : result2;
        }
        outer:
        while (++index < length) {
          var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen2.length;
            while (seenIndex--) {
              if (seen2[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee2) {
              seen2.push(computed);
            }
            result2.push(value);
          } else if (!includes2(seen2, computed, comparator)) {
            if (seen2 !== result2) {
              seen2.push(computed);
            }
            result2.push(value);
          }
        }
        return result2;
      }
      function baseUnset(object, path2) {
        path2 = castPath(path2, object);
        object = parent(object, path2);
        return object == null || delete object[toKey(last(path2))];
      }
      function baseUpdate(object, path2, updater, customizer) {
        return baseSet(object, path2, updater(baseGet(object, path2)), customizer);
      }
      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length, index = fromRight ? length : -1;
        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
        }
        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }
      function baseWrapperValue(value, actions) {
        var result2 = value;
        if (result2 instanceof LazyWrapper) {
          result2 = result2.value();
        }
        return arrayReduce(actions, function (result3, action) {
          return action.func.apply(action.thisArg, arrayPush([result3], action.args));
        }, result2);
      }
      function baseXor(arrays, iteratee2, comparator) {
        var length = arrays.length;
        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }
        var index = -1, result2 = Array2(length);
        while (++index < length) {
          var array = arrays[index], othIndex = -1;
          while (++othIndex < length) {
            if (othIndex != index) {
              result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
            }
          }
        }
        return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
      }
      function baseZipObject(props, values2, assignFunc) {
        var index = -1, length = props.length, valsLength = values2.length, result2 = {};
        while (++index < length) {
          var value = index < valsLength ? values2[index] : undefined$12;
          assignFunc(result2, props[index], value);
        }
        return result2;
      }
      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }
      function castFunction(value) {
        return typeof value == "function" ? value : identity2;
      }
      function castPath(value, object) {
        if (isArray2(value)) {
          return value;
        }
        return isKey(value, object) ? [value] : stringToPath3(toString(value));
      }
      var castRest = baseRest;
      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined$12 ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }
      var clearTimeout2 = ctxClearTimeout || function (id) {
        return root2.clearTimeout(id);
      };
      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }
        var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result2);
        return result2;
      }
      function cloneArrayBuffer(arrayBuffer) {
        var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
        return result2;
      }
      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }
      function cloneRegExp(regexp) {
        var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result2.lastIndex = regexp.lastIndex;
        return result2;
      }
      function cloneSymbol(symbol) {
        return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
      }
      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }
      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined$12, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol2(value);
          var othIsDefined = other !== undefined$12, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol2(other);
          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }
          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }
        return 0;
      }
      function compareMultiple(object, other, orders) {
        var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
        while (++index < length) {
          var result2 = compareAscending(objCriteria[index], othCriteria[index]);
          if (result2) {
            if (index >= ordersLength) {
              return result2;
            }
            var order = orders[index];
            return result2 * (order == "desc" ? -1 : 1);
          }
        }
        return object.index - other.index;
      }
      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
        while (++leftIndex < leftLength) {
          result2[leftIndex] = partials[leftIndex];
        }
        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result2[holders[argsIndex]] = args[argsIndex];
          }
        }
        while (rangeLength--) {
          result2[leftIndex++] = args[argsIndex++];
        }
        return result2;
      }
      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
        while (++argsIndex < rangeLength) {
          result2[argsIndex] = args[argsIndex];
        }
        var offset = argsIndex;
        while (++rightIndex < rightLength) {
          result2[offset + rightIndex] = partials[rightIndex];
        }
        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result2[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }
        return result2;
      }
      function copyArray(source, array) {
        var index = -1, length = source.length;
        array || (array = Array2(length));
        while (++index < length) {
          array[index] = source[index];
        }
        return array;
      }
      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1, length = props.length;
        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$12;
          if (newValue === undefined$12) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }
        return object;
      }
      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }
      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }
      function createAggregator(setter, initializer) {
        return function (collection, iteratee2) {
          var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
        };
      }
      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined$12, guard = length > 2 ? sources[2] : undefined$12;
          customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined$12;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined$12 : customizer;
            length = 1;
          }
          object = Object2(object);
          while (++index < length) {
            var source = sources[index];
            if (source) {
              assigner(object, source, index, customizer);
            }
          }
          return object;
        });
      }
      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee2) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee2);
          }
          var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
          while (fromRight ? index-- : ++index < length) {
            if (iteratee2(iterable[index], index, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      function createBaseFor(fromRight) {
        return function (object, iteratee2, keysFunc) {
          var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index];
            if (iteratee2(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
        function wrapper() {
          var fn = this && this !== root2 && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }
        return wrapper;
      }
      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$12;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }
      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
        };
      }
      function createCtor(Ctor) {
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return new Ctor();
            case 1:
              return new Ctor(args[0]);
            case 2:
              return new Ctor(args[0], args[1]);
            case 3:
              return new Ctor(args[0], args[1], args[2]);
            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);
            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);
            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }
          var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
          return isObject(result2) ? result2 : thisBinding;
        };
      }
      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);
        function wrapper() {
          var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
          while (index--) {
            args[index] = arguments[index];
          }
          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;
          if (length < arity) {
            return createRecurry(
              func,
              bitmask,
              createHybrid,
              wrapper.placeholder,
              undefined$12,
              args,
              holders,
              undefined$12,
              undefined$12,
              arity - length
            );
          }
          var fn = this && this !== root2 && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }
        return wrapper;
      }
      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object2(collection);
          if (!isArrayLike(collection)) {
            var iteratee2 = getIteratee(predicate, 3);
            collection = keys(collection);
            predicate = function (key) {
              return iteratee2(iterable[key], key, iterable);
            };
          }
          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined$12;
        };
      }
      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
          if (fromRight) {
            funcs.reverse();
          }
          while (index--) {
            var func = funcs[index];
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            if (prereq && !wrapper && getFuncName(func) == "wrapper") {
              var wrapper = new LodashWrapper([], true);
            }
          }
          index = wrapper ? index : length;
          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined$12;
            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }
          return function () {
            var args = arguments, value = args[0];
            if (wrapper && args.length == 1 && isArray2(value)) {
              return wrapper.plant(value).value();
            }
            var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
            while (++index2 < length) {
              result2 = funcs[index2].call(this, result2);
            }
            return result2;
          };
        });
      }
      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined$12 : createCtor(func);
        function wrapper() {
          var length = arguments.length, args = Array2(length), index = length;
          while (index--) {
            args[index] = arguments[index];
          }
          if (isCurried) {
            var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
          }
          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }
          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }
          length -= holdersCount;
          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(
              func,
              bitmask,
              createHybrid,
              wrapper.placeholder,
              thisArg,
              args,
              newHolders,
              argPos,
              ary2,
              arity - length
            );
          }
          var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
          length = args.length;
          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }
          if (isAry && ary2 < length) {
            args.length = ary2;
          }
          if (this && this !== root2 && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }
          return fn.apply(thisBinding, args);
        }
        return wrapper;
      }
      function createInverter(setter, toIteratee) {
        return function (object, iteratee2) {
          return baseInverter(object, setter, toIteratee(iteratee2), {});
        };
      }
      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result2;
          if (value === undefined$12 && other === undefined$12) {
            return defaultValue;
          }
          if (value !== undefined$12) {
            result2 = value;
          }
          if (other !== undefined$12) {
            if (result2 === undefined$12) {
              return other;
            }
            if (typeof value == "string" || typeof other == "string") {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }
            result2 = operator(value, other);
          }
          return result2;
        };
      }
      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee2) {
              return apply(iteratee2, thisArg, args);
            });
          });
        });
      }
      function createPadding(length, chars2) {
        chars2 = chars2 === undefined$12 ? " " : baseToString(chars2);
        var charsLength = chars2.length;
        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars2, length) : chars2;
        }
        var result2 = baseRepeat(chars2, nativeCeil(length / stringSize(chars2)));
        return hasUnicode(chars2) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
      }
      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
        function wrapper() {
          var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root2 && this instanceof wrapper ? Ctor : func;
          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }
          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }
          return apply(fn, isBind ? thisArg : this, args);
        }
        return wrapper;
      }
      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
            end = step = undefined$12;
          }
          start = toFinite(start);
          if (end === undefined$12) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          step = step === undefined$12 ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }
      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == "string" && typeof other == "string")) {
            value = toNumber(value);
            other = toNumber(other);
          }
          return operator(value, other);
        };
      }
      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined$12, newHoldersRight = isCurry ? undefined$12 : holders, newPartials = isCurry ? partials : undefined$12, newPartialsRight = isCurry ? undefined$12 : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
        }
        var newData = [
          func,
          bitmask,
          thisArg,
          newPartials,
          newHolders,
          newPartialsRight,
          newHoldersRight,
          argPos,
          ary2,
          arity
        ];
        var result2 = wrapFunc.apply(undefined$12, newData);
        if (isLaziable(func)) {
          setData(result2, newData);
        }
        result2.placeholder = placeholder;
        return setWrapToString(result2, func, bitmask);
      }
      function createRound(methodName) {
        var func = Math2[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
            pair = (toString(value) + "e").split("e");
            return +(pair[0] + "e" + (+pair[1] - precision));
          }
          return func(number);
        };
      }
      var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop2 : function (values2) {
        return new Set2(values2);
      };
      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);
          if (tag == mapTag) {
            return mapToArray(object);
          }
          if (tag == setTag) {
            return setToPairs(object);
          }
          return baseToPairs(object, keysFunc(object));
        };
      }
      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
        if (!isBindKey && typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        var length = partials ? partials.length : 0;
        if (!length) {
          bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
          partials = holders = undefined$12;
        }
        ary2 = ary2 === undefined$12 ? ary2 : nativeMax(toInteger(ary2), 0);
        arity = arity === undefined$12 ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;
        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials, holdersRight = holders;
          partials = holders = undefined$12;
        }
        var data = isBindKey ? undefined$12 : getData(func);
        var newData = [
          func,
          bitmask,
          thisArg,
          partials,
          holders,
          partialsRight,
          holdersRight,
          argPos,
          ary2,
          arity
        ];
        if (data) {
          mergeData(newData, data);
        }
        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined$12 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
        if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
          bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
        }
        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result2 = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result2 = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
          result2 = createPartial(func, bitmask, thisArg, partials);
        } else {
          result2 = createHybrid.apply(undefined$12, newData);
        }
        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result2, newData), func, bitmask);
      }
      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined$12 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }
        return objValue;
      }
      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined$12, customDefaultsMerge, stack);
          stack["delete"](srcValue);
        }
        return objValue;
      }
      function customOmitClone(value) {
        return isPlainObject(value) ? undefined$12 : value;
      }
      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index = -1, result2 = true, seen2 = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$12;
        stack.set(array, other);
        stack.set(other, array);
        while (++index < arrLength) {
          var arrValue = array[index], othValue = other[index];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }
          if (compared !== undefined$12) {
            if (compared) {
              continue;
            }
            result2 = false;
            break;
          }
          if (seen2) {
            if (!arraySome(other, function (othValue2, othIndex) {
              if (!cacheHas(seen2, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                return seen2.push(othIndex);
              }
            })) {
              result2 = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result2 = false;
            break;
          }
        }
        stack["delete"](array);
        stack["delete"](other);
        return result2;
      }
      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
              return false;
            }
            return true;
          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);
          case errorTag:
            return object.name == other.name && object.message == other.message;
          case regexpTag:
          case stringTag:
            return object == other + "";
          case mapTag:
            var convert = mapToArray;
          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack["delete"](object);
            return result2;
          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
        }
        return false;
      }
      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index = objLength;
        while (index--) {
          var key = objProps[index];
          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result2 = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key], othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === undefined$12 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result2 = false;
            break;
          }
          skipCtor || (skipCtor = key == "constructor");
        }
        if (result2 && !skipCtor) {
          var objCtor = object.constructor, othCtor = other.constructor;
          if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
            result2 = false;
          }
        }
        stack["delete"](object);
        stack["delete"](other);
        return result2;
      }
      function flatRest(func) {
        return setToString(overRest(func, undefined$12, flatten), func + "");
      }
      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }
      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }
      var getData = !metaMap ? noop2 : function (func) {
        return metaMap.get(func);
      };
      function getFuncName(func) {
        var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
        while (length--) {
          var data = array[length], otherFunc = data.func;
          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }
        return result2;
      }
      function getHolder(func) {
        var object = hasOwnProperty.call(lodash2, "placeholder") ? lodash2 : func;
        return object.placeholder;
      }
      function getIteratee() {
        var result2 = lodash2.iteratee || iteratee;
        result2 = result2 === iteratee ? baseIteratee : result2;
        return arguments.length ? result2(arguments[0], arguments[1]) : result2;
      }
      function getMapData(map2, key) {
        var data = map2.__data__;
        return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      function getMatchData(object) {
        var result2 = keys(object), length = result2.length;
        while (length--) {
          var key = result2[length], value = object[key];
          result2[length] = [key, value, isStrictComparable(value)];
        }
        return result2;
      }
      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined$12;
      }
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
        try {
          value[symToStringTag] = undefined$12;
          var unmasked = true;
        } catch (e2) {
        }
        var result2 = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result2;
      }
      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }
        object = Object2(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result2 = [];
        while (object) {
          arrayPush(result2, getSymbols(object));
          object = getPrototype(object);
        }
        return result2;
      };
      var getTag = baseGetTag;
      if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
        getTag = function (value) {
          var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined$12, ctorString = Ctor ? toSource(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;
              case mapCtorString:
                return mapTag;
              case promiseCtorString:
                return promiseTag;
              case setCtorString:
                return setTag;
              case weakMapCtorString:
                return weakMapTag;
            }
          }
          return result2;
        };
      }
      function getView(start, end, transforms) {
        var index = -1, length = transforms.length;
        while (++index < length) {
          var data = transforms[index], size2 = data.size;
          switch (data.type) {
            case "drop":
              start += size2;
              break;
            case "dropRight":
              end -= size2;
              break;
            case "take":
              end = nativeMin(end, start + size2);
              break;
            case "takeRight":
              start = nativeMax(start, end - size2);
              break;
          }
        }
        return { "start": start, "end": end };
      }
      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }
      function hasPath(object, path2, hasFunc) {
        path2 = castPath(path2, object);
        var index = -1, length = path2.length, result2 = false;
        while (++index < length) {
          var key = toKey(path2[index]);
          if (!(result2 = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result2 || ++index != length) {
          return result2;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray2(object) || isArguments(object));
      }
      function initCloneArray(array) {
        var length = array.length, result2 = new array.constructor(length);
        if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
          result2.index = array.index;
          result2.input = array.input;
        }
        return result2;
      }
      function initCloneObject(object) {
        return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }
      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);
          case boolTag:
          case dateTag:
            return new Ctor(+object);
          case dataViewTag:
            return cloneDataView(object, isDeep);
          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);
          case mapTag:
            return new Ctor();
          case numberTag:
          case stringTag:
            return new Ctor(object);
          case regexpTag:
            return cloneRegExp(object);
          case setTag:
            return new Ctor();
          case symbolTag:
            return cloneSymbol(object);
        }
      }
      function insertWrapDetails(source, details) {
        var length = details.length;
        if (!length) {
          return source;
        }
        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
        details = details.join(length > 2 ? ", " : " ");
        return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
      }
      function isFlattenable(value) {
        return isArray2(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }
      function isIndex(value, length) {
        var type2 = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type2 == "number" || type2 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
      }
      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }
        var type2 = typeof index;
        if (type2 == "number" ? isArrayLike(object) && isIndex(index, object.length) : type2 == "string" && index in object) {
          return eq(object[index], value);
        }
        return false;
      }
      function isKey(value, object) {
        if (isArray2(value)) {
          return false;
        }
        var type2 = typeof value;
        if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value == null || isSymbol2(value)) {
          return true;
        }
        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
      }
      function isKeyable(value) {
        var type2 = typeof value;
        return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
      }
      function isLaziable(func) {
        var funcName = getFuncName(func), other = lodash2[funcName];
        if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
          return false;
        }
        if (func === other) {
          return true;
        }
        var data = getData(other);
        return !!data && func === data[0];
      }
      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }
      var isMaskable = coreJsData ? isFunction2 : stubFalse;
      function isPrototype(value) {
        var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
        return value === proto;
      }
      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }
      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== undefined$12 || key in Object2(object));
        };
      }
      function memoizeCapped(func) {
        var result2 = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }
          return key;
        });
        var cache = result2.cache;
        return result2;
      }
      function mergeData(data, source) {
        var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
        if (!(isCommon || isCombo)) {
          return data;
        }
        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }
        var value = source[3];
        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }
        value = source[5];
        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }
        value = source[7];
        if (value) {
          data[7] = value;
        }
        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }
        if (data[9] == null) {
          data[9] = source[9];
        }
        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }
      function nativeKeysIn(object) {
        var result2 = [];
        if (object != null) {
          for (var key in Object2(object)) {
            result2.push(key);
          }
        }
        return result2;
      }
      function objectToString2(value) {
        return nativeObjectToString.call(value);
      }
      function overRest(func, start, transform2) {
        start = nativeMax(start === undefined$12 ? func.length - 1 : start, 0);
        return function () {
          var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
          while (++index < length) {
            array[index] = args[start + index];
          }
          index = -1;
          var otherArgs = Array2(start + 1);
          while (++index < start) {
            otherArgs[index] = args[index];
          }
          otherArgs[start] = transform2(array);
          return apply(func, this, otherArgs);
        };
      }
      function parent(object, path2) {
        return path2.length < 2 ? object : baseGet(object, baseSlice(path2, 0, -1));
      }
      function reorder(array, indexes) {
        var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$12;
        }
        return array;
      }
      function safeGet(object, key) {
        if (key === "constructor" && typeof object[key] === "function") {
          return;
        }
        if (key == "__proto__") {
          return;
        }
        return object[key];
      }
      var setData = shortOut(baseSetData);
      var setTimeout2 = ctxSetTimeout || function (func, wait) {
        return root2.setTimeout(func, wait);
      };
      var setToString = shortOut(baseSetToString);
      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + "";
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }
      function shortOut(func) {
        var count = 0, lastCalled = 0;
        return function () {
          var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(undefined$12, arguments);
        };
      }
      function shuffleSelf(array, size2) {
        var index = -1, length = array.length, lastIndex = length - 1;
        size2 = size2 === undefined$12 ? length : size2;
        while (++index < size2) {
          var rand = baseRandom(index, lastIndex), value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }
        array.length = size2;
        return array;
      }
      var stringToPath3 = memoizeCapped(function (string) {
        var result2 = [];
        if (string.charCodeAt(0) === 46) {
          result2.push("");
        }
        string.replace(rePropName2, function (match, number, quote2, subString) {
          result2.push(quote2 ? subString.replace(reEscapeChar2, "$1") : number || match);
        });
        return result2;
      });
      function toKey(value) {
        if (typeof value == "string" || isSymbol2(value)) {
          return value;
        }
        var result2 = value + "";
        return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
      }
      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e2) {
          }
          try {
            return func + "";
          } catch (e2) {
          }
        }
        return "";
      }
      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = "_." + pair[0];
          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }
      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }
        var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result2.__actions__ = copyArray(wrapper.__actions__);
        result2.__index__ = wrapper.__index__;
        result2.__values__ = wrapper.__values__;
        return result2;
      }
      function chunk(array, size2, guard) {
        if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined$12) {
          size2 = 1;
        } else {
          size2 = nativeMax(toInteger(size2), 0);
        }
        var length = array == null ? 0 : array.length;
        if (!length || size2 < 1) {
          return [];
        }
        var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
        while (index < length) {
          result2[resIndex++] = baseSlice(array, index, index += size2);
        }
        return result2;
      }
      function compact3(array) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
        while (++index < length) {
          var value = array[index];
          if (value) {
            result2[resIndex++] = value;
          }
        }
        return result2;
      }
      function concat() {
        var length = arguments.length;
        if (!length) {
          return [];
        }
        var args = Array2(length - 1), array = arguments[0], index = length;
        while (index--) {
          args[index - 1] = arguments[index];
        }
        return arrayPush(isArray2(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }
      var difference = baseRest(function (array, values2) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
      });
      var differenceBy = baseRest(function (array, values2) {
        var iteratee2 = last(values2);
        if (isArrayLikeObject(iteratee2)) {
          iteratee2 = undefined$12;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
      });
      var differenceWith = baseRest(function (array, values2) {
        var comparator = last(values2);
        if (isArrayLikeObject(comparator)) {
          comparator = undefined$12;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined$12, comparator) : [];
      });
      function drop(array, n2, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n2 = guard || n2 === undefined$12 ? 1 : toInteger(n2);
        return baseSlice(array, n2 < 0 ? 0 : n2, length);
      }
      function dropRight(array, n2, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n2 = guard || n2 === undefined$12 ? 1 : toInteger(n2);
        n2 = length - n2;
        return baseSlice(array, 0, n2 < 0 ? 0 : n2);
      }
      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }
      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }
      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }
        return baseFill(array, value, start, end);
      }
      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }
      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length - 1;
        if (fromIndex !== undefined$12) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }
      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }
      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }
      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        depth = depth === undefined$12 ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }
      function fromPairs(pairs) {
        var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
        while (++index < length) {
          var pair = pairs[index];
          result2[pair[0]] = pair[1];
        }
        return result2;
      }
      function head(array) {
        return array && array.length ? array[0] : undefined$12;
      }
      function indexOf2(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseIndexOf(array, value, index);
      }
      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }
      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });
      var intersectionBy = baseRest(function (arrays) {
        var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
        if (iteratee2 === last(mapped)) {
          iteratee2 = undefined$12;
        } else {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
      });
      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == "function" ? comparator : undefined$12;
        if (comparator) {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$12, comparator) : [];
      });
      function join(array, separator) {
        return array == null ? "" : nativeJoin.call(array, separator);
      }
      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined$12;
      }
      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length;
        if (fromIndex !== undefined$12) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }
      function nth(array, n2) {
        return array && array.length ? baseNth(array, toInteger(n2)) : undefined$12;
      }
      var pull = baseRest(pullAll);
      function pullAll(array, values2) {
        return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
      }
      function pullAllBy(array, values2, iteratee2) {
        return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
      }
      function pullAllWith(array, values2, comparator) {
        return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined$12, comparator) : array;
      }
      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result2;
      });
      function remove(array, predicate) {
        var result2 = [];
        if (!(array && array.length)) {
          return result2;
        }
        var index = -1, indexes = [], length = array.length;
        predicate = getIteratee(predicate, 3);
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result2.push(value);
            indexes.push(index);
          }
        }
        basePullAt(array, indexes);
        return result2;
      }
      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }
      function slice2(array, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined$12 ? length : toInteger(end);
        }
        return baseSlice(array, start, end);
      }
      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }
      function sortedIndexBy(array, value, iteratee2) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
      }
      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value);
          if (index < length && eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }
      function sortedLastIndexBy(array, value, iteratee2) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
      }
      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;
          if (eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }
      function sortedUniqBy(array, iteratee2) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
      }
      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }
      function take(array, n2, guard) {
        if (!(array && array.length)) {
          return [];
        }
        n2 = guard || n2 === undefined$12 ? 1 : toInteger(n2);
        return baseSlice(array, 0, n2 < 0 ? 0 : n2);
      }
      function takeRight(array, n2, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n2 = guard || n2 === undefined$12 ? 1 : toInteger(n2);
        n2 = length - n2;
        return baseSlice(array, n2 < 0 ? 0 : n2, length);
      }
      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }
      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }
      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });
      var unionBy = baseRest(function (arrays) {
        var iteratee2 = last(arrays);
        if (isArrayLikeObject(iteratee2)) {
          iteratee2 = undefined$12;
        }
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
      });
      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == "function" ? comparator : undefined$12;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$12, comparator);
      });
      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }
      function uniqBy(array, iteratee2) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
      }
      function uniqWith(array, comparator) {
        comparator = typeof comparator == "function" ? comparator : undefined$12;
        return array && array.length ? baseUniq(array, undefined$12, comparator) : [];
      }
      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }
        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }
      function unzipWith(array, iteratee2) {
        if (!(array && array.length)) {
          return [];
        }
        var result2 = unzip(array);
        if (iteratee2 == null) {
          return result2;
        }
        return arrayMap(result2, function (group) {
          return apply(iteratee2, undefined$12, group);
        });
      }
      var without = baseRest(function (array, values2) {
        return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
      });
      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });
      var xorBy = baseRest(function (arrays) {
        var iteratee2 = last(arrays);
        if (isArrayLikeObject(iteratee2)) {
          iteratee2 = undefined$12;
        }
        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
      });
      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == "function" ? comparator : undefined$12;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$12, comparator);
      });
      var zip = baseRest(unzip);
      function zipObject(props, values2) {
        return baseZipObject(props || [], values2 || [], assignValue);
      }
      function zipObjectDeep(props, values2) {
        return baseZipObject(props || [], values2 || [], baseSet);
      }
      var zipWith = baseRest(function (arrays) {
        var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined$12;
        iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined$12;
        return unzipWith(arrays, iteratee2);
      });
      function chain(value) {
        var result2 = lodash2(value);
        result2.__chain__ = true;
        return result2;
      }
      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }
      function thru(value, interceptor) {
        return interceptor(value);
      }
      var wrapperAt = flatRest(function (paths) {
        var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function (object) {
          return baseAt(object, paths);
        };
        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }
        value = value.slice(start, +start + (length ? 1 : 0));
        value.__actions__.push({
          "func": thru,
          "args": [interceptor],
          "thisArg": undefined$12
        });
        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined$12);
          }
          return array;
        });
      });
      function wrapperChain() {
        return chain(this);
      }
      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }
      function wrapperNext() {
        if (this.__values__ === undefined$12) {
          this.__values__ = toArray(this.value());
        }
        var done = this.__index__ >= this.__values__.length, value = done ? undefined$12 : this.__values__[this.__index__++];
        return { "done": done, "value": value };
      }
      function wrapperToIterator() {
        return this;
      }
      function wrapperPlant(value) {
        var result2, parent2 = this;
        while (parent2 instanceof baseLodash) {
          var clone2 = wrapperClone(parent2);
          clone2.__index__ = 0;
          clone2.__values__ = undefined$12;
          if (result2) {
            previous.__wrapped__ = clone2;
          } else {
            result2 = clone2;
          }
          var previous = clone2;
          parent2 = parent2.__wrapped__;
        }
        previous.__wrapped__ = value;
        return result2;
      }
      function wrapperReverse() {
        var value = this.__wrapped__;
        if (value instanceof LazyWrapper) {
          var wrapped = value;
          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }
          wrapped = wrapped.reverse();
          wrapped.__actions__.push({
            "func": thru,
            "args": [reverse],
            "thisArg": undefined$12
          });
          return new LodashWrapper(wrapped, this.__chain__);
        }
        return this.thru(reverse);
      }
      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }
      var countBy = createAggregator(function (result2, value, key) {
        if (hasOwnProperty.call(result2, key)) {
          ++result2[key];
        } else {
          baseAssignValue(result2, key, 1);
        }
      });
      function every(collection, predicate, guard) {
        var func = isArray2(collection) ? arrayEvery : baseEvery;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$12;
        }
        return func(collection, getIteratee(predicate, 3));
      }
      function filter(collection, predicate) {
        var func = isArray2(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }
      var find = createFind(findIndex);
      var findLast = createFind(findLastIndex);
      function flatMap(collection, iteratee2) {
        return baseFlatten(map(collection, iteratee2), 1);
      }
      function flatMapDeep(collection, iteratee2) {
        return baseFlatten(map(collection, iteratee2), INFINITY);
      }
      function flatMapDepth(collection, iteratee2, depth) {
        depth = depth === undefined$12 ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee2), depth);
      }
      function forEach2(collection, iteratee2) {
        var func = isArray2(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee2, 3));
      }
      function forEachRight(collection, iteratee2) {
        var func = isArray2(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee2, 3));
      }
      var groupBy = createAggregator(function (result2, value, key) {
        if (hasOwnProperty.call(result2, key)) {
          result2[key].push(value);
        } else {
          baseAssignValue(result2, key, [value]);
        }
      });
      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;
        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }
        return isString2(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }
      var invokeMap = baseRest(function (collection, path2, args) {
        var index = -1, isFunc = typeof path2 == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
        baseEach(collection, function (value) {
          result2[++index] = isFunc ? apply(path2, value, args) : baseInvoke(value, path2, args);
        });
        return result2;
      });
      var keyBy = createAggregator(function (result2, value, key) {
        baseAssignValue(result2, key, value);
      });
      function map(collection, iteratee2) {
        var func = isArray2(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee2, 3));
      }
      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }
        if (!isArray2(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }
        orders = guard ? undefined$12 : orders;
        if (!isArray2(orders)) {
          orders = orders == null ? [] : [orders];
        }
        return baseOrderBy(collection, iteratees, orders);
      }
      var partition = createAggregator(function (result2, value, key) {
        result2[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });
      function reduce(collection, iteratee2, accumulator) {
        var func = isArray2(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
      }
      function reduceRight(collection, iteratee2, accumulator) {
        var func = isArray2(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
      }
      function reject(collection, predicate) {
        var func = isArray2(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }
      function sample(collection) {
        var func = isArray2(collection) ? arraySample : baseSample;
        return func(collection);
      }
      function sampleSize(collection, n2, guard) {
        if (guard ? isIterateeCall(collection, n2, guard) : n2 === undefined$12) {
          n2 = 1;
        } else {
          n2 = toInteger(n2);
        }
        var func = isArray2(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n2);
      }
      function shuffle(collection) {
        var func = isArray2(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }
      function size(collection) {
        if (collection == null) {
          return 0;
        }
        if (isArrayLike(collection)) {
          return isString2(collection) ? stringSize(collection) : collection.length;
        }
        var tag = getTag(collection);
        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }
        return baseKeys(collection).length;
      }
      function some(collection, predicate, guard) {
        var func = isArray2(collection) ? arraySome : baseSome;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$12;
        }
        return func(collection, getIteratee(predicate, 3));
      }
      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }
        var length = iteratees.length;
        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }
        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });
      var now2 = ctxNow || function () {
        return root2.Date.now();
      };
      function after(n2, func) {
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        n2 = toInteger(n2);
        return function () {
          if (--n2 < 1) {
            return func.apply(this, arguments);
          }
        };
      }
      function ary(func, n2, guard) {
        n2 = guard ? undefined$12 : n2;
        n2 = func && n2 == null ? func.length : n2;
        return createWrap(func, WRAP_ARY_FLAG, undefined$12, undefined$12, undefined$12, undefined$12, n2);
      }
      function before(n2, func) {
        var result2;
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        n2 = toInteger(n2);
        return function () {
          if (--n2 > 0) {
            result2 = func.apply(this, arguments);
          }
          if (n2 <= 1) {
            func = undefined$12;
          }
          return result2;
        };
      }
      var bind3 = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind3));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(func, bitmask, thisArg, partials, holders);
      });
      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(key, bitmask, object, partials, holders);
      });
      function curry(func, arity, guard) {
        arity = guard ? undefined$12 : arity;
        var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined$12, undefined$12, undefined$12, undefined$12, undefined$12, arity);
        result2.placeholder = curry.placeholder;
        return result2;
      }
      function curryRight(func, arity, guard) {
        arity = guard ? undefined$12 : arity;
        var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$12, undefined$12, undefined$12, undefined$12, undefined$12, arity);
        result2.placeholder = curryRight.placeholder;
        return result2;
      }
      function debounce(func, wait, options) {
        var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject(options)) {
          leading = !!options.leading;
          maxing = "maxWait" in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time) {
          var args = lastArgs, thisArg = lastThis;
          lastArgs = lastThis = undefined$12;
          lastInvokeTime = time;
          result2 = func.apply(thisArg, args);
          return result2;
        }
        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout2(timerExpired, wait);
          return leading ? invokeFunc(time) : result2;
        }
        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === undefined$12 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time = now2();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          timerId = setTimeout2(timerExpired, remainingWait(time));
        }
        function trailingEdge(time) {
          timerId = undefined$12;
          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = undefined$12;
          return result2;
        }
        function cancel() {
          if (timerId !== undefined$12) {
            clearTimeout2(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined$12;
        }
        function flush() {
          return timerId === undefined$12 ? result2 : trailingEdge(now2());
        }
        function debounced() {
          var time = now2(), isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;
          if (isInvoking) {
            if (timerId === undefined$12) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout2(timerId);
              timerId = setTimeout2(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === undefined$12) {
            timerId = setTimeout2(timerExpired, wait);
          }
          return result2;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }
      var defer2 = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });
      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });
      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }
      function memoize(func, resolver) {
        if (typeof func != "function" || resolver != null && typeof resolver != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        var memoized = function () {
          var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result2 = func.apply(this, args);
          memoized.cache = cache.set(key, result2) || cache;
          return result2;
        };
        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }
      memoize.Cache = MapCache;
      function negate(predicate) {
        if (typeof predicate != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return !predicate.call(this);
            case 1:
              return !predicate.call(this, args[0]);
            case 2:
              return !predicate.call(this, args[0], args[1]);
            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }
          return !predicate.apply(this, args);
        };
      }
      function once(func) {
        return before(2, func);
      }
      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray2(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1, length = nativeMin(args.length, funcsLength);
          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }
          return apply(func, this, args);
        });
      });
      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined$12, partials, holders);
      });
      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$12, partials, holders);
      });
      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined$12, undefined$12, undefined$12, indexes);
      });
      function rest(func, start) {
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        start = start === undefined$12 ? start : toInteger(start);
        return baseRest(func, start);
      }
      function spread(func, start) {
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start], otherArgs = castSlice(args, 0, start);
          if (array) {
            arrayPush(otherArgs, array);
          }
          return apply(func, this, otherArgs);
        });
      }
      function throttle(func, wait, options) {
        var leading = true, trailing = true;
        if (typeof func != "function") {
          throw new TypeError2(FUNC_ERROR_TEXT);
        }
        if (isObject(options)) {
          leading = "leading" in options ? !!options.leading : leading;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        return debounce(func, wait, {
          "leading": leading,
          "maxWait": wait,
          "trailing": trailing
        });
      }
      function unary(func) {
        return ary(func, 1);
      }
      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }
      function castArray() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray2(value) ? value : [value];
      }
      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }
      function cloneWith(value, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }
      function cloneDeep(value) {
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }
      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
      }
      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }
      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }
      var gt = createRelationalOperation(baseGt);
      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });
      var isArguments = baseIsArguments(/* @__PURE__ */ function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
      };
      var isArray2 = Array2.isArray;
      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction2(value);
      }
      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }
      function isBoolean2(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }
      var isBuffer3 = nativeIsBuffer || stubFalse;
      var isDate2 = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
      function isElement2(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }
      function isEmpty(value) {
        if (value == null) {
          return true;
        }
        if (isArrayLike(value) && (isArray2(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer3(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }
        var tag = getTag(value);
        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }
        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }
        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }
        return true;
      }
      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }
      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        var result2 = customizer ? customizer(value, other) : undefined$12;
        return result2 === undefined$12 ? baseIsEqual(value, other, undefined$12, customizer) : !!result2;
      }
      function isError2(value) {
        if (!isObjectLike(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
      }
      function isFinite2(value) {
        return typeof value == "number" && nativeIsFinite(value);
      }
      function isFunction2(value) {
        if (!isObject(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }
      function isInteger(value) {
        return typeof value == "number" && value == toInteger(value);
      }
      function isLength(value) {
        return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }
      function isObject(value) {
        var type2 = typeof value;
        return value != null && (type2 == "object" || type2 == "function");
      }
      function isObjectLike(value) {
        return value != null && typeof value == "object";
      }
      var isMap2 = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }
      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }
      function isNaN2(value) {
        return isNumber2(value) && value != +value;
      }
      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error2(CORE_ERROR_TEXT);
        }
        return baseIsNative(value);
      }
      function isNull(value) {
        return value === null;
      }
      function isNil(value) {
        return value == null;
      }
      function isNumber2(value) {
        return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
      }
      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }
        var proto = getPrototype(value);
        if (proto === null) {
          return true;
        }
        var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
        return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }
      var isRegExp3 = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
      function isSafeInteger(value) {
        return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
      }
      var isSet2 = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
      function isString2(value) {
        return typeof value == "string" || !isArray2(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }
      function isSymbol2(value) {
        return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }
      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
      function isUndefined(value) {
        return value === undefined$12;
      }
      function isWeakMap2(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }
      function isWeakSet2(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }
      var lt = createRelationalOperation(baseLt);
      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });
      function toArray(value) {
        if (!value) {
          return [];
        }
        if (isArrayLike(value)) {
          return isString2(value) ? stringToArray(value) : copyArray(value);
        }
        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }
        var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }
      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }
        value = toNumber(value);
        if (value === INFINITY || value === -INFINITY) {
          var sign2 = value < 0 ? -1 : 1;
          return sign2 * MAX_INTEGER;
        }
        return value === value ? value : 0;
      }
      function toInteger(value) {
        var result2 = toFinite(value), remainder = result2 % 1;
        return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
      }
      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }
      function toNumber(value) {
        if (typeof value == "number") {
          return value;
        }
        if (isSymbol2(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other = typeof value.valueOf == "function" ? value.valueOf() : value;
          value = isObject(other) ? other + "" : other;
        }
        if (typeof value != "string") {
          return value === 0 ? value : +value;
        }
        value = baseTrim(value);
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }
      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }
      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }
      function toString(value) {
        return value == null ? "" : baseToString(value);
      }
      var assign2 = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });
      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });
      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });
      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });
      var at = flatRest(baseAt);
      function create2(prototype, properties) {
        var result2 = baseCreate(prototype);
        return properties == null ? result2 : baseAssign(result2, properties);
      }
      var defaults2 = baseRest(function (object, sources) {
        object = Object2(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined$12;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }
        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;
          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];
            if (value === undefined$12 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }
        return object;
      });
      var defaultsDeep = baseRest(function (args) {
        args.push(undefined$12, customDefaultsMerge);
        return apply(mergeWith, undefined$12, args);
      });
      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }
      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }
      function forIn(object, iteratee2) {
        return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
      }
      function forInRight(object, iteratee2) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
      }
      function forOwn(object, iteratee2) {
        return object && baseForOwn(object, getIteratee(iteratee2, 3));
      }
      function forOwnRight(object, iteratee2) {
        return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
      }
      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }
      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }
      function get2(object, path2, defaultValue) {
        var result2 = object == null ? undefined$12 : baseGet(object, path2);
        return result2 === undefined$12 ? defaultValue : result2;
      }
      function has2(object, path2) {
        return object != null && hasPath(object, path2, baseHas);
      }
      function hasIn(object, path2) {
        return object != null && hasPath(object, path2, baseHasIn);
      }
      var invert = createInverter(function (result2, value, key) {
        if (value != null && typeof value.toString != "function") {
          value = nativeObjectToString.call(value);
        }
        result2[value] = key;
      }, constant(identity2));
      var invertBy = createInverter(function (result2, value, key) {
        if (value != null && typeof value.toString != "function") {
          value = nativeObjectToString.call(value);
        }
        if (hasOwnProperty.call(result2, value)) {
          result2[value].push(key);
        } else {
          result2[value] = [key];
        }
      }, getIteratee);
      var invoke = baseRest(baseInvoke);
      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }
      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }
      function mapKeys(object, iteratee2) {
        var result2 = {};
        iteratee2 = getIteratee(iteratee2, 3);
        baseForOwn(object, function (value, key, object2) {
          baseAssignValue(result2, iteratee2(value, key, object2), value);
        });
        return result2;
      }
      function mapValues(object, iteratee2) {
        var result2 = {};
        iteratee2 = getIteratee(iteratee2, 3);
        baseForOwn(object, function (value, key, object2) {
          baseAssignValue(result2, key, iteratee2(value, key, object2));
        });
        return result2;
      }
      var merge3 = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      var omit = flatRest(function (object, paths) {
        var result2 = {};
        if (object == null) {
          return result2;
        }
        var isDeep = false;
        paths = arrayMap(paths, function (path2) {
          path2 = castPath(path2, object);
          isDeep || (isDeep = path2.length > 1);
          return path2;
        });
        copyObject(object, getAllKeysIn(object), result2);
        if (isDeep) {
          result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
        }
        var length = paths.length;
        while (length--) {
          baseUnset(result2, paths[length]);
        }
        return result2;
      });
      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }
      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });
      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }
        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path2) {
          return predicate(value, path2[0]);
        });
      }
      function result(object, path2, defaultValue) {
        path2 = castPath(path2, object);
        var index = -1, length = path2.length;
        if (!length) {
          length = 1;
          object = undefined$12;
        }
        while (++index < length) {
          var value = object == null ? undefined$12 : object[toKey(path2[index])];
          if (value === undefined$12) {
            index = length;
            value = defaultValue;
          }
          object = isFunction2(value) ? value.call(object) : value;
        }
        return object;
      }
      function set(object, path2, value) {
        return object == null ? object : baseSet(object, path2, value);
      }
      function setWith(object, path2, value, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        return object == null ? object : baseSet(object, path2, value, customizer);
      }
      var toPairs = createToPairs(keys);
      var toPairsIn = createToPairs(keysIn);
      function transform(object, iteratee2, accumulator) {
        var isArr = isArray2(object), isArrLike = isArr || isBuffer3(object) || isTypedArray(object);
        iteratee2 = getIteratee(iteratee2, 4);
        if (accumulator == null) {
          var Ctor = object && object.constructor;
          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction2(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }
        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object2) {
          return iteratee2(accumulator, value, index, object2);
        });
        return accumulator;
      }
      function unset(object, path2) {
        return object == null ? true : baseUnset(object, path2);
      }
      function update(object, path2, updater) {
        return object == null ? object : baseUpdate(object, path2, castFunction(updater));
      }
      function updateWith(object, path2, updater, customizer) {
        customizer = typeof customizer == "function" ? customizer : undefined$12;
        return object == null ? object : baseUpdate(object, path2, castFunction(updater), customizer);
      }
      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }
      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }
      function clamp(number, lower, upper) {
        if (upper === undefined$12) {
          upper = lower;
          lower = undefined$12;
        }
        if (upper !== undefined$12) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }
        if (lower !== undefined$12) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }
        return baseClamp(toNumber(number), lower, upper);
      }
      function inRange(number, start, end) {
        start = toFinite(start);
        if (end === undefined$12) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        number = toNumber(number);
        return baseInRange(number, start, end);
      }
      function random(lower, upper, floating) {
        if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined$12;
        }
        if (floating === undefined$12) {
          if (typeof upper == "boolean") {
            floating = upper;
            upper = undefined$12;
          } else if (typeof lower == "boolean") {
            floating = lower;
            lower = undefined$12;
          }
        }
        if (lower === undefined$12 && upper === undefined$12) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);
          if (upper === undefined$12) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }
        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }
        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
        }
        return baseRandom(lower, upper);
      }
      var camelCase = createCompounder(function (result2, word, index) {
        word = word.toLowerCase();
        return result2 + (index ? capitalize2(word) : word);
      });
      function capitalize2(string) {
        return upperFirst(toString(string).toLowerCase());
      }
      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
      }
      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined$12 ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }
      function escape2(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }
      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
      }
      var kebabCase = createCompounder(function (result2, word, index) {
        return result2 + (index ? "-" : "") + word.toLowerCase();
      });
      var lowerCase = createCompounder(function (result2, word, index) {
        return result2 + (index ? " " : "") + word.toLowerCase();
      });
      var lowerFirst = createCaseFirst("toLowerCase");
      function pad(string, length, chars2) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        if (!length || strLength >= length) {
          return string;
        }
        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars2) + string + createPadding(nativeCeil(mid), chars2);
      }
      function padEnd(string, length, chars2) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars2) : string;
      }
      function padStart(string, length, chars2) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars2) + string : string;
      }
      function parseInt2(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }
        return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
      }
      function repeat2(string, n2, guard) {
        if (guard ? isIterateeCall(string, n2, guard) : n2 === undefined$12) {
          n2 = 1;
        } else {
          n2 = toInteger(n2);
        }
        return baseRepeat(toString(string), n2);
      }
      function replace2() {
        var args = arguments, string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }
      var snakeCase = createCompounder(function (result2, word, index) {
        return result2 + (index ? "_" : "") + word.toLowerCase();
      });
      function split(string, separator, limit2) {
        if (limit2 && typeof limit2 != "number" && isIterateeCall(string, separator, limit2)) {
          separator = limit2 = undefined$12;
        }
        limit2 = limit2 === undefined$12 ? MAX_ARRAY_LENGTH : limit2 >>> 0;
        if (!limit2) {
          return [];
        }
        string = toString(string);
        if (string && (typeof separator == "string" || separator != null && !isRegExp3(separator))) {
          separator = baseToString(separator);
          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit2);
          }
        }
        return string.split(separator, limit2);
      }
      var startCase = createCompounder(function (result2, word, index) {
        return result2 + (index ? " " : "") + upperFirst(word);
      });
      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }
      function template(string, options, guard) {
        var settings = lodash2.templateSettings;
        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined$12;
        }
        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
        var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
        var reDelimiters = RegExp2(
          (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
          "g"
        );
        var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);
          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }
          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }
          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }
          index = offset + match.length;
          return match;
        });
        source += "';\n";
        var variable = hasOwnProperty.call(options, "variable") && options.variable;
        if (!variable) {
          source = "with (obj) {\n" + source + "\n}\n";
        } else if (reForbiddenIdentifierChars.test(variable)) {
          throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
        }
        source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
        source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
        var result2 = attempt(function () {
          return Function2(importsKeys, sourceURL + "return " + source).apply(undefined$12, importsValues);
        });
        result2.source = source;
        if (isError2(result2)) {
          throw result2;
        }
        return result2;
      }
      function toLower(value) {
        return toString(value).toLowerCase();
      }
      function toUpper(value) {
        return toString(value).toUpperCase();
      }
      function trim(string, chars2, guard) {
        string = toString(string);
        if (string && (guard || chars2 === undefined$12)) {
          return baseTrim(string);
        }
        if (!string || !(chars2 = baseToString(chars2))) {
          return string;
        }
        var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars2), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join("");
      }
      function trimEnd(string, chars2, guard) {
        string = toString(string);
        if (string && (guard || chars2 === undefined$12)) {
          return string.slice(0, trimmedEndIndex(string) + 1);
        }
        if (!string || !(chars2 = baseToString(chars2))) {
          return string;
        }
        var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars2)) + 1;
        return castSlice(strSymbols, 0, end).join("");
      }
      function trimStart(string, chars2, guard) {
        string = toString(string);
        if (string && (guard || chars2 === undefined$12)) {
          return string.replace(reTrimStart, "");
        }
        if (!string || !(chars2 = baseToString(chars2))) {
          return string;
        }
        var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars2));
        return castSlice(strSymbols, start).join("");
      }
      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
        if (isObject(options)) {
          var separator = "separator" in options ? options.separator : separator;
          length = "length" in options ? toInteger(options.length) : length;
          omission = "omission" in options ? baseToString(options.omission) : omission;
        }
        string = toString(string);
        var strLength = string.length;
        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }
        if (length >= strLength) {
          return string;
        }
        var end = length - stringSize(omission);
        if (end < 1) {
          return omission;
        }
        var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
        if (separator === undefined$12) {
          return result2 + omission;
        }
        if (strSymbols) {
          end += result2.length - end;
        }
        if (isRegExp3(separator)) {
          if (string.slice(end).search(separator)) {
            var match, substring = result2;
            if (!separator.global) {
              separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
            }
            separator.lastIndex = 0;
            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }
            result2 = result2.slice(0, newEnd === undefined$12 ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result2.lastIndexOf(separator);
          if (index > -1) {
            result2 = result2.slice(0, index);
          }
        }
        return result2 + omission;
      }
      function unescape2(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }
      var upperCase = createCompounder(function (result2, word, index) {
        return result2 + (index ? " " : "") + word.toUpperCase();
      });
      var upperFirst = createCaseFirst("toUpperCase");
      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined$12 : pattern;
        if (pattern === undefined$12) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }
        return string.match(pattern) || [];
      }
      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined$12, args);
        } catch (e2) {
          return isError2(e2) ? e2 : new Error2(e2);
        }
      });
      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind3(object[key], object));
        });
        return object;
      });
      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;
          while (++index < length) {
            var pair = pairs[index];
            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }
      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }
      function constant(value) {
        return function () {
          return value;
        };
      }
      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }
      var flow = createFlow();
      var flowRight = createFlow(true);
      function identity2(value) {
        return value;
      }
      function iteratee(func) {
        return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
      }
      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }
      function matchesProperty(path2, srcValue) {
        return baseMatchesProperty(path2, baseClone(srcValue, CLONE_DEEP_FLAG));
      }
      var method = baseRest(function (path2, args) {
        return function (object) {
          return baseInvoke(object, path2, args);
        };
      });
      var methodOf = baseRest(function (object, args) {
        return function (path2) {
          return baseInvoke(object, path2, args);
        };
      });
      function mixin(object, source, options) {
        var props = keys(source), methodNames = baseFunctions(source, props);
        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }
        var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction2(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;
          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;
              if (chain2 || chainAll) {
                var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                actions.push({ "func": func, "args": arguments, "thisArg": object });
                result2.__chain__ = chainAll;
                return result2;
              }
              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }
      function noConflict() {
        if (root2._ === this) {
          root2._ = oldDash;
        }
        return this;
      }
      function noop2() {
      }
      function nthArg(n2) {
        n2 = toInteger(n2);
        return baseRest(function (args) {
          return baseNth(args, n2);
        });
      }
      var over = createOver(arrayMap);
      var overEvery = createOver(arrayEvery);
      var overSome = createOver(arraySome);
      function property(path2) {
        return isKey(path2) ? baseProperty(toKey(path2)) : basePropertyDeep(path2);
      }
      function propertyOf(object) {
        return function (path2) {
          return object == null ? undefined$12 : baseGet(object, path2);
        };
      }
      var range2 = createRange();
      var rangeRight = createRange(true);
      function stubArray() {
        return [];
      }
      function stubFalse() {
        return false;
      }
      function stubObject() {
        return {};
      }
      function stubString() {
        return "";
      }
      function stubTrue() {
        return true;
      }
      function times(n2, iteratee2) {
        n2 = toInteger(n2);
        if (n2 < 1 || n2 > MAX_SAFE_INTEGER) {
          return [];
        }
        var index = MAX_ARRAY_LENGTH, length = nativeMin(n2, MAX_ARRAY_LENGTH);
        iteratee2 = getIteratee(iteratee2);
        n2 -= MAX_ARRAY_LENGTH;
        var result2 = baseTimes(length, iteratee2);
        while (++index < n2) {
          iteratee2(index);
        }
        return result2;
      }
      function toPath(value) {
        if (isArray2(value)) {
          return arrayMap(value, toKey);
        }
        return isSymbol2(value) ? [value] : copyArray(stringToPath3(toString(value)));
      }
      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }
      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);
      var ceil = createRound("ceil");
      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);
      var floor = createRound("floor");
      function max2(array) {
        return array && array.length ? baseExtremum(array, identity2, baseGt) : undefined$12;
      }
      function maxBy(array, iteratee2) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined$12;
      }
      function mean(array) {
        return baseMean(array, identity2);
      }
      function meanBy(array, iteratee2) {
        return baseMean(array, getIteratee(iteratee2, 2));
      }
      function min(array) {
        return array && array.length ? baseExtremum(array, identity2, baseLt) : undefined$12;
      }
      function minBy(array, iteratee2) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined$12;
      }
      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);
      var round = createRound("round");
      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);
      function sum(array) {
        return array && array.length ? baseSum(array, identity2) : 0;
      }
      function sumBy(array, iteratee2) {
        return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
      }
      lodash2.after = after;
      lodash2.ary = ary;
      lodash2.assign = assign2;
      lodash2.assignIn = assignIn;
      lodash2.assignInWith = assignInWith;
      lodash2.assignWith = assignWith;
      lodash2.at = at;
      lodash2.before = before;
      lodash2.bind = bind3;
      lodash2.bindAll = bindAll;
      lodash2.bindKey = bindKey;
      lodash2.castArray = castArray;
      lodash2.chain = chain;
      lodash2.chunk = chunk;
      lodash2.compact = compact3;
      lodash2.concat = concat;
      lodash2.cond = cond;
      lodash2.conforms = conforms;
      lodash2.constant = constant;
      lodash2.countBy = countBy;
      lodash2.create = create2;
      lodash2.curry = curry;
      lodash2.curryRight = curryRight;
      lodash2.debounce = debounce;
      lodash2.defaults = defaults2;
      lodash2.defaultsDeep = defaultsDeep;
      lodash2.defer = defer2;
      lodash2.delay = delay;
      lodash2.difference = difference;
      lodash2.differenceBy = differenceBy;
      lodash2.differenceWith = differenceWith;
      lodash2.drop = drop;
      lodash2.dropRight = dropRight;
      lodash2.dropRightWhile = dropRightWhile;
      lodash2.dropWhile = dropWhile;
      lodash2.fill = fill;
      lodash2.filter = filter;
      lodash2.flatMap = flatMap;
      lodash2.flatMapDeep = flatMapDeep;
      lodash2.flatMapDepth = flatMapDepth;
      lodash2.flatten = flatten;
      lodash2.flattenDeep = flattenDeep;
      lodash2.flattenDepth = flattenDepth;
      lodash2.flip = flip;
      lodash2.flow = flow;
      lodash2.flowRight = flowRight;
      lodash2.fromPairs = fromPairs;
      lodash2.functions = functions;
      lodash2.functionsIn = functionsIn;
      lodash2.groupBy = groupBy;
      lodash2.initial = initial;
      lodash2.intersection = intersection;
      lodash2.intersectionBy = intersectionBy;
      lodash2.intersectionWith = intersectionWith;
      lodash2.invert = invert;
      lodash2.invertBy = invertBy;
      lodash2.invokeMap = invokeMap;
      lodash2.iteratee = iteratee;
      lodash2.keyBy = keyBy;
      lodash2.keys = keys;
      lodash2.keysIn = keysIn;
      lodash2.map = map;
      lodash2.mapKeys = mapKeys;
      lodash2.mapValues = mapValues;
      lodash2.matches = matches;
      lodash2.matchesProperty = matchesProperty;
      lodash2.memoize = memoize;
      lodash2.merge = merge3;
      lodash2.mergeWith = mergeWith;
      lodash2.method = method;
      lodash2.methodOf = methodOf;
      lodash2.mixin = mixin;
      lodash2.negate = negate;
      lodash2.nthArg = nthArg;
      lodash2.omit = omit;
      lodash2.omitBy = omitBy;
      lodash2.once = once;
      lodash2.orderBy = orderBy;
      lodash2.over = over;
      lodash2.overArgs = overArgs;
      lodash2.overEvery = overEvery;
      lodash2.overSome = overSome;
      lodash2.partial = partial;
      lodash2.partialRight = partialRight;
      lodash2.partition = partition;
      lodash2.pick = pick;
      lodash2.pickBy = pickBy;
      lodash2.property = property;
      lodash2.propertyOf = propertyOf;
      lodash2.pull = pull;
      lodash2.pullAll = pullAll;
      lodash2.pullAllBy = pullAllBy;
      lodash2.pullAllWith = pullAllWith;
      lodash2.pullAt = pullAt;
      lodash2.range = range2;
      lodash2.rangeRight = rangeRight;
      lodash2.rearg = rearg;
      lodash2.reject = reject;
      lodash2.remove = remove;
      lodash2.rest = rest;
      lodash2.reverse = reverse;
      lodash2.sampleSize = sampleSize;
      lodash2.set = set;
      lodash2.setWith = setWith;
      lodash2.shuffle = shuffle;
      lodash2.slice = slice2;
      lodash2.sortBy = sortBy;
      lodash2.sortedUniq = sortedUniq;
      lodash2.sortedUniqBy = sortedUniqBy;
      lodash2.split = split;
      lodash2.spread = spread;
      lodash2.tail = tail;
      lodash2.take = take;
      lodash2.takeRight = takeRight;
      lodash2.takeRightWhile = takeRightWhile;
      lodash2.takeWhile = takeWhile;
      lodash2.tap = tap;
      lodash2.throttle = throttle;
      lodash2.thru = thru;
      lodash2.toArray = toArray;
      lodash2.toPairs = toPairs;
      lodash2.toPairsIn = toPairsIn;
      lodash2.toPath = toPath;
      lodash2.toPlainObject = toPlainObject;
      lodash2.transform = transform;
      lodash2.unary = unary;
      lodash2.union = union;
      lodash2.unionBy = unionBy;
      lodash2.unionWith = unionWith;
      lodash2.uniq = uniq;
      lodash2.uniqBy = uniqBy;
      lodash2.uniqWith = uniqWith;
      lodash2.unset = unset;
      lodash2.unzip = unzip;
      lodash2.unzipWith = unzipWith;
      lodash2.update = update;
      lodash2.updateWith = updateWith;
      lodash2.values = values;
      lodash2.valuesIn = valuesIn;
      lodash2.without = without;
      lodash2.words = words;
      lodash2.wrap = wrap;
      lodash2.xor = xor;
      lodash2.xorBy = xorBy;
      lodash2.xorWith = xorWith;
      lodash2.zip = zip;
      lodash2.zipObject = zipObject;
      lodash2.zipObjectDeep = zipObjectDeep;
      lodash2.zipWith = zipWith;
      lodash2.entries = toPairs;
      lodash2.entriesIn = toPairsIn;
      lodash2.extend = assignIn;
      lodash2.extendWith = assignInWith;
      mixin(lodash2, lodash2);
      lodash2.add = add;
      lodash2.attempt = attempt;
      lodash2.camelCase = camelCase;
      lodash2.capitalize = capitalize2;
      lodash2.ceil = ceil;
      lodash2.clamp = clamp;
      lodash2.clone = clone;
      lodash2.cloneDeep = cloneDeep;
      lodash2.cloneDeepWith = cloneDeepWith;
      lodash2.cloneWith = cloneWith;
      lodash2.conformsTo = conformsTo;
      lodash2.deburr = deburr;
      lodash2.defaultTo = defaultTo;
      lodash2.divide = divide;
      lodash2.endsWith = endsWith;
      lodash2.eq = eq;
      lodash2.escape = escape2;
      lodash2.escapeRegExp = escapeRegExp;
      lodash2.every = every;
      lodash2.find = find;
      lodash2.findIndex = findIndex;
      lodash2.findKey = findKey;
      lodash2.findLast = findLast;
      lodash2.findLastIndex = findLastIndex;
      lodash2.findLastKey = findLastKey;
      lodash2.floor = floor;
      lodash2.forEach = forEach2;
      lodash2.forEachRight = forEachRight;
      lodash2.forIn = forIn;
      lodash2.forInRight = forInRight;
      lodash2.forOwn = forOwn;
      lodash2.forOwnRight = forOwnRight;
      lodash2.get = get2;
      lodash2.gt = gt;
      lodash2.gte = gte;
      lodash2.has = has2;
      lodash2.hasIn = hasIn;
      lodash2.head = head;
      lodash2.identity = identity2;
      lodash2.includes = includes;
      lodash2.indexOf = indexOf2;
      lodash2.inRange = inRange;
      lodash2.invoke = invoke;
      lodash2.isArguments = isArguments;
      lodash2.isArray = isArray2;
      lodash2.isArrayBuffer = isArrayBuffer;
      lodash2.isArrayLike = isArrayLike;
      lodash2.isArrayLikeObject = isArrayLikeObject;
      lodash2.isBoolean = isBoolean2;
      lodash2.isBuffer = isBuffer3;
      lodash2.isDate = isDate2;
      lodash2.isElement = isElement2;
      lodash2.isEmpty = isEmpty;
      lodash2.isEqual = isEqual;
      lodash2.isEqualWith = isEqualWith;
      lodash2.isError = isError2;
      lodash2.isFinite = isFinite2;
      lodash2.isFunction = isFunction2;
      lodash2.isInteger = isInteger;
      lodash2.isLength = isLength;
      lodash2.isMap = isMap2;
      lodash2.isMatch = isMatch;
      lodash2.isMatchWith = isMatchWith;
      lodash2.isNaN = isNaN2;
      lodash2.isNative = isNative;
      lodash2.isNil = isNil;
      lodash2.isNull = isNull;
      lodash2.isNumber = isNumber2;
      lodash2.isObject = isObject;
      lodash2.isObjectLike = isObjectLike;
      lodash2.isPlainObject = isPlainObject;
      lodash2.isRegExp = isRegExp3;
      lodash2.isSafeInteger = isSafeInteger;
      lodash2.isSet = isSet2;
      lodash2.isString = isString2;
      lodash2.isSymbol = isSymbol2;
      lodash2.isTypedArray = isTypedArray;
      lodash2.isUndefined = isUndefined;
      lodash2.isWeakMap = isWeakMap2;
      lodash2.isWeakSet = isWeakSet2;
      lodash2.join = join;
      lodash2.kebabCase = kebabCase;
      lodash2.last = last;
      lodash2.lastIndexOf = lastIndexOf;
      lodash2.lowerCase = lowerCase;
      lodash2.lowerFirst = lowerFirst;
      lodash2.lt = lt;
      lodash2.lte = lte;
      lodash2.max = max2;
      lodash2.maxBy = maxBy;
      lodash2.mean = mean;
      lodash2.meanBy = meanBy;
      lodash2.min = min;
      lodash2.minBy = minBy;
      lodash2.stubArray = stubArray;
      lodash2.stubFalse = stubFalse;
      lodash2.stubObject = stubObject;
      lodash2.stubString = stubString;
      lodash2.stubTrue = stubTrue;
      lodash2.multiply = multiply;
      lodash2.nth = nth;
      lodash2.noConflict = noConflict;
      lodash2.noop = noop2;
      lodash2.now = now2;
      lodash2.pad = pad;
      lodash2.padEnd = padEnd;
      lodash2.padStart = padStart;
      lodash2.parseInt = parseInt2;
      lodash2.random = random;
      lodash2.reduce = reduce;
      lodash2.reduceRight = reduceRight;
      lodash2.repeat = repeat2;
      lodash2.replace = replace2;
      lodash2.result = result;
      lodash2.round = round;
      lodash2.runInContext = runInContext2;
      lodash2.sample = sample;
      lodash2.size = size;
      lodash2.snakeCase = snakeCase;
      lodash2.some = some;
      lodash2.sortedIndex = sortedIndex;
      lodash2.sortedIndexBy = sortedIndexBy;
      lodash2.sortedIndexOf = sortedIndexOf;
      lodash2.sortedLastIndex = sortedLastIndex;
      lodash2.sortedLastIndexBy = sortedLastIndexBy;
      lodash2.sortedLastIndexOf = sortedLastIndexOf;
      lodash2.startCase = startCase;
      lodash2.startsWith = startsWith;
      lodash2.subtract = subtract;
      lodash2.sum = sum;
      lodash2.sumBy = sumBy;
      lodash2.template = template;
      lodash2.times = times;
      lodash2.toFinite = toFinite;
      lodash2.toInteger = toInteger;
      lodash2.toLength = toLength;
      lodash2.toLower = toLower;
      lodash2.toNumber = toNumber;
      lodash2.toSafeInteger = toSafeInteger;
      lodash2.toString = toString;
      lodash2.toUpper = toUpper;
      lodash2.trim = trim;
      lodash2.trimEnd = trimEnd;
      lodash2.trimStart = trimStart;
      lodash2.truncate = truncate;
      lodash2.unescape = unescape2;
      lodash2.uniqueId = uniqueId;
      lodash2.upperCase = upperCase;
      lodash2.upperFirst = upperFirst;
      lodash2.each = forEach2;
      lodash2.eachRight = forEachRight;
      lodash2.first = head;
      mixin(lodash2, function () {
        var source = {};
        baseForOwn(lodash2, function (func, methodName) {
          if (!hasOwnProperty.call(lodash2.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), { "chain": false });
      lodash2.VERSION = VERSION;
      arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (methodName) {
        lodash2[methodName].placeholder = lodash2;
      });
      arrayEach(["drop", "take"], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n2) {
          n2 = n2 === undefined$12 ? 1 : nativeMax(toInteger(n2), 0);
          var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
          if (result2.__filtered__) {
            result2.__takeCount__ = nativeMin(n2, result2.__takeCount__);
          } else {
            result2.__views__.push({
              "size": nativeMin(n2, MAX_ARRAY_LENGTH),
              "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
            });
          }
          return result2;
        };
        LazyWrapper.prototype[methodName + "Right"] = function (n2) {
          return this.reverse()[methodName](n2).reverse();
        };
      });
      arrayEach(["filter", "map", "takeWhile"], function (methodName, index) {
        var type2 = index + 1, isFilter = type2 == LAZY_FILTER_FLAG || type2 == LAZY_WHILE_FLAG;
        LazyWrapper.prototype[methodName] = function (iteratee2) {
          var result2 = this.clone();
          result2.__iteratees__.push({
            "iteratee": getIteratee(iteratee2, 3),
            "type": type2
          });
          result2.__filtered__ = result2.__filtered__ || isFilter;
          return result2;
        };
      });
      arrayEach(["head", "last"], function (methodName, index) {
        var takeName = "take" + (index ? "Right" : "");
        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });
      arrayEach(["initial", "tail"], function (methodName, index) {
        var dropName = "drop" + (index ? "" : "Right");
        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });
      LazyWrapper.prototype.compact = function () {
        return this.filter(identity2);
      };
      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };
      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };
      LazyWrapper.prototype.invokeMap = baseRest(function (path2, args) {
        if (typeof path2 == "function") {
          return new LazyWrapper(this);
        }
        return this.map(function (value) {
          return baseInvoke(value, path2, args);
        });
      });
      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };
      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result2 = this;
        if (result2.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result2);
        }
        if (start < 0) {
          result2 = result2.takeRight(-start);
        } else if (start) {
          result2 = result2.drop(start);
        }
        if (end !== undefined$12) {
          end = toInteger(end);
          result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
        }
        return result2;
      };
      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };
      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash2[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
        if (!lodashFunc) {
          return;
        }
        lodash2.prototype[methodName] = function () {
          var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray2(value);
          var interceptor = function (value2) {
            var result3 = lodashFunc.apply(lodash2, arrayPush([value2], args));
            return isTaker && chainAll ? result3[0] : result3;
          };
          if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
            isLazy = useLazy = false;
          }
          var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result2 = func.apply(value, args);
            result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined$12 });
            return new LodashWrapper(result2, chainAll);
          }
          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }
          result2 = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
        };
      });
      arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function (methodName) {
        var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
        lodash2.prototype[methodName] = function () {
          var args = arguments;
          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray2(value) ? value : [], args);
          }
          return this[chainName](function (value2) {
            return func.apply(isArray2(value2) ? value2 : [], args);
          });
        };
      });
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash2[methodName];
        if (lodashFunc) {
          var key = lodashFunc.name + "";
          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }
          realNames[key].push({ "name": methodName, "func": lodashFunc });
        }
      });
      realNames[createHybrid(undefined$12, WRAP_BIND_KEY_FLAG).name] = [{
        "name": "wrapper",
        "func": undefined$12
      }];
      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;
      lodash2.prototype.at = wrapperAt;
      lodash2.prototype.chain = wrapperChain;
      lodash2.prototype.commit = wrapperCommit;
      lodash2.prototype.next = wrapperNext;
      lodash2.prototype.plant = wrapperPlant;
      lodash2.prototype.reverse = wrapperReverse;
      lodash2.prototype.toJSON = lodash2.prototype.valueOf = lodash2.prototype.value = wrapperValue;
      lodash2.prototype.first = lodash2.prototype.head;
      if (symIterator) {
        lodash2.prototype[symIterator] = wrapperToIterator;
      }
      return lodash2;
    };
    var _2 = runInContext();
    if (freeModule) {
      (freeModule.exports = _2)._ = _2;
      freeExports._ = _2;
    } else {
      root2._ = _2;
    }
  }).call(commonjsGlobal);
})(lodash, lodash.exports);
var lodashExports = lodash.exports;
const _ = /* @__PURE__ */ getDefaultExportFromCjs(lodashExports);
var md5$1 = { exports: {} };
var crypt = { exports: {} };
(function () {
  var base64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", crypt$1 = {
    // Bit-wise rotation left
    rotl: function (n2, b) {
      return n2 << b | n2 >>> 32 - b;
    },
    // Bit-wise rotation right
    rotr: function (n2, b) {
      return n2 << 32 - b | n2 >>> b;
    },
    // Swap big-endian to little-endian and vice versa
    endian: function (n2) {
      if (n2.constructor == Number) {
        return crypt$1.rotl(n2, 8) & 16711935 | crypt$1.rotl(n2, 24) & 4278255360;
      }
      for (var i = 0; i < n2.length; i++)
        n2[i] = crypt$1.endian(n2[i]);
      return n2;
    },
    // Generate an array of any length of random bytes
    randomBytes: function (n2) {
      for (var bytes = []; n2 > 0; n2--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },
    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function (bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << 24 - b % 32;
      return words;
    },
    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function (words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push(words[b >>> 5] >>> 24 - b % 32 & 255);
      return bytes;
    },
    // Convert a byte array to a hex string
    bytesToHex: function (bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 15).toString(16));
      }
      return hex.join("");
    },
    // Convert a hex string to a byte array
    hexToBytes: function (hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },
    // Convert a byte array to a base-64 string
    bytesToBase64: function (bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 63));
          else
            base64.push("=");
      }
      return base64.join("");
    },
    // Convert a base-64 string to a byte array
    base64ToBytes: function (base64) {
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, "");
      for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {
        if (imod4 == 0)
          continue;
        bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);
      }
      return bytes;
    }
  };
  crypt.exports = crypt$1;
})();
var cryptExports = crypt.exports;
var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function (str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },
    // Convert a byte array to a string
    bytesToString: function (bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },
  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function (str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 255);
      return bytes;
    },
    // Convert a byte array to a string
    bytesToString: function (bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join("");
    }
  }
};
var charenc_1 = charenc;
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var isBuffer_1 = function (obj) {
  return obj != null && (isBuffer2(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
};
function isBuffer2(obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
}
function isSlowBuffer(obj) {
  return typeof obj.readFloatLE === "function" && typeof obj.slice === "function" && isBuffer2(obj.slice(0, 0));
}
(function () {
  var crypt2 = cryptExports, utf8 = charenc_1.utf8, isBuffer3 = isBuffer_1, bin = charenc_1.bin, md52 = function (message2, options) {
    if (message2.constructor == String)
      if (options && options.encoding === "binary")
        message2 = bin.stringToBytes(message2);
      else
        message2 = utf8.stringToBytes(message2);
    else if (isBuffer3(message2))
      message2 = Array.prototype.slice.call(message2, 0);
    else if (!Array.isArray(message2) && message2.constructor !== Uint8Array)
      message2 = message2.toString();
    var m2 = crypt2.bytesToWords(message2), l2 = message2.length * 8, a = 1732584193, b = -271733879, c = -1732584194, d = 271733878;
    for (var i = 0; i < m2.length; i++) {
      m2[i] = (m2[i] << 8 | m2[i] >>> 24) & 16711935 | (m2[i] << 24 | m2[i] >>> 8) & 4278255360;
    }
    m2[l2 >>> 5] |= 128 << l2 % 32;
    m2[(l2 + 64 >>> 9 << 4) + 14] = l2;
    var FF = md52._ff, GG = md52._gg, HH = md52._hh, II = md52._ii;
    for (var i = 0; i < m2.length; i += 16) {
      var aa2 = a, bb2 = b, cc2 = c, dd2 = d;
      a = FF(a, b, c, d, m2[i + 0], 7, -680876936);
      d = FF(d, a, b, c, m2[i + 1], 12, -389564586);
      c = FF(c, d, a, b, m2[i + 2], 17, 606105819);
      b = FF(b, c, d, a, m2[i + 3], 22, -1044525330);
      a = FF(a, b, c, d, m2[i + 4], 7, -176418897);
      d = FF(d, a, b, c, m2[i + 5], 12, 1200080426);
      c = FF(c, d, a, b, m2[i + 6], 17, -1473231341);
      b = FF(b, c, d, a, m2[i + 7], 22, -45705983);
      a = FF(a, b, c, d, m2[i + 8], 7, 1770035416);
      d = FF(d, a, b, c, m2[i + 9], 12, -1958414417);
      c = FF(c, d, a, b, m2[i + 10], 17, -42063);
      b = FF(b, c, d, a, m2[i + 11], 22, -1990404162);
      a = FF(a, b, c, d, m2[i + 12], 7, 1804603682);
      d = FF(d, a, b, c, m2[i + 13], 12, -40341101);
      c = FF(c, d, a, b, m2[i + 14], 17, -1502002290);
      b = FF(b, c, d, a, m2[i + 15], 22, 1236535329);
      a = GG(a, b, c, d, m2[i + 1], 5, -165796510);
      d = GG(d, a, b, c, m2[i + 6], 9, -1069501632);
      c = GG(c, d, a, b, m2[i + 11], 14, 643717713);
      b = GG(b, c, d, a, m2[i + 0], 20, -373897302);
      a = GG(a, b, c, d, m2[i + 5], 5, -701558691);
      d = GG(d, a, b, c, m2[i + 10], 9, 38016083);
      c = GG(c, d, a, b, m2[i + 15], 14, -660478335);
      b = GG(b, c, d, a, m2[i + 4], 20, -405537848);
      a = GG(a, b, c, d, m2[i + 9], 5, 568446438);
      d = GG(d, a, b, c, m2[i + 14], 9, -1019803690);
      c = GG(c, d, a, b, m2[i + 3], 14, -187363961);
      b = GG(b, c, d, a, m2[i + 8], 20, 1163531501);
      a = GG(a, b, c, d, m2[i + 13], 5, -1444681467);
      d = GG(d, a, b, c, m2[i + 2], 9, -51403784);
      c = GG(c, d, a, b, m2[i + 7], 14, 1735328473);
      b = GG(b, c, d, a, m2[i + 12], 20, -1926607734);
      a = HH(a, b, c, d, m2[i + 5], 4, -378558);
      d = HH(d, a, b, c, m2[i + 8], 11, -2022574463);
      c = HH(c, d, a, b, m2[i + 11], 16, 1839030562);
      b = HH(b, c, d, a, m2[i + 14], 23, -35309556);
      a = HH(a, b, c, d, m2[i + 1], 4, -1530992060);
      d = HH(d, a, b, c, m2[i + 4], 11, 1272893353);
      c = HH(c, d, a, b, m2[i + 7], 16, -155497632);
      b = HH(b, c, d, a, m2[i + 10], 23, -1094730640);
      a = HH(a, b, c, d, m2[i + 13], 4, 681279174);
      d = HH(d, a, b, c, m2[i + 0], 11, -358537222);
      c = HH(c, d, a, b, m2[i + 3], 16, -722521979);
      b = HH(b, c, d, a, m2[i + 6], 23, 76029189);
      a = HH(a, b, c, d, m2[i + 9], 4, -640364487);
      d = HH(d, a, b, c, m2[i + 12], 11, -421815835);
      c = HH(c, d, a, b, m2[i + 15], 16, 530742520);
      b = HH(b, c, d, a, m2[i + 2], 23, -995338651);
      a = II(a, b, c, d, m2[i + 0], 6, -198630844);
      d = II(d, a, b, c, m2[i + 7], 10, 1126891415);
      c = II(c, d, a, b, m2[i + 14], 15, -1416354905);
      b = II(b, c, d, a, m2[i + 5], 21, -57434055);
      a = II(a, b, c, d, m2[i + 12], 6, 1700485571);
      d = II(d, a, b, c, m2[i + 3], 10, -1894986606);
      c = II(c, d, a, b, m2[i + 10], 15, -1051523);
      b = II(b, c, d, a, m2[i + 1], 21, -2054922799);
      a = II(a, b, c, d, m2[i + 8], 6, 1873313359);
      d = II(d, a, b, c, m2[i + 15], 10, -30611744);
      c = II(c, d, a, b, m2[i + 6], 15, -1560198380);
      b = II(b, c, d, a, m2[i + 13], 21, 1309151649);
      a = II(a, b, c, d, m2[i + 4], 6, -145523070);
      d = II(d, a, b, c, m2[i + 11], 10, -1120210379);
      c = II(c, d, a, b, m2[i + 2], 15, 718787259);
      b = II(b, c, d, a, m2[i + 9], 21, -343485551);
      a = a + aa2 >>> 0;
      b = b + bb2 >>> 0;
      c = c + cc2 >>> 0;
      d = d + dd2 >>> 0;
    }
    return crypt2.endian([a, b, c, d]);
  };
  md52._ff = function (a, b, c, d, x2, s, t2) {
    var n2 = a + (b & c | ~b & d) + (x2 >>> 0) + t2;
    return (n2 << s | n2 >>> 32 - s) + b;
  };
  md52._gg = function (a, b, c, d, x2, s, t2) {
    var n2 = a + (b & d | c & ~d) + (x2 >>> 0) + t2;
    return (n2 << s | n2 >>> 32 - s) + b;
  };
  md52._hh = function (a, b, c, d, x2, s, t2) {
    var n2 = a + (b ^ c ^ d) + (x2 >>> 0) + t2;
    return (n2 << s | n2 >>> 32 - s) + b;
  };
  md52._ii = function (a, b, c, d, x2, s, t2) {
    var n2 = a + (c ^ (b | ~d)) + (x2 >>> 0) + t2;
    return (n2 << s | n2 >>> 32 - s) + b;
  };
  md52._blocksize = 16;
  md52._digestsize = 16;
  md5$1.exports = function (message2, options) {
    if (message2 === void 0 || message2 === null)
      throw new Error("Illegal argument " + message2);
    var digestbytes = crypt2.wordsToBytes(md52(message2, options));
    return options && options.asBytes ? digestbytes : options && options.asString ? bin.bytesToString(digestbytes) : crypt2.bytesToHex(digestbytes);
  };
})();
var md5Exports = md5$1.exports;
const md5 = /* @__PURE__ */ getDefaultExportFromCjs(md5Exports);
const sign = (params) => {
  const keys = Object.keys(params).sort((a, b) => a.localeCompare(b));
  let str = "";
  keys.forEach((key, idx) => {
    let value = key === "t" || key === "d" || key === "url" || key === "tt" ? params[key] : idx;
    if (params.url === "memberlogin" || params.url === "memberreg") {
      if (key == "username" || key === "password") {
        value = params[key] || "";
        value = value.trim();
      }
    }
    str += "".concat(key, "=").concat(value, "&");
  });
  str = str.substring(0, str.length - 1);
  const rest = md5(md5(str));
  return rest;
};
const tokenInvalid = lodashExports.debounce(() => {
  Message.error(instance.t("error_code.1003"));
}, 300);
const request2 = async (url, options = {}) => {
  const useLoading = options.useLoading || false;
  const { noMsg = false } = options;

  if (useLoading) {
    //console.log('Iniciando o carregamento...');
    startLoading();
  }

  try {
    console.log('Fazendo requisição para:', url);
    const response = await fetch(url, options);

    // Verifica se a resposta foi recebida
    console.log('Resposta recebida:', response);

    const headers = response.headers;
    //console.log('Cabeçalhos da resposta:', headers);

    const state = useUserInfoStore.getState();
    //console.log('Estado atual do usuário:', state);

    // Verificando o token recebido no cabeçalho 'id'
    const token = options.noLogin ? "" : headers.get("id") || "";
    //console.log('Token recebido no cabeçalho:', token);

    if (token) {
      if (state.token !== token) {
        window.isNewLogin = true;
        useUserInfoStore.setState({ token });
        Cache.set("token", token);
        //console.log('Novo token armazenado:', token);
      } else {
        console.log('Token já está atualizado.');
      }
    } else {
      console.warn('Nenhum token foi encontrado no cabeçalho!');
    }

    const data = await response.json();
    console.log('Dados recebidos:', data);

    if (!data.status) {
      console.error('Erro nos dados recebidos:', data);
      throw data;
    }

    return [data.data, null, data];
  } catch (res) {
    console.error('Erro capturado:', res);
    const e2 = res.data;

    if (e2 === "token") {
      //console.error('Problema com o token:', res);
      if (res.flag === 2) {
        Message.error(res.msg);
      } else {
        !noMsg && tokenInvalid();
      }

      if (!getQueryVariable("t")) {
        useUserInfoStore.setState({ token: "", info: null, openForLogin: true });
        Cache.set("token", "");
        console.log('Token foi removido devido a problema.');
      }
    } else if (e2 === "1367") {
      const amount = res?.msg || 0;
      console.error(`Erro de saldo baixo: ${amount}`);
      Message.error(`您的余额低于「最低准入金额」，请存款后才能玩: ${amount}`);
    } else {
      const errCodeNumber = parseInt(e2);
      const errorMsg = errCodeNumber > 999 ? `error_code.${e2}` || e2 : e2;
      if (e2 === "1003") {
        //console.error('Erro de código 1003:', res);
        !noMsg && tokenInvalid();
      } else {
        !noMsg && Message.error(errorMsg);
      }
    }
    return [null, e2];
  } finally {
    if (useLoading) {
      //console.log('Finalizando o carregamento...');
      stopLoading();
    }
  }
};

const quick = window.matchMedia("(display-mode: standalone)").matches ? 1 : 0;
const http = {
  get: async (url, data = {}, options = {}) => {
    const curLan = getQueryVariable("language") || Cache.get("language") || instance.language || "";
    data = Object.assign({}, data); // Removido o timestamp aqui
    let d = isH5$1 ? 25 : 24;
    if (getQueryVariable("deviceType"))
      d = getQueryVariable("deviceType");
    options = Object.assign({
      headers: {
        Lang: curLan,
        xx: sign(Object.assign({ d, url: url.trim().replace(/\//g, "") }, data)),
        "d": d,
        quick,
        api: window.fbpixel_no_event ? "1" : "",
        noApi: localStorage.getItem("only_apk_no_api") == "xxx" ? "1" : "",
        t: getQueryVariable("t") || useUserInfoStore.getState().token || "",
        fbc: getCookieVariable("fbc") || getCookieVariable("_fbc") || Cache.get("fbc") || "",
        fbp: getCookieVariable("fbp") || getCookieVariable("_fbp") || Cache.get("fbp") || "",
        fbclid: Cache.get("fbclid") || "",
        sourceurl: location.href
      }
    }, options, { method: "GET" });
    const [res, error, dRes] = await request2("".concat(url, "?").concat(qs.stringify(data)), options);
    return [res, error, dRes];
  },

  post: async (url, data = {}, options = {}) => {
    const curLan = getQueryVariable("language") || Cache.get("language") || instance.language || "";
    data = Object.assign({}, data);
    let d = isH5$1 ? 25 : 24;
    if (getQueryVariable("deviceType"))
      d = getQueryVariable("deviceType");

    // Remover o timestamp da URL
    options = Object.assign({
      headers: {
        Lang: curLan,
        xx: sign(Object.assign({ d, url: url.trim().replace(/\//g, "") }, data, { t: getQueryVariable("t") || useUserInfoStore.getState().token || "" })),
        "Content-Type": "application/x-www-form-urlencoded",
        "d": d,
        quick,
        api: window.fbpixel_no_event ? "1" : "",
        noApi: localStorage.getItem("only_apk_no_api") == "xxx" ? "1" : "",
        t: getQueryVariable("t") || useUserInfoStore.getState().token || "",
        fbc: getCookieVariable("fbc") || getCookieVariable("_fbc") || Cache.get("fbc") || "",
        fbp: getCookieVariable("fbp") || getCookieVariable("_fbp") || Cache.get("fbp") || "",
        fbclid: Cache.get("fbclid") || "",
        sourceurl: location.href
      }
    }, options, { method: "POST", body: qs.stringify(data) });

    // Passar a URL sem o timestamp
    const [res, error, dRes] = await request2(url, options);
    return [res, error, dRes];
  }
};
const login = async (data = {}, options = {}) => {
  try {
    const { webrtcid } = await getDeviceInfo();
    const [...res] = await http.post(
      "/member/login",
      Object.assign({ device_no: webrtcid }, data),
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const register = async (data = {}, options = {}) => {
  try {
    const { webrtcid } = await getDeviceInfo();
    const [...res] = await http.post(
      "/member/reg",
      Object.assign({ device_no: webrtcid }, data),
      options
    );
    if (!res[1]) {
      window.fbq && !window.fbpixel_no_event && window.fbq("track", "CompleteRegistration");
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          window.jsBridge.postMessage("register", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
      if (window.jsBridge && window.jsBridge.reportEvent) {
        try {
          window.jsBridge.reportEvent("CompleteRegistration", "{}");
        } catch (e2) {
          console.log(e2);
        }
      }
      if (window.kwaiq && window.kwaiq.track) {
        window.kwaiq.instance(window.kwaiq.instance_id).track("completeRegistration");
      }
      if (window.ttq && window.ttq.track) {
        window.ttq.track("CompleteRegistration");
      }
    }
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getUserInfo = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/info", data, options);
    if (res[0]) {
      if (window.jsBridge && window.jsBridge.transferUserInfo) {
        try {
          window.jsBridge.transferUserInfo(JSON.stringify(res[0]));
        } catch (e2) {
          console.log(e2);
        }
      }
    }
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getBalance = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/balance", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMarquee = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/marquee", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getBanner = async (data = {}, options = {}) => {
  try {
    if (window.matchMedia("(display-mode: standalone)").matches) {
      data.quick = 1;
    }
    const [...res] = await http.get("/member/banner", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPixiInfo = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/point/statistics", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMessageList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/message/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMessageNum = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/message/num", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const readUserMessage = async (data = { id: "" }, options = {}) => {
  try {
    const [...res] = await http.post("/member/message/read", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const deleteUserMessage = async (data = { flag: 1, ids: "" }, options = {}) => {
  try {
    const [...res] = await http.post("/member/message/delete", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getNoticeList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/notices", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const addFeedback = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/feedback/add", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const listFeedback = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/feedback/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const withdrawFeedback = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/feedback/withdraw", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getAwardAmount = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/award", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getDownloadApp = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/member/app/upgrade",
      Object.assign(data, { dv: browser.versions.ios ? 36 : 35 }),
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getFinanceChannelList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/finance/channel/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getFinanceChannelType = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/finance/channel/type", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postFinanceThirdDeposit = async (data = {}, options = {}) => {
  if (window.jsBridge && window.jsBridge.reportEvent) {
    try {
      window.jsBridge.reportEvent("clickcharge", JSON.stringify({}));
    } catch (e2) {
      console.log(e2);
    }
  }
  try {
    const [...res] = await http.post("/finance/third/deposit", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberBankcardList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/bankcard/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberBankcardInsert = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/bankcard/insert", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberBankcardInsertPH = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/bankcard/insertph", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getFinanceWithdrawProcessing = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/finance/withdraw/processing",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getFinanceWithdrawFee = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/finance/withdraw/fee", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postFinanceWithdraw = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/finance/withdraw", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberPasswordCheck = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/password/check", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberPasswordUpdate = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/password/update", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getVipConfig = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/vip/config", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberBindPhone = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/api/member/bind/phone", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberBindEmail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/api/member/bind/email", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberAvatarUpdate = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/api/member/avatar/update", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberRecordTrade = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/record/trade", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberRecordTradeDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/member/record/trade/detail",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberRecordGame = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/record/game", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberAgencyReportSubPlat = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post(
      "/member/agency/report/sub/plat",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberUpdate = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/update", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberWpwCheck = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/wpw/check", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postRecallbalance = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/recall/balance", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const memberPointStatisticsRemark = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post(
      "/member/point/statistics/remark",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const memberWebsetList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("api/member/webset/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const memberPointStatisticsDeposit = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/member/point/statistics/deposit",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postMemberLoginPasswordCheck = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post(
      "/member/login/password/check",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberCustomerList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/customer/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberPlayerList = async (data = {}, options = {}) => {
  try {
    const [res] = await http.get("/member/player/list", data, options);
    return res;
  } catch (error) {
    return [null, error];
  }
};
const getMemberShortInfo = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/short/info", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberBankcardPixTypeList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/bankcard/pixtypelist", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberBankcardPHTypeList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/bankcard/withdrawphptypelist", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getMemberBankcardListPh = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/bankcard/listph", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postThreeLogin = async (data = {}, options = {}) => {
  try {
    const { webrtcid } = await getDeviceInfo();
    const [...res] = await http.post("/member/oauth2/login", Object.assign({ device_no: webrtcid }, data), options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const cacheState = {
  isLoadingGame: false
};
const getHotGames = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/slot/hotgame", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getGamesNav = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/nav", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const allPlatformList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/platform/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getSlotSearch = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/slot/search", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPlatLaunch = async (data = {}, options = {}) => {
  if (!!cacheState.isLoadingGame)
    return [];
  if (!cacheState.isLoadingGame)
    cacheState.isLoadingGame = true;
  try {
    const [...res] = await http.get("/china/launch/", data, options);
    cacheState.isLoadingGame = false;
    return [...res];
  } catch (error) {
    cacheState.isLoadingGame = false;
    return [null, error];
  }
};
const getPlatBalance = async (platId = "", data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/plat/balance/", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const favorites = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/favorites/save", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const favoritesList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/favorites/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const favoritesremove = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/favorites/remove", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const historyList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/history/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const historySave = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/history/save", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
var mqtt_browser = { exports: {} };
/*! For license information please see mqtt.browser.js.LICENSE.txt */
!function () {
  var e2 = {
    9742: function (e3, t3) {
      t3.byteLength = function (e4) {
        var t4 = u2(e4), r4 = t4[0], n4 = t4[1];
        return 3 * (r4 + n4) / 4 - n4;
      }, t3.toByteArray = function (e4) {
        var t4, r4, o2 = u2(e4), s2 = o2[0], a2 = o2[1], l3 = new i(function (e5, t5, r5) {
          return 3 * (t5 + r5) / 4 - r5;
        }(0, s2, a2)), c = 0, h2 = a2 > 0 ? s2 - 4 : s2;
        for (r4 = 0; r4 < h2; r4 += 4)
          t4 = n3[e4.charCodeAt(r4)] << 18 | n3[e4.charCodeAt(r4 + 1)] << 12 | n3[e4.charCodeAt(r4 + 2)] << 6 | n3[e4.charCodeAt(r4 + 3)], l3[c++] = t4 >> 16 & 255, l3[c++] = t4 >> 8 & 255, l3[c++] = 255 & t4;
        return 2 === a2 && (t4 = n3[e4.charCodeAt(r4)] << 2 | n3[e4.charCodeAt(r4 + 1)] >> 4, l3[c++] = 255 & t4), 1 === a2 && (t4 = n3[e4.charCodeAt(r4)] << 10 | n3[e4.charCodeAt(r4 + 1)] << 4 | n3[e4.charCodeAt(r4 + 2)] >> 2, l3[c++] = t4 >> 8 & 255, l3[c++] = 255 & t4), l3;
      }, t3.fromByteArray = function (e4) {
        for (var t4, n4 = e4.length, i2 = n4 % 3, o2 = [], s2 = 16383, a2 = 0, u3 = n4 - i2; a2 < u3; a2 += s2)
          o2.push(l2(e4, a2, a2 + s2 > u3 ? u3 : a2 + s2));
        return 1 === i2 ? (t4 = e4[n4 - 1], o2.push(r3[t4 >> 2] + r3[t4 << 4 & 63] + "==")) : 2 === i2 && (t4 = (e4[n4 - 2] << 8) + e4[n4 - 1], o2.push(r3[t4 >> 10] + r3[t4 >> 4 & 63] + r3[t4 << 2 & 63] + "=")), o2.join("");
      };
      for (var r3 = [], n3 = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s)
        r3[s] = o[s], n3[o.charCodeAt(s)] = s;
      function u2(e4) {
        var t4 = e4.length;
        if (t4 % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r4 = e4.indexOf("=");
        return -1 === r4 && (r4 = t4), [r4, r4 === t4 ? 0 : 4 - r4 % 4];
      }
      function l2(e4, t4, n4) {
        for (var i2, o2, s2 = [], a2 = t4; a2 < n4; a2 += 3)
          i2 = (e4[a2] << 16 & 16711680) + (e4[a2 + 1] << 8 & 65280) + (255 & e4[a2 + 2]), s2.push(r3[(o2 = i2) >> 18 & 63] + r3[o2 >> 12 & 63] + r3[o2 >> 6 & 63] + r3[63 & o2]);
        return s2.join("");
      }
      n3["-".charCodeAt(0)] = 62, n3["_".charCodeAt(0)] = 63;
    }, 9668: function (e3, t3, r3) {
      const { Buffer: n3 } = r3(8478), i = Symbol.for("BufferList");
      function o(e4) {
        if (!(this instanceof o))
          return new o(e4);
        o._init.call(this, e4);
      }
      o._init = function (e4) {
        Object.defineProperty(this, i, { value: true }), this._bufs = [], this.length = 0, e4 && this.append(e4);
      }, o.prototype._new = function (e4) {
        return new o(e4);
      }, o.prototype._offset = function (e4) {
        if (0 === e4)
          return [0, 0];
        let t4 = 0;
        for (let r4 = 0; r4 < this._bufs.length; r4++) {
          const n4 = t4 + this._bufs[r4].length;
          if (e4 < n4 || r4 === this._bufs.length - 1)
            return [r4, e4 - t4];
          t4 = n4;
        }
      }, o.prototype._reverseOffset = function (e4) {
        const t4 = e4[0];
        let r4 = e4[1];
        for (let e5 = 0; e5 < t4; e5++)
          r4 += this._bufs[e5].length;
        return r4;
      }, o.prototype.get = function (e4) {
        if (e4 > this.length || e4 < 0)
          return;
        const t4 = this._offset(e4);
        return this._bufs[t4[0]][t4[1]];
      }, o.prototype.slice = function (e4, t4) {
        return "number" == typeof e4 && e4 < 0 && (e4 += this.length), "number" == typeof t4 && t4 < 0 && (t4 += this.length), this.copy(null, 0, e4, t4);
      }, o.prototype.copy = function (e4, t4, r4, i2) {
        if (("number" != typeof r4 || r4 < 0) && (r4 = 0), ("number" != typeof i2 || i2 > this.length) && (i2 = this.length), r4 >= this.length)
          return e4 || n3.alloc(0);
        if (i2 <= 0)
          return e4 || n3.alloc(0);
        const o2 = !!e4, s = this._offset(r4), a = i2 - r4;
        let u2 = a, l2 = o2 && t4 || 0, c = s[1];
        if (0 === r4 && i2 === this.length) {
          if (!o2)
            return 1 === this._bufs.length ? this._bufs[0] : n3.concat(this._bufs, this.length);
          for (let t5 = 0; t5 < this._bufs.length; t5++)
            this._bufs[t5].copy(e4, l2), l2 += this._bufs[t5].length;
          return e4;
        }
        if (u2 <= this._bufs[s[0]].length - c)
          return o2 ? this._bufs[s[0]].copy(e4, t4, c, c + u2) : this._bufs[s[0]].slice(c, c + u2);
        o2 || (e4 = n3.allocUnsafe(a));
        for (let t5 = s[0]; t5 < this._bufs.length; t5++) {
          const r5 = this._bufs[t5].length - c;
          if (!(u2 > r5)) {
            this._bufs[t5].copy(e4, l2, c, c + u2), l2 += r5;
            break;
          }
          this._bufs[t5].copy(e4, l2, c), l2 += r5, u2 -= r5, c && (c = 0);
        }
        return e4.length > l2 ? e4.slice(0, l2) : e4;
      }, o.prototype.shallowSlice = function (e4, t4) {
        if (e4 = e4 || 0, t4 = "number" != typeof t4 ? this.length : t4, e4 < 0 && (e4 += this.length), t4 < 0 && (t4 += this.length), e4 === t4)
          return this._new();
        const r4 = this._offset(e4), n4 = this._offset(t4), i2 = this._bufs.slice(r4[0], n4[0] + 1);
        return 0 === n4[1] ? i2.pop() : i2[i2.length - 1] = i2[i2.length - 1].slice(0, n4[1]), 0 !== r4[1] && (i2[0] = i2[0].slice(r4[1])), this._new(i2);
      }, o.prototype.toString = function (e4, t4, r4) {
        return this.slice(t4, r4).toString(e4);
      }, o.prototype.consume = function (e4) {
        if (e4 = Math.trunc(e4), Number.isNaN(e4) || e4 <= 0)
          return this;
        for (; this._bufs.length;) {
          if (!(e4 >= this._bufs[0].length)) {
            this._bufs[0] = this._bufs[0].slice(e4), this.length -= e4;
            break;
          }
          e4 -= this._bufs[0].length, this.length -= this._bufs[0].length, this._bufs.shift();
        }
        return this;
      }, o.prototype.duplicate = function () {
        const e4 = this._new();
        for (let t4 = 0; t4 < this._bufs.length; t4++)
          e4.append(this._bufs[t4]);
        return e4;
      }, o.prototype.append = function (e4) {
        if (null == e4)
          return this;
        if (e4.buffer)
          this._appendBuffer(n3.from(e4.buffer, e4.byteOffset, e4.byteLength));
        else if (Array.isArray(e4))
          for (let t4 = 0; t4 < e4.length; t4++)
            this.append(e4[t4]);
        else if (this._isBufferList(e4))
          for (let t4 = 0; t4 < e4._bufs.length; t4++)
            this.append(e4._bufs[t4]);
        else
          "number" == typeof e4 && (e4 = e4.toString()), this._appendBuffer(n3.from(e4));
        return this;
      }, o.prototype._appendBuffer = function (e4) {
        this._bufs.push(e4), this.length += e4.length;
      }, o.prototype.indexOf = function (e4, t4, r4) {
        if (void 0 === r4 && "string" == typeof t4 && (r4 = t4, t4 = void 0), "function" == typeof e4 || Array.isArray(e4))
          throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');
        if ("number" == typeof e4 ? e4 = n3.from([e4]) : "string" == typeof e4 ? e4 = n3.from(e4, r4) : this._isBufferList(e4) ? e4 = e4.slice() : Array.isArray(e4.buffer) ? e4 = n3.from(e4.buffer, e4.byteOffset, e4.byteLength) : n3.isBuffer(e4) || (e4 = n3.from(e4)), t4 = Number(t4 || 0), isNaN(t4) && (t4 = 0), t4 < 0 && (t4 = this.length + t4), t4 < 0 && (t4 = 0), 0 === e4.length)
          return t4 > this.length ? this.length : t4;
        const i2 = this._offset(t4);
        let o2 = i2[0], s = i2[1];
        for (; o2 < this._bufs.length; o2++) {
          const t5 = this._bufs[o2];
          for (; s < t5.length;)
            if (t5.length - s >= e4.length) {
              const r5 = t5.indexOf(e4, s);
              if (-1 !== r5)
                return this._reverseOffset([o2, r5]);
              s = t5.length - e4.length + 1;
            } else {
              const t6 = this._reverseOffset([o2, s]);
              if (this._match(t6, e4))
                return t6;
              s++;
            }
          s = 0;
        }
        return -1;
      }, o.prototype._match = function (e4, t4) {
        if (this.length - e4 < t4.length)
          return false;
        for (let r4 = 0; r4 < t4.length; r4++)
          if (this.get(e4 + r4) !== t4[r4])
            return false;
        return true;
      }, function () {
        const e4 = { readDoubleBE: 8, readDoubleLE: 8, readFloatBE: 4, readFloatLE: 4, readInt32BE: 4, readInt32LE: 4, readUInt32BE: 4, readUInt32LE: 4, readInt16BE: 2, readInt16LE: 2, readUInt16BE: 2, readUInt16LE: 2, readInt8: 1, readUInt8: 1, readIntBE: null, readIntLE: null, readUIntBE: null, readUIntLE: null };
        for (const t4 in e4)
          !function (t5) {
            o.prototype[t5] = null === e4[t5] ? function (e5, r4) {
              return this.slice(e5, e5 + r4)[t5](0, r4);
            } : function (r4 = 0) {
              return this.slice(r4, r4 + e4[t5])[t5](0);
            };
          }(t4);
      }(), o.prototype._isBufferList = function (e4) {
        return e4 instanceof o || o.isBufferList(e4);
      }, o.isBufferList = function (e4) {
        return null != e4 && e4[i];
      }, e3.exports = o;
    }, 22: function (e3, t3, r3) {
      const n3 = r3(8473).Duplex, i = r3(5717), o = r3(9668);
      function s(e4) {
        if (!(this instanceof s))
          return new s(e4);
        if ("function" == typeof e4) {
          this._callback = e4;
          const t4 = (function (e5) {
            this._callback && (this._callback(e5), this._callback = null);
          }).bind(this);
          this.on("pipe", function (e5) {
            e5.on("error", t4);
          }), this.on("unpipe", function (e5) {
            e5.removeListener("error", t4);
          }), e4 = null;
        }
        o._init.call(this, e4), n3.call(this);
      }
      i(s, n3), Object.assign(s.prototype, o.prototype), s.prototype._new = function (e4) {
        return new s(e4);
      }, s.prototype._write = function (e4, t4, r4) {
        this._appendBuffer(e4), "function" == typeof r4 && r4();
      }, s.prototype._read = function (e4) {
        if (!this.length)
          return this.push(null);
        e4 = Math.min(e4, this.length), this.push(this.slice(0, e4)), this.consume(e4);
      }, s.prototype.end = function (e4) {
        n3.prototype.end.call(this, e4), this._callback && (this._callback(null, this.slice()), this._callback = null);
      }, s.prototype._destroy = function (e4, t4) {
        this._bufs.length = 0, this.length = 0, t4(e4);
      }, s.prototype._isBufferList = function (e4) {
        return e4 instanceof s || e4 instanceof o || s.isBufferList(e4);
      }, s.isBufferList = o.isBufferList, e3.exports = s, e3.exports.BufferListStream = s, e3.exports.BufferList = o;
    }, 8478: function (e3, t3, r3) {
      var n3 = r3(9742), i = r3(645), o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
      t3.Buffer = u2, t3.SlowBuffer = function (e4) {
        return +e4 != e4 && (e4 = 0), u2.alloc(+e4);
      }, t3.INSPECT_MAX_BYTES = 50;
      var s = 2147483647;
      function a(e4) {
        if (e4 > s)
          throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
        var t4 = new Uint8Array(e4);
        return Object.setPrototypeOf(t4, u2.prototype), t4;
      }
      function u2(e4, t4, r4) {
        if ("number" == typeof e4) {
          if ("string" == typeof t4)
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return h2(e4);
        }
        return l2(e4, t4, r4);
      }
      function l2(e4, t4, r4) {
        if ("string" == typeof e4)
          return function (e5, t5) {
            if ("string" == typeof t5 && "" !== t5 || (t5 = "utf8"), !u2.isEncoding(t5))
              throw new TypeError("Unknown encoding: " + t5);
            var r5 = 0 | y2(e5, t5), n5 = a(r5), i3 = n5.write(e5, t5);
            return i3 !== r5 && (n5 = n5.slice(0, i3)), n5;
          }(e4, t4);
        if (ArrayBuffer.isView(e4))
          return function (e5) {
            if (D2(e5, Uint8Array)) {
              var t5 = new Uint8Array(e5);
              return p2(t5.buffer, t5.byteOffset, t5.byteLength);
            }
            return f2(e5);
          }(e4);
        if (null == e4)
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
        if (D2(e4, ArrayBuffer) || e4 && D2(e4.buffer, ArrayBuffer))
          return p2(e4, t4, r4);
        if ("undefined" != typeof SharedArrayBuffer && (D2(e4, SharedArrayBuffer) || e4 && D2(e4.buffer, SharedArrayBuffer)))
          return p2(e4, t4, r4);
        if ("number" == typeof e4)
          throw new TypeError('The "value" argument must not be of type number. Received type number');
        var n4 = e4.valueOf && e4.valueOf();
        if (null != n4 && n4 !== e4)
          return u2.from(n4, t4, r4);
        var i2 = function (e5) {
          if (u2.isBuffer(e5)) {
            var t5 = 0 | d(e5.length), r5 = a(t5);
            return 0 === r5.length || e5.copy(r5, 0, 0, t5), r5;
          }
          return void 0 !== e5.length ? "number" != typeof e5.length || F2(e5.length) ? a(0) : f2(e5) : "Buffer" === e5.type && Array.isArray(e5.data) ? f2(e5.data) : void 0;
        }(e4);
        if (i2)
          return i2;
        if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e4[Symbol.toPrimitive])
          return u2.from(e4[Symbol.toPrimitive]("string"), t4, r4);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
      }
      function c(e4) {
        if ("number" != typeof e4)
          throw new TypeError('"size" argument must be of type number');
        if (e4 < 0)
          throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
      }
      function h2(e4) {
        return c(e4), a(e4 < 0 ? 0 : 0 | d(e4));
      }
      function f2(e4) {
        for (var t4 = e4.length < 0 ? 0 : 0 | d(e4.length), r4 = a(t4), n4 = 0; n4 < t4; n4 += 1)
          r4[n4] = 255 & e4[n4];
        return r4;
      }
      function p2(e4, t4, r4) {
        if (t4 < 0 || e4.byteLength < t4)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (e4.byteLength < t4 + (r4 || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        var n4;
        return n4 = void 0 === t4 && void 0 === r4 ? new Uint8Array(e4) : void 0 === r4 ? new Uint8Array(e4, t4) : new Uint8Array(e4, t4, r4), Object.setPrototypeOf(n4, u2.prototype), n4;
      }
      function d(e4) {
        if (e4 >= s)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
        return 0 | e4;
      }
      function y2(e4, t4) {
        if (u2.isBuffer(e4))
          return e4.length;
        if (ArrayBuffer.isView(e4) || D2(e4, ArrayBuffer))
          return e4.byteLength;
        if ("string" != typeof e4)
          throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e4);
        var r4 = e4.length, n4 = arguments.length > 2 && true === arguments[2];
        if (!n4 && 0 === r4)
          return 0;
        for (var i2 = false; ;)
          switch (t4) {
            case "ascii":
            case "latin1":
            case "binary":
              return r4;
            case "utf8":
            case "utf-8":
              return j(e4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r4;
            case "hex":
              return r4 >>> 1;
            case "base64":
              return q2(e4).length;
            default:
              if (i2)
                return n4 ? -1 : j(e4).length;
              t4 = ("" + t4).toLowerCase(), i2 = true;
          }
      }
      function g(e4, t4, r4) {
        var n4 = false;
        if ((void 0 === t4 || t4 < 0) && (t4 = 0), t4 > this.length)
          return "";
        if ((void 0 === r4 || r4 > this.length) && (r4 = this.length), r4 <= 0)
          return "";
        if ((r4 >>>= 0) <= (t4 >>>= 0))
          return "";
        for (e4 || (e4 = "utf8"); ;)
          switch (e4) {
            case "hex":
              return B2(this, t4, r4);
            case "utf8":
            case "utf-8":
              return T2(this, t4, r4);
            case "ascii":
              return I2(this, t4, r4);
            case "latin1":
            case "binary":
              return x2(this, t4, r4);
            case "base64":
              return C2(this, t4, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return R2(this, t4, r4);
            default:
              if (n4)
                throw new TypeError("Unknown encoding: " + e4);
              e4 = (e4 + "").toLowerCase(), n4 = true;
          }
      }
      function b(e4, t4, r4) {
        var n4 = e4[t4];
        e4[t4] = e4[r4], e4[r4] = n4;
      }
      function m2(e4, t4, r4, n4, i2) {
        if (0 === e4.length)
          return -1;
        if ("string" == typeof r4 ? (n4 = r4, r4 = 0) : r4 > 2147483647 ? r4 = 2147483647 : r4 < -2147483648 && (r4 = -2147483648), F2(r4 = +r4) && (r4 = i2 ? 0 : e4.length - 1), r4 < 0 && (r4 = e4.length + r4), r4 >= e4.length) {
          if (i2)
            return -1;
          r4 = e4.length - 1;
        } else if (r4 < 0) {
          if (!i2)
            return -1;
          r4 = 0;
        }
        if ("string" == typeof t4 && (t4 = u2.from(t4, n4)), u2.isBuffer(t4))
          return 0 === t4.length ? -1 : v2(e4, t4, r4, n4, i2);
        if ("number" == typeof t4)
          return t4 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e4, t4, r4) : Uint8Array.prototype.lastIndexOf.call(e4, t4, r4) : v2(e4, [t4], r4, n4, i2);
        throw new TypeError("val must be string, number or Buffer");
      }
      function v2(e4, t4, r4, n4, i2) {
        var o2, s2 = 1, a2 = e4.length, u3 = t4.length;
        if (void 0 !== n4 && ("ucs2" === (n4 = String(n4).toLowerCase()) || "ucs-2" === n4 || "utf16le" === n4 || "utf-16le" === n4)) {
          if (e4.length < 2 || t4.length < 2)
            return -1;
          s2 = 2, a2 /= 2, u3 /= 2, r4 /= 2;
        }
        function l3(e5, t5) {
          return 1 === s2 ? e5[t5] : e5.readUInt16BE(t5 * s2);
        }
        if (i2) {
          var c2 = -1;
          for (o2 = r4; o2 < a2; o2++)
            if (l3(e4, o2) === l3(t4, -1 === c2 ? 0 : o2 - c2)) {
              if (-1 === c2 && (c2 = o2), o2 - c2 + 1 === u3)
                return c2 * s2;
            } else
              -1 !== c2 && (o2 -= o2 - c2), c2 = -1;
        } else
          for (r4 + u3 > a2 && (r4 = a2 - u3), o2 = r4; o2 >= 0; o2--) {
            for (var h3 = true, f3 = 0; f3 < u3; f3++)
              if (l3(e4, o2 + f3) !== l3(t4, f3)) {
                h3 = false;
                break;
              }
            if (h3)
              return o2;
          }
        return -1;
      }
      function w2(e4, t4, r4, n4) {
        r4 = Number(r4) || 0;
        var i2 = e4.length - r4;
        n4 ? (n4 = Number(n4)) > i2 && (n4 = i2) : n4 = i2;
        var o2 = t4.length;
        n4 > o2 / 2 && (n4 = o2 / 2);
        for (var s2 = 0; s2 < n4; ++s2) {
          var a2 = parseInt(t4.substr(2 * s2, 2), 16);
          if (F2(a2))
            return s2;
          e4[r4 + s2] = a2;
        }
        return s2;
      }
      function _2(e4, t4, r4, n4) {
        return z2(j(t4, e4.length - r4), e4, r4, n4);
      }
      function E2(e4, t4, r4, n4) {
        return z2(function (e5) {
          for (var t5 = [], r5 = 0; r5 < e5.length; ++r5)
            t5.push(255 & e5.charCodeAt(r5));
          return t5;
        }(t4), e4, r4, n4);
      }
      function k2(e4, t4, r4, n4) {
        return z2(q2(t4), e4, r4, n4);
      }
      function S2(e4, t4, r4, n4) {
        return z2(function (e5, t5) {
          for (var r5, n5, i2, o2 = [], s2 = 0; s2 < e5.length && !((t5 -= 2) < 0); ++s2)
            n5 = (r5 = e5.charCodeAt(s2)) >> 8, i2 = r5 % 256, o2.push(i2), o2.push(n5);
          return o2;
        }(t4, e4.length - r4), e4, r4, n4);
      }
      function C2(e4, t4, r4) {
        return 0 === t4 && r4 === e4.length ? n3.fromByteArray(e4) : n3.fromByteArray(e4.slice(t4, r4));
      }
      function T2(e4, t4, r4) {
        r4 = Math.min(e4.length, r4);
        for (var n4 = [], i2 = t4; i2 < r4;) {
          var o2, s2, a2, u3, l3 = e4[i2], c2 = null, h3 = l3 > 239 ? 4 : l3 > 223 ? 3 : l3 > 191 ? 2 : 1;
          if (i2 + h3 <= r4)
            switch (h3) {
              case 1:
                l3 < 128 && (c2 = l3);
                break;
              case 2:
                128 == (192 & (o2 = e4[i2 + 1])) && (u3 = (31 & l3) << 6 | 63 & o2) > 127 && (c2 = u3);
                break;
              case 3:
                o2 = e4[i2 + 1], s2 = e4[i2 + 2], 128 == (192 & o2) && 128 == (192 & s2) && (u3 = (15 & l3) << 12 | (63 & o2) << 6 | 63 & s2) > 2047 && (u3 < 55296 || u3 > 57343) && (c2 = u3);
                break;
              case 4:
                o2 = e4[i2 + 1], s2 = e4[i2 + 2], a2 = e4[i2 + 3], 128 == (192 & o2) && 128 == (192 & s2) && 128 == (192 & a2) && (u3 = (15 & l3) << 18 | (63 & o2) << 12 | (63 & s2) << 6 | 63 & a2) > 65535 && u3 < 1114112 && (c2 = u3);
            }
          null === c2 ? (c2 = 65533, h3 = 1) : c2 > 65535 && (c2 -= 65536, n4.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), n4.push(c2), i2 += h3;
        }
        return function (e5) {
          var t5 = e5.length;
          if (t5 <= A2)
            return String.fromCharCode.apply(String, e5);
          for (var r5 = "", n5 = 0; n5 < t5;)
            r5 += String.fromCharCode.apply(String, e5.slice(n5, n5 += A2));
          return r5;
        }(n4);
      }
      t3.kMaxLength = s, u2.TYPED_ARRAY_SUPPORT = function () {
        try {
          var e4 = new Uint8Array(1), t4 = {
            foo: function () {
              return 42;
            }
          };
          return Object.setPrototypeOf(t4, Uint8Array.prototype), Object.setPrototypeOf(e4, t4), 42 === e4.foo();
        } catch (e5) {
          return false;
        }
      }(), u2.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u2.prototype, "parent", {
        enumerable: true, get: function () {
          if (u2.isBuffer(this))
            return this.buffer;
        }
      }), Object.defineProperty(u2.prototype, "offset", {
        enumerable: true, get: function () {
          if (u2.isBuffer(this))
            return this.byteOffset;
        }
      }), u2.poolSize = 8192, u2.from = function (e4, t4, r4) {
        return l2(e4, t4, r4);
      }, Object.setPrototypeOf(u2.prototype, Uint8Array.prototype), Object.setPrototypeOf(u2, Uint8Array), u2.alloc = function (e4, t4, r4) {
        return function (e5, t5, r5) {
          return c(e5), e5 <= 0 ? a(e5) : void 0 !== t5 ? "string" == typeof r5 ? a(e5).fill(t5, r5) : a(e5).fill(t5) : a(e5);
        }(e4, t4, r4);
      }, u2.allocUnsafe = function (e4) {
        return h2(e4);
      }, u2.allocUnsafeSlow = function (e4) {
        return h2(e4);
      }, u2.isBuffer = function (e4) {
        return null != e4 && true === e4._isBuffer && e4 !== u2.prototype;
      }, u2.compare = function (e4, t4) {
        if (D2(e4, Uint8Array) && (e4 = u2.from(e4, e4.offset, e4.byteLength)), D2(t4, Uint8Array) && (t4 = u2.from(t4, t4.offset, t4.byteLength)), !u2.isBuffer(e4) || !u2.isBuffer(t4))
          throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (e4 === t4)
          return 0;
        for (var r4 = e4.length, n4 = t4.length, i2 = 0, o2 = Math.min(r4, n4); i2 < o2; ++i2)
          if (e4[i2] !== t4[i2]) {
            r4 = e4[i2], n4 = t4[i2];
            break;
          }
        return r4 < n4 ? -1 : n4 < r4 ? 1 : 0;
      }, u2.isEncoding = function (e4) {
        switch (String(e4).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, u2.concat = function (e4, t4) {
        if (!Array.isArray(e4))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === e4.length)
          return u2.alloc(0);
        var r4;
        if (void 0 === t4)
          for (t4 = 0, r4 = 0; r4 < e4.length; ++r4)
            t4 += e4[r4].length;
        var n4 = u2.allocUnsafe(t4), i2 = 0;
        for (r4 = 0; r4 < e4.length; ++r4) {
          var o2 = e4[r4];
          if (D2(o2, Uint8Array))
            i2 + o2.length > n4.length ? u2.from(o2).copy(n4, i2) : Uint8Array.prototype.set.call(n4, o2, i2);
          else {
            if (!u2.isBuffer(o2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            o2.copy(n4, i2);
          }
          i2 += o2.length;
        }
        return n4;
      }, u2.byteLength = y2, u2.prototype._isBuffer = true, u2.prototype.swap16 = function () {
        var e4 = this.length;
        if (e4 % 2 != 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var t4 = 0; t4 < e4; t4 += 2)
          b(this, t4, t4 + 1);
        return this;
      }, u2.prototype.swap32 = function () {
        var e4 = this.length;
        if (e4 % 4 != 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var t4 = 0; t4 < e4; t4 += 4)
          b(this, t4, t4 + 3), b(this, t4 + 1, t4 + 2);
        return this;
      }, u2.prototype.swap64 = function () {
        var e4 = this.length;
        if (e4 % 8 != 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var t4 = 0; t4 < e4; t4 += 8)
          b(this, t4, t4 + 7), b(this, t4 + 1, t4 + 6), b(this, t4 + 2, t4 + 5), b(this, t4 + 3, t4 + 4);
        return this;
      }, u2.prototype.toString = function () {
        var e4 = this.length;
        return 0 === e4 ? "" : 0 === arguments.length ? T2(this, 0, e4) : g.apply(this, arguments);
      }, u2.prototype.toLocaleString = u2.prototype.toString, u2.prototype.equals = function (e4) {
        if (!u2.isBuffer(e4))
          throw new TypeError("Argument must be a Buffer");
        return this === e4 || 0 === u2.compare(this, e4);
      }, u2.prototype.inspect = function () {
        var e4 = "", r4 = t3.INSPECT_MAX_BYTES;
        return e4 = this.toString("hex", 0, r4).replace(/(.{2})/g, "$1 ").trim(), this.length > r4 && (e4 += " ... "), "<Buffer " + e4 + ">";
      }, o && (u2.prototype[o] = u2.prototype.inspect), u2.prototype.compare = function (e4, t4, r4, n4, i2) {
        if (D2(e4, Uint8Array) && (e4 = u2.from(e4, e4.offset, e4.byteLength)), !u2.isBuffer(e4))
          throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e4);
        if (void 0 === t4 && (t4 = 0), void 0 === r4 && (r4 = e4 ? e4.length : 0), void 0 === n4 && (n4 = 0), void 0 === i2 && (i2 = this.length), t4 < 0 || r4 > e4.length || n4 < 0 || i2 > this.length)
          throw new RangeError("out of range index");
        if (n4 >= i2 && t4 >= r4)
          return 0;
        if (n4 >= i2)
          return -1;
        if (t4 >= r4)
          return 1;
        if (this === e4)
          return 0;
        for (var o2 = (i2 >>>= 0) - (n4 >>>= 0), s2 = (r4 >>>= 0) - (t4 >>>= 0), a2 = Math.min(o2, s2), l3 = this.slice(n4, i2), c2 = e4.slice(t4, r4), h3 = 0; h3 < a2; ++h3)
          if (l3[h3] !== c2[h3]) {
            o2 = l3[h3], s2 = c2[h3];
            break;
          }
        return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
      }, u2.prototype.includes = function (e4, t4, r4) {
        return -1 !== this.indexOf(e4, t4, r4);
      }, u2.prototype.indexOf = function (e4, t4, r4) {
        return m2(this, e4, t4, r4, true);
      }, u2.prototype.lastIndexOf = function (e4, t4, r4) {
        return m2(this, e4, t4, r4, false);
      }, u2.prototype.write = function (e4, t4, r4, n4) {
        if (void 0 === t4)
          n4 = "utf8", r4 = this.length, t4 = 0;
        else if (void 0 === r4 && "string" == typeof t4)
          n4 = t4, r4 = this.length, t4 = 0;
        else {
          if (!isFinite(t4))
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          t4 >>>= 0, isFinite(r4) ? (r4 >>>= 0, void 0 === n4 && (n4 = "utf8")) : (n4 = r4, r4 = void 0);
        }
        var i2 = this.length - t4;
        if ((void 0 === r4 || r4 > i2) && (r4 = i2), e4.length > 0 && (r4 < 0 || t4 < 0) || t4 > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        n4 || (n4 = "utf8");
        for (var o2 = false; ;)
          switch (n4) {
            case "hex":
              return w2(this, e4, t4, r4);
            case "utf8":
            case "utf-8":
              return _2(this, e4, t4, r4);
            case "ascii":
            case "latin1":
            case "binary":
              return E2(this, e4, t4, r4);
            case "base64":
              return k2(this, e4, t4, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return S2(this, e4, t4, r4);
            default:
              if (o2)
                throw new TypeError("Unknown encoding: " + n4);
              n4 = ("" + n4).toLowerCase(), o2 = true;
          }
      }, u2.prototype.toJSON = function () {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      var A2 = 4096;
      function I2(e4, t4, r4) {
        var n4 = "";
        r4 = Math.min(e4.length, r4);
        for (var i2 = t4; i2 < r4; ++i2)
          n4 += String.fromCharCode(127 & e4[i2]);
        return n4;
      }
      function x2(e4, t4, r4) {
        var n4 = "";
        r4 = Math.min(e4.length, r4);
        for (var i2 = t4; i2 < r4; ++i2)
          n4 += String.fromCharCode(e4[i2]);
        return n4;
      }
      function B2(e4, t4, r4) {
        var n4 = e4.length;
        (!t4 || t4 < 0) && (t4 = 0), (!r4 || r4 < 0 || r4 > n4) && (r4 = n4);
        for (var i2 = "", o2 = t4; o2 < r4; ++o2)
          i2 += V2[e4[o2]];
        return i2;
      }
      function R2(e4, t4, r4) {
        for (var n4 = e4.slice(t4, r4), i2 = "", o2 = 0; o2 < n4.length - 1; o2 += 2)
          i2 += String.fromCharCode(n4[o2] + 256 * n4[o2 + 1]);
        return i2;
      }
      function O2(e4, t4, r4) {
        if (e4 % 1 != 0 || e4 < 0)
          throw new RangeError("offset is not uint");
        if (e4 + t4 > r4)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function P2(e4, t4, r4, n4, i2, o2) {
        if (!u2.isBuffer(e4))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t4 > i2 || t4 < o2)
          throw new RangeError('"value" argument is out of bounds');
        if (r4 + n4 > e4.length)
          throw new RangeError("Index out of range");
      }
      function N2(e4, t4, r4, n4, i2, o2) {
        if (r4 + n4 > e4.length)
          throw new RangeError("Index out of range");
        if (r4 < 0)
          throw new RangeError("Index out of range");
      }
      function M2(e4, t4, r4, n4, o2) {
        return t4 = +t4, r4 >>>= 0, o2 || N2(e4, 0, r4, 4), i.write(e4, t4, r4, n4, 23, 4), r4 + 4;
      }
      function L2(e4, t4, r4, n4, o2) {
        return t4 = +t4, r4 >>>= 0, o2 || N2(e4, 0, r4, 8), i.write(e4, t4, r4, n4, 52, 8), r4 + 8;
      }
      u2.prototype.slice = function (e4, t4) {
        var r4 = this.length;
        (e4 = ~~e4) < 0 ? (e4 += r4) < 0 && (e4 = 0) : e4 > r4 && (e4 = r4), (t4 = void 0 === t4 ? r4 : ~~t4) < 0 ? (t4 += r4) < 0 && (t4 = 0) : t4 > r4 && (t4 = r4), t4 < e4 && (t4 = e4);
        var n4 = this.subarray(e4, t4);
        return Object.setPrototypeOf(n4, u2.prototype), n4;
      }, u2.prototype.readUintLE = u2.prototype.readUIntLE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        for (var n4 = this[e4], i2 = 1, o2 = 0; ++o2 < t4 && (i2 *= 256);)
          n4 += this[e4 + o2] * i2;
        return n4;
      }, u2.prototype.readUintBE = u2.prototype.readUIntBE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        for (var n4 = this[e4 + --t4], i2 = 1; t4 > 0 && (i2 *= 256);)
          n4 += this[e4 + --t4] * i2;
        return n4;
      }, u2.prototype.readUint8 = u2.prototype.readUInt8 = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 1, this.length), this[e4];
      }, u2.prototype.readUint16LE = u2.prototype.readUInt16LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 2, this.length), this[e4] | this[e4 + 1] << 8;
      }, u2.prototype.readUint16BE = u2.prototype.readUInt16BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 2, this.length), this[e4] << 8 | this[e4 + 1];
      }, u2.prototype.readUint32LE = u2.prototype.readUInt32LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), (this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16) + 16777216 * this[e4 + 3];
      }, u2.prototype.readUint32BE = u2.prototype.readUInt32BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), 16777216 * this[e4] + (this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3]);
      }, u2.prototype.readIntLE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        for (var n4 = this[e4], i2 = 1, o2 = 0; ++o2 < t4 && (i2 *= 256);)
          n4 += this[e4 + o2] * i2;
        return n4 >= (i2 *= 128) && (n4 -= Math.pow(2, 8 * t4)), n4;
      }, u2.prototype.readIntBE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        for (var n4 = t4, i2 = 1, o2 = this[e4 + --n4]; n4 > 0 && (i2 *= 256);)
          o2 += this[e4 + --n4] * i2;
        return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * t4)), o2;
      }, u2.prototype.readInt8 = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 1, this.length), 128 & this[e4] ? -1 * (255 - this[e4] + 1) : this[e4];
      }, u2.prototype.readInt16LE = function (e4, t4) {
        e4 >>>= 0, t4 || O2(e4, 2, this.length);
        var r4 = this[e4] | this[e4 + 1] << 8;
        return 32768 & r4 ? 4294901760 | r4 : r4;
      }, u2.prototype.readInt16BE = function (e4, t4) {
        e4 >>>= 0, t4 || O2(e4, 2, this.length);
        var r4 = this[e4 + 1] | this[e4] << 8;
        return 32768 & r4 ? 4294901760 | r4 : r4;
      }, u2.prototype.readInt32LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16 | this[e4 + 3] << 24;
      }, u2.prototype.readInt32BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), this[e4] << 24 | this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3];
      }, u2.prototype.readFloatLE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), i.read(this, e4, true, 23, 4);
      }, u2.prototype.readFloatBE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), i.read(this, e4, false, 23, 4);
      }, u2.prototype.readDoubleLE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 8, this.length), i.read(this, e4, true, 52, 8);
      }, u2.prototype.readDoubleBE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 8, this.length), i.read(this, e4, false, 52, 8);
      }, u2.prototype.writeUintLE = u2.prototype.writeUIntLE = function (e4, t4, r4, n4) {
        e4 = +e4, t4 >>>= 0, r4 >>>= 0, n4 || P2(this, e4, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
        var i2 = 1, o2 = 0;
        for (this[t4] = 255 & e4; ++o2 < r4 && (i2 *= 256);)
          this[t4 + o2] = e4 / i2 & 255;
        return t4 + r4;
      }, u2.prototype.writeUintBE = u2.prototype.writeUIntBE = function (e4, t4, r4, n4) {
        e4 = +e4, t4 >>>= 0, r4 >>>= 0, n4 || P2(this, e4, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
        var i2 = r4 - 1, o2 = 1;
        for (this[t4 + i2] = 255 & e4; --i2 >= 0 && (o2 *= 256);)
          this[t4 + i2] = e4 / o2 & 255;
        return t4 + r4;
      }, u2.prototype.writeUint8 = u2.prototype.writeUInt8 = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 1, 255, 0), this[t4] = 255 & e4, t4 + 1;
      }, u2.prototype.writeUint16LE = u2.prototype.writeUInt16LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 65535, 0), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
      }, u2.prototype.writeUint16BE = u2.prototype.writeUInt16BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 65535, 0), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
      }, u2.prototype.writeUint32LE = u2.prototype.writeUInt32LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 4294967295, 0), this[t4 + 3] = e4 >>> 24, this[t4 + 2] = e4 >>> 16, this[t4 + 1] = e4 >>> 8, this[t4] = 255 & e4, t4 + 4;
      }, u2.prototype.writeUint32BE = u2.prototype.writeUInt32BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 4294967295, 0), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
      }, u2.prototype.writeIntLE = function (e4, t4, r4, n4) {
        if (e4 = +e4, t4 >>>= 0, !n4) {
          var i2 = Math.pow(2, 8 * r4 - 1);
          P2(this, e4, t4, r4, i2 - 1, -i2);
        }
        var o2 = 0, s2 = 1, a2 = 0;
        for (this[t4] = 255 & e4; ++o2 < r4 && (s2 *= 256);)
          e4 < 0 && 0 === a2 && 0 !== this[t4 + o2 - 1] && (a2 = 1), this[t4 + o2] = (e4 / s2 >> 0) - a2 & 255;
        return t4 + r4;
      }, u2.prototype.writeIntBE = function (e4, t4, r4, n4) {
        if (e4 = +e4, t4 >>>= 0, !n4) {
          var i2 = Math.pow(2, 8 * r4 - 1);
          P2(this, e4, t4, r4, i2 - 1, -i2);
        }
        var o2 = r4 - 1, s2 = 1, a2 = 0;
        for (this[t4 + o2] = 255 & e4; --o2 >= 0 && (s2 *= 256);)
          e4 < 0 && 0 === a2 && 0 !== this[t4 + o2 + 1] && (a2 = 1), this[t4 + o2] = (e4 / s2 >> 0) - a2 & 255;
        return t4 + r4;
      }, u2.prototype.writeInt8 = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 1, 127, -128), e4 < 0 && (e4 = 255 + e4 + 1), this[t4] = 255 & e4, t4 + 1;
      }, u2.prototype.writeInt16LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 32767, -32768), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
      }, u2.prototype.writeInt16BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 32767, -32768), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
      }, u2.prototype.writeInt32LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 2147483647, -2147483648), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, this[t4 + 2] = e4 >>> 16, this[t4 + 3] = e4 >>> 24, t4 + 4;
      }, u2.prototype.writeInt32BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 2147483647, -2147483648), e4 < 0 && (e4 = 4294967295 + e4 + 1), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
      }, u2.prototype.writeFloatLE = function (e4, t4, r4) {
        return M2(this, e4, t4, true, r4);
      }, u2.prototype.writeFloatBE = function (e4, t4, r4) {
        return M2(this, e4, t4, false, r4);
      }, u2.prototype.writeDoubleLE = function (e4, t4, r4) {
        return L2(this, e4, t4, true, r4);
      }, u2.prototype.writeDoubleBE = function (e4, t4, r4) {
        return L2(this, e4, t4, false, r4);
      }, u2.prototype.copy = function (e4, t4, r4, n4) {
        if (!u2.isBuffer(e4))
          throw new TypeError("argument should be a Buffer");
        if (r4 || (r4 = 0), n4 || 0 === n4 || (n4 = this.length), t4 >= e4.length && (t4 = e4.length), t4 || (t4 = 0), n4 > 0 && n4 < r4 && (n4 = r4), n4 === r4)
          return 0;
        if (0 === e4.length || 0 === this.length)
          return 0;
        if (t4 < 0)
          throw new RangeError("targetStart out of bounds");
        if (r4 < 0 || r4 >= this.length)
          throw new RangeError("Index out of range");
        if (n4 < 0)
          throw new RangeError("sourceEnd out of bounds");
        n4 > this.length && (n4 = this.length), e4.length - t4 < n4 - r4 && (n4 = e4.length - t4 + r4);
        var i2 = n4 - r4;
        return this === e4 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t4, r4, n4) : Uint8Array.prototype.set.call(e4, this.subarray(r4, n4), t4), i2;
      }, u2.prototype.fill = function (e4, t4, r4, n4) {
        if ("string" == typeof e4) {
          if ("string" == typeof t4 ? (n4 = t4, t4 = 0, r4 = this.length) : "string" == typeof r4 && (n4 = r4, r4 = this.length), void 0 !== n4 && "string" != typeof n4)
            throw new TypeError("encoding must be a string");
          if ("string" == typeof n4 && !u2.isEncoding(n4))
            throw new TypeError("Unknown encoding: " + n4);
          if (1 === e4.length) {
            var i2 = e4.charCodeAt(0);
            ("utf8" === n4 && i2 < 128 || "latin1" === n4) && (e4 = i2);
          }
        } else
          "number" == typeof e4 ? e4 &= 255 : "boolean" == typeof e4 && (e4 = Number(e4));
        if (t4 < 0 || this.length < t4 || this.length < r4)
          throw new RangeError("Out of range index");
        if (r4 <= t4)
          return this;
        var o2;
        if (t4 >>>= 0, r4 = void 0 === r4 ? this.length : r4 >>> 0, e4 || (e4 = 0), "number" == typeof e4)
          for (o2 = t4; o2 < r4; ++o2)
            this[o2] = e4;
        else {
          var s2 = u2.isBuffer(e4) ? e4 : u2.from(e4, n4), a2 = s2.length;
          if (0 === a2)
            throw new TypeError('The value "' + e4 + '" is invalid for argument "value"');
          for (o2 = 0; o2 < r4 - t4; ++o2)
            this[o2 + t4] = s2[o2 % a2];
        }
        return this;
      };
      var U2 = /[^+/0-9A-Za-z-_]/g;
      function j(e4, t4) {
        var r4;
        t4 = t4 || 1 / 0;
        for (var n4 = e4.length, i2 = null, o2 = [], s2 = 0; s2 < n4; ++s2) {
          if ((r4 = e4.charCodeAt(s2)) > 55295 && r4 < 57344) {
            if (!i2) {
              if (r4 > 56319) {
                (t4 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              if (s2 + 1 === n4) {
                (t4 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              i2 = r4;
              continue;
            }
            if (r4 < 56320) {
              (t4 -= 3) > -1 && o2.push(239, 191, 189), i2 = r4;
              continue;
            }
            r4 = 65536 + (i2 - 55296 << 10 | r4 - 56320);
          } else
            i2 && (t4 -= 3) > -1 && o2.push(239, 191, 189);
          if (i2 = null, r4 < 128) {
            if ((t4 -= 1) < 0)
              break;
            o2.push(r4);
          } else if (r4 < 2048) {
            if ((t4 -= 2) < 0)
              break;
            o2.push(r4 >> 6 | 192, 63 & r4 | 128);
          } else if (r4 < 65536) {
            if ((t4 -= 3) < 0)
              break;
            o2.push(r4 >> 12 | 224, r4 >> 6 & 63 | 128, 63 & r4 | 128);
          } else {
            if (!(r4 < 1114112))
              throw new Error("Invalid code point");
            if ((t4 -= 4) < 0)
              break;
            o2.push(r4 >> 18 | 240, r4 >> 12 & 63 | 128, r4 >> 6 & 63 | 128, 63 & r4 | 128);
          }
        }
        return o2;
      }
      function q2(e4) {
        return n3.toByteArray(function (e5) {
          if ((e5 = (e5 = e5.split("=")[0]).trim().replace(U2, "")).length < 2)
            return "";
          for (; e5.length % 4 != 0;)
            e5 += "=";
          return e5;
        }(e4));
      }
      function z2(e4, t4, r4, n4) {
        for (var i2 = 0; i2 < n4 && !(i2 + r4 >= t4.length || i2 >= e4.length); ++i2)
          t4[i2 + r4] = e4[i2];
        return i2;
      }
      function D2(e4, t4) {
        return e4 instanceof t4 || null != e4 && null != e4.constructor && null != e4.constructor.name && e4.constructor.name === t4.name;
      }
      function F2(e4) {
        return e4 != e4;
      }
      var V2 = function () {
        for (var e4 = "0123456789abcdef", t4 = new Array(256), r4 = 0; r4 < 16; ++r4)
          for (var n4 = 16 * r4, i2 = 0; i2 < 16; ++i2)
            t4[n4 + i2] = e4[r4] + e4[i2];
        return t4;
      }();
    }, 8764: function (e3, t3, r3) {
      const n3 = r3(9742), i = r3(645), o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
      t3.Buffer = u2, t3.SlowBuffer = function (e4) {
        return +e4 != e4 && (e4 = 0), u2.alloc(+e4);
      }, t3.INSPECT_MAX_BYTES = 50;
      const s = 2147483647;
      function a(e4) {
        if (e4 > s)
          throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
        const t4 = new Uint8Array(e4);
        return Object.setPrototypeOf(t4, u2.prototype), t4;
      }
      function u2(e4, t4, r4) {
        if ("number" == typeof e4) {
          if ("string" == typeof t4)
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return h2(e4);
        }
        return l2(e4, t4, r4);
      }
      function l2(e4, t4, r4) {
        if ("string" == typeof e4)
          return function (e5, t5) {
            if ("string" == typeof t5 && "" !== t5 || (t5 = "utf8"), !u2.isEncoding(t5))
              throw new TypeError("Unknown encoding: " + t5);
            const r5 = 0 | y2(e5, t5);
            let n5 = a(r5);
            const i3 = n5.write(e5, t5);
            return i3 !== r5 && (n5 = n5.slice(0, i3)), n5;
          }(e4, t4);
        if (ArrayBuffer.isView(e4))
          return function (e5) {
            if (Y2(e5, Uint8Array)) {
              const t5 = new Uint8Array(e5);
              return p2(t5.buffer, t5.byteOffset, t5.byteLength);
            }
            return f2(e5);
          }(e4);
        if (null == e4)
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
        if (Y2(e4, ArrayBuffer) || e4 && Y2(e4.buffer, ArrayBuffer))
          return p2(e4, t4, r4);
        if ("undefined" != typeof SharedArrayBuffer && (Y2(e4, SharedArrayBuffer) || e4 && Y2(e4.buffer, SharedArrayBuffer)))
          return p2(e4, t4, r4);
        if ("number" == typeof e4)
          throw new TypeError('The "value" argument must not be of type number. Received type number');
        const n4 = e4.valueOf && e4.valueOf();
        if (null != n4 && n4 !== e4)
          return u2.from(n4, t4, r4);
        const i2 = function (e5) {
          if (u2.isBuffer(e5)) {
            const t5 = 0 | d(e5.length), r5 = a(t5);
            return 0 === r5.length || e5.copy(r5, 0, 0, t5), r5;
          }
          return void 0 !== e5.length ? "number" != typeof e5.length || G2(e5.length) ? a(0) : f2(e5) : "Buffer" === e5.type && Array.isArray(e5.data) ? f2(e5.data) : void 0;
        }(e4);
        if (i2)
          return i2;
        if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e4[Symbol.toPrimitive])
          return u2.from(e4[Symbol.toPrimitive]("string"), t4, r4);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
      }
      function c(e4) {
        if ("number" != typeof e4)
          throw new TypeError('"size" argument must be of type number');
        if (e4 < 0)
          throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
      }
      function h2(e4) {
        return c(e4), a(e4 < 0 ? 0 : 0 | d(e4));
      }
      function f2(e4) {
        const t4 = e4.length < 0 ? 0 : 0 | d(e4.length), r4 = a(t4);
        for (let n4 = 0; n4 < t4; n4 += 1)
          r4[n4] = 255 & e4[n4];
        return r4;
      }
      function p2(e4, t4, r4) {
        if (t4 < 0 || e4.byteLength < t4)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (e4.byteLength < t4 + (r4 || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        let n4;
        return n4 = void 0 === t4 && void 0 === r4 ? new Uint8Array(e4) : void 0 === r4 ? new Uint8Array(e4, t4) : new Uint8Array(e4, t4, r4), Object.setPrototypeOf(n4, u2.prototype), n4;
      }
      function d(e4) {
        if (e4 >= s)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
        return 0 | e4;
      }
      function y2(e4, t4) {
        if (u2.isBuffer(e4))
          return e4.length;
        if (ArrayBuffer.isView(e4) || Y2(e4, ArrayBuffer))
          return e4.byteLength;
        if ("string" != typeof e4)
          throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e4);
        const r4 = e4.length, n4 = arguments.length > 2 && true === arguments[2];
        if (!n4 && 0 === r4)
          return 0;
        let i2 = false;
        for (; ;)
          switch (t4) {
            case "ascii":
            case "latin1":
            case "binary":
              return r4;
            case "utf8":
            case "utf-8":
              return K2(e4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r4;
            case "hex":
              return r4 >>> 1;
            case "base64":
              return $(e4).length;
            default:
              if (i2)
                return n4 ? -1 : K2(e4).length;
              t4 = ("" + t4).toLowerCase(), i2 = true;
          }
      }
      function g(e4, t4, r4) {
        let n4 = false;
        if ((void 0 === t4 || t4 < 0) && (t4 = 0), t4 > this.length)
          return "";
        if ((void 0 === r4 || r4 > this.length) && (r4 = this.length), r4 <= 0)
          return "";
        if ((r4 >>>= 0) <= (t4 >>>= 0))
          return "";
        for (e4 || (e4 = "utf8"); ;)
          switch (e4) {
            case "hex":
              return B2(this, t4, r4);
            case "utf8":
            case "utf-8":
              return T2(this, t4, r4);
            case "ascii":
              return I2(this, t4, r4);
            case "latin1":
            case "binary":
              return x2(this, t4, r4);
            case "base64":
              return C2(this, t4, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return R2(this, t4, r4);
            default:
              if (n4)
                throw new TypeError("Unknown encoding: " + e4);
              e4 = (e4 + "").toLowerCase(), n4 = true;
          }
      }
      function b(e4, t4, r4) {
        const n4 = e4[t4];
        e4[t4] = e4[r4], e4[r4] = n4;
      }
      function m2(e4, t4, r4, n4, i2) {
        if (0 === e4.length)
          return -1;
        if ("string" == typeof r4 ? (n4 = r4, r4 = 0) : r4 > 2147483647 ? r4 = 2147483647 : r4 < -2147483648 && (r4 = -2147483648), G2(r4 = +r4) && (r4 = i2 ? 0 : e4.length - 1), r4 < 0 && (r4 = e4.length + r4), r4 >= e4.length) {
          if (i2)
            return -1;
          r4 = e4.length - 1;
        } else if (r4 < 0) {
          if (!i2)
            return -1;
          r4 = 0;
        }
        if ("string" == typeof t4 && (t4 = u2.from(t4, n4)), u2.isBuffer(t4))
          return 0 === t4.length ? -1 : v2(e4, t4, r4, n4, i2);
        if ("number" == typeof t4)
          return t4 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e4, t4, r4) : Uint8Array.prototype.lastIndexOf.call(e4, t4, r4) : v2(e4, [t4], r4, n4, i2);
        throw new TypeError("val must be string, number or Buffer");
      }
      function v2(e4, t4, r4, n4, i2) {
        let o2, s2 = 1, a2 = e4.length, u3 = t4.length;
        if (void 0 !== n4 && ("ucs2" === (n4 = String(n4).toLowerCase()) || "ucs-2" === n4 || "utf16le" === n4 || "utf-16le" === n4)) {
          if (e4.length < 2 || t4.length < 2)
            return -1;
          s2 = 2, a2 /= 2, u3 /= 2, r4 /= 2;
        }
        function l3(e5, t5) {
          return 1 === s2 ? e5[t5] : e5.readUInt16BE(t5 * s2);
        }
        if (i2) {
          let n5 = -1;
          for (o2 = r4; o2 < a2; o2++)
            if (l3(e4, o2) === l3(t4, -1 === n5 ? 0 : o2 - n5)) {
              if (-1 === n5 && (n5 = o2), o2 - n5 + 1 === u3)
                return n5 * s2;
            } else
              -1 !== n5 && (o2 -= o2 - n5), n5 = -1;
        } else
          for (r4 + u3 > a2 && (r4 = a2 - u3), o2 = r4; o2 >= 0; o2--) {
            let r5 = true;
            for (let n5 = 0; n5 < u3; n5++)
              if (l3(e4, o2 + n5) !== l3(t4, n5)) {
                r5 = false;
                break;
              }
            if (r5)
              return o2;
          }
        return -1;
      }
      function w2(e4, t4, r4, n4) {
        r4 = Number(r4) || 0;
        const i2 = e4.length - r4;
        n4 ? (n4 = Number(n4)) > i2 && (n4 = i2) : n4 = i2;
        const o2 = t4.length;
        let s2;
        for (n4 > o2 / 2 && (n4 = o2 / 2), s2 = 0; s2 < n4; ++s2) {
          const n5 = parseInt(t4.substr(2 * s2, 2), 16);
          if (G2(n5))
            return s2;
          e4[r4 + s2] = n5;
        }
        return s2;
      }
      function _2(e4, t4, r4, n4) {
        return Q2(K2(t4, e4.length - r4), e4, r4, n4);
      }
      function E2(e4, t4, r4, n4) {
        return Q2(function (e5) {
          const t5 = [];
          for (let r5 = 0; r5 < e5.length; ++r5)
            t5.push(255 & e5.charCodeAt(r5));
          return t5;
        }(t4), e4, r4, n4);
      }
      function k2(e4, t4, r4, n4) {
        return Q2($(t4), e4, r4, n4);
      }
      function S2(e4, t4, r4, n4) {
        return Q2(function (e5, t5) {
          let r5, n5, i2;
          const o2 = [];
          for (let s2 = 0; s2 < e5.length && !((t5 -= 2) < 0); ++s2)
            r5 = e5.charCodeAt(s2), n5 = r5 >> 8, i2 = r5 % 256, o2.push(i2), o2.push(n5);
          return o2;
        }(t4, e4.length - r4), e4, r4, n4);
      }
      function C2(e4, t4, r4) {
        return 0 === t4 && r4 === e4.length ? n3.fromByteArray(e4) : n3.fromByteArray(e4.slice(t4, r4));
      }
      function T2(e4, t4, r4) {
        r4 = Math.min(e4.length, r4);
        const n4 = [];
        let i2 = t4;
        for (; i2 < r4;) {
          const t5 = e4[i2];
          let o2 = null, s2 = t5 > 239 ? 4 : t5 > 223 ? 3 : t5 > 191 ? 2 : 1;
          if (i2 + s2 <= r4) {
            let r5, n5, a2, u3;
            switch (s2) {
              case 1:
                t5 < 128 && (o2 = t5);
                break;
              case 2:
                r5 = e4[i2 + 1], 128 == (192 & r5) && (u3 = (31 & t5) << 6 | 63 & r5, u3 > 127 && (o2 = u3));
                break;
              case 3:
                r5 = e4[i2 + 1], n5 = e4[i2 + 2], 128 == (192 & r5) && 128 == (192 & n5) && (u3 = (15 & t5) << 12 | (63 & r5) << 6 | 63 & n5, u3 > 2047 && (u3 < 55296 || u3 > 57343) && (o2 = u3));
                break;
              case 4:
                r5 = e4[i2 + 1], n5 = e4[i2 + 2], a2 = e4[i2 + 3], 128 == (192 & r5) && 128 == (192 & n5) && 128 == (192 & a2) && (u3 = (15 & t5) << 18 | (63 & r5) << 12 | (63 & n5) << 6 | 63 & a2, u3 > 65535 && u3 < 1114112 && (o2 = u3));
            }
          }
          null === o2 ? (o2 = 65533, s2 = 1) : o2 > 65535 && (o2 -= 65536, n4.push(o2 >>> 10 & 1023 | 55296), o2 = 56320 | 1023 & o2), n4.push(o2), i2 += s2;
        }
        return function (e5) {
          const t5 = e5.length;
          if (t5 <= A2)
            return String.fromCharCode.apply(String, e5);
          let r5 = "", n5 = 0;
          for (; n5 < t5;)
            r5 += String.fromCharCode.apply(String, e5.slice(n5, n5 += A2));
          return r5;
        }(n4);
      }
      t3.kMaxLength = s, u2.TYPED_ARRAY_SUPPORT = function () {
        try {
          const e4 = new Uint8Array(1), t4 = {
            foo: function () {
              return 42;
            }
          };
          return Object.setPrototypeOf(t4, Uint8Array.prototype), Object.setPrototypeOf(e4, t4), 42 === e4.foo();
        } catch (e4) {
          return false;
        }
      }(), u2.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u2.prototype, "parent", {
        enumerable: true, get: function () {
          if (u2.isBuffer(this))
            return this.buffer;
        }
      }), Object.defineProperty(u2.prototype, "offset", {
        enumerable: true, get: function () {
          if (u2.isBuffer(this))
            return this.byteOffset;
        }
      }), u2.poolSize = 8192, u2.from = function (e4, t4, r4) {
        return l2(e4, t4, r4);
      }, Object.setPrototypeOf(u2.prototype, Uint8Array.prototype), Object.setPrototypeOf(u2, Uint8Array), u2.alloc = function (e4, t4, r4) {
        return function (e5, t5, r5) {
          return c(e5), e5 <= 0 ? a(e5) : void 0 !== t5 ? "string" == typeof r5 ? a(e5).fill(t5, r5) : a(e5).fill(t5) : a(e5);
        }(e4, t4, r4);
      }, u2.allocUnsafe = function (e4) {
        return h2(e4);
      }, u2.allocUnsafeSlow = function (e4) {
        return h2(e4);
      }, u2.isBuffer = function (e4) {
        return null != e4 && true === e4._isBuffer && e4 !== u2.prototype;
      }, u2.compare = function (e4, t4) {
        if (Y2(e4, Uint8Array) && (e4 = u2.from(e4, e4.offset, e4.byteLength)), Y2(t4, Uint8Array) && (t4 = u2.from(t4, t4.offset, t4.byteLength)), !u2.isBuffer(e4) || !u2.isBuffer(t4))
          throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (e4 === t4)
          return 0;
        let r4 = e4.length, n4 = t4.length;
        for (let i2 = 0, o2 = Math.min(r4, n4); i2 < o2; ++i2)
          if (e4[i2] !== t4[i2]) {
            r4 = e4[i2], n4 = t4[i2];
            break;
          }
        return r4 < n4 ? -1 : n4 < r4 ? 1 : 0;
      }, u2.isEncoding = function (e4) {
        switch (String(e4).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, u2.concat = function (e4, t4) {
        if (!Array.isArray(e4))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === e4.length)
          return u2.alloc(0);
        let r4;
        if (void 0 === t4)
          for (t4 = 0, r4 = 0; r4 < e4.length; ++r4)
            t4 += e4[r4].length;
        const n4 = u2.allocUnsafe(t4);
        let i2 = 0;
        for (r4 = 0; r4 < e4.length; ++r4) {
          let t5 = e4[r4];
          if (Y2(t5, Uint8Array))
            i2 + t5.length > n4.length ? (u2.isBuffer(t5) || (t5 = u2.from(t5)), t5.copy(n4, i2)) : Uint8Array.prototype.set.call(n4, t5, i2);
          else {
            if (!u2.isBuffer(t5))
              throw new TypeError('"list" argument must be an Array of Buffers');
            t5.copy(n4, i2);
          }
          i2 += t5.length;
        }
        return n4;
      }, u2.byteLength = y2, u2.prototype._isBuffer = true, u2.prototype.swap16 = function () {
        const e4 = this.length;
        if (e4 % 2 != 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (let t4 = 0; t4 < e4; t4 += 2)
          b(this, t4, t4 + 1);
        return this;
      }, u2.prototype.swap32 = function () {
        const e4 = this.length;
        if (e4 % 4 != 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (let t4 = 0; t4 < e4; t4 += 4)
          b(this, t4, t4 + 3), b(this, t4 + 1, t4 + 2);
        return this;
      }, u2.prototype.swap64 = function () {
        const e4 = this.length;
        if (e4 % 8 != 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (let t4 = 0; t4 < e4; t4 += 8)
          b(this, t4, t4 + 7), b(this, t4 + 1, t4 + 6), b(this, t4 + 2, t4 + 5), b(this, t4 + 3, t4 + 4);
        return this;
      }, u2.prototype.toString = function () {
        const e4 = this.length;
        return 0 === e4 ? "" : 0 === arguments.length ? T2(this, 0, e4) : g.apply(this, arguments);
      }, u2.prototype.toLocaleString = u2.prototype.toString, u2.prototype.equals = function (e4) {
        if (!u2.isBuffer(e4))
          throw new TypeError("Argument must be a Buffer");
        return this === e4 || 0 === u2.compare(this, e4);
      }, u2.prototype.inspect = function () {
        let e4 = "";
        const r4 = t3.INSPECT_MAX_BYTES;
        return e4 = this.toString("hex", 0, r4).replace(/(.{2})/g, "$1 ").trim(), this.length > r4 && (e4 += " ... "), "<Buffer " + e4 + ">";
      }, o && (u2.prototype[o] = u2.prototype.inspect), u2.prototype.compare = function (e4, t4, r4, n4, i2) {
        if (Y2(e4, Uint8Array) && (e4 = u2.from(e4, e4.offset, e4.byteLength)), !u2.isBuffer(e4))
          throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e4);
        if (void 0 === t4 && (t4 = 0), void 0 === r4 && (r4 = e4 ? e4.length : 0), void 0 === n4 && (n4 = 0), void 0 === i2 && (i2 = this.length), t4 < 0 || r4 > e4.length || n4 < 0 || i2 > this.length)
          throw new RangeError("out of range index");
        if (n4 >= i2 && t4 >= r4)
          return 0;
        if (n4 >= i2)
          return -1;
        if (t4 >= r4)
          return 1;
        if (this === e4)
          return 0;
        let o2 = (i2 >>>= 0) - (n4 >>>= 0), s2 = (r4 >>>= 0) - (t4 >>>= 0);
        const a2 = Math.min(o2, s2), l3 = this.slice(n4, i2), c2 = e4.slice(t4, r4);
        for (let e5 = 0; e5 < a2; ++e5)
          if (l3[e5] !== c2[e5]) {
            o2 = l3[e5], s2 = c2[e5];
            break;
          }
        return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
      }, u2.prototype.includes = function (e4, t4, r4) {
        return -1 !== this.indexOf(e4, t4, r4);
      }, u2.prototype.indexOf = function (e4, t4, r4) {
        return m2(this, e4, t4, r4, true);
      }, u2.prototype.lastIndexOf = function (e4, t4, r4) {
        return m2(this, e4, t4, r4, false);
      }, u2.prototype.write = function (e4, t4, r4, n4) {
        if (void 0 === t4)
          n4 = "utf8", r4 = this.length, t4 = 0;
        else if (void 0 === r4 && "string" == typeof t4)
          n4 = t4, r4 = this.length, t4 = 0;
        else {
          if (!isFinite(t4))
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          t4 >>>= 0, isFinite(r4) ? (r4 >>>= 0, void 0 === n4 && (n4 = "utf8")) : (n4 = r4, r4 = void 0);
        }
        const i2 = this.length - t4;
        if ((void 0 === r4 || r4 > i2) && (r4 = i2), e4.length > 0 && (r4 < 0 || t4 < 0) || t4 > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        n4 || (n4 = "utf8");
        let o2 = false;
        for (; ;)
          switch (n4) {
            case "hex":
              return w2(this, e4, t4, r4);
            case "utf8":
            case "utf-8":
              return _2(this, e4, t4, r4);
            case "ascii":
            case "latin1":
            case "binary":
              return E2(this, e4, t4, r4);
            case "base64":
              return k2(this, e4, t4, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return S2(this, e4, t4, r4);
            default:
              if (o2)
                throw new TypeError("Unknown encoding: " + n4);
              n4 = ("" + n4).toLowerCase(), o2 = true;
          }
      }, u2.prototype.toJSON = function () {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      const A2 = 4096;
      function I2(e4, t4, r4) {
        let n4 = "";
        r4 = Math.min(e4.length, r4);
        for (let i2 = t4; i2 < r4; ++i2)
          n4 += String.fromCharCode(127 & e4[i2]);
        return n4;
      }
      function x2(e4, t4, r4) {
        let n4 = "";
        r4 = Math.min(e4.length, r4);
        for (let i2 = t4; i2 < r4; ++i2)
          n4 += String.fromCharCode(e4[i2]);
        return n4;
      }
      function B2(e4, t4, r4) {
        const n4 = e4.length;
        (!t4 || t4 < 0) && (t4 = 0), (!r4 || r4 < 0 || r4 > n4) && (r4 = n4);
        let i2 = "";
        for (let n5 = t4; n5 < r4; ++n5)
          i2 += Z2[e4[n5]];
        return i2;
      }
      function R2(e4, t4, r4) {
        const n4 = e4.slice(t4, r4);
        let i2 = "";
        for (let e5 = 0; e5 < n4.length - 1; e5 += 2)
          i2 += String.fromCharCode(n4[e5] + 256 * n4[e5 + 1]);
        return i2;
      }
      function O2(e4, t4, r4) {
        if (e4 % 1 != 0 || e4 < 0)
          throw new RangeError("offset is not uint");
        if (e4 + t4 > r4)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function P2(e4, t4, r4, n4, i2, o2) {
        if (!u2.isBuffer(e4))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t4 > i2 || t4 < o2)
          throw new RangeError('"value" argument is out of bounds');
        if (r4 + n4 > e4.length)
          throw new RangeError("Index out of range");
      }
      function N2(e4, t4, r4, n4, i2) {
        F2(t4, n4, i2, e4, r4, 7);
        let o2 = Number(t4 & BigInt(4294967295));
        e4[r4++] = o2, o2 >>= 8, e4[r4++] = o2, o2 >>= 8, e4[r4++] = o2, o2 >>= 8, e4[r4++] = o2;
        let s2 = Number(t4 >> BigInt(32) & BigInt(4294967295));
        return e4[r4++] = s2, s2 >>= 8, e4[r4++] = s2, s2 >>= 8, e4[r4++] = s2, s2 >>= 8, e4[r4++] = s2, r4;
      }
      function M2(e4, t4, r4, n4, i2) {
        F2(t4, n4, i2, e4, r4, 7);
        let o2 = Number(t4 & BigInt(4294967295));
        e4[r4 + 7] = o2, o2 >>= 8, e4[r4 + 6] = o2, o2 >>= 8, e4[r4 + 5] = o2, o2 >>= 8, e4[r4 + 4] = o2;
        let s2 = Number(t4 >> BigInt(32) & BigInt(4294967295));
        return e4[r4 + 3] = s2, s2 >>= 8, e4[r4 + 2] = s2, s2 >>= 8, e4[r4 + 1] = s2, s2 >>= 8, e4[r4] = s2, r4 + 8;
      }
      function L2(e4, t4, r4, n4, i2, o2) {
        if (r4 + n4 > e4.length)
          throw new RangeError("Index out of range");
        if (r4 < 0)
          throw new RangeError("Index out of range");
      }
      function U2(e4, t4, r4, n4, o2) {
        return t4 = +t4, r4 >>>= 0, o2 || L2(e4, 0, r4, 4), i.write(e4, t4, r4, n4, 23, 4), r4 + 4;
      }
      function j(e4, t4, r4, n4, o2) {
        return t4 = +t4, r4 >>>= 0, o2 || L2(e4, 0, r4, 8), i.write(e4, t4, r4, n4, 52, 8), r4 + 8;
      }
      u2.prototype.slice = function (e4, t4) {
        const r4 = this.length;
        (e4 = ~~e4) < 0 ? (e4 += r4) < 0 && (e4 = 0) : e4 > r4 && (e4 = r4), (t4 = void 0 === t4 ? r4 : ~~t4) < 0 ? (t4 += r4) < 0 && (t4 = 0) : t4 > r4 && (t4 = r4), t4 < e4 && (t4 = e4);
        const n4 = this.subarray(e4, t4);
        return Object.setPrototypeOf(n4, u2.prototype), n4;
      }, u2.prototype.readUintLE = u2.prototype.readUIntLE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        let n4 = this[e4], i2 = 1, o2 = 0;
        for (; ++o2 < t4 && (i2 *= 256);)
          n4 += this[e4 + o2] * i2;
        return n4;
      }, u2.prototype.readUintBE = u2.prototype.readUIntBE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        let n4 = this[e4 + --t4], i2 = 1;
        for (; t4 > 0 && (i2 *= 256);)
          n4 += this[e4 + --t4] * i2;
        return n4;
      }, u2.prototype.readUint8 = u2.prototype.readUInt8 = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 1, this.length), this[e4];
      }, u2.prototype.readUint16LE = u2.prototype.readUInt16LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 2, this.length), this[e4] | this[e4 + 1] << 8;
      }, u2.prototype.readUint16BE = u2.prototype.readUInt16BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 2, this.length), this[e4] << 8 | this[e4 + 1];
      }, u2.prototype.readUint32LE = u2.prototype.readUInt32LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), (this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16) + 16777216 * this[e4 + 3];
      }, u2.prototype.readUint32BE = u2.prototype.readUInt32BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), 16777216 * this[e4] + (this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3]);
      }, u2.prototype.readBigUInt64LE = J2(function (e4) {
        V2(e4 >>>= 0, "offset");
        const t4 = this[e4], r4 = this[e4 + 7];
        void 0 !== t4 && void 0 !== r4 || W2(e4, this.length - 8);
        const n4 = t4 + 256 * this[++e4] + 65536 * this[++e4] + this[++e4] * 2 ** 24, i2 = this[++e4] + 256 * this[++e4] + 65536 * this[++e4] + r4 * 2 ** 24;
        return BigInt(n4) + (BigInt(i2) << BigInt(32));
      }), u2.prototype.readBigUInt64BE = J2(function (e4) {
        V2(e4 >>>= 0, "offset");
        const t4 = this[e4], r4 = this[e4 + 7];
        void 0 !== t4 && void 0 !== r4 || W2(e4, this.length - 8);
        const n4 = t4 * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + this[++e4], i2 = this[++e4] * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + r4;
        return (BigInt(n4) << BigInt(32)) + BigInt(i2);
      }), u2.prototype.readIntLE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        let n4 = this[e4], i2 = 1, o2 = 0;
        for (; ++o2 < t4 && (i2 *= 256);)
          n4 += this[e4 + o2] * i2;
        return i2 *= 128, n4 >= i2 && (n4 -= Math.pow(2, 8 * t4)), n4;
      }, u2.prototype.readIntBE = function (e4, t4, r4) {
        e4 >>>= 0, t4 >>>= 0, r4 || O2(e4, t4, this.length);
        let n4 = t4, i2 = 1, o2 = this[e4 + --n4];
        for (; n4 > 0 && (i2 *= 256);)
          o2 += this[e4 + --n4] * i2;
        return i2 *= 128, o2 >= i2 && (o2 -= Math.pow(2, 8 * t4)), o2;
      }, u2.prototype.readInt8 = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 1, this.length), 128 & this[e4] ? -1 * (255 - this[e4] + 1) : this[e4];
      }, u2.prototype.readInt16LE = function (e4, t4) {
        e4 >>>= 0, t4 || O2(e4, 2, this.length);
        const r4 = this[e4] | this[e4 + 1] << 8;
        return 32768 & r4 ? 4294901760 | r4 : r4;
      }, u2.prototype.readInt16BE = function (e4, t4) {
        e4 >>>= 0, t4 || O2(e4, 2, this.length);
        const r4 = this[e4 + 1] | this[e4] << 8;
        return 32768 & r4 ? 4294901760 | r4 : r4;
      }, u2.prototype.readInt32LE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16 | this[e4 + 3] << 24;
      }, u2.prototype.readInt32BE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), this[e4] << 24 | this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3];
      }, u2.prototype.readBigInt64LE = J2(function (e4) {
        V2(e4 >>>= 0, "offset");
        const t4 = this[e4], r4 = this[e4 + 7];
        void 0 !== t4 && void 0 !== r4 || W2(e4, this.length - 8);
        const n4 = this[e4 + 4] + 256 * this[e4 + 5] + 65536 * this[e4 + 6] + (r4 << 24);
        return (BigInt(n4) << BigInt(32)) + BigInt(t4 + 256 * this[++e4] + 65536 * this[++e4] + this[++e4] * 2 ** 24);
      }), u2.prototype.readBigInt64BE = J2(function (e4) {
        V2(e4 >>>= 0, "offset");
        const t4 = this[e4], r4 = this[e4 + 7];
        void 0 !== t4 && void 0 !== r4 || W2(e4, this.length - 8);
        const n4 = (t4 << 24) + 65536 * this[++e4] + 256 * this[++e4] + this[++e4];
        return (BigInt(n4) << BigInt(32)) + BigInt(this[++e4] * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + r4);
      }), u2.prototype.readFloatLE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), i.read(this, e4, true, 23, 4);
      }, u2.prototype.readFloatBE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 4, this.length), i.read(this, e4, false, 23, 4);
      }, u2.prototype.readDoubleLE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 8, this.length), i.read(this, e4, true, 52, 8);
      }, u2.prototype.readDoubleBE = function (e4, t4) {
        return e4 >>>= 0, t4 || O2(e4, 8, this.length), i.read(this, e4, false, 52, 8);
      }, u2.prototype.writeUintLE = u2.prototype.writeUIntLE = function (e4, t4, r4, n4) {
        e4 = +e4, t4 >>>= 0, r4 >>>= 0, n4 || P2(this, e4, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
        let i2 = 1, o2 = 0;
        for (this[t4] = 255 & e4; ++o2 < r4 && (i2 *= 256);)
          this[t4 + o2] = e4 / i2 & 255;
        return t4 + r4;
      }, u2.prototype.writeUintBE = u2.prototype.writeUIntBE = function (e4, t4, r4, n4) {
        e4 = +e4, t4 >>>= 0, r4 >>>= 0, n4 || P2(this, e4, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
        let i2 = r4 - 1, o2 = 1;
        for (this[t4 + i2] = 255 & e4; --i2 >= 0 && (o2 *= 256);)
          this[t4 + i2] = e4 / o2 & 255;
        return t4 + r4;
      }, u2.prototype.writeUint8 = u2.prototype.writeUInt8 = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 1, 255, 0), this[t4] = 255 & e4, t4 + 1;
      }, u2.prototype.writeUint16LE = u2.prototype.writeUInt16LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 65535, 0), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
      }, u2.prototype.writeUint16BE = u2.prototype.writeUInt16BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 65535, 0), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
      }, u2.prototype.writeUint32LE = u2.prototype.writeUInt32LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 4294967295, 0), this[t4 + 3] = e4 >>> 24, this[t4 + 2] = e4 >>> 16, this[t4 + 1] = e4 >>> 8, this[t4] = 255 & e4, t4 + 4;
      }, u2.prototype.writeUint32BE = u2.prototype.writeUInt32BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 4294967295, 0), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
      }, u2.prototype.writeBigUInt64LE = J2(function (e4, t4 = 0) {
        return N2(this, e4, t4, BigInt(0), BigInt("0xffffffffffffffff"));
      }), u2.prototype.writeBigUInt64BE = J2(function (e4, t4 = 0) {
        return M2(this, e4, t4, BigInt(0), BigInt("0xffffffffffffffff"));
      }), u2.prototype.writeIntLE = function (e4, t4, r4, n4) {
        if (e4 = +e4, t4 >>>= 0, !n4) {
          const n5 = Math.pow(2, 8 * r4 - 1);
          P2(this, e4, t4, r4, n5 - 1, -n5);
        }
        let i2 = 0, o2 = 1, s2 = 0;
        for (this[t4] = 255 & e4; ++i2 < r4 && (o2 *= 256);)
          e4 < 0 && 0 === s2 && 0 !== this[t4 + i2 - 1] && (s2 = 1), this[t4 + i2] = (e4 / o2 >> 0) - s2 & 255;
        return t4 + r4;
      }, u2.prototype.writeIntBE = function (e4, t4, r4, n4) {
        if (e4 = +e4, t4 >>>= 0, !n4) {
          const n5 = Math.pow(2, 8 * r4 - 1);
          P2(this, e4, t4, r4, n5 - 1, -n5);
        }
        let i2 = r4 - 1, o2 = 1, s2 = 0;
        for (this[t4 + i2] = 255 & e4; --i2 >= 0 && (o2 *= 256);)
          e4 < 0 && 0 === s2 && 0 !== this[t4 + i2 + 1] && (s2 = 1), this[t4 + i2] = (e4 / o2 >> 0) - s2 & 255;
        return t4 + r4;
      }, u2.prototype.writeInt8 = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 1, 127, -128), e4 < 0 && (e4 = 255 + e4 + 1), this[t4] = 255 & e4, t4 + 1;
      }, u2.prototype.writeInt16LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 32767, -32768), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
      }, u2.prototype.writeInt16BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 2, 32767, -32768), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
      }, u2.prototype.writeInt32LE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 2147483647, -2147483648), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, this[t4 + 2] = e4 >>> 16, this[t4 + 3] = e4 >>> 24, t4 + 4;
      }, u2.prototype.writeInt32BE = function (e4, t4, r4) {
        return e4 = +e4, t4 >>>= 0, r4 || P2(this, e4, t4, 4, 2147483647, -2147483648), e4 < 0 && (e4 = 4294967295 + e4 + 1), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
      }, u2.prototype.writeBigInt64LE = J2(function (e4, t4 = 0) {
        return N2(this, e4, t4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      }), u2.prototype.writeBigInt64BE = J2(function (e4, t4 = 0) {
        return M2(this, e4, t4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      }), u2.prototype.writeFloatLE = function (e4, t4, r4) {
        return U2(this, e4, t4, true, r4);
      }, u2.prototype.writeFloatBE = function (e4, t4, r4) {
        return U2(this, e4, t4, false, r4);
      }, u2.prototype.writeDoubleLE = function (e4, t4, r4) {
        return j(this, e4, t4, true, r4);
      }, u2.prototype.writeDoubleBE = function (e4, t4, r4) {
        return j(this, e4, t4, false, r4);
      }, u2.prototype.copy = function (e4, t4, r4, n4) {
        if (!u2.isBuffer(e4))
          throw new TypeError("argument should be a Buffer");
        if (r4 || (r4 = 0), n4 || 0 === n4 || (n4 = this.length), t4 >= e4.length && (t4 = e4.length), t4 || (t4 = 0), n4 > 0 && n4 < r4 && (n4 = r4), n4 === r4)
          return 0;
        if (0 === e4.length || 0 === this.length)
          return 0;
        if (t4 < 0)
          throw new RangeError("targetStart out of bounds");
        if (r4 < 0 || r4 >= this.length)
          throw new RangeError("Index out of range");
        if (n4 < 0)
          throw new RangeError("sourceEnd out of bounds");
        n4 > this.length && (n4 = this.length), e4.length - t4 < n4 - r4 && (n4 = e4.length - t4 + r4);
        const i2 = n4 - r4;
        return this === e4 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t4, r4, n4) : Uint8Array.prototype.set.call(e4, this.subarray(r4, n4), t4), i2;
      }, u2.prototype.fill = function (e4, t4, r4, n4) {
        if ("string" == typeof e4) {
          if ("string" == typeof t4 ? (n4 = t4, t4 = 0, r4 = this.length) : "string" == typeof r4 && (n4 = r4, r4 = this.length), void 0 !== n4 && "string" != typeof n4)
            throw new TypeError("encoding must be a string");
          if ("string" == typeof n4 && !u2.isEncoding(n4))
            throw new TypeError("Unknown encoding: " + n4);
          if (1 === e4.length) {
            const t5 = e4.charCodeAt(0);
            ("utf8" === n4 && t5 < 128 || "latin1" === n4) && (e4 = t5);
          }
        } else
          "number" == typeof e4 ? e4 &= 255 : "boolean" == typeof e4 && (e4 = Number(e4));
        if (t4 < 0 || this.length < t4 || this.length < r4)
          throw new RangeError("Out of range index");
        if (r4 <= t4)
          return this;
        let i2;
        if (t4 >>>= 0, r4 = void 0 === r4 ? this.length : r4 >>> 0, e4 || (e4 = 0), "number" == typeof e4)
          for (i2 = t4; i2 < r4; ++i2)
            this[i2] = e4;
        else {
          const o2 = u2.isBuffer(e4) ? e4 : u2.from(e4, n4), s2 = o2.length;
          if (0 === s2)
            throw new TypeError('The value "' + e4 + '" is invalid for argument "value"');
          for (i2 = 0; i2 < r4 - t4; ++i2)
            this[i2 + t4] = o2[i2 % s2];
        }
        return this;
      };
      const q2 = {};
      function z2(e4, t4, r4) {
        q2[e4] = class extends r4 {
          constructor() {
            super(), Object.defineProperty(this, "message", { value: t4.apply(this, arguments), writable: true, configurable: true }), this.name = "".concat(this.name, " [").concat(e4, "]"), this.stack, delete this.name;
          }
          get code() {
            return e4;
          }
          set code(e5) {
            Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: e5, writable: true });
          }
          toString() {
            return "".concat(this.name, " [").concat(e4, "]: ").concat(this.message);
          }
        };
      }
      function D2(e4) {
        let t4 = "", r4 = e4.length;
        const n4 = "-" === e4[0] ? 1 : 0;
        for (; r4 >= n4 + 4; r4 -= 3)
          t4 = "_".concat(e4.slice(r4 - 3, r4)).concat(t4);
        return "".concat(e4.slice(0, r4)).concat(t4);
      }
      function F2(e4, t4, r4, n4, i2, o2) {
        if (e4 > r4 || e4 < t4) {
          const n5 = "bigint" == typeof t4 ? "n" : "";
          let i3;
          throw i3 = 0 === t4 || t4 === BigInt(0) ? ">= 0".concat(n5, " and < 2").concat(n5, " ** ").concat(8 * (o2 + 1)).concat(n5) : ">= -(2".concat(n5, " ** ").concat(8 * (o2 + 1) - 1).concat(n5, ") and < 2 ** ").concat(8 * (o2 + 1) - 1).concat(n5), new q2.ERR_OUT_OF_RANGE("value", i3, e4);
        }
        !function (e5, t5, r5) {
          V2(t5, "offset"), void 0 !== e5[t5] && void 0 !== e5[t5 + r5] || W2(t5, e5.length - (r5 + 1));
        }(n4, i2, o2);
      }
      function V2(e4, t4) {
        if ("number" != typeof e4)
          throw new q2.ERR_INVALID_ARG_TYPE(t4, "number", e4);
      }
      function W2(e4, t4, r4) {
        if (Math.floor(e4) !== e4)
          throw V2(e4, r4), new q2.ERR_OUT_OF_RANGE("offset", "an integer", e4);
        if (t4 < 0)
          throw new q2.ERR_BUFFER_OUT_OF_BOUNDS();
        throw new q2.ERR_OUT_OF_RANGE("offset", ">= ".concat(0, " and <= ").concat(t4), e4);
      }
      z2("ERR_BUFFER_OUT_OF_BOUNDS", function (e4) {
        return e4 ? "".concat(e4, " is outside of buffer bounds") : "Attempt to access memory outside buffer bounds";
      }, RangeError), z2("ERR_INVALID_ARG_TYPE", function (e4, t4) {
        return 'The "'.concat(e4, '" argument must be of type number. Received type ').concat(typeof t4);
      }, TypeError), z2("ERR_OUT_OF_RANGE", function (e4, t4, r4) {
        let n4 = 'The value of "'.concat(e4, '" is out of range.'), i2 = r4;
        return Number.isInteger(r4) && Math.abs(r4) > 2 ** 32 ? i2 = D2(String(r4)) : "bigint" == typeof r4 && (i2 = String(r4), (r4 > BigInt(2) ** BigInt(32) || r4 < -(BigInt(2) ** BigInt(32))) && (i2 = D2(i2)), i2 += "n"), n4 += " It must be ".concat(t4, ". Received ").concat(i2), n4;
      }, RangeError);
      const H2 = /[^+/0-9A-Za-z-_]/g;
      function K2(e4, t4) {
        let r4;
        t4 = t4 || 1 / 0;
        const n4 = e4.length;
        let i2 = null;
        const o2 = [];
        for (let s2 = 0; s2 < n4; ++s2) {
          if (r4 = e4.charCodeAt(s2), r4 > 55295 && r4 < 57344) {
            if (!i2) {
              if (r4 > 56319) {
                (t4 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              if (s2 + 1 === n4) {
                (t4 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              i2 = r4;
              continue;
            }
            if (r4 < 56320) {
              (t4 -= 3) > -1 && o2.push(239, 191, 189), i2 = r4;
              continue;
            }
            r4 = 65536 + (i2 - 55296 << 10 | r4 - 56320);
          } else
            i2 && (t4 -= 3) > -1 && o2.push(239, 191, 189);
          if (i2 = null, r4 < 128) {
            if ((t4 -= 1) < 0)
              break;
            o2.push(r4);
          } else if (r4 < 2048) {
            if ((t4 -= 2) < 0)
              break;
            o2.push(r4 >> 6 | 192, 63 & r4 | 128);
          } else if (r4 < 65536) {
            if ((t4 -= 3) < 0)
              break;
            o2.push(r4 >> 12 | 224, r4 >> 6 & 63 | 128, 63 & r4 | 128);
          } else {
            if (!(r4 < 1114112))
              throw new Error("Invalid code point");
            if ((t4 -= 4) < 0)
              break;
            o2.push(r4 >> 18 | 240, r4 >> 12 & 63 | 128, r4 >> 6 & 63 | 128, 63 & r4 | 128);
          }
        }
        return o2;
      }
      function $(e4) {
        return n3.toByteArray(function (e5) {
          if ((e5 = (e5 = e5.split("=")[0]).trim().replace(H2, "")).length < 2)
            return "";
          for (; e5.length % 4 != 0;)
            e5 += "=";
          return e5;
        }(e4));
      }
      function Q2(e4, t4, r4, n4) {
        let i2;
        for (i2 = 0; i2 < n4 && !(i2 + r4 >= t4.length || i2 >= e4.length); ++i2)
          t4[i2 + r4] = e4[i2];
        return i2;
      }
      function Y2(e4, t4) {
        return e4 instanceof t4 || null != e4 && null != e4.constructor && null != e4.constructor.name && e4.constructor.name === t4.name;
      }
      function G2(e4) {
        return e4 != e4;
      }
      const Z2 = function () {
        const e4 = "0123456789abcdef", t4 = new Array(256);
        for (let r4 = 0; r4 < 16; ++r4) {
          const n4 = 16 * r4;
          for (let i2 = 0; i2 < 16; ++i2)
            t4[n4 + i2] = e4[r4] + e4[i2];
        }
        return t4;
      }();
      function J2(e4) {
        return "undefined" == typeof BigInt ? X2 : e4;
      }
      function X2() {
        throw new Error("BigInt not supported");
      }
    }, 1227: function (e3, t3, r3) {
      var n3 = r3(4155);
      t3.formatArgs = function (t4) {
        if (t4[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t4[0] + (this.useColors ? "%c " : " ") + "+" + e3.exports.humanize(this.diff), !this.useColors)
          return;
        const r4 = "color: " + this.color;
        t4.splice(1, 0, r4, "color: inherit");
        let n4 = 0, i2 = 0;
        t4[0].replace(/%[a-zA-Z%]/g, (e4) => {
          "%%" !== e4 && (n4++, "%c" === e4 && (i2 = n4));
        }), t4.splice(i2, 0, r4);
      }, t3.save = function (e4) {
        try {
          e4 ? t3.storage.setItem("debug", e4) : t3.storage.removeItem("debug");
        } catch (e5) {
        }
      }, t3.load = function () {
        let e4;
        try {
          e4 = t3.storage.getItem("debug");
        } catch (e5) {
        }
        return !e4 && void 0 !== n3 && "env" in n3 && (e4 = n3.env.DEBUG), e4;
      }, t3.useColors = function () {
        return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type && !window.process.__nwjs) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
      }, t3.storage = function () {
        try {
          return localStorage;
        } catch (e4) {
        }
      }(), t3.destroy = /* @__PURE__ */ (() => {
        let e4 = false;
        return () => {
          e4 || (e4 = true, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
        };
      })(), t3.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t3.log = console.debug || console.log || (() => {
      }), e3.exports = r3(2447)(t3);
      const { formatters: i } = e3.exports;
      i.j = function (e4) {
        try {
          return JSON.stringify(e4);
        } catch (e5) {
          return "[UnexpectedJSONParseError]: " + e5.message;
        }
      };
    }, 2447: function (e3, t3, r3) {
      e3.exports = function (e4) {
        function t4(e5) {
          let r4, i2, o, s = null;
          function a(...e6) {
            if (!a.enabled)
              return;
            const n4 = a, i3 = Number(/* @__PURE__ */ new Date()), o2 = i3 - (r4 || i3);
            n4.diff = o2, n4.prev = r4, n4.curr = i3, r4 = i3, e6[0] = t4.coerce(e6[0]), "string" != typeof e6[0] && e6.unshift("%O");
            let s2 = 0;
            e6[0] = e6[0].replace(/%([a-zA-Z%])/g, (r5, i4) => {
              if ("%%" === r5)
                return "%";
              s2++;
              const o3 = t4.formatters[i4];
              if ("function" == typeof o3) {
                const t5 = e6[s2];
                r5 = o3.call(n4, t5), e6.splice(s2, 1), s2--;
              }
              return r5;
            }), t4.formatArgs.call(n4, e6), (n4.log || t4.log).apply(n4, e6);
          }
          return a.namespace = e5, a.useColors = t4.useColors(), a.color = t4.selectColor(e5), a.extend = n3, a.destroy = t4.destroy, Object.defineProperty(a, "enabled", {
            enumerable: true, configurable: false, get: () => null !== s ? s : (i2 !== t4.namespaces && (i2 = t4.namespaces, o = t4.enabled(e5)), o), set: (e6) => {
              s = e6;
            }
          }), "function" == typeof t4.init && t4.init(a), a;
        }
        function n3(e5, r4) {
          const n4 = t4(this.namespace + (void 0 === r4 ? ":" : r4) + e5);
          return n4.log = this.log, n4;
        }
        function i(e5) {
          return e5.toString().substring(2, e5.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return t4.debug = t4, t4.default = t4, t4.coerce = function (e5) {
          return e5 instanceof Error ? e5.stack || e5.message : e5;
        }, t4.disable = function () {
          const e5 = [...t4.names.map(i), ...t4.skips.map(i).map((e6) => "-" + e6)].join(",");
          return t4.enable(""), e5;
        }, t4.enable = function (e5) {
          let r4;
          t4.save(e5), t4.namespaces = e5, t4.names = [], t4.skips = [];
          const n4 = ("string" == typeof e5 ? e5 : "").split(/[\s,]+/), i2 = n4.length;
          for (r4 = 0; r4 < i2; r4++)
            n4[r4] && ("-" === (e5 = n4[r4].replace(/\*/g, ".*?"))[0] ? t4.skips.push(new RegExp("^" + e5.slice(1) + "$")) : t4.names.push(new RegExp("^" + e5 + "$")));
        }, t4.enabled = function (e5) {
          if ("*" === e5[e5.length - 1])
            return true;
          let r4, n4;
          for (r4 = 0, n4 = t4.skips.length; r4 < n4; r4++)
            if (t4.skips[r4].test(e5))
              return false;
          for (r4 = 0, n4 = t4.names.length; r4 < n4; r4++)
            if (t4.names[r4].test(e5))
              return true;
          return false;
        }, t4.humanize = r3(7824), t4.destroy = function () {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }, Object.keys(e4).forEach((r4) => {
          t4[r4] = e4[r4];
        }), t4.names = [], t4.skips = [], t4.formatters = {}, t4.selectColor = function (e5) {
          let r4 = 0;
          for (let t5 = 0; t5 < e5.length; t5++)
            r4 = (r4 << 5) - r4 + e5.charCodeAt(t5), r4 |= 0;
          return t4.colors[Math.abs(r4) % t4.colors.length];
        }, t4.enable(t4.load()), t4;
      };
    }, 5981: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer, i = r3(4155), o = r3(8473), s = r3(2840), a = r3(5717), u2 = r3(1852), l2 = n3.from && n3.from !== Uint8Array.from ? n3.from([0]) : new n3([0]), c = function (e4, t4) {
        e4._corked ? e4.once("uncork", t4) : t4();
      }, h2 = function (e4, t4) {
        return function (r4) {
          r4 ? function (e5, t5) {
            e5._autoDestroy && e5.destroy(t5);
          }(e4, "premature close" === r4.message ? null : r4) : t4 && !e4._ended && e4.end();
        };
      }, f2 = function () {
      }, p2 = function (e4, t4, r4) {
        if (!(this instanceof p2))
          return new p2(e4, t4, r4);
        o.Duplex.call(this, r4), this._writable = null, this._readable = null, this._readable2 = null, this._autoDestroy = !r4 || false !== r4.autoDestroy, this._forwardDestroy = !r4 || false !== r4.destroy, this._forwardEnd = !r4 || false !== r4.end, this._corked = 1, this._ondrain = null, this._drained = false, this._forwarding = false, this._unwrite = null, this._unread = null, this._ended = false, this.destroyed = false, e4 && this.setWritable(e4), t4 && this.setReadable(t4);
      };
      a(p2, o.Duplex), p2.obj = function (e4, t4, r4) {
        return r4 || (r4 = {}), r4.objectMode = true, r4.highWaterMark = 16, new p2(e4, t4, r4);
      }, p2.prototype.cork = function () {
        1 == ++this._corked && this.emit("cork");
      }, p2.prototype.uncork = function () {
        this._corked && 0 == --this._corked && this.emit("uncork");
      }, p2.prototype.setWritable = function (e4) {
        if (this._unwrite && this._unwrite(), this.destroyed)
          e4 && e4.destroy && e4.destroy();
        else if (null !== e4 && false !== e4) {
          var t4 = this, r4 = s(e4, { writable: true, readable: false }, h2(this, this._forwardEnd)), n4 = function () {
            var e5 = t4._ondrain;
            t4._ondrain = null, e5 && e5();
          };
          this._unwrite && i.nextTick(n4), this._writable = e4, this._writable.on("drain", n4), this._unwrite = function () {
            t4._writable.removeListener("drain", n4), r4();
          }, this.uncork();
        } else
          this.end();
      }, p2.prototype.setReadable = function (e4) {
        if (this._unread && this._unread(), this.destroyed)
          e4 && e4.destroy && e4.destroy();
        else {
          if (null === e4 || false === e4)
            return this.push(null), void this.resume();
          var t4, r4 = this, n4 = s(e4, { writable: false, readable: true }, h2(this)), i2 = function () {
            r4._forward();
          }, a2 = function () {
            r4.push(null);
          };
          this._drained = true, this._readable = e4, this._readable2 = e4._readableState ? e4 : (t4 = e4, new o.Readable({ objectMode: true, highWaterMark: 16 }).wrap(t4)), this._readable2.on("readable", i2), this._readable2.on("end", a2), this._unread = function () {
            r4._readable2.removeListener("readable", i2), r4._readable2.removeListener("end", a2), n4();
          }, this._forward();
        }
      }, p2.prototype._read = function () {
        this._drained = true, this._forward();
      }, p2.prototype._forward = function () {
        if (!this._forwarding && this._readable2 && this._drained) {
          var e4;
          for (this._forwarding = true; this._drained && null !== (e4 = u2(this._readable2));)
            this.destroyed || (this._drained = this.push(e4));
          this._forwarding = false;
        }
      }, p2.prototype.destroy = function (e4, t4) {
        if (t4 || (t4 = f2), this.destroyed)
          return t4(null);
        this.destroyed = true;
        var r4 = this;
        i.nextTick(function () {
          r4._destroy(e4), t4(null);
        });
      }, p2.prototype._destroy = function (e4) {
        if (e4) {
          var t4 = this._ondrain;
          this._ondrain = null, t4 ? t4(e4) : this.emit("error", e4);
        }
        this._forwardDestroy && (this._readable && this._readable.destroy && this._readable.destroy(), this._writable && this._writable.destroy && this._writable.destroy()), this.emit("close");
      }, p2.prototype._write = function (e4, t4, r4) {
        if (!this.destroyed)
          return this._corked ? c(this, this._write.bind(this, e4, t4, r4)) : e4 === l2 ? this._finish(r4) : this._writable ? void (false === this._writable.write(e4) ? this._ondrain = r4 : this.destroyed || r4()) : r4();
      }, p2.prototype._finish = function (e4) {
        var t4 = this;
        this.emit("preend"), c(this, function () {
          var r4, n4;
          n4 = function () {
            false === t4._writableState.prefinished && (t4._writableState.prefinished = true), t4.emit("prefinish"), c(t4, e4);
          }, (r4 = t4._forwardEnd && t4._writable) ? r4._writableState && r4._writableState.finished ? n4() : r4._writableState ? r4.end(n4) : (r4.end(), n4()) : n4();
        });
      }, p2.prototype.end = function (e4, t4, r4) {
        return "function" == typeof e4 ? this.end(null, null, e4) : "function" == typeof t4 ? this.end(e4, null, t4) : (this._ended = true, e4 && this.write(e4), this._writableState.ending || this._writableState.destroyed || this.write(l2), o.Writable.prototype.end.call(this, r4));
      }, e3.exports = p2;
    }, 2840: function (e3, t3, r3) {
      var n3 = r3(4155), i = r3(778), o = function () {
      }, s = function (e4, t4, r4) {
        if ("function" == typeof t4)
          return s(e4, null, t4);
        t4 || (t4 = {}), r4 = i(r4 || o);
        var a = e4._writableState, u2 = e4._readableState, l2 = t4.readable || false !== t4.readable && e4.readable, c = t4.writable || false !== t4.writable && e4.writable, h2 = false, f2 = function () {
          e4.writable || p2();
        }, p2 = function () {
          c = false, l2 || r4.call(e4);
        }, d = function () {
          l2 = false, c || r4.call(e4);
        }, y2 = function (t5) {
          r4.call(e4, t5 ? new Error("exited with error code: " + t5) : null);
        }, g = function (t5) {
          r4.call(e4, t5);
        }, b = function () {
          n3.nextTick(m2);
        }, m2 = function () {
          if (!h2)
            return (!l2 || u2 && u2.ended && !u2.destroyed) && (!c || a && a.ended && !a.destroyed) ? void 0 : r4.call(e4, new Error("premature close"));
        }, v2 = function () {
          e4.req.on("finish", p2);
        };
        return function (e5) {
          return e5.setHeader && "function" == typeof e5.abort;
        }(e4) ? (e4.on("complete", p2), e4.on("abort", b), e4.req ? v2() : e4.on("request", v2)) : c && !a && (e4.on("end", f2), e4.on("close", f2)), function (e5) {
          return e5.stdio && Array.isArray(e5.stdio) && 3 === e5.stdio.length;
        }(e4) && e4.on("exit", y2), e4.on("end", d), e4.on("finish", p2), false !== t4.error && e4.on("error", g), e4.on("close", b), function () {
          h2 = true, e4.removeListener("complete", p2), e4.removeListener("abort", b), e4.removeListener("request", v2), e4.req && e4.req.removeListener("finish", p2), e4.removeListener("end", f2), e4.removeListener("close", f2), e4.removeListener("finish", p2), e4.removeListener("exit", y2), e4.removeListener("end", d), e4.removeListener("error", g), e4.removeListener("close", b);
        };
      };
      e3.exports = s;
    }, 7187: function (e3) {
      var t3 = Object.create || function (e4) {
        var t4 = function () {
        };
        return t4.prototype = e4, new t4();
      }, r3 = Object.keys || function (e4) {
        var t4 = [];
        for (var r4 in e4)
          Object.prototype.hasOwnProperty.call(e4, r4) && t4.push(r4);
        return r4;
      }, n3 = Function.prototype.bind || function (e4) {
        var t4 = this;
        return function () {
          return t4.apply(e4, arguments);
        };
      };
      function i() {
        this._events && Object.prototype.hasOwnProperty.call(this, "_events") || (this._events = t3(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }
      e3.exports = i, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._maxListeners = void 0;
      var o, s = 10;
      try {
        var a = {};
        Object.defineProperty && Object.defineProperty(a, "x", { value: 0 }), o = 0 === a.x;
      } catch (e4) {
        o = false;
      }
      function u2(e4) {
        return void 0 === e4._maxListeners ? i.defaultMaxListeners : e4._maxListeners;
      }
      function l2(e4, t4, r4) {
        if (t4)
          e4.call(r4);
        else
          for (var n4 = e4.length, i2 = v2(e4, n4), o2 = 0; o2 < n4; ++o2)
            i2[o2].call(r4);
      }
      function c(e4, t4, r4, n4) {
        if (t4)
          e4.call(r4, n4);
        else
          for (var i2 = e4.length, o2 = v2(e4, i2), s2 = 0; s2 < i2; ++s2)
            o2[s2].call(r4, n4);
      }
      function h2(e4, t4, r4, n4, i2) {
        if (t4)
          e4.call(r4, n4, i2);
        else
          for (var o2 = e4.length, s2 = v2(e4, o2), a2 = 0; a2 < o2; ++a2)
            s2[a2].call(r4, n4, i2);
      }
      function f2(e4, t4, r4, n4, i2, o2) {
        if (t4)
          e4.call(r4, n4, i2, o2);
        else
          for (var s2 = e4.length, a2 = v2(e4, s2), u3 = 0; u3 < s2; ++u3)
            a2[u3].call(r4, n4, i2, o2);
      }
      function p2(e4, t4, r4, n4) {
        if (t4)
          e4.apply(r4, n4);
        else
          for (var i2 = e4.length, o2 = v2(e4, i2), s2 = 0; s2 < i2; ++s2)
            o2[s2].apply(r4, n4);
      }
      function d(e4, r4, n4, i2) {
        var o2, s2, a2;
        if ("function" != typeof n4)
          throw new TypeError('"listener" argument must be a function');
        if ((s2 = e4._events) ? (s2.newListener && (e4.emit("newListener", r4, n4.listener ? n4.listener : n4), s2 = e4._events), a2 = s2[r4]) : (s2 = e4._events = t3(null), e4._eventsCount = 0), a2) {
          if ("function" == typeof a2 ? a2 = s2[r4] = i2 ? [n4, a2] : [a2, n4] : i2 ? a2.unshift(n4) : a2.push(n4), !a2.warned && (o2 = u2(e4)) && o2 > 0 && a2.length > o2) {
            a2.warned = true;
            var l3 = new Error("Possible EventEmitter memory leak detected. " + a2.length + ' "' + String(r4) + '" listeners added. Use emitter.setMaxListeners() to increase limit.');
            l3.name = "MaxListenersExceededWarning", l3.emitter = e4, l3.type = r4, l3.count = a2.length, "object" == typeof console && console.warn && console.warn("%s: %s", l3.name, l3.message);
          }
        } else
          a2 = s2[r4] = n4, ++e4._eventsCount;
        return e4;
      }
      function y2() {
        if (!this.fired)
          switch (this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length) {
            case 0:
              return this.listener.call(this.target);
            case 1:
              return this.listener.call(this.target, arguments[0]);
            case 2:
              return this.listener.call(this.target, arguments[0], arguments[1]);
            case 3:
              return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);
            default:
              for (var e4 = new Array(arguments.length), t4 = 0; t4 < e4.length; ++t4)
                e4[t4] = arguments[t4];
              this.listener.apply(this.target, e4);
          }
      }
      function g(e4, t4, r4) {
        var i2 = { fired: false, wrapFn: void 0, target: e4, type: t4, listener: r4 }, o2 = n3.call(y2, i2);
        return o2.listener = r4, i2.wrapFn = o2, o2;
      }
      function b(e4, t4, r4) {
        var n4 = e4._events;
        if (!n4)
          return [];
        var i2 = n4[t4];
        return i2 ? "function" == typeof i2 ? r4 ? [i2.listener || i2] : [i2] : r4 ? function (e5) {
          for (var t5 = new Array(e5.length), r5 = 0; r5 < t5.length; ++r5)
            t5[r5] = e5[r5].listener || e5[r5];
          return t5;
        }(i2) : v2(i2, i2.length) : [];
      }
      function m2(e4) {
        var t4 = this._events;
        if (t4) {
          var r4 = t4[e4];
          if ("function" == typeof r4)
            return 1;
          if (r4)
            return r4.length;
        }
        return 0;
      }
      function v2(e4, t4) {
        for (var r4 = new Array(t4), n4 = 0; n4 < t4; ++n4)
          r4[n4] = e4[n4];
        return r4;
      }
      o ? Object.defineProperty(i, "defaultMaxListeners", {
        enumerable: true, get: function () {
          return s;
        }, set: function (e4) {
          if ("number" != typeof e4 || e4 < 0 || e4 != e4)
            throw new TypeError('"defaultMaxListeners" must be a positive number');
          s = e4;
        }
      }) : i.defaultMaxListeners = s, i.prototype.setMaxListeners = function (e4) {
        if ("number" != typeof e4 || e4 < 0 || isNaN(e4))
          throw new TypeError('"n" argument must be a positive number');
        return this._maxListeners = e4, this;
      }, i.prototype.getMaxListeners = function () {
        return u2(this);
      }, i.prototype.emit = function (e4) {
        var t4, r4, n4, i2, o2, s2, a2 = "error" === e4;
        if (s2 = this._events)
          a2 = a2 && null == s2.error;
        else if (!a2)
          return false;
        if (a2) {
          if (arguments.length > 1 && (t4 = arguments[1]), t4 instanceof Error)
            throw t4;
          var u3 = new Error('Unhandled "error" event. (' + t4 + ")");
          throw u3.context = t4, u3;
        }
        if (!(r4 = s2[e4]))
          return false;
        var d2 = "function" == typeof r4;
        switch (n4 = arguments.length) {
          case 1:
            l2(r4, d2, this);
            break;
          case 2:
            c(r4, d2, this, arguments[1]);
            break;
          case 3:
            h2(r4, d2, this, arguments[1], arguments[2]);
            break;
          case 4:
            f2(r4, d2, this, arguments[1], arguments[2], arguments[3]);
            break;
          default:
            for (i2 = new Array(n4 - 1), o2 = 1; o2 < n4; o2++)
              i2[o2 - 1] = arguments[o2];
            p2(r4, d2, this, i2);
        }
        return true;
      }, i.prototype.addListener = function (e4, t4) {
        return d(this, e4, t4, false);
      }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function (e4, t4) {
        return d(this, e4, t4, true);
      }, i.prototype.once = function (e4, t4) {
        if ("function" != typeof t4)
          throw new TypeError('"listener" argument must be a function');
        return this.on(e4, g(this, e4, t4)), this;
      }, i.prototype.prependOnceListener = function (e4, t4) {
        if ("function" != typeof t4)
          throw new TypeError('"listener" argument must be a function');
        return this.prependListener(e4, g(this, e4, t4)), this;
      }, i.prototype.removeListener = function (e4, r4) {
        var n4, i2, o2, s2, a2;
        if ("function" != typeof r4)
          throw new TypeError('"listener" argument must be a function');
        if (!(i2 = this._events))
          return this;
        if (!(n4 = i2[e4]))
          return this;
        if (n4 === r4 || n4.listener === r4)
          0 == --this._eventsCount ? this._events = t3(null) : (delete i2[e4], i2.removeListener && this.emit("removeListener", e4, n4.listener || r4));
        else if ("function" != typeof n4) {
          for (o2 = -1, s2 = n4.length - 1; s2 >= 0; s2--)
            if (n4[s2] === r4 || n4[s2].listener === r4) {
              a2 = n4[s2].listener, o2 = s2;
              break;
            }
          if (o2 < 0)
            return this;
          0 === o2 ? n4.shift() : function (e5, t4) {
            for (var r5 = t4, n5 = r5 + 1, i3 = e5.length; n5 < i3; r5 += 1, n5 += 1)
              e5[r5] = e5[n5];
            e5.pop();
          }(n4, o2), 1 === n4.length && (i2[e4] = n4[0]), i2.removeListener && this.emit("removeListener", e4, a2 || r4);
        }
        return this;
      }, i.prototype.removeAllListeners = function (e4) {
        var n4, i2, o2;
        if (!(i2 = this._events))
          return this;
        if (!i2.removeListener)
          return 0 === arguments.length ? (this._events = t3(null), this._eventsCount = 0) : i2[e4] && (0 == --this._eventsCount ? this._events = t3(null) : delete i2[e4]), this;
        if (0 === arguments.length) {
          var s2, a2 = r3(i2);
          for (o2 = 0; o2 < a2.length; ++o2)
            "removeListener" !== (s2 = a2[o2]) && this.removeAllListeners(s2);
          return this.removeAllListeners("removeListener"), this._events = t3(null), this._eventsCount = 0, this;
        }
        if ("function" == typeof (n4 = i2[e4]))
          this.removeListener(e4, n4);
        else if (n4)
          for (o2 = n4.length - 1; o2 >= 0; o2--)
            this.removeListener(e4, n4[o2]);
        return this;
      }, i.prototype.listeners = function (e4) {
        return b(this, e4, true);
      }, i.prototype.rawListeners = function (e4) {
        return b(this, e4, false);
      }, i.listenerCount = function (e4, t4) {
        return "function" == typeof e4.listenerCount ? e4.listenerCount(t4) : m2.call(e4, t4);
      }, i.prototype.listenerCount = m2, i.prototype.eventNames = function () {
        return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
      };
    }, 645: function (e3, t3) {
      t3.read = function (e4, t4, r3, n3, i) {
        var o, s, a = 8 * i - n3 - 1, u2 = (1 << a) - 1, l2 = u2 >> 1, c = -7, h2 = r3 ? i - 1 : 0, f2 = r3 ? -1 : 1, p2 = e4[t4 + h2];
        for (h2 += f2, o = p2 & (1 << -c) - 1, p2 >>= -c, c += a; c > 0; o = 256 * o + e4[t4 + h2], h2 += f2, c -= 8)
          ;
        for (s = o & (1 << -c) - 1, o >>= -c, c += n3; c > 0; s = 256 * s + e4[t4 + h2], h2 += f2, c -= 8)
          ;
        if (0 === o)
          o = 1 - l2;
        else {
          if (o === u2)
            return s ? NaN : 1 / 0 * (p2 ? -1 : 1);
          s += Math.pow(2, n3), o -= l2;
        }
        return (p2 ? -1 : 1) * s * Math.pow(2, o - n3);
      }, t3.write = function (e4, t4, r3, n3, i, o) {
        var s, a, u2, l2 = 8 * o - i - 1, c = (1 << l2) - 1, h2 = c >> 1, f2 = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p2 = n3 ? 0 : o - 1, d = n3 ? 1 : -1, y2 = t4 < 0 || 0 === t4 && 1 / t4 < 0 ? 1 : 0;
        for (t4 = Math.abs(t4), isNaN(t4) || t4 === 1 / 0 ? (a = isNaN(t4) ? 1 : 0, s = c) : (s = Math.floor(Math.log(t4) / Math.LN2), t4 * (u2 = Math.pow(2, -s)) < 1 && (s--, u2 *= 2), (t4 += s + h2 >= 1 ? f2 / u2 : f2 * Math.pow(2, 1 - h2)) * u2 >= 2 && (s++, u2 /= 2), s + h2 >= c ? (a = 0, s = c) : s + h2 >= 1 ? (a = (t4 * u2 - 1) * Math.pow(2, i), s += h2) : (a = t4 * Math.pow(2, h2 - 1) * Math.pow(2, i), s = 0)); i >= 8; e4[r3 + p2] = 255 & a, p2 += d, a /= 256, i -= 8)
          ;
        for (s = s << i | a, l2 += i; l2 > 0; e4[r3 + p2] = 255 & s, p2 += d, s /= 256, l2 -= 8)
          ;
        e4[r3 + p2 - d] |= 128 * y2;
      };
    }, 5717: function (e3) {
      "function" == typeof Object.create ? e3.exports = function (e4, t3) {
        t3 && (e4.super_ = t3, e4.prototype = Object.create(t3.prototype, { constructor: { value: e4, enumerable: false, writable: true, configurable: true } }));
      } : e3.exports = function (e4, t3) {
        if (t3) {
          e4.super_ = t3;
          var r3 = function () {
          };
          r3.prototype = t3.prototype, e4.prototype = new r3(), e4.prototype.constructor = e4;
        }
      };
    }, 9246: function (e3, t3, r3) {
      r3.d(t3, {
        l4: function () {
          return f2;
        }
      });
      var i = function (e4) {
        this.value = void 0, this.pre = void 0, this.next = void 0, this.value = e4;
      };
      function o(e4) {
        var t4 = this;
        void 0 === e4 && (e4 = []);
        var r4 = 0, n3 = void 0, o2 = void 0;
        this.size = function () {
          return r4;
        }, this.empty = function () {
          return 0 === r4;
        }, this.clear = function () {
          n3 = o2 = void 0, r4 = 0;
        }, this.front = function () {
          return null == n3 ? void 0 : n3.value;
        }, this.back = function () {
          return null == o2 ? void 0 : o2.value;
        }, this.forEach = function (e5) {
          for (var t5 = n3, r5 = 0; t5;) {
            if (void 0 === t5.value)
              throw new Error("unknown error");
            e5(t5.value, r5++), t5 = t5.next;
          }
        }, this.getElementByPos = function (e5) {
          if (e5 < 0 || e5 >= r4)
            throw new Error("pos must more then 0 and less then the list length");
          for (var t5 = n3; e5-- && t5;)
            t5 = t5.next;
          if (!t5 || void 0 === t5.value)
            throw new Error("unknown error");
          return t5.value;
        }, this.eraseElementByPos = function (e5) {
          if (e5 < 0 || e5 >= r4)
            throw new Error("erase pos must more then 0 and less then the list length");
          if (0 === e5)
            this.popFront();
          else if (e5 === r4 - 1)
            this.popBack();
          else {
            for (var t5 = n3; e5--;) {
              if (!(null == t5 ? void 0 : t5.next))
                throw new Error("unknown error");
              t5 = t5.next;
            }
            if (!t5 || !t5.pre || !t5.next)
              throw new Error("unknown error");
            var i2 = t5.pre, o3 = t5.next;
            o3.pre = i2, i2.next = o3, r4 > 0 && --r4;
          }
        }, this.eraseElementByValue = function (e5) {
          for (; n3 && n3.value === e5;)
            this.popFront();
          for (; o2 && o2.value === e5;)
            this.popBack();
          if (n3)
            for (var t5 = n3; t5;) {
              if (t5.value === e5) {
                var i2 = t5.pre, s2 = t5.next;
                s2 && (s2.pre = i2), i2 && (i2.next = s2), r4 > 0 && --r4;
              }
              t5 = t5.next;
            }
        }, this.pushBack = function (e5) {
          if (null == e5)
            throw new Error("you can't push null or undefined here");
          ++r4;
          var t5 = new i(e5);
          o2 ? (o2.next = t5, t5.pre = o2, o2 = t5) : n3 = o2 = t5;
        }, this.popBack = function () {
          o2 && (r4 > 0 && --r4, o2 && (n3 === o2 ? n3 = o2 = void 0 : (o2 = o2.pre) && (o2.next = void 0)));
        }, this.setElementByPos = function (e5, t5) {
          if (null == t5)
            throw new Error("you can't set null or undefined here");
          if (e5 < 0 || e5 >= r4)
            throw new Error("pos must more then 0 and less then the list length");
          for (var i2 = n3; e5--;) {
            if (!i2)
              throw new Error("unknown error");
            i2 = i2.next;
          }
          i2 && (i2.value = t5);
        }, this.insert = function (e5, t5, o3) {
          if (void 0 === o3 && (o3 = 1), null == t5)
            throw new Error("you can't insert null or undefined here");
          if (e5 < 0 || e5 > r4)
            throw new Error("insert pos must more then 0 and less then or equal to the list length");
          if (o3 < 0)
            throw new Error("insert size must more than 0");
          if (0 === e5)
            for (; o3--;)
              this.pushFront(t5);
          else if (e5 === r4)
            for (; o3--;)
              this.pushBack(t5);
          else {
            for (var s2 = n3, a2 = 1; a2 < e5; ++a2) {
              if (!(null == s2 ? void 0 : s2.next))
                throw new Error("unknown error");
              s2 = null == s2 ? void 0 : s2.next;
            }
            if (!s2)
              throw new Error("unknown error");
            var u3 = s2.next;
            for (r4 += o3; o3--;)
              s2.next = new i(t5), s2.next.pre = s2, s2 = s2.next;
            s2.next = u3, u3 && (u3.pre = s2);
          }
        }, this.find = function (e5) {
          for (var t5 = n3; t5;) {
            if (t5.value === e5)
              return true;
            t5 = t5.next;
          }
          return false;
        }, this.reverse = function () {
          for (var e5 = n3, t5 = o2, i2 = 0; e5 && t5 && 2 * i2 < r4;) {
            var s2 = e5.value;
            e5.value = t5.value, t5.value = s2, e5 = e5.next, t5 = t5.pre, ++i2;
          }
        }, this.unique = function () {
          for (var e5 = n3; e5;) {
            for (var t5 = e5; t5 && t5.next && t5.value === t5.next.value;)
              t5 = t5.next, r4 > 0 && --r4;
            e5.next = t5.next, e5.next && (e5.next.pre = e5), e5 = e5.next;
          }
        }, this.sort = function (e5) {
          var t5 = [];
          this.forEach(function (e6) {
            t5.push(e6);
          }), t5.sort(e5);
          var r5 = n3;
          t5.forEach(function (e6) {
            r5 && (r5.value = e6, r5 = r5.next);
          });
        }, this.pushFront = function (e5) {
          if (null == e5)
            throw new Error("you can't push null or undefined here");
          ++r4;
          var t5 = new i(e5);
          n3 ? (t5.next = n3, n3.pre = t5, n3 = t5) : n3 = o2 = t5;
        }, this.popFront = function () {
          n3 && (r4 > 0 && --r4, n3 && (n3 === o2 ? n3 = o2 = void 0 : (n3 = n3.next) && (n3.pre = void 0)));
        }, this.merge = function (e5) {
          var t5 = this, s2 = n3;
          e5.forEach(function (e6) {
            for (; s2 && void 0 !== s2.value && s2.value <= e6;)
              s2 = s2.next;
            if (void 0 === s2)
              t5.pushBack(e6), s2 = o2;
            else if (s2 === n3)
              t5.pushFront(e6), s2 = n3;
            else {
              ++r4;
              var a2 = s2.pre;
              a2 && (a2.next = new i(e6), a2.next.pre = a2, a2.next.next = s2, s2 && (s2.pre = a2.next));
            }
          });
        }, this[Symbol.iterator] = function () {
          return function () {
            var e5;
            return function (e6, t5) {
              var r5, n4, i2, o3, s2 = {
                label: 0, sent: function () {
                  if (1 & i2[0])
                    throw i2[1];
                  return i2[1];
                }, trys: [], ops: []
              };
              return o3 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
                return this;
              }), o3;
              function a2(o4) {
                return function (a3) {
                  return function (o5) {
                    if (r5)
                      throw new TypeError("Generator is already executing.");
                    for (; s2;)
                      try {
                        if (r5 = 1, n4 && (i2 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i2 = n4.return) && i2.call(n4), 0) : n4.next) && !(i2 = i2.call(n4, o5[1])).done)
                          return i2;
                        switch (n4 = 0, i2 && (o5 = [2 & o5[0], i2.value]), o5[0]) {
                          case 0:
                          case 1:
                            i2 = o5;
                            break;
                          case 4:
                            return s2.label++, { value: o5[1], done: false };
                          case 5:
                            s2.label++, n4 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s2.ops.pop(), s2.trys.pop();
                            continue;
                          default:
                            if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s2 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i2 || o5[1] > i2[0] && o5[1] < i2[3])) {
                              s2.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s2.label < i2[1]) {
                              s2.label = i2[1], i2 = o5;
                              break;
                            }
                            if (i2 && s2.label < i2[2]) {
                              s2.label = i2[2], s2.ops.push(o5);
                              break;
                            }
                            i2[2] && s2.ops.pop(), s2.trys.pop();
                            continue;
                        }
                        o5 = t5.call(e6, s2);
                      } catch (e7) {
                        o5 = [6, e7], n4 = 0;
                      } finally {
                        r5 = i2 = 0;
                      }
                    if (5 & o5[0])
                      throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a3]);
                };
              }
            }(this, function (t5) {
              switch (t5.label) {
                case 0:
                  e5 = n3, t5.label = 1;
                case 1:
                  if (void 0 === e5)
                    return [3, 3];
                  if (!e5.value)
                    throw new Error("unknown error");
                  return [4, e5.value];
                case 2:
                  return t5.sent(), e5 = e5.next, [3, 1];
                case 3:
                  return [2];
              }
            });
          }();
        }, e4.forEach(function (e5) {
          return t4.pushBack(e5);
        }), Object.freeze(this);
      }
      Object.freeze(o);
      var s = o;
      function a(e4) {
        var t4 = this;
        void 0 === e4 && (e4 = []);
        var r4 = [], n3 = 0, i2 = 0, o2 = 0, s2 = 0, u3 = 0, l3 = 0;
        this.size = function () {
          return l3;
        }, this.empty = function () {
          return 0 === l3;
        }, this.clear = function () {
          n3 = o2 = i2 = s2 = u3 = l3 = 0, h3.call(this, a.bucketSize), l3 = 0;
        }, this.front = function () {
          return r4[n3][i2];
        }, this.back = function () {
          return r4[o2][s2];
        }, this.forEach = function (e5) {
          if (!this.empty()) {
            var t5 = 0;
            if (n3 !== o2) {
              for (l4 = i2; l4 < a.bucketSize; ++l4)
                e5(r4[n3][l4], t5++);
              for (l4 = n3 + 1; l4 < o2; ++l4)
                for (var u4 = 0; u4 < a.bucketSize; ++u4)
                  e5(r4[l4][u4], t5++);
              for (l4 = 0; l4 <= s2; ++l4)
                e5(r4[o2][l4], t5++);
            } else
              for (var l4 = i2; l4 <= s2; ++l4)
                e5(r4[n3][l4], t5++);
          }
        };
        var c2 = function (e5) {
          var t5 = n3 * a.bucketSize + i2, r5 = t5 + e5, u4 = o2 * a.bucketSize + s2;
          if (r5 < t5 || r5 > u4)
            throw new Error("pos should more than 0 and less than queue's size");
          return { curNodeBucketIndex: Math.floor(r5 / a.bucketSize), curNodePointerIndex: r5 % a.bucketSize };
        };
        this.getElementByPos = function (e5) {
          var t5 = c2(e5), n4 = t5.curNodeBucketIndex, i3 = t5.curNodePointerIndex;
          return r4[n4][i3];
        }, this.eraseElementByPos = function (e5) {
          var t5 = this;
          if (e5 < 0 || e5 > l3)
            throw new Error("pos should more than 0 and less than queue's size");
          if (0 === e5)
            this.popFront();
          else if (e5 === this.size())
            this.popBack();
          else {
            for (var r5 = [], n4 = e5 + 1; n4 < l3; ++n4)
              r5.push(this.getElementByPos(n4));
            this.cut(e5), this.popBack(), r5.forEach(function (e6) {
              return t5.pushBack(e6);
            });
          }
        }, this.eraseElementByValue = function (e5) {
          if (!this.empty()) {
            var t5 = [];
            this.forEach(function (r6) {
              r6 !== e5 && t5.push(r6);
            });
            for (var r5 = t5.length, n4 = 0; n4 < r5; ++n4)
              this.setElementByPos(n4, t5[n4]);
            this.cut(r5 - 1);
          }
        };
        var h3 = function (e5) {
          for (var t5 = [], c3 = e5 * a.sigma, h4 = Math.max(Math.ceil(c3 / a.bucketSize), 2), f3 = 0; f3 < h4; ++f3)
            t5.push(new Array(a.bucketSize));
          var p3 = Math.ceil(e5 / a.bucketSize), d2 = Math.floor(h4 / 2) - Math.floor(p3 / 2), y3 = d2, g2 = 0;
          if (this.size())
            for (f3 = 0; f3 < p3; ++f3) {
              for (var b2 = 0; b2 < a.bucketSize; ++b2)
                if (t5[d2 + f3][b2] = this.front(), this.popFront(), this.empty()) {
                  y3 = d2 + f3, g2 = b2;
                  break;
                }
              if (this.empty())
                break;
            }
          r4 = t5, n3 = d2, i2 = 0, o2 = y3, s2 = g2, u3 = h4, l3 = e5;
        };
        this.pushBack = function (e5) {
          this.empty() || (o2 === u3 - 1 && s2 === a.bucketSize - 1 && h3.call(this, this.size()), s2 < a.bucketSize - 1 ? ++s2 : o2 < u3 - 1 && (++o2, s2 = 0)), ++l3, r4[o2][s2] = e5;
        }, this.popBack = function () {
          this.empty() || (1 !== this.size() && (s2 > 0 ? --s2 : n3 < o2 && (--o2, s2 = a.bucketSize - 1)), l3 > 0 && --l3);
        }, this.setElementByPos = function (e5, t5) {
          var n4 = c2(e5), i3 = n4.curNodeBucketIndex, o3 = n4.curNodePointerIndex;
          r4[i3][o3] = t5;
        }, this.insert = function (e5, t5, r5) {
          var n4 = this;
          if (void 0 === r5 && (r5 = 1), 0 === e5)
            for (; r5--;)
              this.pushFront(t5);
          else if (e5 === this.size())
            for (; r5--;)
              this.pushBack(t5);
          else {
            for (var i3 = [], o3 = e5; o3 < l3; ++o3)
              i3.push(this.getElementByPos(o3));
            for (this.cut(e5 - 1), o3 = 0; o3 < r5; ++o3)
              this.pushBack(t5);
            i3.forEach(function (e6) {
              return n4.pushBack(e6);
            });
          }
        }, this.find = function (e5) {
          if (n3 === o2) {
            for (var t5 = i2; t5 <= s2; ++t5)
              if (r4[n3][t5] === e5)
                return true;
            return false;
          }
          for (t5 = i2; t5 < a.bucketSize; ++t5)
            if (r4[n3][t5] === e5)
              return true;
          for (t5 = n3 + 1; t5 < o2; ++t5)
            for (var u4 = 0; u4 < a.bucketSize; ++u4)
              if (r4[t5][u4] === e5)
                return true;
          for (t5 = 0; t5 <= s2; ++t5)
            if (r4[o2][t5] === e5)
              return true;
          return false;
        }, this.reverse = function () {
          for (var e5 = 0, t5 = l3 - 1; e5 < t5;) {
            var r5 = this.getElementByPos(e5);
            this.setElementByPos(e5, this.getElementByPos(t5)), this.setElementByPos(t5, r5), ++e5, --t5;
          }
        }, this.unique = function () {
          if (!this.empty()) {
            var e5 = [], t5 = this.front();
            this.forEach(function (r6, n4) {
              0 !== n4 && r6 === t5 || (e5.push(r6), t5 = r6);
            });
            for (var r5 = 0; r5 < l3; ++r5)
              this.setElementByPos(r5, e5[r5]);
            this.cut(e5.length - 1);
          }
        }, this.sort = function (e5) {
          var t5 = [];
          this.forEach(function (e6) {
            t5.push(e6);
          }), t5.sort(e5);
          for (var r5 = 0; r5 < l3; ++r5)
            this.setElementByPos(r5, t5[r5]);
        }, this.pushFront = function (e5) {
          this.empty() || (0 === n3 && 0 === i2 && h3.call(this, this.size()), i2 > 0 ? --i2 : n3 > 0 && (--n3, i2 = a.bucketSize - 1)), ++l3, r4[n3][i2] = e5;
        }, this.popFront = function () {
          this.empty() || (1 !== this.size() && (i2 < a.bucketSize - 1 ? ++i2 : n3 < o2 && (++n3, i2 = 0)), l3 > 0 && --l3);
        }, this.shrinkToFit = function () {
          var e5 = this, t5 = [];
          this.forEach(function (e6) {
            t5.push(e6);
          });
          var n4 = t5.length;
          r4 = [];
          for (var i3 = Math.ceil(n4 / a.bucketSize), o3 = 0; o3 < i3; ++o3)
            r4.push(new Array(a.bucketSize));
          this.clear(), t5.forEach(function (t6) {
            return e5.pushBack(t6);
          });
        }, this.cut = function (e5) {
          if (e5 < 0)
            this.clear();
          else {
            var t5 = c2(e5), r5 = t5.curNodeBucketIndex, n4 = t5.curNodePointerIndex;
            o2 = r5, s2 = n4, l3 = e5 + 1;
          }
        }, this[Symbol.iterator] = function () {
          return function () {
            var e5, t5;
            return function (e6, t6) {
              var r5, n4, i3, o3, s3 = {
                label: 0, sent: function () {
                  if (1 & i3[0])
                    throw i3[1];
                  return i3[1];
                }, trys: [], ops: []
              };
              return o3 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
                return this;
              }), o3;
              function a2(o4) {
                return function (a3) {
                  return function (o5) {
                    if (r5)
                      throw new TypeError("Generator is already executing.");
                    for (; s3;)
                      try {
                        if (r5 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done)
                          return i3;
                        switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                          case 0:
                          case 1:
                            i3 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n4 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i3[1]) {
                              s3.label = i3[1], i3 = o5;
                              break;
                            }
                            if (i3 && s3.label < i3[2]) {
                              s3.label = i3[2], s3.ops.push(o5);
                              break;
                            }
                            i3[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t6.call(e6, s3);
                      } catch (e7) {
                        o5 = [6, e7], n4 = 0;
                      } finally {
                        r5 = i3 = 0;
                      }
                    if (5 & o5[0])
                      throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a3]);
                };
              }
            }(this, function (u4) {
              switch (u4.label) {
                case 0:
                  if (0 === l3)
                    return [2];
                  if (n3 !== o2)
                    return [3, 5];
                  t5 = i2, u4.label = 1;
                case 1:
                  return t5 <= s2 ? [4, r4[n3][t5]] : [3, 4];
                case 2:
                  u4.sent(), u4.label = 3;
                case 3:
                  return ++t5, [3, 1];
                case 4:
                  return [2];
                case 5:
                  t5 = i2, u4.label = 6;
                case 6:
                  return t5 < a.bucketSize ? [4, r4[n3][t5]] : [3, 9];
                case 7:
                  u4.sent(), u4.label = 8;
                case 8:
                  return ++t5, [3, 6];
                case 9:
                  t5 = n3 + 1, u4.label = 10;
                case 10:
                  if (!(t5 < o2))
                    return [3, 15];
                  e5 = 0, u4.label = 11;
                case 11:
                  return e5 < a.bucketSize ? [4, r4[t5][e5]] : [3, 14];
                case 12:
                  u4.sent(), u4.label = 13;
                case 13:
                  return ++e5, [3, 11];
                case 14:
                  return ++t5, [3, 10];
                case 15:
                  t5 = 0, u4.label = 16;
                case 16:
                  return t5 <= s2 ? [4, r4[o2][t5]] : [3, 19];
                case 17:
                  u4.sent(), u4.label = 18;
                case 18:
                  return ++t5, [3, 16];
                case 19:
                  return [2];
              }
            });
          }();
        }, function () {
          var i3 = a.bucketSize;
          e4.size ? i3 = e4.size() : e4.length && (i3 = e4.length);
          var s3 = i3 * a.sigma;
          u3 = Math.ceil(s3 / a.bucketSize), u3 = Math.max(u3, 3);
          for (var l4 = 0; l4 < u3; ++l4)
            r4.push(new Array(a.bucketSize));
          var c3 = Math.ceil(i3 / a.bucketSize);
          n3 = Math.floor(u3 / 2) - Math.floor(c3 / 2), o2 = n3, e4.forEach(function (e5) {
            return t4.pushBack(e5);
          });
        }(), Object.freeze(this);
      }
      a.sigma = 3, a.bucketSize = 5e3, Object.freeze(a);
      var u2 = function () {
        function e4(e5, t4) {
          this.color = true, this.key = void 0, this.value = void 0, this.parent = void 0, this.brother = void 0, this.leftChild = void 0, this.rightChild = void 0, this.key = e5, this.value = t4;
        }
        return e4.prototype.rotateLeft = function () {
          var e5 = this.parent, t4 = this.brother, r4 = this.leftChild, n3 = this.rightChild;
          if (!n3)
            throw new Error("unknown error");
          var i2 = n3.leftChild, o2 = n3.rightChild;
          return e5 && (e5.leftChild === this ? e5.leftChild = n3 : e5.rightChild === this && (e5.rightChild = n3)), n3.parent = e5, n3.brother = t4, n3.leftChild = this, n3.rightChild = o2, t4 && (t4.brother = n3), this.parent = n3, this.brother = o2, this.leftChild = r4, this.rightChild = i2, o2 && (o2.parent = n3, o2.brother = this), r4 && (r4.parent = this, r4.brother = i2), i2 && (i2.parent = this, i2.brother = r4), n3;
        }, e4.prototype.rotateRight = function () {
          var e5 = this.parent, t4 = this.brother, r4 = this.leftChild;
          if (!r4)
            throw new Error("unknown error");
          var n3 = this.rightChild, i2 = r4.leftChild, o2 = r4.rightChild;
          return e5 && (e5.leftChild === this ? e5.leftChild = r4 : e5.rightChild === this && (e5.rightChild = r4)), r4.parent = e5, r4.brother = t4, r4.leftChild = i2, r4.rightChild = this, t4 && (t4.brother = r4), i2 && (i2.parent = r4, i2.brother = this), this.parent = r4, this.brother = i2, this.leftChild = o2, this.rightChild = n3, o2 && (o2.parent = this, o2.brother = n3), n3 && (n3.parent = this, n3.brother = o2), r4;
        }, e4.prototype.remove = function () {
          if (this.leftChild || this.rightChild)
            throw new Error("can only remove leaf node");
          this.parent && (this === this.parent.leftChild ? this.parent.leftChild = void 0 : this === this.parent.rightChild && (this.parent.rightChild = void 0)), this.brother && (this.brother.brother = void 0), this.key = void 0, this.value = void 0, this.parent = void 0, this.brother = void 0;
        }, e4.TreeNodeColorType = { red: true, black: false }, e4;
      }();
      Object.freeze(u2);
      var l2 = u2, c = function (e4) {
        var t4 = "function" == typeof Symbol && Symbol.iterator, r4 = t4 && e4[t4], n3 = 0;
        if (r4)
          return r4.call(e4);
        if (e4 && "number" == typeof e4.length)
          return {
            next: function () {
              return e4 && n3 >= e4.length && (e4 = void 0), { value: e4 && e4[n3++], done: !e4 };
            }
          };
        throw new TypeError(t4 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      function h2(e4, t4) {
        var r4 = this;
        void 0 === e4 && (e4 = []), t4 = t4 || function (e5, t5) {
          return e5 < t5 ? -1 : e5 > t5 ? 1 : 0;
        };
        var n3 = 0, i2 = new l2();
        i2.color = l2.TreeNodeColorType.black, this.size = function () {
          return n3;
        }, this.empty = function () {
          return 0 === n3;
        }, this.clear = function () {
          n3 = 0, i2.key = void 0, i2.leftChild = i2.rightChild = i2.brother = i2.parent = void 0, i2.color = l2.TreeNodeColorType.black;
        };
        var o2 = function (e5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          return e5.leftChild ? o2(e5.leftChild) : e5;
        }, s2 = function (e5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          return e5.rightChild ? s2(e5.rightChild) : e5;
        };
        this.front = function () {
          if (!this.empty())
            return o2(i2).key;
        }, this.back = function () {
          if (!this.empty())
            return s2(i2).key;
        }, this.forEach = function (e5) {
          var t5, r5, n4 = 0;
          try {
            for (var i3 = c(this), o3 = i3.next(); !o3.done; o3 = i3.next())
              e5(o3.value, n4++);
          } catch (e6) {
            t5 = { error: e6 };
          } finally {
            try {
              o3 && !o3.done && (r5 = i3.return) && r5.call(i3);
            } finally {
              if (t5)
                throw t5.error;
            }
          }
        }, this.getElementByPos = function (e5) {
          var t5, r5;
          if (e5 < 0 || e5 >= this.size())
            throw new Error("pos must more than 0 and less than set's size");
          var n4 = 0;
          try {
            for (var i3 = c(this), o3 = i3.next(); !o3.done; o3 = i3.next()) {
              var s3 = o3.value;
              if (n4 === e5)
                return s3;
              ++n4;
            }
          } catch (e6) {
            t5 = { error: e6 };
          } finally {
            try {
              o3 && !o3.done && (r5 = i3.return) && r5.call(i3);
            } finally {
              if (t5)
                throw t5.error;
            }
          }
          throw new Error("unknown error");
        };
        var a2 = function (e5) {
          var t5 = e5.parent;
          if (!t5) {
            if (e5 === i2)
              return;
            throw new Error("unknown error");
          }
          if (e5.color !== l2.TreeNodeColorType.red) {
            var r5 = e5.brother;
            if (!r5)
              throw new Error("unknown error");
            if (e5 === t5.leftChild)
              if (r5.color === l2.TreeNodeColorType.red) {
                r5.color = l2.TreeNodeColorType.black, t5.color = l2.TreeNodeColorType.red;
                var n4 = t5.rotateLeft();
                i2 === t5 && (i2 = n4), a2(e5);
              } else
                r5.color === l2.TreeNodeColorType.black && (r5.rightChild && r5.rightChild.color === l2.TreeNodeColorType.red ? (r5.color = t5.color, t5.color = l2.TreeNodeColorType.black, r5.rightChild && (r5.rightChild.color = l2.TreeNodeColorType.black), n4 = t5.rotateLeft(), i2 === t5 && (i2 = n4), e5.color = l2.TreeNodeColorType.black) : r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || !r5.leftChild || r5.leftChild.color !== l2.TreeNodeColorType.red ? r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || (r5.color = l2.TreeNodeColorType.red, a2(t5)) : (r5.color = l2.TreeNodeColorType.red, r5.leftChild && (r5.leftChild.color = l2.TreeNodeColorType.black), n4 = r5.rotateRight(), i2 === r5 && (i2 = n4), a2(e5)));
            else
              e5 === t5.rightChild && (r5.color === l2.TreeNodeColorType.red ? (r5.color = l2.TreeNodeColorType.black, t5.color = l2.TreeNodeColorType.red, n4 = t5.rotateRight(), i2 === t5 && (i2 = n4), a2(e5)) : r5.color === l2.TreeNodeColorType.black && (r5.leftChild && r5.leftChild.color === l2.TreeNodeColorType.red ? (r5.color = t5.color, t5.color = l2.TreeNodeColorType.black, r5.leftChild && (r5.leftChild.color = l2.TreeNodeColorType.black), n4 = t5.rotateRight(), i2 === t5 && (i2 = n4), e5.color = l2.TreeNodeColorType.black) : r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || !r5.rightChild || r5.rightChild.color !== l2.TreeNodeColorType.red ? r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || (r5.color = l2.TreeNodeColorType.red, a2(t5)) : (r5.color = l2.TreeNodeColorType.red, r5.rightChild && (r5.rightChild.color = l2.TreeNodeColorType.black), n4 = r5.rotateLeft(), i2 === r5 && (i2 = n4), a2(e5))));
          } else
            e5.color = l2.TreeNodeColorType.black;
        }, u3 = function (e5) {
          for (var t5 = e5; t5.leftChild || t5.rightChild;) {
            if (t5.rightChild) {
              t5 = o2(t5.rightChild);
              var r5 = e5.key;
              e5.key = t5.key, t5.key = r5, e5 = t5;
            }
            t5.leftChild && (t5 = s2(t5.leftChild), r5 = e5.key, e5.key = t5.key, t5.key = r5, e5 = t5);
          }
          a2(t5), t5 && t5.remove(), --n3, i2.color = l2.TreeNodeColorType.black;
        }, h3 = function (e5, t5) {
          return !(!e5 || void 0 === e5.key) && (!!h3(e5.leftChild, t5) || !!t5(e5) || h3(e5.rightChild, t5));
        };
        this.eraseElementByPos = function (e5) {
          if (e5 < 0 || e5 >= n3)
            throw new Error("pos must more than 0 and less than set's size");
          var t5 = 0;
          h3(i2, function (r5) {
            return e5 === t5 ? (u3(r5), true) : (++t5, false);
          });
        }, this.eraseElementByValue = function (e5) {
          if (!this.empty()) {
            var r5 = d2(i2, e5);
            void 0 !== r5 && void 0 !== r5.key && 0 === t4(r5.key, e5) && u3(r5);
          }
        };
        var f3 = function (e5, r5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          var n4 = t4(r5, e5.key);
          return n4 < 0 ? e5.leftChild ? f3(e5.leftChild, r5) : (e5.leftChild = new l2(), e5.leftChild.parent = e5, e5.leftChild.brother = e5.rightChild, e5.rightChild && (e5.rightChild.brother = e5.leftChild), e5.leftChild) : n4 > 0 ? e5.rightChild ? f3(e5.rightChild, r5) : (e5.rightChild = new l2(), e5.rightChild.parent = e5, e5.rightChild.brother = e5.leftChild, e5.leftChild && (e5.leftChild.brother = e5.rightChild), e5.rightChild) : e5;
        }, p3 = function (e5) {
          var t5 = e5.parent;
          if (!t5) {
            if (e5 === i2)
              return;
            throw new Error("unknown error");
          }
          if (t5.color !== l2.TreeNodeColorType.black && t5.color === l2.TreeNodeColorType.red) {
            var r5 = t5.brother, n4 = t5.parent;
            if (!n4)
              throw new Error("unknown error");
            if (r5 && r5.color === l2.TreeNodeColorType.red)
              r5.color = t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red, p3(n4);
            else if (!r5 || r5.color === l2.TreeNodeColorType.black)
              if (t5 === n4.leftChild)
                if (e5 === t5.leftChild) {
                  t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red;
                  var o3 = n4.rotateRight();
                  n4 === i2 && (i2 = o3);
                } else
                  e5 === t5.rightChild && (o3 = t5.rotateLeft(), n4 === i2 && (i2 = o3), p3(t5));
              else
                t5 === n4.rightChild && (e5 === t5.leftChild ? (o3 = t5.rotateRight(), n4 === i2 && (i2 = o3), p3(t5)) : e5 === t5.rightChild && (t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red, o3 = n4.rotateLeft(), n4 === i2 && (i2 = o3)));
          }
        };
        this.insert = function (e5) {
          if (null == e5)
            throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
          if (this.empty())
            return ++n3, i2.key = e5, void (i2.color = l2.TreeNodeColorType.black);
          var r5 = f3(i2, e5);
          void 0 !== r5.key && 0 === t4(r5.key, e5) || (++n3, r5.key = e5, p3(r5), i2.color = l2.TreeNodeColorType.black);
        };
        var d2 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            var n4 = t4(r5, e5.key);
            return n4 < 0 ? d2(e5.leftChild, r5) : n4 > 0 ? d2(e5.rightChild, r5) : e5;
          }
        };
        this.find = function (e5) {
          var r5 = d2(i2, e5);
          return void 0 !== r5 && void 0 !== r5.key && 0 === t4(r5.key, e5);
        };
        var y3 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            var n4 = t4(e5.key, r5);
            if (0 === n4)
              return e5.key;
            if (n4 < 0)
              return y3(e5.rightChild, r5);
            var i3 = y3(e5.leftChild, r5);
            return void 0 !== i3 ? i3 : e5.key;
          }
        };
        this.lowerBound = function (e5) {
          return y3(i2, e5);
        };
        var g2 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            if (t4(e5.key, r5) <= 0)
              return g2(e5.rightChild, r5);
            var n4 = g2(e5.leftChild, r5);
            return void 0 !== n4 ? n4 : e5.key;
          }
        };
        this.upperBound = function (e5) {
          return g2(i2, e5);
        };
        var b2 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            var n4 = t4(e5.key, r5);
            if (0 === n4)
              return e5.key;
            if (n4 > 0)
              return b2(e5.leftChild, r5);
            var i3 = b2(e5.rightChild, r5);
            return void 0 !== i3 ? i3 : e5.key;
          }
        };
        this.reverseLowerBound = function (e5) {
          return b2(i2, e5);
        };
        var m3 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            if (t4(e5.key, r5) >= 0)
              return m3(e5.leftChild, r5);
            var n4 = m3(e5.rightChild, r5);
            return void 0 !== n4 ? n4 : e5.key;
          }
        };
        this.reverseUpperBound = function (e5) {
          return m3(i2, e5);
        }, this.union = function (e5) {
          var t5 = this;
          e5.forEach(function (e6) {
            return t5.insert(e6);
          });
        }, this.getHeight = function () {
          if (this.empty())
            return 0;
          var e5 = function (t5) {
            return t5 ? Math.max(e5(t5.leftChild), e5(t5.rightChild)) + 1 : 1;
          };
          return e5(i2);
        };
        var v2 = function (e5) {
          return function (e6, t5) {
            var r5, n4, i3, o3, s3 = {
              label: 0, sent: function () {
                if (1 & i3[0])
                  throw i3[1];
                return i3[1];
              }, trys: [], ops: []
            };
            return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
              return this;
            }), o3;
            function a3(o4) {
              return function (a4) {
                return function (o5) {
                  if (r5)
                    throw new TypeError("Generator is already executing.");
                  for (; s3;)
                    try {
                      if (r5 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done)
                        return i3;
                      switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                        case 0:
                        case 1:
                          i3 = o5;
                          break;
                        case 4:
                          return s3.label++, { value: o5[1], done: false };
                        case 5:
                          s3.label++, n4 = o5[1], o5 = [0];
                          continue;
                        case 7:
                          o5 = s3.ops.pop(), s3.trys.pop();
                          continue;
                        default:
                          if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                            s3 = 0;
                            continue;
                          }
                          if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                            s3.label = o5[1];
                            break;
                          }
                          if (6 === o5[0] && s3.label < i3[1]) {
                            s3.label = i3[1], i3 = o5;
                            break;
                          }
                          if (i3 && s3.label < i3[2]) {
                            s3.label = i3[2], s3.ops.push(o5);
                            break;
                          }
                          i3[2] && s3.ops.pop(), s3.trys.pop();
                          continue;
                      }
                      o5 = t5.call(e6, s3);
                    } catch (e7) {
                      o5 = [6, e7], n4 = 0;
                    } finally {
                      r5 = i3 = 0;
                    }
                  if (5 & o5[0])
                    throw o5[1];
                  return { value: o5[0] ? o5[1] : void 0, done: true };
                }([o4, a4]);
              };
            }
          }(this, function (t5) {
            switch (t5.label) {
              case 0:
                return e5 && void 0 !== e5.key ? [5, c(v2(e5.leftChild))] : [2];
              case 1:
                return t5.sent(), [4, e5.key];
              case 2:
                return t5.sent(), [5, c(v2(e5.rightChild))];
              case 3:
                return t5.sent(), [2];
            }
          });
        };
        this[Symbol.iterator] = function () {
          return v2(i2);
        }, e4.forEach(function (e5) {
          return r4.insert(e5);
        }), Object.freeze(this);
      }
      Object.freeze(h2);
      var f2 = h2, p2 = function (e4) {
        var t4 = "function" == typeof Symbol && Symbol.iterator, r4 = t4 && e4[t4], n3 = 0;
        if (r4)
          return r4.call(e4);
        if (e4 && "number" == typeof e4.length)
          return {
            next: function () {
              return e4 && n3 >= e4.length && (e4 = void 0), { value: e4 && e4[n3++], done: !e4 };
            }
          };
        throw new TypeError(t4 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      function d(e4, t4) {
        var r4 = this;
        void 0 === e4 && (e4 = []), t4 = t4 || function (e5, t5) {
          return e5 < t5 ? -1 : e5 > t5 ? 1 : 0;
        };
        var n3 = 0, i2 = new l2();
        i2.color = l2.TreeNodeColorType.black, this.size = function () {
          return n3;
        }, this.empty = function () {
          return 0 === n3;
        }, this.clear = function () {
          n3 = 0, i2.key = i2.value = void 0, i2.leftChild = i2.rightChild = i2.brother = void 0;
        };
        var o2 = function (e5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          return e5.leftChild ? o2(e5.leftChild) : e5;
        }, s2 = function (e5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          return e5.rightChild ? s2(e5.rightChild) : e5;
        };
        this.front = function () {
          if (!this.empty()) {
            var e5 = o2(i2);
            if (void 0 === e5.key || void 0 === e5.value)
              throw new Error("unknown error");
            return { key: e5.key, value: e5.value };
          }
        }, this.back = function () {
          if (!this.empty()) {
            var e5 = s2(i2);
            if (void 0 === e5.key || void 0 === e5.value)
              throw new Error("unknown error");
            return { key: e5.key, value: e5.value };
          }
        }, this.forEach = function (e5) {
          var t5, r5, n4 = 0;
          try {
            for (var i3 = p2(this), o3 = i3.next(); !o3.done; o3 = i3.next())
              e5(o3.value, n4++);
          } catch (e6) {
            t5 = { error: e6 };
          } finally {
            try {
              o3 && !o3.done && (r5 = i3.return) && r5.call(i3);
            } finally {
              if (t5)
                throw t5.error;
            }
          }
        }, this.getElementByPos = function (e5) {
          var t5, r5;
          if (e5 < 0 || e5 >= this.size())
            throw new Error("pos must more than 0 and less than set's size");
          var n4 = 0;
          try {
            for (var i3 = p2(this), o3 = i3.next(); !o3.done; o3 = i3.next()) {
              var s3 = o3.value;
              if (n4 === e5)
                return s3;
              ++n4;
            }
          } catch (e6) {
            t5 = { error: e6 };
          } finally {
            try {
              o3 && !o3.done && (r5 = i3.return) && r5.call(i3);
            } finally {
              if (t5)
                throw t5.error;
            }
          }
          throw new Error("unknown Error");
        };
        var a2 = function (e5, r5) {
          if (e5 && void 0 !== e5.key && void 0 !== e5.value) {
            var n4 = t4(e5.key, r5);
            return 0 === n4 ? { key: e5.key, value: e5.value } : n4 < 0 ? a2(e5.rightChild, r5) : a2(e5.leftChild, r5) || { key: e5.key, value: e5.value };
          }
        };
        this.lowerBound = function (e5) {
          return a2(i2, e5);
        };
        var u3 = function (e5, r5) {
          if (e5 && void 0 !== e5.key && void 0 !== e5.value)
            return t4(e5.key, r5) <= 0 ? u3(e5.rightChild, r5) : u3(e5.leftChild, r5) || { key: e5.key, value: e5.value };
        };
        this.upperBound = function (e5) {
          return u3(i2, e5);
        };
        var c2 = function (e5, r5) {
          if (e5 && void 0 !== e5.key && void 0 !== e5.value) {
            var n4 = t4(e5.key, r5);
            return 0 === n4 ? { key: e5.key, value: e5.value } : n4 > 0 ? c2(e5.leftChild, r5) : c2(e5.rightChild, r5) || { key: e5.key, value: e5.value };
          }
        };
        this.reverseLowerBound = function (e5) {
          return c2(i2, e5);
        };
        var h3 = function (e5, r5) {
          if (e5 && void 0 !== e5.key && void 0 !== e5.value)
            return t4(e5.key, r5) >= 0 ? h3(e5.leftChild, r5) : h3(e5.rightChild, r5) || { key: e5.key, value: e5.value };
        };
        this.reverseUpperBound = function (e5) {
          return h3(i2, e5);
        };
        var f3 = function (e5) {
          var t5 = e5.parent;
          if (!t5) {
            if (e5 === i2)
              return;
            throw new Error("unknown error");
          }
          if (e5.color !== l2.TreeNodeColorType.red) {
            var r5 = e5.brother;
            if (!r5)
              throw new Error("unknown error");
            if (e5 === t5.leftChild)
              if (r5.color === l2.TreeNodeColorType.red) {
                r5.color = l2.TreeNodeColorType.black, t5.color = l2.TreeNodeColorType.red;
                var n4 = t5.rotateLeft();
                i2 === t5 && (i2 = n4), f3(e5);
              } else
                r5.color === l2.TreeNodeColorType.black && (r5.rightChild && r5.rightChild.color === l2.TreeNodeColorType.red ? (r5.color = t5.color, t5.color = l2.TreeNodeColorType.black, r5.rightChild && (r5.rightChild.color = l2.TreeNodeColorType.black), n4 = t5.rotateLeft(), i2 === t5 && (i2 = n4), e5.color = l2.TreeNodeColorType.black) : r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || !r5.leftChild || r5.leftChild.color !== l2.TreeNodeColorType.red ? r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || (r5.color = l2.TreeNodeColorType.red, f3(t5)) : (r5.color = l2.TreeNodeColorType.red, r5.leftChild && (r5.leftChild.color = l2.TreeNodeColorType.black), n4 = r5.rotateRight(), i2 === r5 && (i2 = n4), f3(e5)));
            else
              e5 === t5.rightChild && (r5.color === l2.TreeNodeColorType.red ? (r5.color = l2.TreeNodeColorType.black, t5.color = l2.TreeNodeColorType.red, n4 = t5.rotateRight(), i2 === t5 && (i2 = n4), f3(e5)) : r5.color === l2.TreeNodeColorType.black && (r5.leftChild && r5.leftChild.color === l2.TreeNodeColorType.red ? (r5.color = t5.color, t5.color = l2.TreeNodeColorType.black, r5.leftChild && (r5.leftChild.color = l2.TreeNodeColorType.black), n4 = t5.rotateRight(), i2 === t5 && (i2 = n4), e5.color = l2.TreeNodeColorType.black) : r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || !r5.rightChild || r5.rightChild.color !== l2.TreeNodeColorType.red ? r5.leftChild && r5.leftChild.color !== l2.TreeNodeColorType.black || r5.rightChild && r5.rightChild.color !== l2.TreeNodeColorType.black || (r5.color = l2.TreeNodeColorType.red, f3(t5)) : (r5.color = l2.TreeNodeColorType.red, r5.rightChild && (r5.rightChild.color = l2.TreeNodeColorType.black), n4 = r5.rotateLeft(), i2 === r5 && (i2 = n4), f3(e5))));
          } else
            e5.color = l2.TreeNodeColorType.black;
        }, d2 = function (e5) {
          for (var t5 = e5; t5.leftChild || t5.rightChild;) {
            if (t5.rightChild) {
              t5 = o2(t5.rightChild);
              var r5 = e5.key;
              e5.key = t5.key, t5.key = r5;
              var a3 = e5.value;
              e5.value = t5.value, t5.value = a3, e5 = t5;
            }
            t5.leftChild && (t5 = s2(t5.leftChild), r5 = e5.key, e5.key = t5.key, t5.key = r5, a3 = e5.value, e5.value = t5.value, t5.value = a3, e5 = t5);
          }
          f3(t5), t5 && t5.remove(), --n3, i2.color = l2.TreeNodeColorType.black;
        }, y3 = function (e5, t5) {
          return !(!e5 || void 0 === e5.key) && (!!y3(e5.leftChild, t5) || !!t5(e5) || y3(e5.rightChild, t5));
        };
        this.eraseElementByPos = function (e5) {
          if (e5 < 0 || e5 >= n3)
            throw new Error("pos must more than 0 and less than set's size");
          var t5 = 0;
          y3(i2, function (r5) {
            return e5 === t5 ? (d2(r5), true) : (++t5, false);
          });
        }, this.eraseElementByKey = function (e5) {
          if (!this.empty()) {
            var r5 = m3(i2, e5);
            void 0 !== r5 && void 0 !== r5.key && 0 === t4(r5.key, e5) && d2(r5);
          }
        };
        var g2 = function (e5, r5) {
          if (!e5 || void 0 === e5.key)
            throw new Error("unknown error");
          var n4 = t4(r5, e5.key);
          return n4 < 0 ? e5.leftChild ? g2(e5.leftChild, r5) : (e5.leftChild = new l2(), e5.leftChild.parent = e5, e5.leftChild.brother = e5.rightChild, e5.rightChild && (e5.rightChild.brother = e5.leftChild), e5.leftChild) : n4 > 0 ? e5.rightChild ? g2(e5.rightChild, r5) : (e5.rightChild = new l2(), e5.rightChild.parent = e5, e5.rightChild.brother = e5.leftChild, e5.leftChild && (e5.leftChild.brother = e5.rightChild), e5.rightChild) : e5;
        }, b2 = function (e5) {
          var t5 = e5.parent;
          if (!t5) {
            if (e5 === i2)
              return;
            throw new Error("unknown error");
          }
          if (t5.color !== l2.TreeNodeColorType.black && t5.color === l2.TreeNodeColorType.red) {
            var r5 = t5.brother, n4 = t5.parent;
            if (!n4)
              throw new Error("unknown error");
            if (r5 && r5.color === l2.TreeNodeColorType.red)
              r5.color = t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red, b2(n4);
            else if (!r5 || r5.color === l2.TreeNodeColorType.black)
              if (t5 === n4.leftChild)
                if (e5 === t5.leftChild) {
                  t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red;
                  var o3 = n4.rotateRight();
                  n4 === i2 && (i2 = o3);
                } else
                  e5 === t5.rightChild && (o3 = t5.rotateLeft(), n4 === i2 && (i2 = o3), b2(t5));
              else
                t5 === n4.rightChild && (e5 === t5.leftChild ? (o3 = t5.rotateRight(), n4 === i2 && (i2 = o3), b2(t5)) : e5 === t5.rightChild && (t5.color = l2.TreeNodeColorType.black, n4.color = l2.TreeNodeColorType.red, o3 = n4.rotateLeft(), n4 === i2 && (i2 = o3)));
          }
        };
        this.setElement = function (e5, r5) {
          if (null == e5)
            throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
          if (null != r5) {
            if (this.empty())
              return ++n3, i2.key = e5, i2.value = r5, void (i2.color = l2.TreeNodeColorType.black);
            var o3 = g2(i2, e5);
            void 0 === o3.key || 0 !== t4(o3.key, e5) ? (++n3, o3.key = e5, o3.value = r5, b2(o3), i2.color = l2.TreeNodeColorType.black) : o3.value = r5;
          } else
            this.eraseElementByKey(e5);
        };
        var m3 = function (e5, r5) {
          if (e5 && void 0 !== e5.key) {
            var n4 = t4(r5, e5.key);
            return n4 < 0 ? m3(e5.leftChild, r5) : n4 > 0 ? m3(e5.rightChild, r5) : e5;
          }
        };
        this.find = function (e5) {
          return !!m3(i2, e5);
        }, this.getElementByKey = function (e5) {
          var t5 = m3(i2, e5);
          if (void 0 === (null == t5 ? void 0 : t5.key) || void 0 === (null == t5 ? void 0 : t5.value))
            throw new Error("unknown error");
          return t5.value;
        }, this.union = function (e5) {
          var t5 = this;
          e5.forEach(function (e6) {
            var r5 = e6.key, n4 = e6.value;
            return t5.setElement(r5, n4);
          });
        }, this.getHeight = function () {
          if (this.empty())
            return 0;
          var e5 = function (t5) {
            return t5 ? Math.max(e5(t5.leftChild), e5(t5.rightChild)) + 1 : 1;
          };
          return e5(i2);
        };
        var v2 = function (e5) {
          return function (e6, t5) {
            var r5, n4, i3, o3, s3 = {
              label: 0, sent: function () {
                if (1 & i3[0])
                  throw i3[1];
                return i3[1];
              }, trys: [], ops: []
            };
            return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
              return this;
            }), o3;
            function a3(o4) {
              return function (a4) {
                return function (o5) {
                  if (r5)
                    throw new TypeError("Generator is already executing.");
                  for (; s3;)
                    try {
                      if (r5 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done)
                        return i3;
                      switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                        case 0:
                        case 1:
                          i3 = o5;
                          break;
                        case 4:
                          return s3.label++, { value: o5[1], done: false };
                        case 5:
                          s3.label++, n4 = o5[1], o5 = [0];
                          continue;
                        case 7:
                          o5 = s3.ops.pop(), s3.trys.pop();
                          continue;
                        default:
                          if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                            s3 = 0;
                            continue;
                          }
                          if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                            s3.label = o5[1];
                            break;
                          }
                          if (6 === o5[0] && s3.label < i3[1]) {
                            s3.label = i3[1], i3 = o5;
                            break;
                          }
                          if (i3 && s3.label < i3[2]) {
                            s3.label = i3[2], s3.ops.push(o5);
                            break;
                          }
                          i3[2] && s3.ops.pop(), s3.trys.pop();
                          continue;
                      }
                      o5 = t5.call(e6, s3);
                    } catch (e7) {
                      o5 = [6, e7], n4 = 0;
                    } finally {
                      r5 = i3 = 0;
                    }
                  if (5 & o5[0])
                    throw o5[1];
                  return { value: o5[0] ? o5[1] : void 0, done: true };
                }([o4, a4]);
              };
            }
          }(this, function (t5) {
            switch (t5.label) {
              case 0:
                return e5 && void 0 !== e5.key && void 0 !== e5.value ? [5, p2(v2(e5.leftChild))] : [2];
              case 1:
                return t5.sent(), [4, { key: e5.key, value: e5.value }];
              case 2:
                return t5.sent(), [5, p2(v2(e5.rightChild))];
              case 3:
                return t5.sent(), [2];
            }
          });
        };
        this[Symbol.iterator] = function () {
          return v2(i2);
        }, e4.forEach(function (e5) {
          var t5 = e5.key, n4 = e5.value;
          return r4.setElement(t5, n4);
        }), Object.freeze(this);
      }
      Object.freeze(d);
      var y2 = d;
      function g(e4, t4, r4) {
        var n3 = this;
        if (void 0 === e4 && (e4 = []), void 0 === t4 && (t4 = g.initSize), r4 = r4 || function (e5) {
          var t5 = 0, r5 = "";
          if ("number" == typeof e5)
            t5 = ((t5 = Math.floor(e5)) << 5) - t5, t5 &= t5;
          else {
            r5 = "string" != typeof e5 ? JSON.stringify(e5) : e5;
            for (var n4 = 0; n4 < r5.length; n4++)
              t5 = (t5 << 5) - t5 + r5.charCodeAt(n4), t5 &= t5;
          }
          return t5 ^ t5 >>> 16;
        }, 0 != (t4 & t4 - 1))
          throw new Error("initBucketNum must be 2 to the power of n");
        var i2 = 0, o2 = [], a2 = Math.max(g.initSize, Math.min(g.maxSize, t4));
        this.size = function () {
          return i2;
        }, this.empty = function () {
          return 0 === i2;
        }, this.clear = function () {
          i2 = 0, a2 = t4, o2 = [];
        }, this.forEach = function (e5) {
          var t5 = 0;
          o2.forEach(function (r5) {
            r5.forEach(function (r6) {
              e5(r6, t5++);
            });
          });
        };
        var u3 = function (e5) {
          if (!(e5 >= g.maxSize)) {
            a2 = 2 * e5;
            var t5 = [];
            o2.forEach(function (n4, i3) {
              if (!n4.empty()) {
                if (n4 instanceof s && 1 === n4.size()) {
                  var u4 = n4.front();
                  if (void 0 === u4)
                    throw new Error("unknown error");
                  t5[r4(u4) & a2 - 1] = new s([u4]);
                } else if (n4 instanceof f2) {
                  var l3 = new s(), c2 = new s();
                  n4.forEach(function (t6) {
                    0 == (r4(t6) & e5) ? l3.pushBack(t6) : c2.pushBack(t6);
                  }), l3.size() > g.untreeifyThreshold ? t5[i3] = new f2(l3) : l3.size() && (t5[i3] = l3), c2.size() > g.untreeifyThreshold ? t5[i3 + e5] = new f2(c2) : c2.size() && (t5[i3 + e5] = c2);
                } else {
                  var h3 = new s(), p3 = new s();
                  n4.forEach(function (t6) {
                    0 == (r4(t6) & e5) ? h3.pushBack(t6) : p3.pushBack(t6);
                  }), h3.size() && (t5[i3] = h3), p3.size() && (t5[i3 + e5] = p3);
                }
                o2[i3].clear();
              }
            }), o2 = t5;
          }
        };
        this.insert = function (e5) {
          if (null == e5)
            throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
          var t5 = r4(e5) & a2 - 1;
          if (o2[t5]) {
            var n4 = o2[t5].size();
            if (o2[t5] instanceof s) {
              if (o2[t5].find(e5))
                return;
              o2[t5].pushBack(e5), o2[t5].size() >= g.treeifyThreshold && (o2[t5] = new f2(o2[t5]));
            } else
              o2[t5].insert(e5);
            var l3 = o2[t5].size();
            i2 += l3 - n4;
          } else
            o2[t5] = new s([e5]), ++i2;
          i2 > a2 * g.sigma && u3.call(this, a2);
        }, this.eraseElementByValue = function (e5) {
          var t5 = r4(e5) & a2 - 1;
          if (o2[t5]) {
            var n4 = o2[t5].size();
            o2[t5].eraseElementByValue(e5), o2[t5] instanceof f2 && o2[t5].size() <= g.untreeifyThreshold && (o2[t5] = new s(o2[t5]));
            var u4 = o2[t5].size();
            i2 += u4 - n4;
          }
        }, this.find = function (e5) {
          var t5 = r4(e5) & a2 - 1;
          return !!o2[t5] && o2[t5].find(e5);
        }, this[Symbol.iterator] = function () {
          return function () {
            var e5, t5, r5, n4, i3, s2;
            return function (e6, t6) {
              var r6, n5, i4, o3, s3 = {
                label: 0, sent: function () {
                  if (1 & i4[0])
                    throw i4[1];
                  return i4[1];
                }, trys: [], ops: []
              };
              return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
                return this;
              }), o3;
              function a3(o4) {
                return function (a4) {
                  return function (o5) {
                    if (r6)
                      throw new TypeError("Generator is already executing.");
                    for (; s3;)
                      try {
                        if (r6 = 1, n5 && (i4 = 2 & o5[0] ? n5.return : o5[0] ? n5.throw || ((i4 = n5.return) && i4.call(n5), 0) : n5.next) && !(i4 = i4.call(n5, o5[1])).done)
                          return i4;
                        switch (n5 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                          case 0:
                          case 1:
                            i4 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n5 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i4 = (i4 = s3.trys).length > 0 && i4[i4.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i4[1]) {
                              s3.label = i4[1], i4 = o5;
                              break;
                            }
                            if (i4 && s3.label < i4[2]) {
                              s3.label = i4[2], s3.ops.push(o5);
                              break;
                            }
                            i4[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t6.call(e6, s3);
                      } catch (e7) {
                        o5 = [6, e7], n5 = 0;
                      } finally {
                        r6 = i4 = 0;
                      }
                    if (5 & o5[0])
                      throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a4]);
                };
              }
            }(this, function (u4) {
              switch (u4.label) {
                case 0:
                  e5 = 0, u4.label = 1;
                case 1:
                  if (!(e5 < a2))
                    return [3, 10];
                  for (; e5 < a2 && !o2[e5];)
                    ++e5;
                  if (e5 >= a2)
                    return [3, 10];
                  u4.label = 2;
                case 2:
                  u4.trys.push([2, 7, 8, 9]), i3 = void 0, t5 = function (e6) {
                    var t6 = "function" == typeof Symbol && Symbol.iterator, r6 = t6 && e6[t6], n5 = 0;
                    if (r6)
                      return r6.call(e6);
                    if (e6 && "number" == typeof e6.length)
                      return {
                        next: function () {
                          return e6 && n5 >= e6.length && (e6 = void 0), { value: e6 && e6[n5++], done: !e6 };
                        }
                      };
                    throw new TypeError(t6 ? "Object is not iterable." : "Symbol.iterator is not defined.");
                  }(o2[e5]), r5 = t5.next(), u4.label = 3;
                case 3:
                  return r5.done ? [3, 6] : [4, r5.value];
                case 4:
                  u4.sent(), u4.label = 5;
                case 5:
                  return r5 = t5.next(), [3, 3];
                case 6:
                  return [3, 9];
                case 7:
                  return n4 = u4.sent(), i3 = { error: n4 }, [3, 9];
                case 8:
                  try {
                    r5 && !r5.done && (s2 = t5.return) && s2.call(t5);
                  } finally {
                    if (i3)
                      throw i3.error;
                  }
                  return [7];
                case 9:
                  return ++e5, [3, 1];
                case 10:
                  return [2];
              }
            });
          }();
        }, e4.forEach(function (e5) {
          return n3.insert(e5);
        }), Object.freeze(this);
      }
      g.initSize = 16, g.maxSize = 1 << 30, g.sigma = 0.75, g.treeifyThreshold = 8, g.untreeifyThreshold = 6, g.minTreeifySize = 64, Object.freeze(g);
      var b = function (e4) {
        var t4 = "function" == typeof Symbol && Symbol.iterator, r4 = t4 && e4[t4], n3 = 0;
        if (r4)
          return r4.call(e4);
        if (e4 && "number" == typeof e4.length)
          return {
            next: function () {
              return e4 && n3 >= e4.length && (e4 = void 0), { value: e4 && e4[n3++], done: !e4 };
            }
          };
        throw new TypeError(t4 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      function m2(e4, t4, r4) {
        var n3 = this;
        if (void 0 === e4 && (e4 = []), void 0 === t4 && (t4 = m2.initSize), r4 = r4 || function (e5) {
          var t5, r5, n4 = 0, i3 = "";
          if ("number" == typeof e5)
            n4 = ((n4 = Math.floor(e5)) << 5) - n4, n4 &= n4;
          else {
            i3 = "string" != typeof e5 ? JSON.stringify(e5) : e5;
            try {
              for (var o3 = b(i3), s2 = o3.next(); !s2.done; s2 = o3.next())
                n4 = (n4 << 5) - n4 + s2.value.charCodeAt(0), n4 &= n4;
            } catch (e6) {
              t5 = { error: e6 };
            } finally {
              try {
                s2 && !s2.done && (r5 = o3.return) && r5.call(o3);
              } finally {
                if (t5)
                  throw t5.error;
              }
            }
          }
          return n4 ^ n4 >>> 16;
        }, 0 != (t4 & t4 - 1))
          throw new Error("initBucketNum must be 2 to the power of n");
        var i2 = 0, o2 = [], a2 = Math.max(m2.initSize, Math.min(m2.maxSize, t4));
        this.size = function () {
          return i2;
        }, this.empty = function () {
          return 0 === i2;
        }, this.clear = function () {
          i2 = 0, a2 = t4, o2 = [];
        }, this.forEach = function (e5) {
          var t5 = 0;
          o2.forEach(function (r5) {
            r5.forEach(function (r6) {
              e5(r6, t5++);
            });
          });
        };
        var u3 = function (e5) {
          if (!(e5 >= m2.maxSize)) {
            a2 = 2 * e5;
            var t5 = [];
            o2.forEach(function (n4, i3) {
              if (!n4.empty()) {
                if (n4 instanceof s && 1 === n4.size()) {
                  var u4 = n4.front(), l3 = u4.key, c2 = u4.value;
                  t5[r4(l3) & a2 - 1] = new s([{ key: l3, value: c2 }]);
                } else if (n4 instanceof y2) {
                  var h3 = new s(), f3 = new s();
                  n4.forEach(function (t6) {
                    0 == (r4(t6.key) & e5) ? h3.pushBack(t6) : f3.pushBack(t6);
                  }), h3.size() > m2.untreeifyThreshold ? t5[i3] = new y2(h3) : h3.size() && (t5[i3] = h3), f3.size() > m2.untreeifyThreshold ? t5[i3 + e5] = new y2(f3) : f3.size() && (t5[i3 + e5] = f3);
                } else {
                  var p3 = new s(), d2 = new s();
                  n4.forEach(function (t6) {
                    0 == (r4(t6.key) & e5) ? p3.pushBack(t6) : d2.pushBack(t6);
                  }), p3.size() && (t5[i3] = p3), d2.size() && (t5[i3 + e5] = d2);
                }
                o2[i3].clear();
              }
            }), o2 = t5;
          }
        };
        this.setElement = function (e5, t5) {
          var n4, l3;
          if (null == e5)
            throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
          if (null != t5) {
            var c2 = r4(e5) & a2 - 1;
            if (o2[c2]) {
              var h3 = o2[c2].size();
              if (o2[c2] instanceof s) {
                try {
                  for (var f3 = b(o2[c2]), p3 = f3.next(); !p3.done; p3 = f3.next()) {
                    var d2 = p3.value;
                    if (d2.key === e5)
                      return void (d2.value = t5);
                  }
                } catch (e6) {
                  n4 = { error: e6 };
                } finally {
                  try {
                    p3 && !p3.done && (l3 = f3.return) && l3.call(f3);
                  } finally {
                    if (n4)
                      throw n4.error;
                  }
                }
                o2[c2].pushBack({ key: e5, value: t5 }), o2[c2].size() >= m2.treeifyThreshold && (o2[c2] = new y2(o2[c2]));
              } else
                o2[c2].setElement(e5, t5);
              var g2 = o2[c2].size();
              i2 += g2 - h3;
            } else
              ++i2, o2[c2] = new s([{ key: e5, value: t5 }]);
            i2 > a2 * m2.sigma && u3.call(this, a2);
          } else
            this.eraseElementByKey(e5);
        }, this.getElementByKey = function (e5) {
          var t5, n4, i3 = r4(e5) & a2 - 1;
          if (o2[i3]) {
            if (o2[i3] instanceof y2)
              return o2[i3].getElementByKey(e5);
            try {
              for (var s2 = b(o2[i3]), u4 = s2.next(); !u4.done; u4 = s2.next()) {
                var l3 = u4.value;
                if (l3.key === e5)
                  return l3.value;
              }
            } catch (e6) {
              t5 = { error: e6 };
            } finally {
              try {
                u4 && !u4.done && (n4 = s2.return) && n4.call(s2);
              } finally {
                if (t5)
                  throw t5.error;
              }
            }
          }
        }, this.eraseElementByKey = function (e5) {
          var t5, n4, u4 = r4(e5) & a2 - 1;
          if (o2[u4]) {
            var l3 = o2[u4].size();
            if (o2[u4] instanceof y2)
              o2[u4].eraseElementByKey(e5), o2[u4].size() <= m2.untreeifyThreshold && (o2[u4] = new s(o2[u4]));
            else {
              var c2 = -1;
              try {
                for (var h3 = b(o2[u4]), f3 = h3.next(); !f3.done; f3 = h3.next()) {
                  var p3 = f3.value;
                  if (++c2, p3.key === e5) {
                    o2[u4].eraseElementByPos(c2);
                    break;
                  }
                }
              } catch (e6) {
                t5 = { error: e6 };
              } finally {
                try {
                  f3 && !f3.done && (n4 = h3.return) && n4.call(h3);
                } finally {
                  if (t5)
                    throw t5.error;
                }
              }
            }
            var d2 = o2[u4].size();
            i2 += d2 - l3;
          }
        }, this.find = function (e5) {
          var t5, n4, i3 = r4(e5) & a2 - 1;
          if (!o2[i3])
            return false;
          if (o2[i3] instanceof y2)
            return o2[i3].find(e5);
          try {
            for (var s2 = b(o2[i3]), u4 = s2.next(); !u4.done; u4 = s2.next())
              if (u4.value.key === e5)
                return true;
          } catch (e6) {
            t5 = { error: e6 };
          } finally {
            try {
              u4 && !u4.done && (n4 = s2.return) && n4.call(s2);
            } finally {
              if (t5)
                throw t5.error;
            }
          }
          return false;
        }, this[Symbol.iterator] = function () {
          return function () {
            var e5, t5, r5, n4, i3, s2;
            return function (e6, t6) {
              var r6, n5, i4, o3, s3 = {
                label: 0, sent: function () {
                  if (1 & i4[0])
                    throw i4[1];
                  return i4[1];
                }, trys: [], ops: []
              };
              return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function () {
                return this;
              }), o3;
              function a3(o4) {
                return function (a4) {
                  return function (o5) {
                    if (r6)
                      throw new TypeError("Generator is already executing.");
                    for (; s3;)
                      try {
                        if (r6 = 1, n5 && (i4 = 2 & o5[0] ? n5.return : o5[0] ? n5.throw || ((i4 = n5.return) && i4.call(n5), 0) : n5.next) && !(i4 = i4.call(n5, o5[1])).done)
                          return i4;
                        switch (n5 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                          case 0:
                          case 1:
                            i4 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n5 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i4 = (i4 = s3.trys).length > 0 && i4[i4.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i4[1]) {
                              s3.label = i4[1], i4 = o5;
                              break;
                            }
                            if (i4 && s3.label < i4[2]) {
                              s3.label = i4[2], s3.ops.push(o5);
                              break;
                            }
                            i4[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t6.call(e6, s3);
                      } catch (e7) {
                        o5 = [6, e7], n5 = 0;
                      } finally {
                        r6 = i4 = 0;
                      }
                    if (5 & o5[0])
                      throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a4]);
                };
              }
            }(this, function (u4) {
              switch (u4.label) {
                case 0:
                  e5 = 0, u4.label = 1;
                case 1:
                  if (!(e5 < a2))
                    return [3, 10];
                  for (; e5 < a2 && !o2[e5];)
                    ++e5;
                  if (e5 >= a2)
                    return [3, 10];
                  u4.label = 2;
                case 2:
                  u4.trys.push([2, 7, 8, 9]), i3 = void 0, t5 = b(o2[e5]), r5 = t5.next(), u4.label = 3;
                case 3:
                  return r5.done ? [3, 6] : [4, r5.value];
                case 4:
                  u4.sent(), u4.label = 5;
                case 5:
                  return r5 = t5.next(), [3, 3];
                case 6:
                  return [3, 9];
                case 7:
                  return n4 = u4.sent(), i3 = { error: n4 }, [3, 9];
                case 8:
                  try {
                    r5 && !r5.done && (s2 = t5.return) && s2.call(t5);
                  } finally {
                    if (i3)
                      throw i3.error;
                  }
                  return [7];
                case 9:
                  return ++e5, [3, 1];
                case 10:
                  return [2];
              }
            });
          }();
        }, e4.forEach(function (e5) {
          var t5 = e5.key, r5 = e5.value;
          return n3.setElement(t5, r5);
        }), Object.freeze(this);
      }
      m2.initSize = 16, m2.maxSize = 1 << 30, m2.sigma = 0.75, m2.treeifyThreshold = 8, m2.untreeifyThreshold = 6, m2.minTreeifySize = 64, Object.freeze(m2);
    }, 9593: function (e3, t3, r3) {
      const n3 = r3(4411), i = Symbol("max"), o = Symbol("length"), s = Symbol("lengthCalculator"), a = Symbol("allowStale"), u2 = Symbol("maxAge"), l2 = Symbol("dispose"), c = Symbol("noDisposeOnSet"), h2 = Symbol("lruList"), f2 = Symbol("cache"), p2 = Symbol("updateAgeOnGet"), d = () => 1, y2 = (e4, t4, r4) => {
        const n4 = e4[f2].get(t4);
        if (n4) {
          const t5 = n4.value;
          if (g(e4, t5)) {
            if (m2(e4, n4), !e4[a])
              return;
          } else
            r4 && (e4[p2] && (n4.value.now = Date.now()), e4[h2].unshiftNode(n4));
          return t5.value;
        }
      }, g = (e4, t4) => {
        if (!t4 || !t4.maxAge && !e4[u2])
          return false;
        const r4 = Date.now() - t4.now;
        return t4.maxAge ? r4 > t4.maxAge : e4[u2] && r4 > e4[u2];
      }, b = (e4) => {
        if (e4[o] > e4[i])
          for (let t4 = e4[h2].tail; e4[o] > e4[i] && null !== t4;) {
            const r4 = t4.prev;
            m2(e4, t4), t4 = r4;
          }
      }, m2 = (e4, t4) => {
        if (t4) {
          const r4 = t4.value;
          e4[l2] && e4[l2](r4.key, r4.value), e4[o] -= r4.length, e4[f2].delete(r4.key), e4[h2].removeNode(t4);
        }
      };
      class v2 {
        constructor(e4, t4, r4, n4, i2) {
          this.key = e4, this.value = t4, this.length = r4, this.now = n4, this.maxAge = i2 || 0;
        }
      }
      const w2 = (e4, t4, r4, n4) => {
        let i2 = r4.value;
        g(e4, i2) && (m2(e4, r4), e4[a] || (i2 = void 0)), i2 && t4.call(n4, i2.value, i2.key, e4);
      };
      e3.exports = class {
        constructor(e4) {
          if ("number" == typeof e4 && (e4 = { max: e4 }), e4 || (e4 = {}), e4.max && ("number" != typeof e4.max || e4.max < 0))
            throw new TypeError("max must be a non-negative number");
          this[i] = e4.max || 1 / 0;
          const t4 = e4.length || d;
          if (this[s] = "function" != typeof t4 ? d : t4, this[a] = e4.stale || false, e4.maxAge && "number" != typeof e4.maxAge)
            throw new TypeError("maxAge must be a number");
          this[u2] = e4.maxAge || 0, this[l2] = e4.dispose, this[c] = e4.noDisposeOnSet || false, this[p2] = e4.updateAgeOnGet || false, this.reset();
        }
        set max(e4) {
          if ("number" != typeof e4 || e4 < 0)
            throw new TypeError("max must be a non-negative number");
          this[i] = e4 || 1 / 0, b(this);
        }
        get max() {
          return this[i];
        }
        set allowStale(e4) {
          this[a] = !!e4;
        }
        get allowStale() {
          return this[a];
        }
        set maxAge(e4) {
          if ("number" != typeof e4)
            throw new TypeError("maxAge must be a non-negative number");
          this[u2] = e4, b(this);
        }
        get maxAge() {
          return this[u2];
        }
        set lengthCalculator(e4) {
          "function" != typeof e4 && (e4 = d), e4 !== this[s] && (this[s] = e4, this[o] = 0, this[h2].forEach((e5) => {
            e5.length = this[s](e5.value, e5.key), this[o] += e5.length;
          })), b(this);
        }
        get lengthCalculator() {
          return this[s];
        }
        get length() {
          return this[o];
        }
        get itemCount() {
          return this[h2].length;
        }
        rforEach(e4, t4) {
          t4 = t4 || this;
          for (let r4 = this[h2].tail; null !== r4;) {
            const n4 = r4.prev;
            w2(this, e4, r4, t4), r4 = n4;
          }
        }
        forEach(e4, t4) {
          t4 = t4 || this;
          for (let r4 = this[h2].head; null !== r4;) {
            const n4 = r4.next;
            w2(this, e4, r4, t4), r4 = n4;
          }
        }
        keys() {
          return this[h2].toArray().map((e4) => e4.key);
        }
        values() {
          return this[h2].toArray().map((e4) => e4.value);
        }
        reset() {
          this[l2] && this[h2] && this[h2].length && this[h2].forEach((e4) => this[l2](e4.key, e4.value)), this[f2] = /* @__PURE__ */ new Map(), this[h2] = new n3(), this[o] = 0;
        }
        dump() {
          return this[h2].map((e4) => !g(this, e4) && { k: e4.key, v: e4.value, e: e4.now + (e4.maxAge || 0) }).toArray().filter((e4) => e4);
        }
        dumpLru() {
          return this[h2];
        }
        set(e4, t4, r4) {
          if ((r4 = r4 || this[u2]) && "number" != typeof r4)
            throw new TypeError("maxAge must be a number");
          const n4 = r4 ? Date.now() : 0, a2 = this[s](t4, e4);
          if (this[f2].has(e4)) {
            if (a2 > this[i])
              return m2(this, this[f2].get(e4)), false;
            const s2 = this[f2].get(e4).value;
            return this[l2] && (this[c] || this[l2](e4, s2.value)), s2.now = n4, s2.maxAge = r4, s2.value = t4, this[o] += a2 - s2.length, s2.length = a2, this.get(e4), b(this), true;
          }
          const p3 = new v2(e4, t4, a2, n4, r4);
          return p3.length > this[i] ? (this[l2] && this[l2](e4, t4), false) : (this[o] += p3.length, this[h2].unshift(p3), this[f2].set(e4, this[h2].head), b(this), true);
        }
        has(e4) {
          if (!this[f2].has(e4))
            return false;
          const t4 = this[f2].get(e4).value;
          return !g(this, t4);
        }
        get(e4) {
          return y2(this, e4, true);
        }
        peek(e4) {
          return y2(this, e4, false);
        }
        pop() {
          const e4 = this[h2].tail;
          return e4 ? (m2(this, e4), e4.value) : null;
        }
        del(e4) {
          m2(this, this[f2].get(e4));
        }
        load(e4) {
          this.reset();
          const t4 = Date.now();
          for (let r4 = e4.length - 1; r4 >= 0; r4--) {
            const n4 = e4[r4], i2 = n4.e || 0;
            if (0 === i2)
              this.set(n4.k, n4.v);
            else {
              const e5 = i2 - t4;
              e5 > 0 && this.set(n4.k, n4.v, e5);
            }
          }
        }
        prune() {
          this[f2].forEach((e4, t4) => y2(this, t4, false));
        }
      };
    }, 9990: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer;
      const i = e3.exports;
      i.types = { 0: "reserved", 1: "connect", 2: "connack", 3: "publish", 4: "puback", 5: "pubrec", 6: "pubrel", 7: "pubcomp", 8: "subscribe", 9: "suback", 10: "unsubscribe", 11: "unsuback", 12: "pingreq", 13: "pingresp", 14: "disconnect", 15: "auth" }, i.codes = {};
      for (const e4 in i.types) {
        const t4 = i.types[e4];
        i.codes[t4] = e4;
      }
      i.CMD_SHIFT = 4, i.CMD_MASK = 240, i.DUP_MASK = 8, i.QOS_MASK = 3, i.QOS_SHIFT = 1, i.RETAIN_MASK = 1, i.VARBYTEINT_MASK = 127, i.VARBYTEINT_FIN_MASK = 128, i.VARBYTEINT_MAX = 268435455, i.SESSIONPRESENT_MASK = 1, i.SESSIONPRESENT_HEADER = n3.from([i.SESSIONPRESENT_MASK]), i.CONNACK_HEADER = n3.from([i.codes.connack << i.CMD_SHIFT]), i.USERNAME_MASK = 128, i.PASSWORD_MASK = 64, i.WILL_RETAIN_MASK = 32, i.WILL_QOS_MASK = 24, i.WILL_QOS_SHIFT = 3, i.WILL_FLAG_MASK = 4, i.CLEAN_SESSION_MASK = 2, i.CONNECT_HEADER = n3.from([i.codes.connect << i.CMD_SHIFT]), i.properties = { sessionExpiryInterval: 17, willDelayInterval: 24, receiveMaximum: 33, maximumPacketSize: 39, topicAliasMaximum: 34, requestResponseInformation: 25, requestProblemInformation: 23, userProperties: 38, authenticationMethod: 21, authenticationData: 22, payloadFormatIndicator: 1, messageExpiryInterval: 2, contentType: 3, responseTopic: 8, correlationData: 9, maximumQoS: 36, retainAvailable: 37, assignedClientIdentifier: 18, reasonString: 31, wildcardSubscriptionAvailable: 40, subscriptionIdentifiersAvailable: 41, sharedSubscriptionAvailable: 42, serverKeepAlive: 19, responseInformation: 26, serverReference: 28, topicAlias: 35, subscriptionIdentifier: 11 }, i.propertiesCodes = {};
      for (const e4 in i.properties) {
        const t4 = i.properties[e4];
        i.propertiesCodes[t4] = e4;
      }
      function o(e4) {
        return [0, 1, 2].map((t4) => [0, 1].map((r4) => [0, 1].map((o2) => {
          const s = n3.alloc(1);
          return s.writeUInt8(i.codes[e4] << i.CMD_SHIFT | (r4 ? i.DUP_MASK : 0) | t4 << i.QOS_SHIFT | o2, 0, true), s;
        })));
      }
      i.propertiesTypes = { sessionExpiryInterval: "int32", willDelayInterval: "int32", receiveMaximum: "int16", maximumPacketSize: "int32", topicAliasMaximum: "int16", requestResponseInformation: "byte", requestProblemInformation: "byte", userProperties: "pair", authenticationMethod: "string", authenticationData: "binary", payloadFormatIndicator: "byte", messageExpiryInterval: "int32", contentType: "string", responseTopic: "string", correlationData: "binary", maximumQoS: "int8", retainAvailable: "byte", assignedClientIdentifier: "string", reasonString: "string", wildcardSubscriptionAvailable: "byte", subscriptionIdentifiersAvailable: "byte", sharedSubscriptionAvailable: "byte", serverKeepAlive: "int16", responseInformation: "string", serverReference: "string", topicAlias: "int16", subscriptionIdentifier: "var" }, i.PUBLISH_HEADER = o("publish"), i.SUBSCRIBE_HEADER = o("subscribe"), i.SUBSCRIBE_OPTIONS_QOS_MASK = 3, i.SUBSCRIBE_OPTIONS_NL_MASK = 1, i.SUBSCRIBE_OPTIONS_NL_SHIFT = 2, i.SUBSCRIBE_OPTIONS_RAP_MASK = 1, i.SUBSCRIBE_OPTIONS_RAP_SHIFT = 3, i.SUBSCRIBE_OPTIONS_RH_MASK = 3, i.SUBSCRIBE_OPTIONS_RH_SHIFT = 4, i.SUBSCRIBE_OPTIONS_RH = [0, 16, 32], i.SUBSCRIBE_OPTIONS_NL = 4, i.SUBSCRIBE_OPTIONS_RAP = 8, i.SUBSCRIBE_OPTIONS_QOS = [0, 1, 2], i.UNSUBSCRIBE_HEADER = o("unsubscribe"), i.ACKS = { unsuback: o("unsuback"), puback: o("puback"), pubcomp: o("pubcomp"), pubrel: o("pubrel"), pubrec: o("pubrec") }, i.SUBACK_HEADER = n3.from([i.codes.suback << i.CMD_SHIFT]), i.VERSION3 = n3.from([3]), i.VERSION4 = n3.from([4]), i.VERSION5 = n3.from([5]), i.VERSION131 = n3.from([131]), i.VERSION132 = n3.from([132]), i.QOS = [0, 1, 2].map((e4) => n3.from([e4])), i.EMPTY = { pingreq: n3.from([i.codes.pingreq << 4, 0]), pingresp: n3.from([i.codes.pingresp << 4, 0]), disconnect: n3.from([i.codes.disconnect << 4, 0]) };
    }, 7721: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer;
      const i = r3(9371), o = r3(7187);
      class s extends o {
        constructor() {
          super(), this._array = new Array(20), this._i = 0;
        }
        write(e4) {
          return this._array[this._i++] = e4, true;
        }
        concat() {
          let e4 = 0;
          const t4 = new Array(this._array.length), r4 = this._array;
          let i2, o2 = 0;
          for (i2 = 0; i2 < r4.length && void 0 !== r4[i2]; i2++)
            "string" != typeof r4[i2] ? t4[i2] = r4[i2].length : t4[i2] = n3.byteLength(r4[i2]), e4 += t4[i2];
          const s2 = n3.allocUnsafe(e4);
          for (i2 = 0; i2 < r4.length && void 0 !== r4[i2]; i2++)
            "string" != typeof r4[i2] ? (r4[i2].copy(s2, o2), o2 += t4[i2]) : (s2.write(r4[i2], o2), o2 += t4[i2]);
          return s2;
        }
      }
      e3.exports = function (e4, t4) {
        const r4 = new s();
        return i(e4, r4, t4), r4.concat();
      };
    }, 1772: function (e3, t3, r3) {
      t3.parser = r3(5322).parser, t3.generate = r3(7721), t3.writeToStream = r3(9371);
    }, 3903: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer;
      const i = {}, o = n3.isBuffer(n3.from([1, 2]).subarray(0, 1));
      function s(e4) {
        const t4 = n3.allocUnsafe(2);
        return t4.writeUInt8(e4 >> 8, 0), t4.writeUInt8(255 & e4, 1), t4;
      }
      e3.exports = {
        cache: i, generateCache: function () {
          for (let e4 = 0; e4 < 65536; e4++)
            i[e4] = s(e4);
        }, generateNumber: s, genBufVariableByteInt: function (e4) {
          let t4 = 0, r4 = 0;
          const i2 = n3.allocUnsafe(4);
          do {
            t4 = e4 % 128 | 0, (e4 = e4 / 128 | 0) > 0 && (t4 |= 128), i2.writeUInt8(t4, r4++);
          } while (e4 > 0 && r4 < 4);
          return e4 > 0 && (r4 = 0), o ? i2.subarray(0, r4) : i2.slice(0, r4);
        }, generate4ByteBuffer: function (e4) {
          const t4 = n3.allocUnsafe(4);
          return t4.writeUInt32BE(e4, 0), t4;
        }
      };
    }, 9695: function (e3) {
      e3.exports = class {
        constructor() {
          this.cmd = null, this.retain = false, this.qos = 0, this.dup = false, this.length = -1, this.topic = null, this.payload = null;
        }
      };
    }, 5322: function (e3, t3, r3) {
      const n3 = r3(22), i = r3(7187), o = r3(9695), s = r3(9990), a = r3(1227)("mqtt-packet:parser");
      class u2 extends i {
        constructor() {
          super(), this.parser = this.constructor.parser;
        }
        static parser(e4) {
          return this instanceof u2 ? (this.settings = e4 || {}, this._states = ["_parseHeader", "_parseLength", "_parsePayload", "_newPacket"], this._resetState(), this) : new u2().parser(e4);
        }
        _resetState() {
          a("_resetState: resetting packet, error, _list, and _stateCounter"), this.packet = new o(), this.error = null, this._list = n3(), this._stateCounter = 0;
        }
        parse(e4) {
          for (this.error && this._resetState(), this._list.append(e4), a("parse: current state: %s", this._states[this._stateCounter]); (-1 !== this.packet.length || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error;)
            this._stateCounter++, a("parse: state complete. _stateCounter is now: %d", this._stateCounter), a("parse: packet.length: %d, buffer list length: %d", this.packet.length, this._list.length), this._stateCounter >= this._states.length && (this._stateCounter = 0);
          return a("parse: exited while loop. packet: %d, buffer list length: %d", this.packet.length, this._list.length), this._list.length;
        }
        _parseHeader() {
          const e4 = this._list.readUInt8(0);
          return this.packet.cmd = s.types[e4 >> s.CMD_SHIFT], this.packet.retain = 0 != (e4 & s.RETAIN_MASK), this.packet.qos = e4 >> s.QOS_SHIFT & s.QOS_MASK, this.packet.dup = 0 != (e4 & s.DUP_MASK), a("_parseHeader: packet: %o", this.packet), this._list.consume(1), true;
        }
        _parseLength() {
          const e4 = this._parseVarByteNum(true);
          return e4 && (this.packet.length = e4.value, this._list.consume(e4.bytes)), a("_parseLength %d", e4.value), !!e4;
        }
        _parsePayload() {
          a("_parsePayload: payload %O", this._list);
          let e4 = false;
          if (0 === this.packet.length || this._list.length >= this.packet.length) {
            switch (this._pos = 0, this.packet.cmd) {
              case "connect":
                this._parseConnect();
                break;
              case "connack":
                this._parseConnack();
                break;
              case "publish":
                this._parsePublish();
                break;
              case "puback":
              case "pubrec":
              case "pubrel":
              case "pubcomp":
                this._parseConfirmation();
                break;
              case "subscribe":
                this._parseSubscribe();
                break;
              case "suback":
                this._parseSuback();
                break;
              case "unsubscribe":
                this._parseUnsubscribe();
                break;
              case "unsuback":
                this._parseUnsuback();
                break;
              case "pingreq":
              case "pingresp":
                break;
              case "disconnect":
                this._parseDisconnect();
                break;
              case "auth":
                this._parseAuth();
                break;
              default:
                this._emitError(new Error("Not supported"));
            }
            e4 = true;
          }
          return a("_parsePayload complete result: %s", e4), e4;
        }
        _parseConnect() {
          let e4, t4, r4, n4;
          a("_parseConnect");
          const i2 = {}, o2 = this.packet, u3 = this._parseString();
          if (null === u3)
            return this._emitError(new Error("Cannot parse protocolId"));
          if ("MQTT" !== u3 && "MQIsdp" !== u3)
            return this._emitError(new Error("Invalid protocolId"));
          if (o2.protocolId = u3, this._pos >= this._list.length)
            return this._emitError(new Error("Packet too short"));
          if (o2.protocolVersion = this._list.readUInt8(this._pos), o2.protocolVersion >= 128 && (o2.bridgeMode = true, o2.protocolVersion = o2.protocolVersion - 128), 3 !== o2.protocolVersion && 4 !== o2.protocolVersion && 5 !== o2.protocolVersion)
            return this._emitError(new Error("Invalid protocol version"));
          if (this._pos++, this._pos >= this._list.length)
            return this._emitError(new Error("Packet too short"));
          if (i2.username = this._list.readUInt8(this._pos) & s.USERNAME_MASK, i2.password = this._list.readUInt8(this._pos) & s.PASSWORD_MASK, i2.will = this._list.readUInt8(this._pos) & s.WILL_FLAG_MASK, i2.will && (o2.will = {}, o2.will.retain = 0 != (this._list.readUInt8(this._pos) & s.WILL_RETAIN_MASK), o2.will.qos = (this._list.readUInt8(this._pos) & s.WILL_QOS_MASK) >> s.WILL_QOS_SHIFT), o2.clean = 0 != (this._list.readUInt8(this._pos) & s.CLEAN_SESSION_MASK), this._pos++, o2.keepalive = this._parseNum(), -1 === o2.keepalive)
            return this._emitError(new Error("Packet too short"));
          if (5 === o2.protocolVersion) {
            const e5 = this._parseProperties();
            Object.getOwnPropertyNames(e5).length && (o2.properties = e5);
          }
          const l2 = this._parseString();
          if (null === l2)
            return this._emitError(new Error("Packet too short"));
          if (o2.clientId = l2, a("_parseConnect: packet.clientId: %s", o2.clientId), i2.will) {
            if (5 === o2.protocolVersion) {
              const e5 = this._parseProperties();
              Object.getOwnPropertyNames(e5).length && (o2.will.properties = e5);
            }
            if (e4 = this._parseString(), null === e4)
              return this._emitError(new Error("Cannot parse will topic"));
            if (o2.will.topic = e4, a("_parseConnect: packet.will.topic: %s", o2.will.topic), t4 = this._parseBuffer(), null === t4)
              return this._emitError(new Error("Cannot parse will payload"));
            o2.will.payload = t4, a("_parseConnect: packet.will.paylaod: %s", o2.will.payload);
          }
          if (i2.username) {
            if (n4 = this._parseString(), null === n4)
              return this._emitError(new Error("Cannot parse username"));
            o2.username = n4, a("_parseConnect: packet.username: %s", o2.username);
          }
          if (i2.password) {
            if (r4 = this._parseBuffer(), null === r4)
              return this._emitError(new Error("Cannot parse password"));
            o2.password = r4;
          }
          return this.settings = o2, a("_parseConnect: complete"), o2;
        }
        _parseConnack() {
          a("_parseConnack");
          const e4 = this.packet;
          if (this._list.length < 1)
            return null;
          if (e4.sessionPresent = !!(this._list.readUInt8(this._pos++) & s.SESSIONPRESENT_MASK), 5 === this.settings.protocolVersion)
            this._list.length >= 2 ? e4.reasonCode = this._list.readUInt8(this._pos++) : e4.reasonCode = 0;
          else {
            if (this._list.length < 2)
              return null;
            e4.returnCode = this._list.readUInt8(this._pos++);
          }
          if (-1 === e4.returnCode || -1 === e4.reasonCode)
            return this._emitError(new Error("Cannot parse return code"));
          if (5 === this.settings.protocolVersion) {
            const t4 = this._parseProperties();
            Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
          }
          a("_parseConnack: complete");
        }
        _parsePublish() {
          a("_parsePublish");
          const e4 = this.packet;
          if (e4.topic = this._parseString(), null === e4.topic)
            return this._emitError(new Error("Cannot parse topic"));
          if (!(e4.qos > 0) || this._parseMessageId()) {
            if (5 === this.settings.protocolVersion) {
              const t4 = this._parseProperties();
              Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
            }
            e4.payload = this._list.slice(this._pos, e4.length), a("_parsePublish: payload from buffer list: %o", e4.payload);
          }
        }
        _parseSubscribe() {
          a("_parseSubscribe");
          const e4 = this.packet;
          let t4, r4, n4, i2, o2, u3, l2;
          if (1 !== e4.qos)
            return this._emitError(new Error("Wrong subscribe header"));
          if (e4.subscriptions = [], this._parseMessageId()) {
            if (5 === this.settings.protocolVersion) {
              const t5 = this._parseProperties();
              Object.getOwnPropertyNames(t5).length && (e4.properties = t5);
            }
            for (; this._pos < e4.length;) {
              if (t4 = this._parseString(), null === t4)
                return this._emitError(new Error("Cannot parse topic"));
              if (this._pos >= e4.length)
                return this._emitError(new Error("Malformed Subscribe Payload"));
              r4 = this._parseByte(), n4 = r4 & s.SUBSCRIBE_OPTIONS_QOS_MASK, u3 = 0 != (r4 >> s.SUBSCRIBE_OPTIONS_NL_SHIFT & s.SUBSCRIBE_OPTIONS_NL_MASK), o2 = 0 != (r4 >> s.SUBSCRIBE_OPTIONS_RAP_SHIFT & s.SUBSCRIBE_OPTIONS_RAP_MASK), i2 = r4 >> s.SUBSCRIBE_OPTIONS_RH_SHIFT & s.SUBSCRIBE_OPTIONS_RH_MASK, l2 = { topic: t4, qos: n4 }, 5 === this.settings.protocolVersion ? (l2.nl = u3, l2.rap = o2, l2.rh = i2) : this.settings.bridgeMode && (l2.rh = 0, l2.rap = true, l2.nl = true), a("_parseSubscribe: push subscription `%s` to subscription", l2), e4.subscriptions.push(l2);
            }
          }
        }
        _parseSuback() {
          a("_parseSuback");
          const e4 = this.packet;
          if (this.packet.granted = [], this._parseMessageId()) {
            if (5 === this.settings.protocolVersion) {
              const t4 = this._parseProperties();
              Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
            }
            for (; this._pos < this.packet.length;)
              this.packet.granted.push(this._list.readUInt8(this._pos++));
          }
        }
        _parseUnsubscribe() {
          a("_parseUnsubscribe");
          const e4 = this.packet;
          if (e4.unsubscriptions = [], this._parseMessageId()) {
            if (5 === this.settings.protocolVersion) {
              const t4 = this._parseProperties();
              Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
            }
            for (; this._pos < e4.length;) {
              const t4 = this._parseString();
              if (null === t4)
                return this._emitError(new Error("Cannot parse topic"));
              a("_parseUnsubscribe: push topic `%s` to unsubscriptions", t4), e4.unsubscriptions.push(t4);
            }
          }
        }
        _parseUnsuback() {
          a("_parseUnsuback");
          const e4 = this.packet;
          if (!this._parseMessageId())
            return this._emitError(new Error("Cannot parse messageId"));
          if (5 === this.settings.protocolVersion) {
            const t4 = this._parseProperties();
            for (Object.getOwnPropertyNames(t4).length && (e4.properties = t4), e4.granted = []; this._pos < this.packet.length;)
              this.packet.granted.push(this._list.readUInt8(this._pos++));
          }
        }
        _parseConfirmation() {
          a("_parseConfirmation: packet.cmd: `%s`", this.packet.cmd);
          const e4 = this.packet;
          if (this._parseMessageId(), 5 === this.settings.protocolVersion && (e4.length > 2 ? (e4.reasonCode = this._parseByte(), a("_parseConfirmation: packet.reasonCode `%d`", e4.reasonCode)) : e4.reasonCode = 0, e4.length > 3)) {
            const t4 = this._parseProperties();
            Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
          }
          return true;
        }
        _parseDisconnect() {
          const e4 = this.packet;
          if (a("_parseDisconnect"), 5 === this.settings.protocolVersion) {
            this._list.length > 0 ? e4.reasonCode = this._parseByte() : e4.reasonCode = 0;
            const t4 = this._parseProperties();
            Object.getOwnPropertyNames(t4).length && (e4.properties = t4);
          }
          return a("_parseDisconnect result: true"), true;
        }
        _parseAuth() {
          a("_parseAuth");
          const e4 = this.packet;
          if (5 !== this.settings.protocolVersion)
            return this._emitError(new Error("Not supported auth packet for this version MQTT"));
          e4.reasonCode = this._parseByte();
          const t4 = this._parseProperties();
          return Object.getOwnPropertyNames(t4).length && (e4.properties = t4), a("_parseAuth: result: true"), true;
        }
        _parseMessageId() {
          const e4 = this.packet;
          return e4.messageId = this._parseNum(), null === e4.messageId ? (this._emitError(new Error("Cannot parse messageId")), false) : (a("_parseMessageId: packet.messageId %d", e4.messageId), true);
        }
        _parseString(e4) {
          const t4 = this._parseNum(), r4 = t4 + this._pos;
          if (-1 === t4 || r4 > this._list.length || r4 > this.packet.length)
            return null;
          const n4 = this._list.toString("utf8", this._pos, r4);
          return this._pos += t4, a("_parseString: result: %s", n4), n4;
        }
        _parseStringPair() {
          return a("_parseStringPair"), { name: this._parseString(), value: this._parseString() };
        }
        _parseBuffer() {
          const e4 = this._parseNum(), t4 = e4 + this._pos;
          if (-1 === e4 || t4 > this._list.length || t4 > this.packet.length)
            return null;
          const r4 = this._list.slice(this._pos, t4);
          return this._pos += e4, a("_parseBuffer: result: %o", r4), r4;
        }
        _parseNum() {
          if (this._list.length - this._pos < 2)
            return -1;
          const e4 = this._list.readUInt16BE(this._pos);
          return this._pos += 2, a("_parseNum: result: %s", e4), e4;
        }
        _parse4ByteNum() {
          if (this._list.length - this._pos < 4)
            return -1;
          const e4 = this._list.readUInt32BE(this._pos);
          return this._pos += 4, a("_parse4ByteNum: result: %s", e4), e4;
        }
        _parseVarByteNum(e4) {
          a("_parseVarByteNum");
          let t4, r4 = 0, n4 = 1, i2 = 0, o2 = false;
          const u3 = this._pos ? this._pos : 0;
          for (; r4 < 4 && u3 + r4 < this._list.length;) {
            if (t4 = this._list.readUInt8(u3 + r4++), i2 += n4 * (t4 & s.VARBYTEINT_MASK), n4 *= 128, 0 == (t4 & s.VARBYTEINT_FIN_MASK)) {
              o2 = true;
              break;
            }
            if (this._list.length <= r4)
              break;
          }
          return !o2 && 4 === r4 && this._list.length >= r4 && this._emitError(new Error("Invalid variable byte integer")), u3 && (this._pos += r4), o2 = !!o2 && (e4 ? { bytes: r4, value: i2 } : i2), a("_parseVarByteNum: result: %o", o2), o2;
        }
        _parseByte() {
          let e4;
          return this._pos < this._list.length && (e4 = this._list.readUInt8(this._pos), this._pos++), a("_parseByte: result: %o", e4), e4;
        }
        _parseByType(e4) {
          switch (a("_parseByType: type: %s", e4), e4) {
            case "byte":
              return 0 !== this._parseByte();
            case "int8":
              return this._parseByte();
            case "int16":
              return this._parseNum();
            case "int32":
              return this._parse4ByteNum();
            case "var":
              return this._parseVarByteNum();
            case "string":
              return this._parseString();
            case "pair":
              return this._parseStringPair();
            case "binary":
              return this._parseBuffer();
          }
        }
        _parseProperties() {
          a("_parseProperties");
          const e4 = this._parseVarByteNum(), t4 = this._pos + e4, r4 = {};
          for (; this._pos < t4;) {
            const e5 = this._parseByte();
            if (!e5)
              return this._emitError(new Error("Cannot parse property code type")), false;
            const t5 = s.propertiesCodes[e5];
            if (!t5)
              return this._emitError(new Error("Unknown property")), false;
            if ("userProperties" !== t5)
              r4[t5] ? (Array.isArray(r4[t5]) || (r4[t5] = [r4[t5]]), r4[t5].push(this._parseByType(s.propertiesTypes[t5]))) : r4[t5] = this._parseByType(s.propertiesTypes[t5]);
            else {
              r4[t5] || (r4[t5] = /* @__PURE__ */ Object.create(null));
              const e6 = this._parseByType(s.propertiesTypes[t5]);
              if (r4[t5][e6.name])
                if (Array.isArray(r4[t5][e6.name]))
                  r4[t5][e6.name].push(e6.value);
                else {
                  const n4 = r4[t5][e6.name];
                  r4[t5][e6.name] = [n4], r4[t5][e6.name].push(e6.value);
                }
              else
                r4[t5][e6.name] = e6.value;
            }
          }
          return r4;
        }
        _newPacket() {
          return a("_newPacket"), this.packet && (this._list.consume(this.packet.length), a("_newPacket: parser emit packet: packet.cmd: %s, packet.payload: %s, packet.length: %d", this.packet.cmd, this.packet.payload, this.packet.length), this.emit("packet", this.packet)), a("_newPacket: new packet"), this.packet = new o(), this._pos = 0, true;
        }
        _emitError(e4) {
          a("_emitError"), this.error = e4, this.emit("error", e4);
        }
      }
      e3.exports = u2;
    }, 9371: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer;
      const i = r3(9990), o = n3.allocUnsafe(0), s = n3.from([0]), a = r3(3903), u2 = r3(8212).nextTick, l2 = r3(1227)("mqtt-packet:writeToStream"), c = a.cache, h2 = a.generateNumber, f2 = a.generateCache, p2 = a.genBufVariableByteInt, d = a.generate4ByteBuffer;
      let y2 = k2, g = true;
      function b(e4, t4, r4) {
        switch (l2("generate called"), t4.cork && (t4.cork(), u2(m2, t4)), g && (g = false, f2()), l2("generate: packet.cmd: %s", e4.cmd), e4.cmd) {
          case "connect":
            return function (e5, t5, r5) {
              const o2 = e5 || {}, s2 = o2.protocolId || "MQTT";
              let a2 = o2.protocolVersion || 4;
              const u3 = o2.will;
              let l3 = o2.clean;
              const c2 = o2.keepalive || 0, h3 = o2.clientId || "", f3 = o2.username, p3 = o2.password, d2 = o2.properties;
              void 0 === l3 && (l3 = true);
              let g2 = 0;
              if (!s2 || "string" != typeof s2 && !n3.isBuffer(s2))
                return t5.emit("error", new Error("Invalid protocolId")), false;
              if (g2 += s2.length + 2, 3 !== a2 && 4 !== a2 && 5 !== a2)
                return t5.emit("error", new Error("Invalid protocol version")), false;
              if (g2 += 1, ("string" == typeof h3 || n3.isBuffer(h3)) && (h3 || a2 >= 4) && (h3 || l3))
                g2 += n3.byteLength(h3) + 2;
              else {
                if (a2 < 4)
                  return t5.emit("error", new Error("clientId must be supplied before 3.1.1")), false;
                if (1 * l3 == 0)
                  return t5.emit("error", new Error("clientId must be given if cleanSession set to 0")), false;
              }
              if ("number" != typeof c2 || c2 < 0 || c2 > 65535 || c2 % 1 != 0)
                return t5.emit("error", new Error("Invalid keepalive")), false;
              if (g2 += 2, g2 += 1, 5 === a2) {
                var b2 = T2(t5, d2);
                if (!b2)
                  return false;
                g2 += b2.length;
              }
              if (u3) {
                if ("object" != typeof u3)
                  return t5.emit("error", new Error("Invalid will")), false;
                if (!u3.topic || "string" != typeof u3.topic)
                  return t5.emit("error", new Error("Invalid will topic")), false;
                if (g2 += n3.byteLength(u3.topic) + 2, g2 += 2, u3.payload) {
                  if (!(u3.payload.length >= 0))
                    return t5.emit("error", new Error("Invalid will payload")), false;
                  "string" == typeof u3.payload ? g2 += n3.byteLength(u3.payload) : g2 += u3.payload.length;
                }
                var m3 = {};
                if (5 === a2) {
                  if (!(m3 = T2(t5, u3.properties)))
                    return false;
                  g2 += m3.length;
                }
              }
              let v3 = false;
              if (null != f3) {
                if (!R2(f3))
                  return t5.emit("error", new Error("Invalid username")), false;
                v3 = true, g2 += n3.byteLength(f3) + 2;
              }
              if (null != p3) {
                if (!v3)
                  return t5.emit("error", new Error("Username is required to use password")), false;
                if (!R2(p3))
                  return t5.emit("error", new Error("Invalid password")), false;
                g2 += B2(p3) + 2;
              }
              t5.write(i.CONNECT_HEADER), w2(t5, g2), C2(t5, s2), o2.bridgeMode && (a2 += 128), t5.write(131 === a2 ? i.VERSION131 : 132 === a2 ? i.VERSION132 : 4 === a2 ? i.VERSION4 : 5 === a2 ? i.VERSION5 : i.VERSION3);
              let E3 = 0;
              return E3 |= null != f3 ? i.USERNAME_MASK : 0, E3 |= null != p3 ? i.PASSWORD_MASK : 0, E3 |= u3 && u3.retain ? i.WILL_RETAIN_MASK : 0, E3 |= u3 && u3.qos ? u3.qos << i.WILL_QOS_SHIFT : 0, E3 |= u3 ? i.WILL_FLAG_MASK : 0, E3 |= l3 ? i.CLEAN_SESSION_MASK : 0, t5.write(n3.from([E3])), y2(t5, c2), 5 === a2 && b2.write(), C2(t5, h3), u3 && (5 === a2 && m3.write(), _2(t5, u3.topic), C2(t5, u3.payload)), null != f3 && C2(t5, f3), null != p3 && C2(t5, p3), true;
            }(e4, t4);
          case "connack":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, a2 = e5 || {}, u3 = 5 === o2 ? a2.reasonCode : a2.returnCode, l3 = a2.properties;
              let c2 = 2;
              if ("number" != typeof u3)
                return t5.emit("error", new Error("Invalid return code")), false;
              let h3 = null;
              if (5 === o2) {
                if (h3 = T2(t5, l3), !h3)
                  return false;
                c2 += h3.length;
              }
              return t5.write(i.CONNACK_HEADER), w2(t5, c2), t5.write(a2.sessionPresent ? i.SESSIONPRESENT_HEADER : s), t5.write(n3.from([u3])), null != h3 && h3.write(), true;
            }(e4, t4, r4);
          case "publish":
            return function (e5, t5, r5) {
              l2("publish: packet: %o", e5);
              const s2 = r5 ? r5.protocolVersion : 4, a2 = e5 || {}, u3 = a2.qos || 0, c2 = a2.retain ? i.RETAIN_MASK : 0, h3 = a2.topic, f3 = a2.payload || o, p3 = a2.messageId, d2 = a2.properties;
              let g2 = 0;
              if ("string" == typeof h3)
                g2 += n3.byteLength(h3) + 2;
              else {
                if (!n3.isBuffer(h3))
                  return t5.emit("error", new Error("Invalid topic")), false;
                g2 += h3.length + 2;
              }
              if (n3.isBuffer(f3) ? g2 += f3.length : g2 += n3.byteLength(f3), u3 && "number" != typeof p3)
                return t5.emit("error", new Error("Invalid messageId")), false;
              u3 && (g2 += 2);
              let b2 = null;
              if (5 === s2) {
                if (b2 = T2(t5, d2), !b2)
                  return false;
                g2 += b2.length;
              }
              return t5.write(i.PUBLISH_HEADER[u3][a2.dup ? 1 : 0][c2 ? 1 : 0]), w2(t5, g2), y2(t5, B2(h3)), t5.write(h3), u3 > 0 && y2(t5, p3), null != b2 && b2.write(), l2("publish: payload: %o", f3), t5.write(f3);
            }(e4, t4, r4);
          case "puback":
          case "pubrec":
          case "pubrel":
          case "pubcomp":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.cmd || "puback", u3 = s2.messageId, l3 = s2.dup && "pubrel" === a2 ? i.DUP_MASK : 0;
              let c2 = 0;
              const h3 = s2.reasonCode, f3 = s2.properties;
              let p3 = 5 === o2 ? 3 : 2;
              if ("pubrel" === a2 && (c2 = 1), "number" != typeof u3)
                return t5.emit("error", new Error("Invalid messageId")), false;
              let d2 = null;
              if (5 === o2 && "object" == typeof f3) {
                if (d2 = A2(t5, f3, r5, p3), !d2)
                  return false;
                p3 += d2.length;
              }
              return t5.write(i.ACKS[a2][c2][l3][0]), w2(t5, p3), y2(t5, u3), 5 === o2 && t5.write(n3.from([h3])), null !== d2 && d2.write(), true;
            }(e4, t4, r4);
          case "subscribe":
            return function (e5, t5, r5) {
              l2("subscribe: packet: ");
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.dup ? i.DUP_MASK : 0, u3 = s2.messageId, c2 = s2.subscriptions, h3 = s2.properties;
              let f3 = 0;
              if ("number" != typeof u3)
                return t5.emit("error", new Error("Invalid messageId")), false;
              f3 += 2;
              let p3 = null;
              if (5 === o2) {
                if (p3 = T2(t5, h3), !p3)
                  return false;
                f3 += p3.length;
              }
              if ("object" != typeof c2 || !c2.length)
                return t5.emit("error", new Error("Invalid subscriptions")), false;
              for (let e6 = 0; e6 < c2.length; e6 += 1) {
                const r6 = c2[e6].topic, i2 = c2[e6].qos;
                if ("string" != typeof r6)
                  return t5.emit("error", new Error("Invalid subscriptions - invalid topic")), false;
                if ("number" != typeof i2)
                  return t5.emit("error", new Error("Invalid subscriptions - invalid qos")), false;
                if (5 === o2) {
                  if ("boolean" != typeof (c2[e6].nl || false))
                    return t5.emit("error", new Error("Invalid subscriptions - invalid No Local")), false;
                  if ("boolean" != typeof (c2[e6].rap || false))
                    return t5.emit("error", new Error("Invalid subscriptions - invalid Retain as Published")), false;
                  const r7 = c2[e6].rh || 0;
                  if ("number" != typeof r7 || r7 > 2)
                    return t5.emit("error", new Error("Invalid subscriptions - invalid Retain Handling")), false;
                }
                f3 += n3.byteLength(r6) + 2 + 1;
              }
              l2("subscribe: writing to stream: %o", i.SUBSCRIBE_HEADER), t5.write(i.SUBSCRIBE_HEADER[1][a2 ? 1 : 0][0]), w2(t5, f3), y2(t5, u3), null !== p3 && p3.write();
              let d2 = true;
              for (const e6 of c2) {
                const r6 = e6.topic, s3 = e6.qos, a3 = +e6.nl, u4 = +e6.rap, l3 = e6.rh;
                let c3;
                _2(t5, r6), c3 = i.SUBSCRIBE_OPTIONS_QOS[s3], 5 === o2 && (c3 |= a3 ? i.SUBSCRIBE_OPTIONS_NL : 0, c3 |= u4 ? i.SUBSCRIBE_OPTIONS_RAP : 0, c3 |= l3 ? i.SUBSCRIBE_OPTIONS_RH[l3] : 0), d2 = t5.write(n3.from([c3]));
              }
              return d2;
            }(e4, t4, r4);
          case "suback":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.messageId, u3 = s2.granted, l3 = s2.properties;
              let c2 = 0;
              if ("number" != typeof a2)
                return t5.emit("error", new Error("Invalid messageId")), false;
              if (c2 += 2, "object" != typeof u3 || !u3.length)
                return t5.emit("error", new Error("Invalid qos vector")), false;
              for (let e6 = 0; e6 < u3.length; e6 += 1) {
                if ("number" != typeof u3[e6])
                  return t5.emit("error", new Error("Invalid qos vector")), false;
                c2 += 1;
              }
              let h3 = null;
              if (5 === o2) {
                if (h3 = A2(t5, l3, r5, c2), !h3)
                  return false;
                c2 += h3.length;
              }
              return t5.write(i.SUBACK_HEADER), w2(t5, c2), y2(t5, a2), null !== h3 && h3.write(), t5.write(n3.from(u3));
            }(e4, t4, r4);
          case "unsubscribe":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.messageId, u3 = s2.dup ? i.DUP_MASK : 0, l3 = s2.unsubscriptions, c2 = s2.properties;
              let h3 = 0;
              if ("number" != typeof a2)
                return t5.emit("error", new Error("Invalid messageId")), false;
              if (h3 += 2, "object" != typeof l3 || !l3.length)
                return t5.emit("error", new Error("Invalid unsubscriptions")), false;
              for (let e6 = 0; e6 < l3.length; e6 += 1) {
                if ("string" != typeof l3[e6])
                  return t5.emit("error", new Error("Invalid unsubscriptions")), false;
                h3 += n3.byteLength(l3[e6]) + 2;
              }
              let f3 = null;
              if (5 === o2) {
                if (f3 = T2(t5, c2), !f3)
                  return false;
                h3 += f3.length;
              }
              t5.write(i.UNSUBSCRIBE_HEADER[1][u3 ? 1 : 0][0]), w2(t5, h3), y2(t5, a2), null !== f3 && f3.write();
              let p3 = true;
              for (let e6 = 0; e6 < l3.length; e6++)
                p3 = _2(t5, l3[e6]);
              return p3;
            }(e4, t4, r4);
          case "unsuback":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.messageId, u3 = s2.dup ? i.DUP_MASK : 0, l3 = s2.granted, c2 = s2.properties, h3 = s2.cmd;
              let f3 = 2;
              if ("number" != typeof a2)
                return t5.emit("error", new Error("Invalid messageId")), false;
              if (5 === o2) {
                if ("object" != typeof l3 || !l3.length)
                  return t5.emit("error", new Error("Invalid qos vector")), false;
                for (let e6 = 0; e6 < l3.length; e6 += 1) {
                  if ("number" != typeof l3[e6])
                    return t5.emit("error", new Error("Invalid qos vector")), false;
                  f3 += 1;
                }
              }
              let p3 = null;
              if (5 === o2) {
                if (p3 = A2(t5, c2, r5, f3), !p3)
                  return false;
                f3 += p3.length;
              }
              return t5.write(i.ACKS[h3][0][u3][0]), w2(t5, f3), y2(t5, a2), null !== p3 && p3.write(), 5 === o2 && t5.write(n3.from(l3)), true;
            }(e4, t4, r4);
          case "pingreq":
          case "pingresp":
            return function (e5, t5, r5) {
              return t5.write(i.EMPTY[e5.cmd]);
            }(e4, t4);
          case "disconnect":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.reasonCode, u3 = s2.properties;
              let l3 = 5 === o2 ? 1 : 0, c2 = null;
              if (5 === o2) {
                if (c2 = A2(t5, u3, r5, l3), !c2)
                  return false;
                l3 += c2.length;
              }
              return t5.write(n3.from([i.codes.disconnect << 4])), w2(t5, l3), 5 === o2 && t5.write(n3.from([a2])), null !== c2 && c2.write(), true;
            }(e4, t4, r4);
          case "auth":
            return function (e5, t5, r5) {
              const o2 = r5 ? r5.protocolVersion : 4, s2 = e5 || {}, a2 = s2.reasonCode, u3 = s2.properties;
              let l3 = 5 === o2 ? 1 : 0;
              5 !== o2 && t5.emit("error", new Error("Invalid mqtt version for auth packet"));
              const c2 = A2(t5, u3, r5, l3);
              return !!c2 && (l3 += c2.length, t5.write(n3.from([i.codes.auth << 4])), w2(t5, l3), t5.write(n3.from([a2])), null !== c2 && c2.write(), true);
            }(e4, t4, r4);
          default:
            return t4.emit("error", new Error("Unknown command")), false;
        }
      }
      function m2(e4) {
        e4.uncork();
      }
      Object.defineProperty(b, "cacheNumbers", {
        get: () => y2 === k2, set(e4) {
          e4 ? (c && 0 !== Object.keys(c).length || (g = true), y2 = k2) : (g = false, y2 = S2);
        }
      });
      const v2 = {};
      function w2(e4, t4) {
        if (t4 > i.VARBYTEINT_MAX)
          return e4.emit("error", new Error("Invalid variable byte integer: ".concat(t4))), false;
        let r4 = v2[t4];
        return r4 || (r4 = p2(t4), t4 < 16384 && (v2[t4] = r4)), l2("writeVarByteInt: writing to stream: %o", r4), e4.write(r4);
      }
      function _2(e4, t4) {
        const r4 = n3.byteLength(t4);
        return y2(e4, r4), l2("writeString: %s", t4), e4.write(t4, "utf8");
      }
      function E2(e4, t4, r4) {
        _2(e4, t4), _2(e4, r4);
      }
      function k2(e4, t4) {
        return l2("writeNumberCached: number: %d", t4), l2("writeNumberCached: %o", c[t4]), e4.write(c[t4]);
      }
      function S2(e4, t4) {
        const r4 = h2(t4);
        return l2("writeNumberGenerated: %o", r4), e4.write(r4);
      }
      function C2(e4, t4) {
        "string" == typeof t4 ? _2(e4, t4) : t4 ? (y2(e4, t4.length), e4.write(t4)) : y2(e4, 0);
      }
      function T2(e4, t4) {
        if ("object" != typeof t4 || null != t4.length)
          return {
            length: 1, write() {
              x2(e4, {}, 0);
            }
          };
        let r4 = 0;
        function o2(t5, r5) {
          let o3 = 0;
          switch (i.propertiesTypes[t5]) {
            case "byte":
              if ("boolean" != typeof r5)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 2;
              break;
            case "int8":
              if ("number" != typeof r5 || r5 < 0 || r5 > 255)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 2;
              break;
            case "binary":
              if (r5 && null === r5)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 1 + n3.byteLength(r5) + 2;
              break;
            case "int16":
              if ("number" != typeof r5 || r5 < 0 || r5 > 65535)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 3;
              break;
            case "int32":
              if ("number" != typeof r5 || r5 < 0 || r5 > 4294967295)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 5;
              break;
            case "var":
              if ("number" != typeof r5 || r5 < 0 || r5 > 268435455)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 1 + n3.byteLength(p2(r5));
              break;
            case "string":
              if ("string" != typeof r5)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += 3 + n3.byteLength(r5.toString());
              break;
            case "pair":
              if ("object" != typeof r5)
                return e4.emit("error", new Error("Invalid ".concat(t5, ": ").concat(r5))), false;
              o3 += Object.getOwnPropertyNames(r5).reduce((e5, t6) => {
                const i2 = r5[t6];
                return Array.isArray(i2) ? e5 += i2.reduce((e6, r6) => e6 + (3 + n3.byteLength(t6.toString()) + 2 + n3.byteLength(r6.toString())), 0) : e5 += 3 + n3.byteLength(t6.toString()) + 2 + n3.byteLength(r5[t6].toString()), e5;
              }, 0);
              break;
            default:
              return e4.emit("error", new Error("Invalid property ".concat(t5, ": ").concat(r5))), false;
          }
          return o3;
        }
        if (t4)
          for (const e5 in t4) {
            let n4 = 0, i2 = 0;
            const s2 = t4[e5];
            if (Array.isArray(s2))
              for (let t5 = 0; t5 < s2.length; t5++) {
                if (i2 = o2(e5, s2[t5]), !i2)
                  return false;
                n4 += i2;
              }
            else {
              if (i2 = o2(e5, s2), !i2)
                return false;
              n4 = i2;
            }
            if (!n4)
              return false;
            r4 += n4;
          }
        return {
          length: n3.byteLength(p2(r4)) + r4, write() {
            x2(e4, t4, r4);
          }
        };
      }
      function A2(e4, t4, r4, n4) {
        const i2 = ["reasonString", "userProperties"], o2 = r4 && r4.properties && r4.properties.maximumPacketSize ? r4.properties.maximumPacketSize : 0;
        let s2 = T2(e4, t4);
        if (o2)
          for (; n4 + s2.length > o2;) {
            const r5 = i2.shift();
            if (!r5 || !t4[r5])
              return false;
            delete t4[r5], s2 = T2(e4, t4);
          }
        return s2;
      }
      function I2(e4, t4, r4) {
        switch (i.propertiesTypes[t4]) {
          case "byte":
            e4.write(n3.from([i.properties[t4]])), e4.write(n3.from([+r4]));
            break;
          case "int8":
            e4.write(n3.from([i.properties[t4]])), e4.write(n3.from([r4]));
            break;
          case "binary":
            e4.write(n3.from([i.properties[t4]])), C2(e4, r4);
            break;
          case "int16":
            e4.write(n3.from([i.properties[t4]])), y2(e4, r4);
            break;
          case "int32":
            e4.write(n3.from([i.properties[t4]])), function (e5, t5) {
              const r5 = d(t5);
              l2("write4ByteNumber: %o", r5), e5.write(r5);
            }(e4, r4);
            break;
          case "var":
            e4.write(n3.from([i.properties[t4]])), w2(e4, r4);
            break;
          case "string":
            e4.write(n3.from([i.properties[t4]])), _2(e4, r4);
            break;
          case "pair":
            Object.getOwnPropertyNames(r4).forEach((o2) => {
              const s2 = r4[o2];
              Array.isArray(s2) ? s2.forEach((r5) => {
                e4.write(n3.from([i.properties[t4]])), E2(e4, o2.toString(), r5.toString());
              }) : (e4.write(n3.from([i.properties[t4]])), E2(e4, o2.toString(), s2.toString()));
            });
            break;
          default:
            return e4.emit("error", new Error("Invalid property ".concat(t4, " value: ").concat(r4))), false;
        }
      }
      function x2(e4, t4, r4) {
        w2(e4, r4);
        for (const r5 in t4)
          if (Object.prototype.hasOwnProperty.call(t4, r5) && null !== t4[r5]) {
            const n4 = t4[r5];
            if (Array.isArray(n4))
              for (let t5 = 0; t5 < n4.length; t5++)
                I2(e4, r5, n4[t5]);
            else
              I2(e4, r5, n4);
          }
      }
      function B2(e4) {
        return e4 ? e4 instanceof n3 ? e4.length : n3.byteLength(e4) : 0;
      }
      function R2(e4) {
        return "string" == typeof e4 || e4 instanceof n3;
      }
      e3.exports = b;
    }, 7824: function (e3) {
      var t3 = 1e3, r3 = 60 * t3, n3 = 60 * r3, i = 24 * n3;
      function o(e4, t4, r4, n4) {
        var i2 = t4 >= 1.5 * r4;
        return Math.round(e4 / r4) + " " + n4 + (i2 ? "s" : "");
      }
      e3.exports = function (e4, s) {
        s = s || {};
        var a, u2, l2 = typeof e4;
        if ("string" === l2 && e4.length > 0)
          return function (e5) {
            if (!((e5 = String(e5)).length > 100)) {
              var o2 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e5);
              if (o2) {
                var s2 = parseFloat(o2[1]);
                switch ((o2[2] || "ms").toLowerCase()) {
                  case "years":
                  case "year":
                  case "yrs":
                  case "yr":
                  case "y":
                    return 315576e5 * s2;
                  case "weeks":
                  case "week":
                  case "w":
                    return 6048e5 * s2;
                  case "days":
                  case "day":
                  case "d":
                    return s2 * i;
                  case "hours":
                  case "hour":
                  case "hrs":
                  case "hr":
                  case "h":
                    return s2 * n3;
                  case "minutes":
                  case "minute":
                  case "mins":
                  case "min":
                  case "m":
                    return s2 * r3;
                  case "seconds":
                  case "second":
                  case "secs":
                  case "sec":
                  case "s":
                    return s2 * t3;
                  case "milliseconds":
                  case "millisecond":
                  case "msecs":
                  case "msec":
                  case "ms":
                    return s2;
                  default:
                    return;
                }
              }
            }
          }(e4);
        if ("number" === l2 && isFinite(e4))
          return s.long ? (a = e4, (u2 = Math.abs(a)) >= i ? o(a, u2, i, "day") : u2 >= n3 ? o(a, u2, n3, "hour") : u2 >= r3 ? o(a, u2, r3, "minute") : u2 >= t3 ? o(a, u2, t3, "second") : a + " ms") : function (e5) {
            var o2 = Math.abs(e5);
            return o2 >= i ? Math.round(e5 / i) + "d" : o2 >= n3 ? Math.round(e5 / n3) + "h" : o2 >= r3 ? Math.round(e5 / r3) + "m" : o2 >= t3 ? Math.round(e5 / t3) + "s" : e5 + "ms";
          }(e4);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e4));
      };
    }, 423: function (e3, t3, r3) {
      const n3 = r3(9759);
      e3.exports.Q = n3;
    }, 9759: function (e3, t3, r3) {
      const n3 = r3(9246).l4, i = r3(1227)("number-allocator:trace"), o = r3(1227)("number-allocator:error");
      function s(e4, t4) {
        this.low = e4, this.high = t4;
      }
      function a(e4, t4) {
        if (!(this instanceof a))
          return new a(e4, t4);
        this.min = e4, this.max = t4, this.ss = new n3([], (e5, t5) => e5.compare(t5)), i("Create"), this.clear();
      }
      s.prototype.equals = function (e4) {
        return this.low === e4.low && this.high === e4.high;
      }, s.prototype.compare = function (e4) {
        return this.low < e4.low && this.high < e4.low ? -1 : e4.low < this.low && e4.high < this.low ? 1 : 0;
      }, a.prototype.firstVacant = function () {
        return 0 === this.ss.size() ? null : this.ss.front().low;
      }, a.prototype.alloc = function () {
        if (0 === this.ss.size())
          return i("alloc():empty"), null;
        const e4 = this.ss.front(), t4 = e4.low;
        return t4 + 1 <= e4.high ? ++e4.low : this.ss.eraseElementByPos(0), i("alloc():" + t4), t4;
      }, a.prototype.use = function (e4) {
        const t4 = new s(e4, e4), r4 = this.ss.lowerBound(t4);
        if (r4) {
          if (r4.equals(t4))
            return this.ss.eraseElementByValue(r4), i("use():" + e4), true;
          if (r4.low > e4)
            return false;
          if (r4.low === e4)
            return ++r4.low, i("use():" + e4), true;
          if (r4.high === e4)
            return --r4.high, i("use():" + e4), true;
          const n4 = r4.low;
          return r4.low = e4 + 1, this.ss.insert(new s(n4, e4 - 1)), i("use():" + e4), true;
        }
        return i("use():failed"), false;
      }, a.prototype.free = function (e4) {
        if (e4 < this.min || e4 > this.max)
          return void o("free():" + e4 + " is out of range");
        const t4 = new s(e4, e4), r4 = this.ss.lowerBound(t4);
        if (r4) {
          if (r4.low <= e4 && e4 <= r4.high)
            return void o("free():" + e4 + " has already been vacant");
          if (r4 === this.ss.front())
            e4 + 1 === r4.low ? --r4.low : this.ss.insert(t4);
          else {
            const n4 = this.ss.reverseLowerBound(t4);
            n4.high + 1 === e4 ? e4 + 1 === r4.low ? (this.ss.eraseElementByValue(n4), r4.low = n4.low) : n4.high = e4 : e4 + 1 === r4.low ? r4.low = e4 : this.ss.insert(t4);
          }
        } else {
          if (r4 === this.ss.front())
            return void this.ss.insert(t4);
          const n4 = this.ss.reverseLowerBound(t4);
          n4.high + 1 === e4 ? n4.high = e4 : this.ss.insert(t4);
        }
        i("free():" + e4);
      }, a.prototype.clear = function () {
        i("clear()"), this.ss.clear(), this.ss.insert(new s(this.min, this.max));
      }, a.prototype.intervalCount = function () {
        return this.ss.size();
      }, a.prototype.dump = function () {
        console.log("length:" + this.ss.size());
        for (const e4 of this.ss)
          console.log(e4);
      }, e3.exports = a;
    }, 778: function (e3, t3, r3) {
      var n3 = r3(2479);
      function i(e4) {
        var t4 = function () {
          return t4.called ? t4.value : (t4.called = true, t4.value = e4.apply(this, arguments));
        };
        return t4.called = false, t4;
      }
      function o(e4) {
        var t4 = function () {
          if (t4.called)
            throw new Error(t4.onceError);
          return t4.called = true, t4.value = e4.apply(this, arguments);
        }, r4 = e4.name || "Function wrapped with `once`";
        return t4.onceError = r4 + " shouldn't be called more than once", t4.called = false, t4;
      }
      e3.exports = n3(i), e3.exports.strict = n3(o), i.proto = i(function () {
        Object.defineProperty(Function.prototype, "once", {
          value: function () {
            return i(this);
          }, configurable: true
        }), Object.defineProperty(Function.prototype, "onceStrict", {
          value: function () {
            return o(this);
          }, configurable: true
        });
      });
    }, 8212: function (e3, t3, r3) {
      var n3 = r3(4155);
      void 0 === n3 || !n3.version || 0 === n3.version.indexOf("v0.") || 0 === n3.version.indexOf("v1.") && 0 !== n3.version.indexOf("v1.8.") ? e3.exports = {
        nextTick: function (e4, t4, r4, i) {
          if ("function" != typeof e4)
            throw new TypeError('"callback" argument must be a function');
          var o, s, a = arguments.length;
          switch (a) {
            case 0:
            case 1:
              return n3.nextTick(e4);
            case 2:
              return n3.nextTick(function () {
                e4.call(null, t4);
              });
            case 3:
              return n3.nextTick(function () {
                e4.call(null, t4, r4);
              });
            case 4:
              return n3.nextTick(function () {
                e4.call(null, t4, r4, i);
              });
            default:
              for (o = new Array(a - 1), s = 0; s < o.length;)
                o[s++] = arguments[s];
              return n3.nextTick(function () {
                e4.apply(null, o);
              });
          }
        }
      } : e3.exports = n3;
    }, 4155: function (e3) {
      var t3, r3, n3 = e3.exports = {};
      function i() {
        throw new Error("setTimeout has not been defined");
      }
      function o() {
        throw new Error("clearTimeout has not been defined");
      }
      function s(e4) {
        if (t3 === setTimeout)
          return setTimeout(e4, 0);
        if ((t3 === i || !t3) && setTimeout)
          return t3 = setTimeout, setTimeout(e4, 0);
        try {
          return t3(e4, 0);
        } catch (r4) {
          try {
            return t3.call(null, e4, 0);
          } catch (r5) {
            return t3.call(this, e4, 0);
          }
        }
      }
      !function () {
        try {
          t3 = "function" == typeof setTimeout ? setTimeout : i;
        } catch (e4) {
          t3 = i;
        }
        try {
          r3 = "function" == typeof clearTimeout ? clearTimeout : o;
        } catch (e4) {
          r3 = o;
        }
      }();
      var a, u2 = [], l2 = false, c = -1;
      function h2() {
        l2 && a && (l2 = false, a.length ? u2 = a.concat(u2) : c = -1, u2.length && f2());
      }
      function f2() {
        if (!l2) {
          var e4 = s(h2);
          l2 = true;
          for (var t4 = u2.length; t4;) {
            for (a = u2, u2 = []; ++c < t4;)
              a && a[c].run();
            c = -1, t4 = u2.length;
          }
          a = null, l2 = false, function (e5) {
            if (r3 === clearTimeout)
              return clearTimeout(e5);
            if ((r3 === o || !r3) && clearTimeout)
              return r3 = clearTimeout, clearTimeout(e5);
            try {
              r3(e5);
            } catch (t5) {
              try {
                return r3.call(null, e5);
              } catch (t6) {
                return r3.call(this, e5);
              }
            }
          }(e4);
        }
      }
      function p2(e4, t4) {
        this.fun = e4, this.array = t4;
      }
      function d() {
      }
      n3.nextTick = function (e4) {
        var t4 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r4 = 1; r4 < arguments.length; r4++)
            t4[r4 - 1] = arguments[r4];
        u2.push(new p2(e4, t4)), 1 !== u2.length || l2 || s(f2);
      }, p2.prototype.run = function () {
        this.fun.apply(null, this.array);
      }, n3.title = "browser", n3.browser = true, n3.env = {}, n3.argv = [], n3.version = "", n3.versions = {}, n3.on = d, n3.addListener = d, n3.once = d, n3.off = d, n3.removeListener = d, n3.removeAllListeners = d, n3.emit = d, n3.prependListener = d, n3.prependOnceListener = d, n3.listeners = function (e4) {
        return [];
      }, n3.binding = function (e4) {
        throw new Error("process.binding is not supported");
      }, n3.cwd = function () {
        return "/";
      }, n3.chdir = function (e4) {
        throw new Error("process.chdir is not supported");
      }, n3.umask = function () {
        return 0;
      };
    }, 2587: function (e3) {
      function t3(e4, t4) {
        return Object.prototype.hasOwnProperty.call(e4, t4);
      }
      e3.exports = function (e4, r3, n3, i) {
        r3 = r3 || "&", n3 = n3 || "=";
        var o = {};
        if ("string" != typeof e4 || 0 === e4.length)
          return o;
        var s = /\+/g;
        e4 = e4.split(r3);
        var a = 1e3;
        i && "number" == typeof i.maxKeys && (a = i.maxKeys);
        var u2 = e4.length;
        a > 0 && u2 > a && (u2 = a);
        for (var l2 = 0; l2 < u2; ++l2) {
          var c, h2, f2, p2, d = e4[l2].replace(s, "%20"), y2 = d.indexOf(n3);
          y2 >= 0 ? (c = d.substr(0, y2), h2 = d.substr(y2 + 1)) : (c = d, h2 = ""), f2 = decodeURIComponent(c), p2 = decodeURIComponent(h2), t3(o, f2) ? Array.isArray(o[f2]) ? o[f2].push(p2) : o[f2] = [o[f2], p2] : o[f2] = p2;
        }
        return o;
      };
    }, 2182: function (e3) {
      var t3 = function (e4) {
        switch (typeof e4) {
          case "string":
            return e4;
          case "boolean":
            return e4 ? "true" : "false";
          case "number":
            return isFinite(e4) ? e4 : "";
          default:
            return "";
        }
      };
      e3.exports = function (e4, r3, n3, i) {
        return r3 = r3 || "&", n3 = n3 || "=", null === e4 && (e4 = void 0), "object" == typeof e4 ? Object.keys(e4).map(function (i2) {
          var o = encodeURIComponent(t3(i2)) + n3;
          return Array.isArray(e4[i2]) ? e4[i2].map(function (e5) {
            return o + encodeURIComponent(t3(e5));
          }).join(r3) : o + encodeURIComponent(t3(e4[i2]));
        }).join(r3) : i ? encodeURIComponent(t3(i)) + n3 + encodeURIComponent(t3(e4)) : "";
      };
    }, 7673: function (e3, t3, r3) {
      t3.decode = t3.parse = r3(2587), t3.encode = t3.stringify = r3(2182);
    }, 4281: function (e3) {
      var t3 = {};
      function r3(e4, r4, n4) {
        n4 || (n4 = Error);
        var i = function (e5) {
          var t4, n5;
          function i2(t5, n6, i3) {
            return e5.call(this, function (e6, t6, n7) {
              return "string" == typeof r4 ? r4 : r4(e6, t6, n7);
            }(t5, n6, i3)) || this;
          }
          return n5 = e5, (t4 = i2).prototype = Object.create(n5.prototype), t4.prototype.constructor = t4, t4.__proto__ = n5, i2;
        }(n4);
        i.prototype.name = n4.name, i.prototype.code = e4, t3[e4] = i;
      }
      function n3(e4, t4) {
        if (Array.isArray(e4)) {
          var r4 = e4.length;
          return e4 = e4.map(function (e5) {
            return String(e5);
          }), r4 > 2 ? "one of ".concat(t4, " ").concat(e4.slice(0, r4 - 1).join(", "), ", or ") + e4[r4 - 1] : 2 === r4 ? "one of ".concat(t4, " ").concat(e4[0], " or ").concat(e4[1]) : "of ".concat(t4, " ").concat(e4[0]);
        }
        return "of ".concat(t4, " ").concat(String(e4));
      }
      r3("ERR_INVALID_OPT_VALUE", function (e4, t4) {
        return 'The value "' + t4 + '" is invalid for option "' + e4 + '"';
      }, TypeError), r3("ERR_INVALID_ARG_TYPE", function (e4, t4, r4) {
        var i, o, s, a, u2;
        if ("string" == typeof t4 && (o = "not ", t4.substr(0, o.length) === o) ? (i = "must not be", t4 = t4.replace(/^not /, "")) : i = "must be", function (e5, t5, r5) {
          return (void 0 === r5 || r5 > e5.length) && (r5 = e5.length), e5.substring(r5 - t5.length, r5) === t5;
        }(e4, " argument"))
          s = "The ".concat(e4, " ").concat(i, " ").concat(n3(t4, "type"));
        else {
          var l2 = ("number" != typeof u2 && (u2 = 0), u2 + ".".length > (a = e4).length || -1 === a.indexOf(".", u2) ? "argument" : "property");
          s = 'The "'.concat(e4, '" ').concat(l2, " ").concat(i, " ").concat(n3(t4, "type"));
        }
        return s + ". Received type ".concat(typeof r4);
      }, TypeError), r3("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), r3("ERR_METHOD_NOT_IMPLEMENTED", function (e4) {
        return "The " + e4 + " method is not implemented";
      }), r3("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), r3("ERR_STREAM_DESTROYED", function (e4) {
        return "Cannot call " + e4 + " after a stream was destroyed";
      }), r3("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), r3("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), r3("ERR_STREAM_WRITE_AFTER_END", "write after end"), r3("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), r3("ERR_UNKNOWN_ENCODING", function (e4) {
        return "Unknown encoding: " + e4;
      }, TypeError), r3("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e3.exports.q = t3;
    }, 6753: function (e3, t3, r3) {
      var n3 = r3(4155), i = Object.keys || function (e4) {
        var t4 = [];
        for (var r4 in e4)
          t4.push(r4);
        return t4;
      };
      e3.exports = c;
      var o = r3(9481), s = r3(4229);
      r3(5717)(c, o);
      for (var a = i(s.prototype), u2 = 0; u2 < a.length; u2++) {
        var l2 = a[u2];
        c.prototype[l2] || (c.prototype[l2] = s.prototype[l2]);
      }
      function c(e4) {
        if (!(this instanceof c))
          return new c(e4);
        o.call(this, e4), s.call(this, e4), this.allowHalfOpen = true, e4 && (false === e4.readable && (this.readable = false), false === e4.writable && (this.writable = false), false === e4.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", h2)));
      }
      function h2() {
        this._writableState.ended || n3.nextTick(f2, this);
      }
      function f2(e4) {
        e4.end();
      }
      Object.defineProperty(c.prototype, "writableHighWaterMark", {
        enumerable: false, get: function () {
          return this._writableState.highWaterMark;
        }
      }), Object.defineProperty(c.prototype, "writableBuffer", {
        enumerable: false, get: function () {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(c.prototype, "writableLength", {
        enumerable: false, get: function () {
          return this._writableState.length;
        }
      }), Object.defineProperty(c.prototype, "destroyed", {
        enumerable: false, get: function () {
          return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
        }, set: function (e4) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e4, this._writableState.destroyed = e4);
        }
      });
    }, 2725: function (e3, t3, r3) {
      e3.exports = i;
      var n3 = r3(4605);
      function i(e4) {
        if (!(this instanceof i))
          return new i(e4);
        n3.call(this, e4);
      }
      r3(5717)(i, n3), i.prototype._transform = function (e4, t4, r4) {
        r4(null, e4);
      };
    }, 9481: function (e3, t3, r3) {
      var n3, i = r3(4155);
      e3.exports = C2, C2.ReadableState = S2, r3(7187).EventEmitter;
      var o, s = function (e4, t4) {
        return e4.listeners(t4).length;
      }, a = r3(2503), u2 = r3(8764).Buffer, l2 = r3.g.Uint8Array || function () {
      }, c = r3(4616);
      o = c && c.debuglog ? c.debuglog("stream") : function () {
      };
      var h2, f2, p2, d = r3(7327), y2 = r3(1195), g = r3(2457).getHighWaterMark, b = r3(4281).q, m2 = b.ERR_INVALID_ARG_TYPE, v2 = b.ERR_STREAM_PUSH_AFTER_EOF, w2 = b.ERR_METHOD_NOT_IMPLEMENTED, _2 = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      r3(5717)(C2, a);
      var E2 = y2.errorOrDestroy, k2 = ["error", "close", "destroy", "pause", "resume"];
      function S2(e4, t4, i2) {
        n3 = n3 || r3(6753), e4 = e4 || {}, "boolean" != typeof i2 && (i2 = t4 instanceof n3), this.objectMode = !!e4.objectMode, i2 && (this.objectMode = this.objectMode || !!e4.readableObjectMode), this.highWaterMark = g(this, e4, "readableHighWaterMark", i2), this.buffer = new d(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e4.emitClose, this.autoDestroy = !!e4.autoDestroy, this.destroyed = false, this.defaultEncoding = e4.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e4.encoding && (h2 || (h2 = r3(2553).s), this.decoder = new h2(e4.encoding), this.encoding = e4.encoding);
      }
      function C2(e4) {
        if (n3 = n3 || r3(6753), !(this instanceof C2))
          return new C2(e4);
        var t4 = this instanceof n3;
        this._readableState = new S2(e4, this, t4), this.readable = true, e4 && ("function" == typeof e4.read && (this._read = e4.read), "function" == typeof e4.destroy && (this._destroy = e4.destroy)), a.call(this);
      }
      function T2(e4, t4, r4, n4, i2) {
        o("readableAddChunk", t4);
        var s2, a2 = e4._readableState;
        if (null === t4)
          a2.reading = false, function (e5, t5) {
            if (o("onEofChunk"), !t5.ended) {
              if (t5.decoder) {
                var r5 = t5.decoder.end();
                r5 && r5.length && (t5.buffer.push(r5), t5.length += t5.objectMode ? 1 : r5.length);
              }
              t5.ended = true, t5.sync ? B2(e5) : (t5.needReadable = false, t5.emittedReadable || (t5.emittedReadable = true, R2(e5)));
            }
          }(e4, a2);
        else if (i2 || (s2 = function (e5, t5) {
          var r5, n5;
          return n5 = t5, u2.isBuffer(n5) || n5 instanceof l2 || "string" == typeof t5 || void 0 === t5 || e5.objectMode || (r5 = new m2("chunk", ["string", "Buffer", "Uint8Array"], t5)), r5;
        }(a2, t4)), s2)
          E2(e4, s2);
        else if (a2.objectMode || t4 && t4.length > 0)
          if ("string" == typeof t4 || a2.objectMode || Object.getPrototypeOf(t4) === u2.prototype || (t4 = function (e5) {
            return u2.from(e5);
          }(t4)), n4)
            a2.endEmitted ? E2(e4, new _2()) : A2(e4, a2, t4, true);
          else if (a2.ended)
            E2(e4, new v2());
          else {
            if (a2.destroyed)
              return false;
            a2.reading = false, a2.decoder && !r4 ? (t4 = a2.decoder.write(t4), a2.objectMode || 0 !== t4.length ? A2(e4, a2, t4, false) : O2(e4, a2)) : A2(e4, a2, t4, false);
          }
        else
          n4 || (a2.reading = false, O2(e4, a2));
        return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
      }
      function A2(e4, t4, r4, n4) {
        t4.flowing && 0 === t4.length && !t4.sync ? (t4.awaitDrain = 0, e4.emit("data", r4)) : (t4.length += t4.objectMode ? 1 : r4.length, n4 ? t4.buffer.unshift(r4) : t4.buffer.push(r4), t4.needReadable && B2(e4)), O2(e4, t4);
      }
      Object.defineProperty(C2.prototype, "destroyed", {
        enumerable: false, get: function () {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function (e4) {
          this._readableState && (this._readableState.destroyed = e4);
        }
      }), C2.prototype.destroy = y2.destroy, C2.prototype._undestroy = y2.undestroy, C2.prototype._destroy = function (e4, t4) {
        t4(e4);
      }, C2.prototype.push = function (e4, t4) {
        var r4, n4 = this._readableState;
        return n4.objectMode ? r4 = true : "string" == typeof e4 && ((t4 = t4 || n4.defaultEncoding) !== n4.encoding && (e4 = u2.from(e4, t4), t4 = ""), r4 = true), T2(this, e4, t4, false, r4);
      }, C2.prototype.unshift = function (e4) {
        return T2(this, e4, null, true, false);
      }, C2.prototype.isPaused = function () {
        return false === this._readableState.flowing;
      }, C2.prototype.setEncoding = function (e4) {
        h2 || (h2 = r3(2553).s);
        var t4 = new h2(e4);
        this._readableState.decoder = t4, this._readableState.encoding = this._readableState.decoder.encoding;
        for (var n4 = this._readableState.buffer.head, i2 = ""; null !== n4;)
          i2 += t4.write(n4.data), n4 = n4.next;
        return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
      };
      var I2 = 1073741824;
      function x2(e4, t4) {
        return e4 <= 0 || 0 === t4.length && t4.ended ? 0 : t4.objectMode ? 1 : e4 != e4 ? t4.flowing && t4.length ? t4.buffer.head.data.length : t4.length : (e4 > t4.highWaterMark && (t4.highWaterMark = function (e5) {
          return e5 >= I2 ? e5 = I2 : (e5--, e5 |= e5 >>> 1, e5 |= e5 >>> 2, e5 |= e5 >>> 4, e5 |= e5 >>> 8, e5 |= e5 >>> 16, e5++), e5;
        }(e4)), e4 <= t4.length ? e4 : t4.ended ? t4.length : (t4.needReadable = true, 0));
      }
      function B2(e4) {
        var t4 = e4._readableState;
        o("emitReadable", t4.needReadable, t4.emittedReadable), t4.needReadable = false, t4.emittedReadable || (o("emitReadable", t4.flowing), t4.emittedReadable = true, i.nextTick(R2, e4));
      }
      function R2(e4) {
        var t4 = e4._readableState;
        o("emitReadable_", t4.destroyed, t4.length, t4.ended), t4.destroyed || !t4.length && !t4.ended || (e4.emit("readable"), t4.emittedReadable = false), t4.needReadable = !t4.flowing && !t4.ended && t4.length <= t4.highWaterMark, U2(e4);
      }
      function O2(e4, t4) {
        t4.readingMore || (t4.readingMore = true, i.nextTick(P2, e4, t4));
      }
      function P2(e4, t4) {
        for (; !t4.reading && !t4.ended && (t4.length < t4.highWaterMark || t4.flowing && 0 === t4.length);) {
          var r4 = t4.length;
          if (o("maybeReadMore read 0"), e4.read(0), r4 === t4.length)
            break;
        }
        t4.readingMore = false;
      }
      function N2(e4) {
        var t4 = e4._readableState;
        t4.readableListening = e4.listenerCount("readable") > 0, t4.resumeScheduled && !t4.paused ? t4.flowing = true : e4.listenerCount("data") > 0 && e4.resume();
      }
      function M2(e4) {
        o("readable nexttick read 0"), e4.read(0);
      }
      function L2(e4, t4) {
        o("resume", t4.reading), t4.reading || e4.read(0), t4.resumeScheduled = false, e4.emit("resume"), U2(e4), t4.flowing && !t4.reading && e4.read(0);
      }
      function U2(e4) {
        var t4 = e4._readableState;
        for (o("flow", t4.flowing); t4.flowing && null !== e4.read();)
          ;
      }
      function j(e4, t4) {
        return 0 === t4.length ? null : (t4.objectMode ? r4 = t4.buffer.shift() : !e4 || e4 >= t4.length ? (r4 = t4.decoder ? t4.buffer.join("") : 1 === t4.buffer.length ? t4.buffer.first() : t4.buffer.concat(t4.length), t4.buffer.clear()) : r4 = t4.buffer.consume(e4, t4.decoder), r4);
        var r4;
      }
      function q2(e4) {
        var t4 = e4._readableState;
        o("endReadable", t4.endEmitted), t4.endEmitted || (t4.ended = true, i.nextTick(z2, t4, e4));
      }
      function z2(e4, t4) {
        if (o("endReadableNT", e4.endEmitted, e4.length), !e4.endEmitted && 0 === e4.length && (e4.endEmitted = true, t4.readable = false, t4.emit("end"), e4.autoDestroy)) {
          var r4 = t4._writableState;
          (!r4 || r4.autoDestroy && r4.finished) && t4.destroy();
        }
      }
      function D2(e4, t4) {
        for (var r4 = 0, n4 = e4.length; r4 < n4; r4++)
          if (e4[r4] === t4)
            return r4;
        return -1;
      }
      C2.prototype.read = function (e4) {
        o("read", e4), e4 = parseInt(e4, 10);
        var t4 = this._readableState, r4 = e4;
        if (0 !== e4 && (t4.emittedReadable = false), 0 === e4 && t4.needReadable && ((0 !== t4.highWaterMark ? t4.length >= t4.highWaterMark : t4.length > 0) || t4.ended))
          return o("read: emitReadable", t4.length, t4.ended), 0 === t4.length && t4.ended ? q2(this) : B2(this), null;
        if (0 === (e4 = x2(e4, t4)) && t4.ended)
          return 0 === t4.length && q2(this), null;
        var n4, i2 = t4.needReadable;
        return o("need readable", i2), (0 === t4.length || t4.length - e4 < t4.highWaterMark) && o("length less than watermark", i2 = true), t4.ended || t4.reading ? o("reading or ended", i2 = false) : i2 && (o("do read"), t4.reading = true, t4.sync = true, 0 === t4.length && (t4.needReadable = true), this._read(t4.highWaterMark), t4.sync = false, t4.reading || (e4 = x2(r4, t4))), null === (n4 = e4 > 0 ? j(e4, t4) : null) ? (t4.needReadable = t4.length <= t4.highWaterMark, e4 = 0) : (t4.length -= e4, t4.awaitDrain = 0), 0 === t4.length && (t4.ended || (t4.needReadable = true), r4 !== e4 && t4.ended && q2(this)), null !== n4 && this.emit("data", n4), n4;
      }, C2.prototype._read = function (e4) {
        E2(this, new w2("_read()"));
      }, C2.prototype.pipe = function (e4, t4) {
        var r4 = this, n4 = this._readableState;
        switch (n4.pipesCount) {
          case 0:
            n4.pipes = e4;
            break;
          case 1:
            n4.pipes = [n4.pipes, e4];
            break;
          default:
            n4.pipes.push(e4);
        }
        n4.pipesCount += 1, o("pipe count=%d opts=%j", n4.pipesCount, t4);
        var a2 = t4 && false === t4.end || e4 === i.stdout || e4 === i.stderr ? y3 : u3;
        function u3() {
          o("onend"), e4.end();
        }
        n4.endEmitted ? i.nextTick(a2) : r4.once("end", a2), e4.on("unpipe", function t5(i2, s2) {
          o("onunpipe"), i2 === r4 && s2 && false === s2.hasUnpiped && (s2.hasUnpiped = true, o("cleanup"), e4.removeListener("close", p3), e4.removeListener("finish", d2), e4.removeListener("drain", l3), e4.removeListener("error", f3), e4.removeListener("unpipe", t5), r4.removeListener("end", u3), r4.removeListener("end", y3), r4.removeListener("data", h3), c2 = true, !n4.awaitDrain || e4._writableState && !e4._writableState.needDrain || l3());
        });
        var l3 = /* @__PURE__ */ function (e5) {
          return function () {
            var t5 = e5._readableState;
            o("pipeOnDrain", t5.awaitDrain), t5.awaitDrain && t5.awaitDrain--, 0 === t5.awaitDrain && s(e5, "data") && (t5.flowing = true, U2(e5));
          };
        }(r4);
        e4.on("drain", l3);
        var c2 = false;
        function h3(t5) {
          o("ondata");
          var i2 = e4.write(t5);
          o("dest.write", i2), false === i2 && ((1 === n4.pipesCount && n4.pipes === e4 || n4.pipesCount > 1 && -1 !== D2(n4.pipes, e4)) && !c2 && (o("false write response, pause", n4.awaitDrain), n4.awaitDrain++), r4.pause());
        }
        function f3(t5) {
          o("onerror", t5), y3(), e4.removeListener("error", f3), 0 === s(e4, "error") && E2(e4, t5);
        }
        function p3() {
          e4.removeListener("finish", d2), y3();
        }
        function d2() {
          o("onfinish"), e4.removeListener("close", p3), y3();
        }
        function y3() {
          o("unpipe"), r4.unpipe(e4);
        }
        return r4.on("data", h3), function (e5, t5, r5) {
          if ("function" == typeof e5.prependListener)
            return e5.prependListener(t5, r5);
          e5._events && e5._events.error ? Array.isArray(e5._events.error) ? e5._events.error.unshift(r5) : e5._events.error = [r5, e5._events.error] : e5.on(t5, r5);
        }(e4, "error", f3), e4.once("close", p3), e4.once("finish", d2), e4.emit("pipe", r4), n4.flowing || (o("pipe resume"), r4.resume()), e4;
      }, C2.prototype.unpipe = function (e4) {
        var t4 = this._readableState, r4 = { hasUnpiped: false };
        if (0 === t4.pipesCount)
          return this;
        if (1 === t4.pipesCount)
          return e4 && e4 !== t4.pipes || (e4 || (e4 = t4.pipes), t4.pipes = null, t4.pipesCount = 0, t4.flowing = false, e4 && e4.emit("unpipe", this, r4)), this;
        if (!e4) {
          var n4 = t4.pipes, i2 = t4.pipesCount;
          t4.pipes = null, t4.pipesCount = 0, t4.flowing = false;
          for (var o2 = 0; o2 < i2; o2++)
            n4[o2].emit("unpipe", this, { hasUnpiped: false });
          return this;
        }
        var s2 = D2(t4.pipes, e4);
        return -1 === s2 || (t4.pipes.splice(s2, 1), t4.pipesCount -= 1, 1 === t4.pipesCount && (t4.pipes = t4.pipes[0]), e4.emit("unpipe", this, r4)), this;
      }, C2.prototype.on = function (e4, t4) {
        var r4 = a.prototype.on.call(this, e4, t4), n4 = this._readableState;
        return "data" === e4 ? (n4.readableListening = this.listenerCount("readable") > 0, false !== n4.flowing && this.resume()) : "readable" === e4 && (n4.endEmitted || n4.readableListening || (n4.readableListening = n4.needReadable = true, n4.flowing = false, n4.emittedReadable = false, o("on readable", n4.length, n4.reading), n4.length ? B2(this) : n4.reading || i.nextTick(M2, this))), r4;
      }, C2.prototype.addListener = C2.prototype.on, C2.prototype.removeListener = function (e4, t4) {
        var r4 = a.prototype.removeListener.call(this, e4, t4);
        return "readable" === e4 && i.nextTick(N2, this), r4;
      }, C2.prototype.removeAllListeners = function (e4) {
        var t4 = a.prototype.removeAllListeners.apply(this, arguments);
        return "readable" !== e4 && void 0 !== e4 || i.nextTick(N2, this), t4;
      }, C2.prototype.resume = function () {
        var e4 = this._readableState;
        return e4.flowing || (o("resume"), e4.flowing = !e4.readableListening, function (e5, t4) {
          t4.resumeScheduled || (t4.resumeScheduled = true, i.nextTick(L2, e5, t4));
        }(this, e4)), e4.paused = false, this;
      }, C2.prototype.pause = function () {
        return o("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (o("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
      }, C2.prototype.wrap = function (e4) {
        var t4 = this, r4 = this._readableState, n4 = false;
        for (var i2 in e4.on("end", function () {
          if (o("wrapped end"), r4.decoder && !r4.ended) {
            var e5 = r4.decoder.end();
            e5 && e5.length && t4.push(e5);
          }
          t4.push(null);
        }), e4.on("data", function (i3) {
          o("wrapped data"), r4.decoder && (i3 = r4.decoder.write(i3)), r4.objectMode && null == i3 || (r4.objectMode || i3 && i3.length) && (t4.push(i3) || (n4 = true, e4.pause()));
        }), e4)
          void 0 === this[i2] && "function" == typeof e4[i2] && (this[i2] = /* @__PURE__ */ function (t5) {
            return function () {
              return e4[t5].apply(e4, arguments);
            };
          }(i2));
        for (var s2 = 0; s2 < k2.length; s2++)
          e4.on(k2[s2], this.emit.bind(this, k2[s2]));
        return this._read = function (t5) {
          o("wrapped _read", t5), n4 && (n4 = false, e4.resume());
        }, this;
      }, "function" == typeof Symbol && (C2.prototype[Symbol.asyncIterator] = function () {
        return void 0 === f2 && (f2 = r3(5850)), f2(this);
      }), Object.defineProperty(C2.prototype, "readableHighWaterMark", {
        enumerable: false, get: function () {
          return this._readableState.highWaterMark;
        }
      }), Object.defineProperty(C2.prototype, "readableBuffer", {
        enumerable: false, get: function () {
          return this._readableState && this._readableState.buffer;
        }
      }), Object.defineProperty(C2.prototype, "readableFlowing", {
        enumerable: false, get: function () {
          return this._readableState.flowing;
        }, set: function (e4) {
          this._readableState && (this._readableState.flowing = e4);
        }
      }), C2._fromList = j, Object.defineProperty(C2.prototype, "readableLength", {
        enumerable: false, get: function () {
          return this._readableState.length;
        }
      }), "function" == typeof Symbol && (C2.from = function (e4, t4) {
        return void 0 === p2 && (p2 = r3(5167)), p2(C2, e4, t4);
      });
    }, 4605: function (e3, t3, r3) {
      e3.exports = c;
      var n3 = r3(4281).q, i = n3.ERR_METHOD_NOT_IMPLEMENTED, o = n3.ERR_MULTIPLE_CALLBACK, s = n3.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n3.ERR_TRANSFORM_WITH_LENGTH_0, u2 = r3(6753);
      function l2(e4, t4) {
        var r4 = this._transformState;
        r4.transforming = false;
        var n4 = r4.writecb;
        if (null === n4)
          return this.emit("error", new o());
        r4.writechunk = null, r4.writecb = null, null != t4 && this.push(t4), n4(e4);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function c(e4) {
        if (!(this instanceof c))
          return new c(e4);
        u2.call(this, e4), this._transformState = { afterTransform: l2.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e4 && ("function" == typeof e4.transform && (this._transform = e4.transform), "function" == typeof e4.flush && (this._flush = e4.flush)), this.on("prefinish", h2);
      }
      function h2() {
        var e4 = this;
        "function" != typeof this._flush || this._readableState.destroyed ? f2(this, null, null) : this._flush(function (t4, r4) {
          f2(e4, t4, r4);
        });
      }
      function f2(e4, t4, r4) {
        if (t4)
          return e4.emit("error", t4);
        if (null != r4 && e4.push(r4), e4._writableState.length)
          throw new a();
        if (e4._transformState.transforming)
          throw new s();
        return e4.push(null);
      }
      r3(5717)(c, u2), c.prototype.push = function (e4, t4) {
        return this._transformState.needTransform = false, u2.prototype.push.call(this, e4, t4);
      }, c.prototype._transform = function (e4, t4, r4) {
        r4(new i("_transform()"));
      }, c.prototype._write = function (e4, t4, r4) {
        var n4 = this._transformState;
        if (n4.writecb = r4, n4.writechunk = e4, n4.writeencoding = t4, !n4.transforming) {
          var i2 = this._readableState;
          (n4.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, c.prototype._read = function (e4) {
        var t4 = this._transformState;
        null === t4.writechunk || t4.transforming ? t4.needTransform = true : (t4.transforming = true, this._transform(t4.writechunk, t4.writeencoding, t4.afterTransform));
      }, c.prototype._destroy = function (e4, t4) {
        u2.prototype._destroy.call(this, e4, function (e5) {
          t4(e5);
        });
      };
    }, 4229: function (e3, t3, r3) {
      var n3, i = r3(4155);
      function o(e4) {
        var t4 = this;
        this.next = null, this.entry = null, this.finish = function () {
          !function (e5, t5, r4) {
            var n4 = e5.entry;
            for (e5.entry = null; n4;) {
              var i2 = n4.callback;
              t5.pendingcb--, i2(void 0), n4 = n4.next;
            }
            t5.corkedRequestsFree.next = e5;
          }(t4, e4);
        };
      }
      e3.exports = C2, C2.WritableState = S2;
      var s, a = { deprecate: r3(4927) }, u2 = r3(2503), l2 = r3(8764).Buffer, c = r3.g.Uint8Array || function () {
      }, h2 = r3(1195), f2 = r3(2457).getHighWaterMark, p2 = r3(4281).q, d = p2.ERR_INVALID_ARG_TYPE, y2 = p2.ERR_METHOD_NOT_IMPLEMENTED, g = p2.ERR_MULTIPLE_CALLBACK, b = p2.ERR_STREAM_CANNOT_PIPE, m2 = p2.ERR_STREAM_DESTROYED, v2 = p2.ERR_STREAM_NULL_VALUES, w2 = p2.ERR_STREAM_WRITE_AFTER_END, _2 = p2.ERR_UNKNOWN_ENCODING, E2 = h2.errorOrDestroy;
      function k2() {
      }
      function S2(e4, t4, s2) {
        n3 = n3 || r3(6753), e4 = e4 || {}, "boolean" != typeof s2 && (s2 = t4 instanceof n3), this.objectMode = !!e4.objectMode, s2 && (this.objectMode = this.objectMode || !!e4.writableObjectMode), this.highWaterMark = f2(this, e4, "writableHighWaterMark", s2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
        var a2 = false === e4.decodeStrings;
        this.decodeStrings = !a2, this.defaultEncoding = e4.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function (e5) {
          !function (e6, t5) {
            var r4 = e6._writableState, n4 = r4.sync, o2 = r4.writecb;
            if ("function" != typeof o2)
              throw new g();
            if (function (e7) {
              e7.writing = false, e7.writecb = null, e7.length -= e7.writelen, e7.writelen = 0;
            }(r4), t5)
              !function (e7, t6, r5, n5, o3) {
                --t6.pendingcb, r5 ? (i.nextTick(o3, n5), i.nextTick(R2, e7, t6), e7._writableState.errorEmitted = true, E2(e7, n5)) : (o3(n5), e7._writableState.errorEmitted = true, E2(e7, n5), R2(e7, t6));
              }(e6, r4, n4, t5, o2);
            else {
              var s3 = x2(r4) || e6.destroyed;
              s3 || r4.corked || r4.bufferProcessing || !r4.bufferedRequest || I2(e6, r4), n4 ? i.nextTick(A2, e6, r4, s3, o2) : A2(e6, r4, s3, o2);
            }
          }(t4, e5);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e4.emitClose, this.autoDestroy = !!e4.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new o(this);
      }
      function C2(e4) {
        var t4 = this instanceof (n3 = n3 || r3(6753));
        if (!t4 && !s.call(C2, this))
          return new C2(e4);
        this._writableState = new S2(e4, this, t4), this.writable = true, e4 && ("function" == typeof e4.write && (this._write = e4.write), "function" == typeof e4.writev && (this._writev = e4.writev), "function" == typeof e4.destroy && (this._destroy = e4.destroy), "function" == typeof e4.final && (this._final = e4.final)), u2.call(this);
      }
      function T2(e4, t4, r4, n4, i2, o2, s2) {
        t4.writelen = n4, t4.writecb = s2, t4.writing = true, t4.sync = true, t4.destroyed ? t4.onwrite(new m2("write")) : r4 ? e4._writev(i2, t4.onwrite) : e4._write(i2, o2, t4.onwrite), t4.sync = false;
      }
      function A2(e4, t4, r4, n4) {
        r4 || function (e5, t5) {
          0 === t5.length && t5.needDrain && (t5.needDrain = false, e5.emit("drain"));
        }(e4, t4), t4.pendingcb--, n4(), R2(e4, t4);
      }
      function I2(e4, t4) {
        t4.bufferProcessing = true;
        var r4 = t4.bufferedRequest;
        if (e4._writev && r4 && r4.next) {
          var n4 = t4.bufferedRequestCount, i2 = new Array(n4), s2 = t4.corkedRequestsFree;
          s2.entry = r4;
          for (var a2 = 0, u3 = true; r4;)
            i2[a2] = r4, r4.isBuf || (u3 = false), r4 = r4.next, a2 += 1;
          i2.allBuffers = u3, T2(e4, t4, true, t4.length, i2, "", s2.finish), t4.pendingcb++, t4.lastBufferedRequest = null, s2.next ? (t4.corkedRequestsFree = s2.next, s2.next = null) : t4.corkedRequestsFree = new o(t4), t4.bufferedRequestCount = 0;
        } else {
          for (; r4;) {
            var l3 = r4.chunk, c2 = r4.encoding, h3 = r4.callback;
            if (T2(e4, t4, false, t4.objectMode ? 1 : l3.length, l3, c2, h3), r4 = r4.next, t4.bufferedRequestCount--, t4.writing)
              break;
          }
          null === r4 && (t4.lastBufferedRequest = null);
        }
        t4.bufferedRequest = r4, t4.bufferProcessing = false;
      }
      function x2(e4) {
        return e4.ending && 0 === e4.length && null === e4.bufferedRequest && !e4.finished && !e4.writing;
      }
      function B2(e4, t4) {
        e4._final(function (r4) {
          t4.pendingcb--, r4 && E2(e4, r4), t4.prefinished = true, e4.emit("prefinish"), R2(e4, t4);
        });
      }
      function R2(e4, t4) {
        var r4 = x2(t4);
        if (r4 && (function (e5, t5) {
          t5.prefinished || t5.finalCalled || ("function" != typeof e5._final || t5.destroyed ? (t5.prefinished = true, e5.emit("prefinish")) : (t5.pendingcb++, t5.finalCalled = true, i.nextTick(B2, e5, t5)));
        }(e4, t4), 0 === t4.pendingcb && (t4.finished = true, e4.emit("finish"), t4.autoDestroy))) {
          var n4 = e4._readableState;
          (!n4 || n4.autoDestroy && n4.endEmitted) && e4.destroy();
        }
        return r4;
      }
      r3(5717)(C2, u2), S2.prototype.getBuffer = function () {
        for (var e4 = this.bufferedRequest, t4 = []; e4;)
          t4.push(e4), e4 = e4.next;
        return t4;
      }, function () {
        try {
          Object.defineProperty(S2.prototype, "buffer", {
            get: a.deprecate(function () {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (e4) {
        }
      }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (s = Function.prototype[Symbol.hasInstance], Object.defineProperty(C2, Symbol.hasInstance, {
        value: function (e4) {
          return !!s.call(this, e4) || this === C2 && e4 && e4._writableState instanceof S2;
        }
      })) : s = function (e4) {
        return e4 instanceof this;
      }, C2.prototype.pipe = function () {
        E2(this, new b());
      }, C2.prototype.write = function (e4, t4, r4) {
        var n4, o2 = this._writableState, s2 = false, a2 = !o2.objectMode && (n4 = e4, l2.isBuffer(n4) || n4 instanceof c);
        return a2 && !l2.isBuffer(e4) && (e4 = function (e5) {
          return l2.from(e5);
        }(e4)), "function" == typeof t4 && (r4 = t4, t4 = null), a2 ? t4 = "buffer" : t4 || (t4 = o2.defaultEncoding), "function" != typeof r4 && (r4 = k2), o2.ending ? function (e5, t5) {
          var r5 = new w2();
          E2(e5, r5), i.nextTick(t5, r5);
        }(this, r4) : (a2 || function (e5, t5, r5, n5) {
          var o3;
          return null === r5 ? o3 = new v2() : "string" == typeof r5 || t5.objectMode || (o3 = new d("chunk", ["string", "Buffer"], r5)), !o3 || (E2(e5, o3), i.nextTick(n5, o3), false);
        }(this, o2, e4, r4)) && (o2.pendingcb++, s2 = function (e5, t5, r5, n5, i2, o3) {
          if (!r5) {
            var s3 = function (e6, t6, r6) {
              return e6.objectMode || false === e6.decodeStrings || "string" != typeof t6 || (t6 = l2.from(t6, r6)), t6;
            }(t5, n5, i2);
            n5 !== s3 && (r5 = true, i2 = "buffer", n5 = s3);
          }
          var a3 = t5.objectMode ? 1 : n5.length;
          t5.length += a3;
          var u3 = t5.length < t5.highWaterMark;
          if (u3 || (t5.needDrain = true), t5.writing || t5.corked) {
            var c2 = t5.lastBufferedRequest;
            t5.lastBufferedRequest = { chunk: n5, encoding: i2, isBuf: r5, callback: o3, next: null }, c2 ? c2.next = t5.lastBufferedRequest : t5.bufferedRequest = t5.lastBufferedRequest, t5.bufferedRequestCount += 1;
          } else
            T2(e5, t5, false, a3, n5, i2, o3);
          return u3;
        }(this, o2, a2, e4, t4, r4)), s2;
      }, C2.prototype.cork = function () {
        this._writableState.corked++;
      }, C2.prototype.uncork = function () {
        var e4 = this._writableState;
        e4.corked && (e4.corked--, e4.writing || e4.corked || e4.bufferProcessing || !e4.bufferedRequest || I2(this, e4));
      }, C2.prototype.setDefaultEncoding = function (e4) {
        if ("string" == typeof e4 && (e4 = e4.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e4 + "").toLowerCase()) > -1))
          throw new _2(e4);
        return this._writableState.defaultEncoding = e4, this;
      }, Object.defineProperty(C2.prototype, "writableBuffer", {
        enumerable: false, get: function () {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(C2.prototype, "writableHighWaterMark", {
        enumerable: false, get: function () {
          return this._writableState.highWaterMark;
        }
      }), C2.prototype._write = function (e4, t4, r4) {
        r4(new y2("_write()"));
      }, C2.prototype._writev = null, C2.prototype.end = function (e4, t4, r4) {
        var n4 = this._writableState;
        return "function" == typeof e4 ? (r4 = e4, e4 = null, t4 = null) : "function" == typeof t4 && (r4 = t4, t4 = null), null != e4 && this.write(e4, t4), n4.corked && (n4.corked = 1, this.uncork()), n4.ending || function (e5, t5, r5) {
          t5.ending = true, R2(e5, t5), r5 && (t5.finished ? i.nextTick(r5) : e5.once("finish", r5)), t5.ended = true, e5.writable = false;
        }(this, n4, r4), this;
      }, Object.defineProperty(C2.prototype, "writableLength", {
        enumerable: false, get: function () {
          return this._writableState.length;
        }
      }), Object.defineProperty(C2.prototype, "destroyed", {
        enumerable: false, get: function () {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function (e4) {
          this._writableState && (this._writableState.destroyed = e4);
        }
      }), C2.prototype.destroy = h2.destroy, C2.prototype._undestroy = h2.undestroy, C2.prototype._destroy = function (e4, t4) {
        t4(e4);
      };
    }, 5850: function (e3, t3, r3) {
      var n3, i = r3(4155);
      function o(e4, t4, r4) {
        return t4 in e4 ? Object.defineProperty(e4, t4, { value: r4, enumerable: true, configurable: true, writable: true }) : e4[t4] = r4, e4;
      }
      var s = r3(8610), a = Symbol("lastResolve"), u2 = Symbol("lastReject"), l2 = Symbol("error"), c = Symbol("ended"), h2 = Symbol("lastPromise"), f2 = Symbol("handlePromise"), p2 = Symbol("stream");
      function d(e4, t4) {
        return { value: e4, done: t4 };
      }
      function y2(e4) {
        var t4 = e4[a];
        if (null !== t4) {
          var r4 = e4[p2].read();
          null !== r4 && (e4[h2] = null, e4[a] = null, e4[u2] = null, t4(d(r4, false)));
        }
      }
      function g(e4) {
        i.nextTick(y2, e4);
      }
      var b = Object.getPrototypeOf(function () {
      }), m2 = Object.setPrototypeOf((o(n3 = {
        get stream() {
          return this[p2];
        }, next: function () {
          var e4 = this, t4 = this[l2];
          if (null !== t4)
            return Promise.reject(t4);
          if (this[c])
            return Promise.resolve(d(void 0, true));
          if (this[p2].destroyed)
            return new Promise(function (t5, r5) {
              i.nextTick(function () {
                e4[l2] ? r5(e4[l2]) : t5(d(void 0, true));
              });
            });
          var r4, n4 = this[h2];
          if (n4)
            r4 = new Promise(/* @__PURE__ */ function (e5, t5) {
              return function (r5, n5) {
                e5.then(function () {
                  t5[c] ? r5(d(void 0, true)) : t5[f2](r5, n5);
                }, n5);
              };
            }(n4, this));
          else {
            var o2 = this[p2].read();
            if (null !== o2)
              return Promise.resolve(d(o2, false));
            r4 = new Promise(this[f2]);
          }
          return this[h2] = r4, r4;
        }
      }, Symbol.asyncIterator, function () {
        return this;
      }), o(n3, "return", function () {
        var e4 = this;
        return new Promise(function (t4, r4) {
          e4[p2].destroy(null, function (e5) {
            e5 ? r4(e5) : t4(d(void 0, true));
          });
        });
      }), n3), b);
      e3.exports = function (e4) {
        var t4, r4 = Object.create(m2, (o(t4 = {}, p2, { value: e4, writable: true }), o(t4, a, { value: null, writable: true }), o(t4, u2, { value: null, writable: true }), o(t4, l2, { value: null, writable: true }), o(t4, c, { value: e4._readableState.endEmitted, writable: true }), o(t4, f2, {
          value: function (e5, t5) {
            var n4 = r4[p2].read();
            n4 ? (r4[h2] = null, r4[a] = null, r4[u2] = null, e5(d(n4, false))) : (r4[a] = e5, r4[u2] = t5);
          }, writable: true
        }), t4));
        return r4[h2] = null, s(e4, function (e5) {
          if (e5 && "ERR_STREAM_PREMATURE_CLOSE" !== e5.code) {
            var t5 = r4[u2];
            return null !== t5 && (r4[h2] = null, r4[a] = null, r4[u2] = null, t5(e5)), void (r4[l2] = e5);
          }
          var n4 = r4[a];
          null !== n4 && (r4[h2] = null, r4[a] = null, r4[u2] = null, n4(d(void 0, true))), r4[c] = true;
        }), e4.on("readable", g.bind(null, r4)), r4;
      };
    }, 7327: function (e3, t3, r3) {
      function n3(e4, t4) {
        var r4 = Object.keys(e4);
        if (Object.getOwnPropertySymbols) {
          var n4 = Object.getOwnPropertySymbols(e4);
          t4 && (n4 = n4.filter(function (t5) {
            return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
          })), r4.push.apply(r4, n4);
        }
        return r4;
      }
      function i(e4, t4, r4) {
        return t4 in e4 ? Object.defineProperty(e4, t4, { value: r4, enumerable: true, configurable: true, writable: true }) : e4[t4] = r4, e4;
      }
      function o(e4, t4) {
        for (var r4 = 0; r4 < t4.length; r4++) {
          var n4 = t4[r4];
          n4.enumerable = n4.enumerable || false, n4.configurable = true, "value" in n4 && (n4.writable = true), Object.defineProperty(e4, n4.key, n4);
        }
      }
      var s = r3(8764).Buffer, a = r3(2361).inspect, u2 = a && a.custom || "inspect";
      e3.exports = function () {
        function e4() {
          !function (e5, t5) {
            if (!(e5 instanceof t5))
              throw new TypeError("Cannot call a class as a function");
          }(this, e4), this.head = null, this.tail = null, this.length = 0;
        }
        var t4, r4;
        return t4 = e4, r4 = [{
          key: "push", value: function (e5) {
            var t5 = { data: e5, next: null };
            this.length > 0 ? this.tail.next = t5 : this.head = t5, this.tail = t5, ++this.length;
          }
        }, {
          key: "unshift", value: function (e5) {
            var t5 = { data: e5, next: this.head };
            0 === this.length && (this.tail = t5), this.head = t5, ++this.length;
          }
        }, {
          key: "shift", value: function () {
            if (0 !== this.length) {
              var e5 = this.head.data;
              return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e5;
            }
          }
        }, {
          key: "clear", value: function () {
            this.head = this.tail = null, this.length = 0;
          }
        }, {
          key: "join", value: function (e5) {
            if (0 === this.length)
              return "";
            for (var t5 = this.head, r5 = "" + t5.data; t5 = t5.next;)
              r5 += e5 + t5.data;
            return r5;
          }
        }, {
          key: "concat", value: function (e5) {
            if (0 === this.length)
              return s.alloc(0);
            for (var t5, r5, n4, i2 = s.allocUnsafe(e5 >>> 0), o2 = this.head, a2 = 0; o2;)
              t5 = o2.data, r5 = i2, n4 = a2, s.prototype.copy.call(t5, r5, n4), a2 += o2.data.length, o2 = o2.next;
            return i2;
          }
        }, {
          key: "consume", value: function (e5, t5) {
            var r5;
            return e5 < this.head.data.length ? (r5 = this.head.data.slice(0, e5), this.head.data = this.head.data.slice(e5)) : r5 = e5 === this.head.data.length ? this.shift() : t5 ? this._getString(e5) : this._getBuffer(e5), r5;
          }
        }, {
          key: "first", value: function () {
            return this.head.data;
          }
        }, {
          key: "_getString", value: function (e5) {
            var t5 = this.head, r5 = 1, n4 = t5.data;
            for (e5 -= n4.length; t5 = t5.next;) {
              var i2 = t5.data, o2 = e5 > i2.length ? i2.length : e5;
              if (o2 === i2.length ? n4 += i2 : n4 += i2.slice(0, e5), 0 == (e5 -= o2)) {
                o2 === i2.length ? (++r5, t5.next ? this.head = t5.next : this.head = this.tail = null) : (this.head = t5, t5.data = i2.slice(o2));
                break;
              }
              ++r5;
            }
            return this.length -= r5, n4;
          }
        }, {
          key: "_getBuffer", value: function (e5) {
            var t5 = s.allocUnsafe(e5), r5 = this.head, n4 = 1;
            for (r5.data.copy(t5), e5 -= r5.data.length; r5 = r5.next;) {
              var i2 = r5.data, o2 = e5 > i2.length ? i2.length : e5;
              if (i2.copy(t5, t5.length - e5, 0, o2), 0 == (e5 -= o2)) {
                o2 === i2.length ? (++n4, r5.next ? this.head = r5.next : this.head = this.tail = null) : (this.head = r5, r5.data = i2.slice(o2));
                break;
              }
              ++n4;
            }
            return this.length -= n4, t5;
          }
        }, {
          key: u2, value: function (e5, t5) {
            return a(this, function (e6) {
              for (var t6 = 1; t6 < arguments.length; t6++) {
                var r5 = null != arguments[t6] ? arguments[t6] : {};
                t6 % 2 ? n3(Object(r5), true).forEach(function (t7) {
                  i(e6, t7, r5[t7]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e6, Object.getOwnPropertyDescriptors(r5)) : n3(Object(r5)).forEach(function (t7) {
                  Object.defineProperty(e6, t7, Object.getOwnPropertyDescriptor(r5, t7));
                });
              }
              return e6;
            }({}, t5, { depth: 0, customInspect: false }));
          }
        }], r4 && o(t4.prototype, r4), e4;
      }();
    }, 1195: function (e3, t3, r3) {
      var n3 = r3(4155);
      function i(e4, t4) {
        s(e4, t4), o(e4);
      }
      function o(e4) {
        e4._writableState && !e4._writableState.emitClose || e4._readableState && !e4._readableState.emitClose || e4.emit("close");
      }
      function s(e4, t4) {
        e4.emit("error", t4);
      }
      e3.exports = {
        destroy: function (e4, t4) {
          var r4 = this, a = this._readableState && this._readableState.destroyed, u2 = this._writableState && this._writableState.destroyed;
          return a || u2 ? (t4 ? t4(e4) : e4 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, n3.nextTick(s, this, e4)) : n3.nextTick(s, this, e4)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e4 || null, function (e5) {
            !t4 && e5 ? r4._writableState ? r4._writableState.errorEmitted ? n3.nextTick(o, r4) : (r4._writableState.errorEmitted = true, n3.nextTick(i, r4, e5)) : n3.nextTick(i, r4, e5) : t4 ? (n3.nextTick(o, r4), t4(e5)) : n3.nextTick(o, r4);
          }), this);
        }, undestroy: function () {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function (e4, t4) {
          var r4 = e4._readableState, n4 = e4._writableState;
          r4 && r4.autoDestroy || n4 && n4.autoDestroy ? e4.destroy(t4) : e4.emit("error", t4);
        }
      };
    }, 8610: function (e3, t3, r3) {
      var n3 = r3(4281).q.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e3.exports = function e4(t4, r4, o) {
        if ("function" == typeof r4)
          return e4(t4, null, r4);
        r4 || (r4 = {}), o = /* @__PURE__ */ function (e5) {
          var t5 = false;
          return function () {
            if (!t5) {
              t5 = true;
              for (var r5 = arguments.length, n4 = new Array(r5), i2 = 0; i2 < r5; i2++)
                n4[i2] = arguments[i2];
              e5.apply(this, n4);
            }
          };
        }(o || i);
        var s = r4.readable || false !== r4.readable && t4.readable, a = r4.writable || false !== r4.writable && t4.writable, u2 = function () {
          t4.writable || c();
        }, l2 = t4._writableState && t4._writableState.finished, c = function () {
          a = false, l2 = true, s || o.call(t4);
        }, h2 = t4._readableState && t4._readableState.endEmitted, f2 = function () {
          s = false, h2 = true, a || o.call(t4);
        }, p2 = function (e5) {
          o.call(t4, e5);
        }, d = function () {
          var e5;
          return s && !h2 ? (t4._readableState && t4._readableState.ended || (e5 = new n3()), o.call(t4, e5)) : a && !l2 ? (t4._writableState && t4._writableState.ended || (e5 = new n3()), o.call(t4, e5)) : void 0;
        }, y2 = function () {
          t4.req.on("finish", c);
        };
        return function (e5) {
          return e5.setHeader && "function" == typeof e5.abort;
        }(t4) ? (t4.on("complete", c), t4.on("abort", d), t4.req ? y2() : t4.on("request", y2)) : a && !t4._writableState && (t4.on("end", u2), t4.on("close", u2)), t4.on("end", f2), t4.on("finish", c), false !== r4.error && t4.on("error", p2), t4.on("close", d), function () {
          t4.removeListener("complete", c), t4.removeListener("abort", d), t4.removeListener("request", y2), t4.req && t4.req.removeListener("finish", c), t4.removeListener("end", u2), t4.removeListener("close", u2), t4.removeListener("finish", c), t4.removeListener("end", f2), t4.removeListener("error", p2), t4.removeListener("close", d);
        };
      };
    }, 5167: function (e3) {
      e3.exports = function () {
        throw new Error("Readable.from is not available in the browser");
      };
    }, 9946: function (e3, t3, r3) {
      var n3, i = r3(4281).q, o = i.ERR_MISSING_ARGS, s = i.ERR_STREAM_DESTROYED;
      function a(e4) {
        if (e4)
          throw e4;
      }
      function u2(e4, t4, i2, o2) {
        o2 = /* @__PURE__ */ function (e5) {
          var t5 = false;
          return function () {
            t5 || (t5 = true, e5.apply(void 0, arguments));
          };
        }(o2);
        var a2 = false;
        e4.on("close", function () {
          a2 = true;
        }), void 0 === n3 && (n3 = r3(8610)), n3(e4, { readable: t4, writable: i2 }, function (e5) {
          if (e5)
            return o2(e5);
          a2 = true, o2();
        });
        var u3 = false;
        return function (t5) {
          if (!a2 && !u3)
            return u3 = true, function (e5) {
              return e5.setHeader && "function" == typeof e5.abort;
            }(e4) ? e4.abort() : "function" == typeof e4.destroy ? e4.destroy() : void o2(t5 || new s("pipe"));
        };
      }
      function l2(e4) {
        e4();
      }
      function c(e4, t4) {
        return e4.pipe(t4);
      }
      function h2(e4) {
        return e4.length ? "function" != typeof e4[e4.length - 1] ? a : e4.pop() : a;
      }
      e3.exports = function () {
        for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
          t4[r4] = arguments[r4];
        var n4, i2 = h2(t4);
        if (Array.isArray(t4[0]) && (t4 = t4[0]), t4.length < 2)
          throw new o("streams");
        var s2 = t4.map(function (e5, r5) {
          var o2 = r5 < t4.length - 1;
          return u2(e5, o2, r5 > 0, function (e6) {
            n4 || (n4 = e6), e6 && s2.forEach(l2), o2 || (s2.forEach(l2), i2(n4));
          });
        });
        return t4.reduce(c);
      };
    }, 2457: function (e3, t3, r3) {
      var n3 = r3(4281).q.ERR_INVALID_OPT_VALUE;
      e3.exports = {
        getHighWaterMark: function (e4, t4, r4, i) {
          var o = function (e5, t5, r5) {
            return null != e5.highWaterMark ? e5.highWaterMark : t5 ? e5[r5] : null;
          }(t4, i, r4);
          if (null != o) {
            if (!isFinite(o) || Math.floor(o) !== o || o < 0)
              throw new n3(i ? r4 : "highWaterMark", o);
            return Math.floor(o);
          }
          return e4.objectMode ? 16 : 16384;
        }
      };
    }, 2503: function (e3, t3, r3) {
      e3.exports = r3(7187).EventEmitter;
    }, 8473: function (e3, t3, r3) {
      (t3 = e3.exports = r3(9481)).Stream = t3, t3.Readable = t3, t3.Writable = r3(4229), t3.Duplex = r3(6753), t3.Transform = r3(4605), t3.PassThrough = r3(2725), t3.finished = r3(8610), t3.pipeline = r3(9946);
    }, 5408: function (e3) {
      function t3(e4, t4, r3) {
        var n3 = this;
        this._callback = e4, this._args = r3, this._interval = setInterval(e4, t4, this._args), this.reschedule = function (e5) {
          e5 || (e5 = n3._interval), n3._interval && clearInterval(n3._interval), n3._interval = setInterval(n3._callback, e5, n3._args);
        }, this.clear = function () {
          n3._interval && (clearInterval(n3._interval), n3._interval = void 0);
        }, this.destroy = function () {
          n3._interval && clearInterval(n3._interval), n3._callback = void 0, n3._interval = void 0, n3._args = void 0;
        };
      }
      e3.exports = function () {
        if ("function" != typeof arguments[0])
          throw new Error("callback needed");
        if ("number" != typeof arguments[1])
          throw new Error("interval needed");
        var e4;
        if (arguments.length > 0) {
          e4 = new Array(arguments.length - 2);
          for (var r3 = 0; r3 < e4.length; r3++)
            e4[r3] = arguments[r3 + 2];
        }
        return new t3(arguments[0], arguments[1], e4);
      };
    }, 1697: function (e3, t3, r3) {
      e3.exports = r3(3188)();
    }, 3188: function (e3, t3, r3) {
      var n3 = r3(8764).Buffer;
      function i(e4) {
        return e4 instanceof n3 ? n3.from(e4) : new e4.constructor(e4.buffer.slice(), e4.byteOffset, e4.length);
      }
      e3.exports = function (e4) {
        return (e4 = e4 || {}).circles ? function (e5) {
          var t5 = [], r4 = [];
          return e5.proto ? function e6(o) {
            if ("object" != typeof o || null === o)
              return o;
            if (o instanceof Date)
              return new Date(o);
            if (Array.isArray(o))
              return n4(o, e6);
            if (o instanceof Map)
              return new Map(n4(Array.from(o), e6));
            if (o instanceof Set)
              return new Set(n4(Array.from(o), e6));
            var s = {};
            for (var a in t5.push(o), r4.push(s), o) {
              var u2 = o[a];
              if ("object" != typeof u2 || null === u2)
                s[a] = u2;
              else if (u2 instanceof Date)
                s[a] = new Date(u2);
              else if (u2 instanceof Map)
                s[a] = new Map(n4(Array.from(u2), e6));
              else if (u2 instanceof Set)
                s[a] = new Set(n4(Array.from(u2), e6));
              else if (ArrayBuffer.isView(u2))
                s[a] = i(u2);
              else {
                var l2 = t5.indexOf(u2);
                s[a] = -1 !== l2 ? r4[l2] : e6(u2);
              }
            }
            return t5.pop(), r4.pop(), s;
          } : function e6(o) {
            if ("object" != typeof o || null === o)
              return o;
            if (o instanceof Date)
              return new Date(o);
            if (Array.isArray(o))
              return n4(o, e6);
            if (o instanceof Map)
              return new Map(n4(Array.from(o), e6));
            if (o instanceof Set)
              return new Set(n4(Array.from(o), e6));
            var s = {};
            for (var a in t5.push(o), r4.push(s), o)
              if (false !== Object.hasOwnProperty.call(o, a)) {
                var u2 = o[a];
                if ("object" != typeof u2 || null === u2)
                  s[a] = u2;
                else if (u2 instanceof Date)
                  s[a] = new Date(u2);
                else if (u2 instanceof Map)
                  s[a] = new Map(n4(Array.from(u2), e6));
                else if (u2 instanceof Set)
                  s[a] = new Set(n4(Array.from(u2), e6));
                else if (ArrayBuffer.isView(u2))
                  s[a] = i(u2);
                else {
                  var l2 = t5.indexOf(u2);
                  s[a] = -1 !== l2 ? r4[l2] : e6(u2);
                }
              }
            return t5.pop(), r4.pop(), s;
          };
          function n4(e6, n5) {
            for (var o = Object.keys(e6), s = new Array(o.length), a = 0; a < o.length; a++) {
              var u2 = o[a], l2 = e6[u2];
              if ("object" != typeof l2 || null === l2)
                s[u2] = l2;
              else if (l2 instanceof Date)
                s[u2] = new Date(l2);
              else if (ArrayBuffer.isView(l2))
                s[u2] = i(l2);
              else {
                var c = t5.indexOf(l2);
                s[u2] = -1 !== c ? r4[c] : n5(l2);
              }
            }
            return s;
          }
        }(e4) : e4.proto ? function e5(r4) {
          if ("object" != typeof r4 || null === r4)
            return r4;
          if (r4 instanceof Date)
            return new Date(r4);
          if (Array.isArray(r4))
            return t4(r4, e5);
          if (r4 instanceof Map)
            return new Map(t4(Array.from(r4), e5));
          if (r4 instanceof Set)
            return new Set(t4(Array.from(r4), e5));
          var n4 = {};
          for (var o in r4) {
            var s = r4[o];
            "object" != typeof s || null === s ? n4[o] = s : s instanceof Date ? n4[o] = new Date(s) : s instanceof Map ? n4[o] = new Map(t4(Array.from(s), e5)) : s instanceof Set ? n4[o] = new Set(t4(Array.from(s), e5)) : ArrayBuffer.isView(s) ? n4[o] = i(s) : n4[o] = e5(s);
          }
          return n4;
        } : function e5(r4) {
          if ("object" != typeof r4 || null === r4)
            return r4;
          if (r4 instanceof Date)
            return new Date(r4);
          if (Array.isArray(r4))
            return t4(r4, e5);
          if (r4 instanceof Map)
            return new Map(t4(Array.from(r4), e5));
          if (r4 instanceof Set)
            return new Set(t4(Array.from(r4), e5));
          var n4 = {};
          for (var o in r4)
            if (false !== Object.hasOwnProperty.call(r4, o)) {
              var s = r4[o];
              "object" != typeof s || null === s ? n4[o] = s : s instanceof Date ? n4[o] = new Date(s) : s instanceof Map ? n4[o] = new Map(t4(Array.from(s), e5)) : s instanceof Set ? n4[o] = new Set(t4(Array.from(s), e5)) : ArrayBuffer.isView(s) ? n4[o] = i(s) : n4[o] = e5(s);
            }
          return n4;
        };
        function t4(e5, t5) {
          for (var r4 = Object.keys(e5), n4 = new Array(r4.length), o = 0; o < r4.length; o++) {
            var s = r4[o], a = e5[s];
            "object" != typeof a || null === a ? n4[s] = a : a instanceof Date ? n4[s] = new Date(a) : ArrayBuffer.isView(a) ? n4[s] = i(a) : n4[s] = t5(a);
          }
          return n4;
        }
      };
    }, 9509: function (e3, t3, r3) {
      var n3 = r3(8764), i = n3.Buffer;
      function o(e4, t4) {
        for (var r4 in e4)
          t4[r4] = e4[r4];
      }
      function s(e4, t4, r4) {
        return i(e4, t4, r4);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e3.exports = n3 : (o(n3, t3), t3.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function (e4, t4, r4) {
        if ("number" == typeof e4)
          throw new TypeError("Argument must not be a number");
        return i(e4, t4, r4);
      }, s.alloc = function (e4, t4, r4) {
        if ("number" != typeof e4)
          throw new TypeError("Argument must be a number");
        var n4 = i(e4);
        return void 0 !== t4 ? "string" == typeof r4 ? n4.fill(t4, r4) : n4.fill(t4) : n4.fill(0), n4;
      }, s.allocUnsafe = function (e4) {
        if ("number" != typeof e4)
          throw new TypeError("Argument must be a number");
        return i(e4);
      }, s.allocUnsafeSlow = function (e4) {
        if ("number" != typeof e4)
          throw new TypeError("Argument must be a number");
        return n3.SlowBuffer(e4);
      };
    }, 1852: function (e3) {
      e3.exports = function (e4) {
        var t3, r3 = e4._readableState;
        return r3 ? r3.objectMode || "number" == typeof e4._duplexState ? e4.read() : e4.read((t3 = r3).buffer.length ? t3.buffer.head ? t3.buffer.head.data.length : t3.buffer[0].length : t3.length) : null;
      };
    }, 2553: function (e3, t3, r3) {
      var n3 = r3(9509).Buffer, i = n3.isEncoding || function (e4) {
        switch ((e4 = "" + e4) && e4.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function o(e4) {
        var t4;
        switch (this.encoding = function (e5) {
          var t5 = function (e6) {
            if (!e6)
              return "utf8";
            for (var t6; ;)
              switch (e6) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e6;
                default:
                  if (t6)
                    return;
                  e6 = ("" + e6).toLowerCase(), t6 = true;
              }
          }(e5);
          if ("string" != typeof t5 && (n3.isEncoding === i || !i(e5)))
            throw new Error("Unknown encoding: " + e5);
          return t5 || e5;
        }(e4), this.encoding) {
          case "utf16le":
            this.text = u2, this.end = l2, t4 = 4;
            break;
          case "utf8":
            this.fillLast = a, t4 = 4;
            break;
          case "base64":
            this.text = c, this.end = h2, t4 = 3;
            break;
          default:
            return this.write = f2, void (this.end = p2);
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n3.allocUnsafe(t4);
      }
      function s(e4) {
        return e4 <= 127 ? 0 : e4 >> 5 == 6 ? 2 : e4 >> 4 == 14 ? 3 : e4 >> 3 == 30 ? 4 : e4 >> 6 == 2 ? -1 : -2;
      }
      function a(e4) {
        var t4 = this.lastTotal - this.lastNeed, r4 = function (e5, t5, r5) {
          if (128 != (192 & t5[0]))
            return e5.lastNeed = 0, "�";
          if (e5.lastNeed > 1 && t5.length > 1) {
            if (128 != (192 & t5[1]))
              return e5.lastNeed = 1, "�";
            if (e5.lastNeed > 2 && t5.length > 2 && 128 != (192 & t5[2]))
              return e5.lastNeed = 2, "�";
          }
        }(this, e4);
        return void 0 !== r4 ? r4 : this.lastNeed <= e4.length ? (e4.copy(this.lastChar, t4, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e4.copy(this.lastChar, t4, 0, e4.length), void (this.lastNeed -= e4.length));
      }
      function u2(e4, t4) {
        if ((e4.length - t4) % 2 == 0) {
          var r4 = e4.toString("utf16le", t4);
          if (r4) {
            var n4 = r4.charCodeAt(r4.length - 1);
            if (n4 >= 55296 && n4 <= 56319)
              return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e4[e4.length - 2], this.lastChar[1] = e4[e4.length - 1], r4.slice(0, -1);
          }
          return r4;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e4[e4.length - 1], e4.toString("utf16le", t4, e4.length - 1);
      }
      function l2(e4) {
        var t4 = e4 && e4.length ? this.write(e4) : "";
        if (this.lastNeed) {
          var r4 = this.lastTotal - this.lastNeed;
          return t4 + this.lastChar.toString("utf16le", 0, r4);
        }
        return t4;
      }
      function c(e4, t4) {
        var r4 = (e4.length - t4) % 3;
        return 0 === r4 ? e4.toString("base64", t4) : (this.lastNeed = 3 - r4, this.lastTotal = 3, 1 === r4 ? this.lastChar[0] = e4[e4.length - 1] : (this.lastChar[0] = e4[e4.length - 2], this.lastChar[1] = e4[e4.length - 1]), e4.toString("base64", t4, e4.length - r4));
      }
      function h2(e4) {
        var t4 = e4 && e4.length ? this.write(e4) : "";
        return this.lastNeed ? t4 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t4;
      }
      function f2(e4) {
        return e4.toString(this.encoding);
      }
      function p2(e4) {
        return e4 && e4.length ? this.write(e4) : "";
      }
      t3.s = o, o.prototype.write = function (e4) {
        if (0 === e4.length)
          return "";
        var t4, r4;
        if (this.lastNeed) {
          if (void 0 === (t4 = this.fillLast(e4)))
            return "";
          r4 = this.lastNeed, this.lastNeed = 0;
        } else
          r4 = 0;
        return r4 < e4.length ? t4 ? t4 + this.text(e4, r4) : this.text(e4, r4) : t4 || "";
      }, o.prototype.end = function (e4) {
        var t4 = e4 && e4.length ? this.write(e4) : "";
        return this.lastNeed ? t4 + "�" : t4;
      }, o.prototype.text = function (e4, t4) {
        var r4 = function (e5, t5, r5) {
          var n5 = t5.length - 1;
          if (n5 < r5)
            return 0;
          var i2 = s(t5[n5]);
          return i2 >= 0 ? (i2 > 0 && (e5.lastNeed = i2 - 1), i2) : --n5 < r5 || -2 === i2 ? 0 : (i2 = s(t5[n5])) >= 0 ? (i2 > 0 && (e5.lastNeed = i2 - 2), i2) : --n5 < r5 || -2 === i2 ? 0 : (i2 = s(t5[n5])) >= 0 ? (i2 > 0 && (2 === i2 ? i2 = 0 : e5.lastNeed = i2 - 3), i2) : 0;
        }(this, e4, t4);
        if (!this.lastNeed)
          return e4.toString("utf8", t4);
        this.lastTotal = r4;
        var n4 = e4.length - (r4 - this.lastNeed);
        return e4.copy(this.lastChar, 0, n4), e4.toString("utf8", t4, n4);
      }, o.prototype.fillLast = function (e4) {
        if (this.lastNeed <= e4.length)
          return e4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        e4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e4.length), this.lastNeed -= e4.length;
      };
    }, 2511: function (e3, t3, r3) {
      var n3;
      e3 = r3.nmd(e3), function (i) {
        t3 && t3.nodeType, e3 && e3.nodeType;
        var o = "object" == typeof r3.g && r3.g;
        o.global !== o && o.window !== o && o.self;
        var s, a = 2147483647, u2 = 36, l2 = /^xn--/, c = /[^\x20-\x7E]/, h2 = /[\x2E\u3002\uFF0E\uFF61]/g, f2 = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, p2 = Math.floor, d = String.fromCharCode;
        function y2(e4) {
          throw RangeError(f2[e4]);
        }
        function g(e4, t4) {
          for (var r4 = e4.length, n4 = []; r4--;)
            n4[r4] = t4(e4[r4]);
          return n4;
        }
        function b(e4, t4) {
          var r4 = e4.split("@"), n4 = "";
          return r4.length > 1 && (n4 = r4[0] + "@", e4 = r4[1]), n4 + g((e4 = e4.replace(h2, ".")).split("."), t4).join(".");
        }
        function m2(e4) {
          for (var t4, r4, n4 = [], i2 = 0, o2 = e4.length; i2 < o2;)
            (t4 = e4.charCodeAt(i2++)) >= 55296 && t4 <= 56319 && i2 < o2 ? 56320 == (64512 & (r4 = e4.charCodeAt(i2++))) ? n4.push(((1023 & t4) << 10) + (1023 & r4) + 65536) : (n4.push(t4), i2--) : n4.push(t4);
          return n4;
        }
        function v2(e4) {
          return g(e4, function (e5) {
            var t4 = "";
            return e5 > 65535 && (t4 += d((e5 -= 65536) >>> 10 & 1023 | 55296), e5 = 56320 | 1023 & e5), t4 + d(e5);
          }).join("");
        }
        function w2(e4, t4) {
          return e4 + 22 + 75 * (e4 < 26) - ((0 != t4) << 5);
        }
        function _2(e4, t4, r4) {
          var n4 = 0;
          for (e4 = r4 ? p2(e4 / 700) : e4 >> 1, e4 += p2(e4 / t4); e4 > 455; n4 += u2)
            e4 = p2(e4 / 35);
          return p2(n4 + 36 * e4 / (e4 + 38));
        }
        function E2(e4) {
          var t4, r4, n4, i2, o2, s2, l3, c2, h3, f3, d2, g2 = [], b2 = e4.length, m3 = 0, w3 = 128, E3 = 72;
          for ((r4 = e4.lastIndexOf("-")) < 0 && (r4 = 0), n4 = 0; n4 < r4; ++n4)
            e4.charCodeAt(n4) >= 128 && y2("not-basic"), g2.push(e4.charCodeAt(n4));
          for (i2 = r4 > 0 ? r4 + 1 : 0; i2 < b2;) {
            for (o2 = m3, s2 = 1, l3 = u2; i2 >= b2 && y2("invalid-input"), ((c2 = (d2 = e4.charCodeAt(i2++)) - 48 < 10 ? d2 - 22 : d2 - 65 < 26 ? d2 - 65 : d2 - 97 < 26 ? d2 - 97 : u2) >= u2 || c2 > p2((a - m3) / s2)) && y2("overflow"), m3 += c2 * s2, !(c2 < (h3 = l3 <= E3 ? 1 : l3 >= E3 + 26 ? 26 : l3 - E3)); l3 += u2)
              s2 > p2(a / (f3 = u2 - h3)) && y2("overflow"), s2 *= f3;
            E3 = _2(m3 - o2, t4 = g2.length + 1, 0 == o2), p2(m3 / t4) > a - w3 && y2("overflow"), w3 += p2(m3 / t4), m3 %= t4, g2.splice(m3++, 0, w3);
          }
          return v2(g2);
        }
        function k2(e4) {
          var t4, r4, n4, i2, o2, s2, l3, c2, h3, f3, g2, b2, v3, E3, k3, S2 = [];
          for (b2 = (e4 = m2(e4)).length, t4 = 128, r4 = 0, o2 = 72, s2 = 0; s2 < b2; ++s2)
            (g2 = e4[s2]) < 128 && S2.push(d(g2));
          for (n4 = i2 = S2.length, i2 && S2.push("-"); n4 < b2;) {
            for (l3 = a, s2 = 0; s2 < b2; ++s2)
              (g2 = e4[s2]) >= t4 && g2 < l3 && (l3 = g2);
            for (l3 - t4 > p2((a - r4) / (v3 = n4 + 1)) && y2("overflow"), r4 += (l3 - t4) * v3, t4 = l3, s2 = 0; s2 < b2; ++s2)
              if ((g2 = e4[s2]) < t4 && ++r4 > a && y2("overflow"), g2 == t4) {
                for (c2 = r4, h3 = u2; !(c2 < (f3 = h3 <= o2 ? 1 : h3 >= o2 + 26 ? 26 : h3 - o2)); h3 += u2)
                  k3 = c2 - f3, E3 = u2 - f3, S2.push(d(w2(f3 + k3 % E3, 0))), c2 = p2(k3 / E3);
                S2.push(d(w2(c2, 0))), o2 = _2(r4, v3, n4 == i2), r4 = 0, ++n4;
              }
            ++r4, ++t4;
          }
          return S2.join("");
        }
        s = {
          version: "1.3.2", ucs2: { decode: m2, encode: v2 }, decode: E2, encode: k2, toASCII: function (e4) {
            return b(e4, function (e5) {
              return c.test(e5) ? "xn--" + k2(e5) : e5;
            });
          }, toUnicode: function (e4) {
            return b(e4, function (e5) {
              return l2.test(e5) ? E2(e5.slice(4).toLowerCase()) : e5;
            });
          }
        }, void 0 === (n3 = (function () {
          return s;
        }).call(t3, r3, t3, e3)) || (e3.exports = n3);
      }();
    }, 8575: function (e3, t3, r3) {
      var n3 = r3(2511), i = r3(2502);
      function o() {
        this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
      }
      t3.parse = v2, t3.resolve = function (e4, t4) {
        return v2(e4, false, true).resolve(t4);
      }, t3.resolveObject = function (e4, t4) {
        return e4 ? v2(e4, false, true).resolveObject(t4) : t4;
      }, t3.format = function (e4) {
        return i.isString(e4) && (e4 = v2(e4)), e4 instanceof o ? e4.format() : o.prototype.format.call(e4);
      }, t3.Url = o;
      var s = /^([a-z0-9.+-]+:)/i, a = /:[0-9]*$/, u2 = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, l2 = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), c = ["'"].concat(l2), h2 = ["%", "/", "?", ";", "#"].concat(c), f2 = ["/", "?", "#"], p2 = /^[+a-z0-9A-Z_-]{0,63}$/, d = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, y2 = { javascript: true, "javascript:": true }, g = { javascript: true, "javascript:": true }, b = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, m2 = r3(7673);
      function v2(e4, t4, r4) {
        if (e4 && i.isObject(e4) && e4 instanceof o)
          return e4;
        var n4 = new o();
        return n4.parse(e4, t4, r4), n4;
      }
      o.prototype.parse = function (e4, t4, r4) {
        if (!i.isString(e4))
          throw new TypeError("Parameter 'url' must be a string, not " + typeof e4);
        var o2 = e4.indexOf("?"), a2 = -1 !== o2 && o2 < e4.indexOf("#") ? "?" : "#", l3 = e4.split(a2);
        l3[0] = l3[0].replace(/\\/g, "/");
        var v3 = e4 = l3.join(a2);
        if (v3 = v3.trim(), !r4 && 1 === e4.split("#").length) {
          var w2 = u2.exec(v3);
          if (w2)
            return this.path = v3, this.href = v3, this.pathname = w2[1], w2[2] ? (this.search = w2[2], this.query = t4 ? m2.parse(this.search.substr(1)) : this.search.substr(1)) : t4 && (this.search = "", this.query = {}), this;
        }
        var _2 = s.exec(v3);
        if (_2) {
          var E2 = (_2 = _2[0]).toLowerCase();
          this.protocol = E2, v3 = v3.substr(_2.length);
        }
        if (r4 || _2 || v3.match(/^\/\/[^@\/]+@[^@\/]+/)) {
          var k2 = "//" === v3.substr(0, 2);
          !k2 || _2 && g[_2] || (v3 = v3.substr(2), this.slashes = true);
        }
        if (!g[_2] && (k2 || _2 && !b[_2])) {
          for (var S2, C2, T2 = -1, A2 = 0; A2 < f2.length; A2++)
            -1 !== (I2 = v3.indexOf(f2[A2])) && (-1 === T2 || I2 < T2) && (T2 = I2);
          for (-1 !== (C2 = -1 === T2 ? v3.lastIndexOf("@") : v3.lastIndexOf("@", T2)) && (S2 = v3.slice(0, C2), v3 = v3.slice(C2 + 1), this.auth = decodeURIComponent(S2)), T2 = -1, A2 = 0; A2 < h2.length; A2++) {
            var I2;
            -1 !== (I2 = v3.indexOf(h2[A2])) && (-1 === T2 || I2 < T2) && (T2 = I2);
          }
          -1 === T2 && (T2 = v3.length), this.host = v3.slice(0, T2), v3 = v3.slice(T2), this.parseHost(), this.hostname = this.hostname || "";
          var x2 = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
          if (!x2)
            for (var B2 = this.hostname.split(/\./), R2 = (A2 = 0, B2.length); A2 < R2; A2++) {
              var O2 = B2[A2];
              if (O2 && !O2.match(p2)) {
                for (var P2 = "", N2 = 0, M2 = O2.length; N2 < M2; N2++)
                  O2.charCodeAt(N2) > 127 ? P2 += "x" : P2 += O2[N2];
                if (!P2.match(p2)) {
                  var L2 = B2.slice(0, A2), U2 = B2.slice(A2 + 1), j = O2.match(d);
                  j && (L2.push(j[1]), U2.unshift(j[2])), U2.length && (v3 = "/" + U2.join(".") + v3), this.hostname = L2.join(".");
                  break;
                }
              }
            }
          this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), x2 || (this.hostname = n3.toASCII(this.hostname));
          var q2 = this.port ? ":" + this.port : "", z2 = this.hostname || "";
          this.host = z2 + q2, this.href += this.host, x2 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== v3[0] && (v3 = "/" + v3));
        }
        if (!y2[E2])
          for (A2 = 0, R2 = c.length; A2 < R2; A2++) {
            var D2 = c[A2];
            if (-1 !== v3.indexOf(D2)) {
              var F2 = encodeURIComponent(D2);
              F2 === D2 && (F2 = escape(D2)), v3 = v3.split(D2).join(F2);
            }
          }
        var V2 = v3.indexOf("#");
        -1 !== V2 && (this.hash = v3.substr(V2), v3 = v3.slice(0, V2));
        var W2 = v3.indexOf("?");
        if (-1 !== W2 ? (this.search = v3.substr(W2), this.query = v3.substr(W2 + 1), t4 && (this.query = m2.parse(this.query)), v3 = v3.slice(0, W2)) : t4 && (this.search = "", this.query = {}), v3 && (this.pathname = v3), b[E2] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
          q2 = this.pathname || "";
          var H2 = this.search || "";
          this.path = q2 + H2;
        }
        return this.href = this.format(), this;
      }, o.prototype.format = function () {
        var e4 = this.auth || "";
        e4 && (e4 = (e4 = encodeURIComponent(e4)).replace(/%3A/i, ":"), e4 += "@");
        var t4 = this.protocol || "", r4 = this.pathname || "", n4 = this.hash || "", o2 = false, s2 = "";
        this.host ? o2 = e4 + this.host : this.hostname && (o2 = e4 + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o2 += ":" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (s2 = m2.stringify(this.query));
        var a2 = this.search || s2 && "?" + s2 || "";
        return t4 && ":" !== t4.substr(-1) && (t4 += ":"), this.slashes || (!t4 || b[t4]) && false !== o2 ? (o2 = "//" + (o2 || ""), r4 && "/" !== r4.charAt(0) && (r4 = "/" + r4)) : o2 || (o2 = ""), n4 && "#" !== n4.charAt(0) && (n4 = "#" + n4), a2 && "?" !== a2.charAt(0) && (a2 = "?" + a2), t4 + o2 + (r4 = r4.replace(/[?#]/g, function (e5) {
          return encodeURIComponent(e5);
        })) + (a2 = a2.replace("#", "%23")) + n4;
      }, o.prototype.resolve = function (e4) {
        return this.resolveObject(v2(e4, false, true)).format();
      }, o.prototype.resolveObject = function (e4) {
        if (i.isString(e4)) {
          var t4 = new o();
          t4.parse(e4, false, true), e4 = t4;
        }
        for (var r4 = new o(), n4 = Object.keys(this), s2 = 0; s2 < n4.length; s2++) {
          var a2 = n4[s2];
          r4[a2] = this[a2];
        }
        if (r4.hash = e4.hash, "" === e4.href)
          return r4.href = r4.format(), r4;
        if (e4.slashes && !e4.protocol) {
          for (var u3 = Object.keys(e4), l3 = 0; l3 < u3.length; l3++) {
            var c2 = u3[l3];
            "protocol" !== c2 && (r4[c2] = e4[c2]);
          }
          return b[r4.protocol] && r4.hostname && !r4.pathname && (r4.path = r4.pathname = "/"), r4.href = r4.format(), r4;
        }
        if (e4.protocol && e4.protocol !== r4.protocol) {
          if (!b[e4.protocol]) {
            for (var h3 = Object.keys(e4), f3 = 0; f3 < h3.length; f3++) {
              var p3 = h3[f3];
              r4[p3] = e4[p3];
            }
            return r4.href = r4.format(), r4;
          }
          if (r4.protocol = e4.protocol, e4.host || g[e4.protocol])
            r4.pathname = e4.pathname;
          else {
            for (var d2 = (e4.pathname || "").split("/"); d2.length && !(e4.host = d2.shift());)
              ;
            e4.host || (e4.host = ""), e4.hostname || (e4.hostname = ""), "" !== d2[0] && d2.unshift(""), d2.length < 2 && d2.unshift(""), r4.pathname = d2.join("/");
          }
          if (r4.search = e4.search, r4.query = e4.query, r4.host = e4.host || "", r4.auth = e4.auth, r4.hostname = e4.hostname || e4.host, r4.port = e4.port, r4.pathname || r4.search) {
            var y3 = r4.pathname || "", m3 = r4.search || "";
            r4.path = y3 + m3;
          }
          return r4.slashes = r4.slashes || e4.slashes, r4.href = r4.format(), r4;
        }
        var v3 = r4.pathname && "/" === r4.pathname.charAt(0), w2 = e4.host || e4.pathname && "/" === e4.pathname.charAt(0), _2 = w2 || v3 || r4.host && e4.pathname, E2 = _2, k2 = r4.pathname && r4.pathname.split("/") || [], S2 = (d2 = e4.pathname && e4.pathname.split("/") || [], r4.protocol && !b[r4.protocol]);
        if (S2 && (r4.hostname = "", r4.port = null, r4.host && ("" === k2[0] ? k2[0] = r4.host : k2.unshift(r4.host)), r4.host = "", e4.protocol && (e4.hostname = null, e4.port = null, e4.host && ("" === d2[0] ? d2[0] = e4.host : d2.unshift(e4.host)), e4.host = null), _2 = _2 && ("" === d2[0] || "" === k2[0])), w2)
          r4.host = e4.host || "" === e4.host ? e4.host : r4.host, r4.hostname = e4.hostname || "" === e4.hostname ? e4.hostname : r4.hostname, r4.search = e4.search, r4.query = e4.query, k2 = d2;
        else if (d2.length)
          k2 || (k2 = []), k2.pop(), k2 = k2.concat(d2), r4.search = e4.search, r4.query = e4.query;
        else if (!i.isNullOrUndefined(e4.search))
          return S2 && (r4.hostname = r4.host = k2.shift(), (x2 = !!(r4.host && r4.host.indexOf("@") > 0) && r4.host.split("@")) && (r4.auth = x2.shift(), r4.host = r4.hostname = x2.shift())), r4.search = e4.search, r4.query = e4.query, i.isNull(r4.pathname) && i.isNull(r4.search) || (r4.path = (r4.pathname ? r4.pathname : "") + (r4.search ? r4.search : "")), r4.href = r4.format(), r4;
        if (!k2.length)
          return r4.pathname = null, r4.search ? r4.path = "/" + r4.search : r4.path = null, r4.href = r4.format(), r4;
        for (var C2 = k2.slice(-1)[0], T2 = (r4.host || e4.host || k2.length > 1) && ("." === C2 || ".." === C2) || "" === C2, A2 = 0, I2 = k2.length; I2 >= 0; I2--)
          "." === (C2 = k2[I2]) ? k2.splice(I2, 1) : ".." === C2 ? (k2.splice(I2, 1), A2++) : A2 && (k2.splice(I2, 1), A2--);
        if (!_2 && !E2)
          for (; A2--; A2)
            k2.unshift("..");
        !_2 || "" === k2[0] || k2[0] && "/" === k2[0].charAt(0) || k2.unshift(""), T2 && "/" !== k2.join("/").substr(-1) && k2.push("");
        var x2, B2 = "" === k2[0] || k2[0] && "/" === k2[0].charAt(0);
        return S2 && (r4.hostname = r4.host = B2 ? "" : k2.length ? k2.shift() : "", (x2 = !!(r4.host && r4.host.indexOf("@") > 0) && r4.host.split("@")) && (r4.auth = x2.shift(), r4.host = r4.hostname = x2.shift())), (_2 = _2 || r4.host && k2.length) && !B2 && k2.unshift(""), k2.length ? r4.pathname = k2.join("/") : (r4.pathname = null, r4.path = null), i.isNull(r4.pathname) && i.isNull(r4.search) || (r4.path = (r4.pathname ? r4.pathname : "") + (r4.search ? r4.search : "")), r4.auth = e4.auth || r4.auth, r4.slashes = r4.slashes || e4.slashes, r4.href = r4.format(), r4;
      }, o.prototype.parseHost = function () {
        var e4 = this.host, t4 = a.exec(e4);
        t4 && (":" !== (t4 = t4[0]) && (this.port = t4.substr(1)), e4 = e4.substr(0, e4.length - t4.length)), e4 && (this.hostname = e4);
      };
    }, 2502: function (e3) {
      e3.exports = {
        isString: function (e4) {
          return "string" == typeof e4;
        }, isObject: function (e4) {
          return "object" == typeof e4 && null !== e4;
        }, isNull: function (e4) {
          return null === e4;
        }, isNullOrUndefined: function (e4) {
          return null == e4;
        }
      };
    }, 4927: function (e3, t3, r3) {
      function n3(e4) {
        try {
          if (!r3.g.localStorage)
            return false;
        } catch (e5) {
          return false;
        }
        var t4 = r3.g.localStorage[e4];
        return null != t4 && "true" === String(t4).toLowerCase();
      }
      e3.exports = function (e4, t4) {
        if (n3("noDeprecation"))
          return e4;
        var r4 = false;
        return function () {
          if (!r4) {
            if (n3("throwDeprecation"))
              throw new Error(t4);
            n3("traceDeprecation") ? console.trace(t4) : console.warn(t4), r4 = true;
          }
          return e4.apply(this, arguments);
        };
      };
    }, 2479: function (e3) {
      e3.exports = function e4(t3, r3) {
        if (t3 && r3)
          return e4(t3)(r3);
        if ("function" != typeof t3)
          throw new TypeError("need wrapper function");
        return Object.keys(t3).forEach(function (e5) {
          n3[e5] = t3[e5];
        }), n3;
        function n3() {
          for (var e5 = new Array(arguments.length), r4 = 0; r4 < e5.length; r4++)
            e5[r4] = arguments[r4];
          var n4 = t3.apply(this, e5), i = e5[e5.length - 1];
          return "function" == typeof n4 && n4 !== i && Object.keys(i).forEach(function (e6) {
            n4[e6] = i[e6];
          }), n4;
        }
      };
    }, 7026: function (e3) {
      e3.exports = function () {
        throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
      };
    }, 7529: function (e3) {
      e3.exports = function () {
        for (var e4 = {}, r3 = 0; r3 < arguments.length; r3++) {
          var n3 = arguments[r3];
          for (var i in n3)
            t3.call(n3, i) && (e4[i] = n3[i]);
        }
        return e4;
      };
      var t3 = Object.prototype.hasOwnProperty;
    }, 9602: function (e3) {
      e3.exports = function (e4) {
        e4.prototype[Symbol.iterator] = function* () {
          for (let e5 = this.head; e5; e5 = e5.next)
            yield e5.value;
        };
      };
    }, 4411: function (e3, t3, r3) {
      function n3(e4) {
        var t4 = this;
        if (t4 instanceof n3 || (t4 = new n3()), t4.tail = null, t4.head = null, t4.length = 0, e4 && "function" == typeof e4.forEach)
          e4.forEach(function (e5) {
            t4.push(e5);
          });
        else if (arguments.length > 0)
          for (var r4 = 0, i2 = arguments.length; r4 < i2; r4++)
            t4.push(arguments[r4]);
        return t4;
      }
      function i(e4, t4) {
        e4.tail = new s(t4, e4.tail, null, e4), e4.head || (e4.head = e4.tail), e4.length++;
      }
      function o(e4, t4) {
        e4.head = new s(t4, null, e4.head, e4), e4.tail || (e4.tail = e4.head), e4.length++;
      }
      function s(e4, t4, r4, n4) {
        if (!(this instanceof s))
          return new s(e4, t4, r4, n4);
        this.list = n4, this.value = e4, t4 ? (t4.next = this, this.prev = t4) : this.prev = null, r4 ? (r4.prev = this, this.next = r4) : this.next = null;
      }
      e3.exports = n3, n3.Node = s, n3.create = n3, n3.prototype.removeNode = function (e4) {
        if (e4.list !== this)
          throw new Error("removing node which does not belong to this list");
        var t4 = e4.next, r4 = e4.prev;
        return t4 && (t4.prev = r4), r4 && (r4.next = t4), e4 === this.head && (this.head = t4), e4 === this.tail && (this.tail = r4), e4.list.length--, e4.next = null, e4.prev = null, e4.list = null, t4;
      }, n3.prototype.unshiftNode = function (e4) {
        if (e4 !== this.head) {
          e4.list && e4.list.removeNode(e4);
          var t4 = this.head;
          e4.list = this, e4.next = t4, t4 && (t4.prev = e4), this.head = e4, this.tail || (this.tail = e4), this.length++;
        }
      }, n3.prototype.pushNode = function (e4) {
        if (e4 !== this.tail) {
          e4.list && e4.list.removeNode(e4);
          var t4 = this.tail;
          e4.list = this, e4.prev = t4, t4 && (t4.next = e4), this.tail = e4, this.head || (this.head = e4), this.length++;
        }
      }, n3.prototype.push = function () {
        for (var e4 = 0, t4 = arguments.length; e4 < t4; e4++)
          i(this, arguments[e4]);
        return this.length;
      }, n3.prototype.unshift = function () {
        for (var e4 = 0, t4 = arguments.length; e4 < t4; e4++)
          o(this, arguments[e4]);
        return this.length;
      }, n3.prototype.pop = function () {
        if (this.tail) {
          var e4 = this.tail.value;
          return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e4;
        }
      }, n3.prototype.shift = function () {
        if (this.head) {
          var e4 = this.head.value;
          return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e4;
        }
      }, n3.prototype.forEach = function (e4, t4) {
        t4 = t4 || this;
        for (var r4 = this.head, n4 = 0; null !== r4; n4++)
          e4.call(t4, r4.value, n4, this), r4 = r4.next;
      }, n3.prototype.forEachReverse = function (e4, t4) {
        t4 = t4 || this;
        for (var r4 = this.tail, n4 = this.length - 1; null !== r4; n4--)
          e4.call(t4, r4.value, n4, this), r4 = r4.prev;
      }, n3.prototype.get = function (e4) {
        for (var t4 = 0, r4 = this.head; null !== r4 && t4 < e4; t4++)
          r4 = r4.next;
        if (t4 === e4 && null !== r4)
          return r4.value;
      }, n3.prototype.getReverse = function (e4) {
        for (var t4 = 0, r4 = this.tail; null !== r4 && t4 < e4; t4++)
          r4 = r4.prev;
        if (t4 === e4 && null !== r4)
          return r4.value;
      }, n3.prototype.map = function (e4, t4) {
        t4 = t4 || this;
        for (var r4 = new n3(), i2 = this.head; null !== i2;)
          r4.push(e4.call(t4, i2.value, this)), i2 = i2.next;
        return r4;
      }, n3.prototype.mapReverse = function (e4, t4) {
        t4 = t4 || this;
        for (var r4 = new n3(), i2 = this.tail; null !== i2;)
          r4.push(e4.call(t4, i2.value, this)), i2 = i2.prev;
        return r4;
      }, n3.prototype.reduce = function (e4, t4) {
        var r4, n4 = this.head;
        if (arguments.length > 1)
          r4 = t4;
        else {
          if (!this.head)
            throw new TypeError("Reduce of empty list with no initial value");
          n4 = this.head.next, r4 = this.head.value;
        }
        for (var i2 = 0; null !== n4; i2++)
          r4 = e4(r4, n4.value, i2), n4 = n4.next;
        return r4;
      }, n3.prototype.reduceReverse = function (e4, t4) {
        var r4, n4 = this.tail;
        if (arguments.length > 1)
          r4 = t4;
        else {
          if (!this.tail)
            throw new TypeError("Reduce of empty list with no initial value");
          n4 = this.tail.prev, r4 = this.tail.value;
        }
        for (var i2 = this.length - 1; null !== n4; i2--)
          r4 = e4(r4, n4.value, i2), n4 = n4.prev;
        return r4;
      }, n3.prototype.toArray = function () {
        for (var e4 = new Array(this.length), t4 = 0, r4 = this.head; null !== r4; t4++)
          e4[t4] = r4.value, r4 = r4.next;
        return e4;
      }, n3.prototype.toArrayReverse = function () {
        for (var e4 = new Array(this.length), t4 = 0, r4 = this.tail; null !== r4; t4++)
          e4[t4] = r4.value, r4 = r4.prev;
        return e4;
      }, n3.prototype.slice = function (e4, t4) {
        (t4 = t4 || this.length) < 0 && (t4 += this.length), (e4 = e4 || 0) < 0 && (e4 += this.length);
        var r4 = new n3();
        if (t4 < e4 || t4 < 0)
          return r4;
        e4 < 0 && (e4 = 0), t4 > this.length && (t4 = this.length);
        for (var i2 = 0, o2 = this.head; null !== o2 && i2 < e4; i2++)
          o2 = o2.next;
        for (; null !== o2 && i2 < t4; i2++, o2 = o2.next)
          r4.push(o2.value);
        return r4;
      }, n3.prototype.sliceReverse = function (e4, t4) {
        (t4 = t4 || this.length) < 0 && (t4 += this.length), (e4 = e4 || 0) < 0 && (e4 += this.length);
        var r4 = new n3();
        if (t4 < e4 || t4 < 0)
          return r4;
        e4 < 0 && (e4 = 0), t4 > this.length && (t4 = this.length);
        for (var i2 = this.length, o2 = this.tail; null !== o2 && i2 > t4; i2--)
          o2 = o2.prev;
        for (; null !== o2 && i2 > e4; i2--, o2 = o2.prev)
          r4.push(o2.value);
        return r4;
      }, n3.prototype.splice = function (e4, t4, ...r4) {
        e4 > this.length && (e4 = this.length - 1), e4 < 0 && (e4 = this.length + e4);
        for (var n4 = 0, i2 = this.head; null !== i2 && n4 < e4; n4++)
          i2 = i2.next;
        var o2, a, u2, l2, c = [];
        for (n4 = 0; i2 && n4 < t4; n4++)
          c.push(i2.value), i2 = this.removeNode(i2);
        for (null === i2 && (i2 = this.tail), i2 !== this.head && i2 !== this.tail && (i2 = i2.prev), n4 = 0; n4 < r4.length; n4++)
          o2 = this, a = i2, u2 = r4[n4], l2 = void 0, null === (l2 = a === o2.head ? new s(u2, null, a, o2) : new s(u2, a, a.next, o2)).next && (o2.tail = l2), null === l2.prev && (o2.head = l2), o2.length++, i2 = l2;
        return c;
      }, n3.prototype.reverse = function () {
        for (var e4 = this.head, t4 = this.tail, r4 = e4; null !== r4; r4 = r4.prev) {
          var n4 = r4.prev;
          r4.prev = r4.next, r4.next = n4;
        }
        return this.head = t4, this.tail = e4, this;
      };
      try {
        r3(9602)(n3);
      } catch (e4) {
      }
    }, 10: function () {
    }, 4995: function () {
    }, 2361: function () {
    }, 4616: function () {
    }, 3518: function (e3, t3, r3) {
      var n3 = r3(4155);
      const i = r3(7187).EventEmitter, o = r3(2681), s = r3(8254), a = r3(226), u2 = r3(1772), l2 = r3(298), c = r3(8473).Writable, h2 = r3(5717), f2 = r3(5408), p2 = r3(1697), d = r3(3380), y2 = r3(7529), g = r3(1227)("mqttjs:client"), b = n3 ? n3.nextTick : function (e4) {
        setTimeout(e4, 0);
      }, m2 = r3.g.setImmediate || function (e4) {
        b(e4);
      }, v2 = { keepalive: 60, reschedulePings: true, protocolId: "MQTT", protocolVersion: 4, reconnectPeriod: 1e3, connectTimeout: 3e4, clean: true, resubscribe: true }, w2 = ["ECONNREFUSED", "EADDRINUSE", "ECONNRESET", "ENOTFOUND"], _2 = { 0: "", 1: "Unacceptable protocol version", 2: "Identifier rejected", 3: "Server unavailable", 4: "Bad username or password", 5: "Not authorized", 16: "No matching subscribers", 17: "No subscription existed", 128: "Unspecified error", 129: "Malformed Packet", 130: "Protocol Error", 131: "Implementation specific error", 132: "Unsupported Protocol Version", 133: "Client Identifier not valid", 134: "Bad User Name or Password", 135: "Not authorized", 136: "Server unavailable", 137: "Server busy", 138: "Banned", 139: "Server shutting down", 140: "Bad authentication method", 141: "Keep Alive timeout", 142: "Session taken over", 143: "Topic Filter invalid", 144: "Topic Name invalid", 145: "Packet identifier in use", 146: "Packet Identifier not found", 147: "Receive Maximum exceeded", 148: "Topic Alias invalid", 149: "Packet too large", 150: "Message rate too high", 151: "Quota exceeded", 152: "Administrative action", 153: "Payload format invalid", 154: "Retain not supported", 155: "QoS not supported", 156: "Use another server", 157: "Server moved", 158: "Shared Subscriptions not supported", 159: "Connection rate exceeded", 160: "Maximum connect time", 161: "Subscription Identifiers not supported", 162: "Wildcard Subscriptions not supported" };
      function E2(e4, t4) {
        let r4;
        t4.properties && (r4 = t4.properties.topicAlias);
        let n4 = t4.topic.toString();
        if (0 === n4.length) {
          if (void 0 === r4)
            return new Error("Unregistered Topic Alias");
          if (n4 = e4.topicAliasSend.getTopicByAlias(r4), void 0 === n4)
            return new Error("Unregistered Topic Alias");
          t4.topic = n4;
        }
        r4 && delete t4.properties.topicAlias;
      }
      function k2(e4, t4, r4) {
        g("sendPacket :: packet: %O", t4), g("sendPacket :: emitting `packetsend`"), e4.emit("packetsend", t4), g("sendPacket :: writing to stream");
        const n4 = u2.writeToStream(t4, e4.stream, e4.options);
        g("sendPacket :: writeToStream result %s", n4), !n4 && r4 && r4 !== T2 ? (g("sendPacket :: handle events on `drain` once through callback."), e4.stream.once("drain", r4)) : r4 && (g("sendPacket :: invoking cb"), r4());
      }
      function S2(e4) {
        e4 && (g("flush: queue exists? %b", !!e4), Object.keys(e4).forEach(function (t4) {
          "function" == typeof e4[t4].cb && (e4[t4].cb(new Error("Connection closed")), delete e4[t4]);
        }));
      }
      function C2(e4, t4, r4, n4) {
        g("storeAndSend :: store packet with cmd %s to outgoingStore", t4.cmd);
        let i2, o2 = t4;
        if ("publish" === o2.cmd && (o2 = p2(t4), i2 = E2(e4, o2), i2))
          return r4 && r4(i2);
        e4.outgoingStore.put(o2, function (i3) {
          if (i3)
            return r4 && r4(i3);
          n4(), k2(e4, t4, r4);
        });
      }
      function T2(e4) {
        g("nop ::", e4);
      }
      function A2(e4, t4) {
        let r4;
        const n4 = this;
        if (!(this instanceof A2))
          return new A2(e4, t4);
        for (r4 in this.options = t4 || {}, v2)
          void 0 === this.options[r4] ? this.options[r4] = v2[r4] : this.options[r4] = t4[r4];
        g("MqttClient :: options.protocol", t4.protocol), g("MqttClient :: options.protocolVersion", t4.protocolVersion), g("MqttClient :: options.username", t4.username), g("MqttClient :: options.keepalive", t4.keepalive), g("MqttClient :: options.reconnectPeriod", t4.reconnectPeriod), g("MqttClient :: options.rejectUnauthorized", t4.rejectUnauthorized), g("MqttClient :: options.topicAliasMaximum", t4.topicAliasMaximum), this.options.clientId = "string" == typeof t4.clientId ? t4.clientId : "mqttjs_" + Math.random().toString(16).substr(2, 8), g("MqttClient :: clientId", this.options.clientId), this.options.customHandleAcks = 5 === t4.protocolVersion && t4.customHandleAcks ? t4.customHandleAcks : function () {
          arguments[3](0);
        }, this.streamBuilder = e4, this.messageIdProvider = void 0 === this.options.messageIdProvider ? new l2() : this.options.messageIdProvider, this.outgoingStore = t4.outgoingStore || new o(), this.incomingStore = t4.incomingStore || new o(), this.queueQoSZero = void 0 === t4.queueQoSZero || t4.queueQoSZero, this._resubscribeTopics = {}, this.messageIdToTopic = {}, this.pingTimer = null, this.connected = false, this.disconnecting = false, this.queue = [], this.connackTimer = null, this.reconnectTimer = null, this._storeProcessing = false, this._packetIdsDuringStoreProcessing = {}, this._storeProcessingQueue = [], this.outgoing = {}, this._firstConnection = true, t4.topicAliasMaximum > 0 && (t4.topicAliasMaximum > 65535 ? g("MqttClient :: options.topicAliasMaximum is out of range") : this.topicAliasRecv = new s(t4.topicAliasMaximum)), this.on("connect", function () {
          const e5 = this.queue;
          g("connect :: sending queued packets"), function t5() {
            const r5 = e5.shift();
            g("deliver :: entry %o", r5);
            let i2 = null;
            if (!r5)
              return void n4._resubscribe();
            i2 = r5.packet, g("deliver :: call _sendPacket for %o", i2);
            let o2 = true;
            i2.messageId && 0 !== i2.messageId && (n4.messageIdProvider.register(i2.messageId) || (o2 = false)), o2 ? n4._sendPacket(i2, function (e6) {
              r5.cb && r5.cb(e6), t5();
            }) : (g("messageId: %d has already used. The message is skipped and removed.", i2.messageId), t5());
          }();
        }), this.on("close", function () {
          g("close :: connected set to `false`"), this.connected = false, g("close :: clearing connackTimer"), clearTimeout(this.connackTimer), g("close :: clearing ping timer"), null !== n4.pingTimer && (n4.pingTimer.clear(), n4.pingTimer = null), this.topicAliasRecv && this.topicAliasRecv.clear(), g("close :: calling _setupReconnect"), this._setupReconnect();
        }), i.call(this), g("MqttClient :: setting up stream"), this._setupStream();
      }
      h2(A2, i), A2.prototype._setupStream = function () {
        const e4 = this, t4 = new c(), r4 = u2.parser(this.options);
        let n4 = null;
        const i2 = [];
        function o2() {
          if (i2.length)
            b(s2);
          else {
            const e5 = n4;
            n4 = null, e5();
          }
        }
        function s2() {
          g("work :: getting next packet in queue");
          const t5 = i2.shift();
          if (t5)
            g("work :: packet pulled from queue"), e4._handlePacket(t5, o2);
          else {
            g("work :: no packets in queue");
            const e5 = n4;
            n4 = null, g("work :: done flag is %s", !!e5), e5 && e5();
          }
        }
        g("_setupStream :: calling method to clear reconnect"), this._clearReconnect(), g("_setupStream :: using streamBuilder provided to client to create stream"), this.stream = this.streamBuilder(this), r4.on("packet", function (e5) {
          g("parser :: on packet push to packets array."), i2.push(e5);
        }), t4._write = function (e5, t5, i3) {
          n4 = i3, g("writable stream :: parsing buffer"), r4.parse(e5), s2();
        }, g("_setupStream :: pipe stream to writable stream"), this.stream.pipe(t4), this.stream.on("error", function (t5) {
          g("streamErrorHandler :: error", t5.message), w2.includes(t5.code) ? (g("streamErrorHandler :: emitting error"), e4.emit("error", t5)) : T2(t5);
        }), this.stream.on("close", function () {
          var t5;
          g("(%s)stream :: on close", e4.options.clientId), (t5 = e4.outgoing) && (g("flushVolatile :: deleting volatile messages from the queue and setting their callbacks as error function"), Object.keys(t5).forEach(function (e5) {
            t5[e5].volatile && "function" == typeof t5[e5].cb && (t5[e5].cb(new Error("Connection closed")), delete t5[e5]);
          })), g("stream: emit close to MqttClient"), e4.emit("close");
        }), g("_setupStream: sending packet `connect`");
        const a2 = Object.create(this.options);
        if (a2.cmd = "connect", this.topicAliasRecv && (a2.properties || (a2.properties = {}), this.topicAliasRecv && (a2.properties.topicAliasMaximum = this.topicAliasRecv.max)), k2(this, a2), r4.on("error", this.emit.bind(this, "error")), this.options.properties) {
          if (!this.options.properties.authenticationMethod && this.options.properties.authenticationData)
            return e4.end(() => this.emit("error", new Error("Packet has no Authentication Method"))), this;
          this.options.properties.authenticationMethod && this.options.authPacket && "object" == typeof this.options.authPacket && k2(this, y2({ cmd: "auth", reasonCode: 0 }, this.options.authPacket));
        }
        this.stream.setMaxListeners(1e3), clearTimeout(this.connackTimer), this.connackTimer = setTimeout(function () {
          g("!!connectTimeout hit!! Calling _cleanUp with force `true`"), e4._cleanUp(true);
        }, this.options.connectTimeout);
      }, A2.prototype._handlePacket = function (e4, t4) {
        const r4 = this.options;
        if (5 === r4.protocolVersion && r4.properties && r4.properties.maximumPacketSize && r4.properties.maximumPacketSize < e4.length)
          return this.emit("error", new Error("exceeding packets size " + e4.cmd)), this.end({ reasonCode: 149, properties: { reasonString: "Maximum packet size was exceeded" } }), this;
        switch (g("_handlePacket :: emitting packetreceive"), this.emit("packetreceive", e4), e4.cmd) {
          case "publish":
            this._handlePublish(e4, t4);
            break;
          case "puback":
          case "pubrec":
          case "pubcomp":
          case "suback":
          case "unsuback":
            this._handleAck(e4), t4();
            break;
          case "pubrel":
            this._handlePubrel(e4, t4);
            break;
          case "connack":
            this._handleConnack(e4), t4();
            break;
          case "auth":
            this._handleAuth(e4), t4();
            break;
          case "pingresp":
            this._handlePingresp(e4), t4();
            break;
          case "disconnect":
            this._handleDisconnect(e4), t4();
        }
      }, A2.prototype._checkDisconnecting = function (e4) {
        return this.disconnecting && (e4 && e4 !== T2 ? e4(new Error("client disconnecting")) : this.emit("error", new Error("client disconnecting"))), this.disconnecting;
      }, A2.prototype.publish = function (e4, t4, r4, n4) {
        g("publish :: message `%s` to topic `%s`", t4, e4);
        const i2 = this.options;
        if ("function" == typeof r4 && (n4 = r4, r4 = null), r4 = y2({ qos: 0, retain: false, dup: false }, r4), this._checkDisconnecting(n4))
          return this;
        const o2 = this, s2 = function () {
          let s3 = 0;
          if ((1 === r4.qos || 2 === r4.qos) && (s3 = o2._nextId(), null === s3))
            return g("No messageId left"), false;
          const a2 = { cmd: "publish", topic: e4, payload: t4, qos: r4.qos, retain: r4.retain, messageId: s3, dup: r4.dup };
          switch (5 === i2.protocolVersion && (a2.properties = r4.properties), g("publish :: qos", r4.qos), r4.qos) {
            case 1:
            case 2:
              o2.outgoing[a2.messageId] = { volatile: false, cb: n4 || T2 }, g("MqttClient:publish: packet cmd: %s", a2.cmd), o2._sendPacket(a2, void 0, r4.cbStorePut);
              break;
            default:
              g("MqttClient:publish: packet cmd: %s", a2.cmd), o2._sendPacket(a2, n4, r4.cbStorePut);
          }
          return true;
        };
        return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !s2()) && this._storeProcessingQueue.push({ invoke: s2, cbStorePut: r4.cbStorePut, callback: n4 }), this;
      }, A2.prototype.subscribe = function () {
        const e4 = this, t4 = new Array(arguments.length);
        for (let e5 = 0; e5 < arguments.length; e5++)
          t4[e5] = arguments[e5];
        const r4 = [];
        let n4 = t4.shift();
        const i2 = n4.resubscribe;
        let o2 = t4.pop() || T2, s2 = t4.pop();
        const a2 = this.options.protocolVersion;
        delete n4.resubscribe, "string" == typeof n4 && (n4 = [n4]), "function" != typeof o2 && (s2 = o2, o2 = T2);
        const u3 = d.validateTopics(n4);
        if (null !== u3)
          return m2(o2, new Error("Invalid topic " + u3)), this;
        if (this._checkDisconnecting(o2))
          return g("subscribe: discconecting true"), this;
        const l3 = { qos: 0 };
        if (5 === a2 && (l3.nl = false, l3.rap = false, l3.rh = 0), s2 = y2(l3, s2), Array.isArray(n4) ? n4.forEach(function (t5) {
          if (g("subscribe: array topic %s", t5), !Object.prototype.hasOwnProperty.call(e4._resubscribeTopics, t5) || e4._resubscribeTopics[t5].qos < s2.qos || i2) {
            const e5 = { topic: t5, qos: s2.qos };
            5 === a2 && (e5.nl = s2.nl, e5.rap = s2.rap, e5.rh = s2.rh, e5.properties = s2.properties), g("subscribe: pushing topic `%s` and qos `%s` to subs list", e5.topic, e5.qos), r4.push(e5);
          }
        }) : Object.keys(n4).forEach(function (t5) {
          if (g("subscribe: object topic %s", t5), !Object.prototype.hasOwnProperty.call(e4._resubscribeTopics, t5) || e4._resubscribeTopics[t5].qos < n4[t5].qos || i2) {
            const e5 = { topic: t5, qos: n4[t5].qos };
            5 === a2 && (e5.nl = n4[t5].nl, e5.rap = n4[t5].rap, e5.rh = n4[t5].rh, e5.properties = s2.properties), g("subscribe: pushing `%s` to subs list", e5), r4.push(e5);
          }
        }), !r4.length)
          return o2(null, []), this;
        const c2 = function () {
          const t5 = e4._nextId();
          if (null === t5)
            return g("No messageId left"), false;
          const n5 = { cmd: "subscribe", subscriptions: r4, qos: 1, retain: false, dup: false, messageId: t5 };
          if (s2.properties && (n5.properties = s2.properties), e4.options.resubscribe) {
            g("subscribe :: resubscribe true");
            const t6 = [];
            r4.forEach(function (r5) {
              if (e4.options.reconnectPeriod > 0) {
                const n6 = { qos: r5.qos };
                5 === a2 && (n6.nl = r5.nl || false, n6.rap = r5.rap || false, n6.rh = r5.rh || 0, n6.properties = r5.properties), e4._resubscribeTopics[r5.topic] = n6, t6.push(r5.topic);
              }
            }), e4.messageIdToTopic[n5.messageId] = t6;
          }
          return e4.outgoing[n5.messageId] = {
            volatile: true, cb: function (e5, t6) {
              if (!e5) {
                const e6 = t6.granted;
                for (let t7 = 0; t7 < e6.length; t7 += 1)
                  r4[t7].qos = e6[t7];
              }
              o2(e5, r4);
            }
          }, g("subscribe :: call _sendPacket"), e4._sendPacket(n5), true;
        };
        return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !c2()) && this._storeProcessingQueue.push({ invoke: c2, callback: o2 }), this;
      }, A2.prototype.unsubscribe = function () {
        const e4 = this, t4 = new Array(arguments.length);
        for (let e5 = 0; e5 < arguments.length; e5++)
          t4[e5] = arguments[e5];
        let r4 = t4.shift(), n4 = t4.pop() || T2, i2 = t4.pop();
        "string" == typeof r4 && (r4 = [r4]), "function" != typeof n4 && (i2 = n4, n4 = T2);
        const o2 = d.validateTopics(r4);
        if (null !== o2)
          return m2(n4, new Error("Invalid topic " + o2)), this;
        if (e4._checkDisconnecting(n4))
          return this;
        const s2 = function () {
          const t5 = e4._nextId();
          if (null === t5)
            return g("No messageId left"), false;
          const o3 = { cmd: "unsubscribe", qos: 1, messageId: t5 };
          return "string" == typeof r4 ? o3.unsubscriptions = [r4] : Array.isArray(r4) && (o3.unsubscriptions = r4), e4.options.resubscribe && o3.unsubscriptions.forEach(function (t6) {
            delete e4._resubscribeTopics[t6];
          }), "object" == typeof i2 && i2.properties && (o3.properties = i2.properties), e4.outgoing[o3.messageId] = { volatile: true, cb: n4 }, g("unsubscribe: call _sendPacket"), e4._sendPacket(o3), true;
        };
        return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !s2()) && this._storeProcessingQueue.push({ invoke: s2, callback: n4 }), this;
      }, A2.prototype.end = function (e4, t4, r4) {
        const n4 = this;
        function i2() {
          g("end :: closeStores: closing incoming and outgoing stores"), n4.disconnected = true, n4.incomingStore.close(function (e5) {
            n4.outgoingStore.close(function (t5) {
              if (g("end :: closeStores: emitting end"), n4.emit("end"), r4) {
                const n5 = e5 || t5;
                g("end :: closeStores: invoking callback with args"), r4(n5);
              }
            });
          }), n4._deferredReconnect && n4._deferredReconnect();
        }
        function o2() {
          g("end :: (%s) :: finish :: calling _cleanUp with force %s", n4.options.clientId, e4), n4._cleanUp(e4, () => {
            g("end :: finish :: calling process.nextTick on closeStores"), b(i2.bind(n4));
          }, t4);
        }
        return g("end :: (%s)", this.options.clientId), null != e4 && "boolean" == typeof e4 || (r4 = t4 || T2, t4 = e4, e4 = false, "object" != typeof t4 && (r4 = t4, t4 = null, "function" != typeof r4 && (r4 = T2))), "object" != typeof t4 && (r4 = t4, t4 = null), g("end :: cb? %s", !!r4), r4 = r4 || T2, this.disconnecting ? (r4(), this) : (this._clearReconnect(), this.disconnecting = true, !e4 && Object.keys(this.outgoing).length > 0 ? (g("end :: (%s) :: calling finish in 10ms once outgoing is empty", n4.options.clientId), this.once("outgoingEmpty", setTimeout.bind(null, o2, 10))) : (g("end :: (%s) :: immediately calling finish", n4.options.clientId), o2()), this);
      }, A2.prototype.removeOutgoingMessage = function (e4) {
        const t4 = this.outgoing[e4] ? this.outgoing[e4].cb : null;
        return delete this.outgoing[e4], this.outgoingStore.del({ messageId: e4 }, function () {
          t4(new Error("Message removed"));
        }), this;
      }, A2.prototype.reconnect = function (e4) {
        g("client reconnect");
        const t4 = this, r4 = function () {
          e4 ? (t4.options.incomingStore = e4.incomingStore, t4.options.outgoingStore = e4.outgoingStore) : (t4.options.incomingStore = null, t4.options.outgoingStore = null), t4.incomingStore = t4.options.incomingStore || new o(), t4.outgoingStore = t4.options.outgoingStore || new o(), t4.disconnecting = false, t4.disconnected = false, t4._deferredReconnect = null, t4._reconnect();
        };
        return this.disconnecting && !this.disconnected ? this._deferredReconnect = r4 : r4(), this;
      }, A2.prototype._reconnect = function () {
        g("_reconnect: emitting reconnect to client"), this.emit("reconnect"), this.connected ? (this.end(() => {
          this._setupStream();
        }), g("client already connected. disconnecting first.")) : (g("_reconnect: calling _setupStream"), this._setupStream());
      }, A2.prototype._setupReconnect = function () {
        const e4 = this;
        !e4.disconnecting && !e4.reconnectTimer && e4.options.reconnectPeriod > 0 ? (this.reconnecting || (g("_setupReconnect :: emit `offline` state"), this.emit("offline"), g("_setupReconnect :: set `reconnecting` to `true`"), this.reconnecting = true), g("_setupReconnect :: setting reconnectTimer for %d ms", e4.options.reconnectPeriod), e4.reconnectTimer = setInterval(function () {
          g("reconnectTimer :: reconnect triggered!"), e4._reconnect();
        }, e4.options.reconnectPeriod)) : g("_setupReconnect :: doing nothing...");
      }, A2.prototype._clearReconnect = function () {
        g("_clearReconnect : clearing reconnect timer"), this.reconnectTimer && (clearInterval(this.reconnectTimer), this.reconnectTimer = null);
      }, A2.prototype._cleanUp = function (e4, t4) {
        const r4 = arguments[2];
        if (t4 && (g("_cleanUp :: done callback provided for on stream close"), this.stream.on("close", t4)), g("_cleanUp :: forced? %s", e4), e4)
          0 === this.options.reconnectPeriod && this.options.clean && S2(this.outgoing), g("_cleanUp :: (%s) :: destroying stream", this.options.clientId), this.stream.destroy();
        else {
          const e5 = y2({ cmd: "disconnect" }, r4);
          g("_cleanUp :: (%s) :: call _sendPacket with disconnect packet", this.options.clientId), this._sendPacket(e5, m2.bind(null, this.stream.end.bind(this.stream)));
        }
        this.disconnecting || (g("_cleanUp :: client not disconnecting. Clearing and resetting reconnect."), this._clearReconnect(), this._setupReconnect()), null !== this.pingTimer && (g("_cleanUp :: clearing pingTimer"), this.pingTimer.clear(), this.pingTimer = null), t4 && !this.connected && (g("_cleanUp :: (%s) :: removing stream `done` callback `close` listener", this.options.clientId), this.stream.removeListener("close", t4), t4());
      }, A2.prototype._sendPacket = function (e4, t4, r4) {
        g("_sendPacket :: (%s) ::  start", this.options.clientId), r4 = r4 || T2, t4 = t4 || T2;
        const n4 = function (e5, t5) {
          if (5 === e5.options.protocolVersion && "publish" === t5.cmd) {
            let r5;
            t5.properties && (r5 = t5.properties.topicAlias);
            const n5 = t5.topic.toString();
            if (e5.topicAliasSend)
              if (r5) {
                if (0 !== n5.length && (g("applyTopicAlias :: register topic: %s - alias: %d", n5, r5), !e5.topicAliasSend.put(n5, r5)))
                  return g("applyTopicAlias :: error out of range. topic: %s - alias: %d", n5, r5), new Error("Sending Topic Alias out of range");
              } else
                0 !== n5.length && (e5.options.autoAssignTopicAlias ? (r5 = e5.topicAliasSend.getAliasByTopic(n5), r5 ? (t5.topic = "", t5.properties = { ...t5.properties, topicAlias: r5 }, g("applyTopicAlias :: auto assign(use) topic: %s - alias: %d", n5, r5)) : (r5 = e5.topicAliasSend.getLruAlias(), e5.topicAliasSend.put(n5, r5), t5.properties = { ...t5.properties, topicAlias: r5 }, g("applyTopicAlias :: auto assign topic: %s - alias: %d", n5, r5))) : e5.options.autoUseTopicAlias && (r5 = e5.topicAliasSend.getAliasByTopic(n5), r5 && (t5.topic = "", t5.properties = { ...t5.properties, topicAlias: r5 }, g("applyTopicAlias :: auto use topic: %s - alias: %d", n5, r5))));
            else if (r5)
              return g("applyTopicAlias :: error out of range. topic: %s - alias: %d", n5, r5), new Error("Sending Topic Alias out of range");
          }
        }(this, e4);
        if (n4)
          t4(n4);
        else {
          if (!this.connected)
            return "auth" === e4.cmd ? (this._shiftPingInterval(), void k2(this, e4, t4)) : (g("_sendPacket :: client not connected. Storing packet offline."), void this._storePacket(e4, t4, r4));
          switch (this._shiftPingInterval(), e4.cmd) {
            case "publish":
              break;
            case "pubrel":
              return void C2(this, e4, t4, r4);
            default:
              return void k2(this, e4, t4);
          }
          switch (e4.qos) {
            case 2:
            case 1:
              C2(this, e4, t4, r4);
              break;
            default:
              k2(this, e4, t4);
          }
          g("_sendPacket :: (%s) ::  end", this.options.clientId);
        }
      }, A2.prototype._storePacket = function (e4, t4, r4) {
        g("_storePacket :: packet: %o", e4), g("_storePacket :: cb? %s", !!t4), r4 = r4 || T2;
        let n4 = e4;
        if ("publish" === n4.cmd) {
          n4 = p2(e4);
          const r5 = E2(this, n4);
          if (r5)
            return t4 && t4(r5);
        }
        0 === (n4.qos || 0) && this.queueQoSZero || "publish" !== n4.cmd ? this.queue.push({ packet: n4, cb: t4 }) : n4.qos > 0 ? (t4 = this.outgoing[n4.messageId] ? this.outgoing[n4.messageId].cb : null, this.outgoingStore.put(n4, function (e5) {
          if (e5)
            return t4 && t4(e5);
          r4();
        })) : t4 && t4(new Error("No connection to broker"));
      }, A2.prototype._setupPingTimer = function () {
        g("_setupPingTimer :: keepalive %d (seconds)", this.options.keepalive);
        const e4 = this;
        !this.pingTimer && this.options.keepalive && (this.pingResp = true, this.pingTimer = f2(function () {
          e4._checkPing();
        }, 1e3 * this.options.keepalive));
      }, A2.prototype._shiftPingInterval = function () {
        this.pingTimer && this.options.keepalive && this.options.reschedulePings && this.pingTimer.reschedule(1e3 * this.options.keepalive);
      }, A2.prototype._checkPing = function () {
        g("_checkPing :: checking ping..."), this.pingResp ? (g("_checkPing :: ping response received. Clearing flag and sending `pingreq`"), this.pingResp = false, this._sendPacket({ cmd: "pingreq" })) : (g("_checkPing :: calling _cleanUp with force true"), this._cleanUp(true));
      }, A2.prototype._handlePingresp = function () {
        this.pingResp = true;
      }, A2.prototype._handleConnack = function (e4) {
        g("_handleConnack");
        const t4 = this.options, r4 = 5 === t4.protocolVersion ? e4.reasonCode : e4.returnCode;
        if (clearTimeout(this.connackTimer), delete this.topicAliasSend, e4.properties) {
          if (e4.properties.topicAliasMaximum) {
            if (e4.properties.topicAliasMaximum > 65535)
              return void this.emit("error", new Error("topicAliasMaximum from broker is out of range"));
            e4.properties.topicAliasMaximum > 0 && (this.topicAliasSend = new a(e4.properties.topicAliasMaximum));
          }
          e4.properties.serverKeepAlive && t4.keepalive && (t4.keepalive = e4.properties.serverKeepAlive, this._shiftPingInterval()), e4.properties.maximumPacketSize && (t4.properties || (t4.properties = {}), t4.properties.maximumPacketSize = e4.properties.maximumPacketSize);
        }
        if (0 === r4)
          this.reconnecting = false, this._onConnect(e4);
        else if (r4 > 0) {
          const e5 = new Error("Connection refused: " + _2[r4]);
          e5.code = r4, this.emit("error", e5);
        }
      }, A2.prototype._handleAuth = function (e4) {
        const t4 = this.options.protocolVersion, r4 = 5 === t4 ? e4.reasonCode : e4.returnCode;
        if (5 !== t4) {
          const e5 = new Error("Protocol error: Auth packets are only supported in MQTT 5. Your version:" + t4);
          return e5.code = r4, void this.emit("error", e5);
        }
        const n4 = this;
        this.handleAuth(e4, function (e5, t5) {
          if (e5)
            n4.emit("error", e5);
          else if (24 === r4)
            n4.reconnecting = false, n4._sendPacket(t5);
          else {
            const t6 = new Error("Connection refused: " + _2[r4]);
            e5.code = r4, n4.emit("error", t6);
          }
        });
      }, A2.prototype.handleAuth = function (e4, t4) {
        t4();
      }, A2.prototype._handlePublish = function (e4, t4) {
        g("_handlePublish: packet %o", e4), t4 = void 0 !== t4 ? t4 : T2;
        let r4 = e4.topic.toString();
        const n4 = e4.payload, i2 = e4.qos, o2 = e4.messageId, s2 = this, a2 = this.options, u3 = [0, 16, 128, 131, 135, 144, 145, 151, 153];
        if (5 === this.options.protocolVersion) {
          let t5;
          if (e4.properties && (t5 = e4.properties.topicAlias), void 0 !== t5)
            if (0 === r4.length) {
              if (!(t5 > 0 && t5 <= 65535))
                return g("_handlePublish :: topic alias out of range. alias: %d", t5), void this.emit("error", new Error("Received Topic Alias is out of range"));
              {
                const e5 = this.topicAliasRecv.getTopicByAlias(t5);
                if (!e5)
                  return g("_handlePublish :: unregistered topic alias. alias: %d", t5), void this.emit("error", new Error("Received unregistered Topic Alias"));
                r4 = e5, g("_handlePublish :: topic complemented by alias. topic: %s - alias: %d", r4, t5);
              }
            } else {
              if (!this.topicAliasRecv.put(r4, t5))
                return g("_handlePublish :: topic alias out of range. alias: %d", t5), void this.emit("error", new Error("Received Topic Alias is out of range"));
              g("_handlePublish :: registered topic: %s - alias: %d", r4, t5);
            }
        }
        switch (g("_handlePublish: qos %d", i2), i2) {
          case 2:
            a2.customHandleAcks(r4, n4, e4, function (r5, n5) {
              return r5 instanceof Error || (n5 = r5, r5 = null), r5 ? s2.emit("error", r5) : -1 === u3.indexOf(n5) ? s2.emit("error", new Error("Wrong reason code for pubrec")) : void (n5 ? s2._sendPacket({ cmd: "pubrec", messageId: o2, reasonCode: n5 }, t4) : s2.incomingStore.put(e4, function () {
                s2._sendPacket({ cmd: "pubrec", messageId: o2 }, t4);
              }));
            });
            break;
          case 1:
            a2.customHandleAcks(r4, n4, e4, function (i3, a3) {
              return i3 instanceof Error || (a3 = i3, i3 = null), i3 ? s2.emit("error", i3) : -1 === u3.indexOf(a3) ? s2.emit("error", new Error("Wrong reason code for puback")) : (a3 || s2.emit("message", r4, n4, e4), void s2.handleMessage(e4, function (e5) {
                if (e5)
                  return t4 && t4(e5);
                s2._sendPacket({ cmd: "puback", messageId: o2, reasonCode: a3 }, t4);
              }));
            });
            break;
          case 0:
            this.emit("message", r4, n4, e4), this.handleMessage(e4, t4);
            break;
          default:
            g("_handlePublish: unknown QoS. Doing nothing.");
        }
      }, A2.prototype.handleMessage = function (e4, t4) {
        t4();
      }, A2.prototype._handleAck = function (e4) {
        const t4 = e4.messageId, r4 = e4.cmd;
        let n4 = null;
        const i2 = this.outgoing[t4] ? this.outgoing[t4].cb : null, o2 = this;
        let s2;
        if (i2) {
          switch (g("_handleAck :: packet type", r4), r4) {
            case "pubcomp":
            case "puback": {
              const r5 = e4.reasonCode;
              r5 && r5 > 0 && 16 !== r5 && (s2 = new Error("Publish error: " + _2[r5]), s2.code = r5, i2(s2, e4)), delete this.outgoing[t4], this.outgoingStore.del(e4, i2), this.messageIdProvider.deallocate(t4), this._invokeStoreProcessingQueue();
              break;
            }
            case "pubrec": {
              n4 = { cmd: "pubrel", qos: 2, messageId: t4 };
              const r5 = e4.reasonCode;
              r5 && r5 > 0 && 16 !== r5 ? (s2 = new Error("Publish error: " + _2[r5]), s2.code = r5, i2(s2, e4)) : this._sendPacket(n4);
              break;
            }
            case "suback":
              delete this.outgoing[t4], this.messageIdProvider.deallocate(t4);
              for (let r5 = 0; r5 < e4.granted.length; r5++)
                if (0 != (128 & e4.granted[r5])) {
                  const e5 = this.messageIdToTopic[t4];
                  e5 && e5.forEach(function (e6) {
                    delete o2._resubscribeTopics[e6];
                  });
                }
              this._invokeStoreProcessingQueue(), i2(null, e4);
              break;
            case "unsuback":
              delete this.outgoing[t4], this.messageIdProvider.deallocate(t4), this._invokeStoreProcessingQueue(), i2(null);
              break;
            default:
              o2.emit("error", new Error("unrecognized packet type"));
          }
          this.disconnecting && 0 === Object.keys(this.outgoing).length && this.emit("outgoingEmpty");
        } else
          g("_handleAck :: Server sent an ack in error. Ignoring.");
      }, A2.prototype._handlePubrel = function (e4, t4) {
        g("handling pubrel packet"), t4 = void 0 !== t4 ? t4 : T2;
        const r4 = e4.messageId, n4 = this, i2 = { cmd: "pubcomp", messageId: r4 };
        n4.incomingStore.get(e4, function (e5, r5) {
          e5 ? n4._sendPacket(i2, t4) : (n4.emit("message", r5.topic, r5.payload, r5), n4.handleMessage(r5, function (e6) {
            if (e6)
              return t4(e6);
            n4.incomingStore.del(r5, T2), n4._sendPacket(i2, t4);
          }));
        });
      }, A2.prototype._handleDisconnect = function (e4) {
        this.emit("disconnect", e4);
      }, A2.prototype._nextId = function () {
        return this.messageIdProvider.allocate();
      }, A2.prototype.getLastMessageId = function () {
        return this.messageIdProvider.getLastAllocated();
      }, A2.prototype._resubscribe = function () {
        g("_resubscribe");
        const e4 = Object.keys(this._resubscribeTopics);
        if (!this._firstConnection && (this.options.clean || 5 === this.options.protocolVersion && !this.connackPacket.sessionPresent) && e4.length > 0)
          if (this.options.resubscribe)
            if (5 === this.options.protocolVersion) {
              g("_resubscribe: protocolVersion 5");
              for (let t4 = 0; t4 < e4.length; t4++) {
                const r4 = {};
                r4[e4[t4]] = this._resubscribeTopics[e4[t4]], r4.resubscribe = true, this.subscribe(r4, { properties: r4[e4[t4]].properties });
              }
            } else
              this._resubscribeTopics.resubscribe = true, this.subscribe(this._resubscribeTopics);
          else
            this._resubscribeTopics = {};
        this._firstConnection = false;
      }, A2.prototype._onConnect = function (e4) {
        if (this.disconnected)
          return void this.emit("connect", e4);
        const t4 = this;
        this.connackPacket = e4, this.messageIdProvider.clear(), this._setupPingTimer(), this.connected = true, function r4() {
          let n4 = t4.outgoingStore.createStream();
          function i2() {
            t4._storeProcessing = false, t4._packetIdsDuringStoreProcessing = {};
          }
          function o2() {
            n4.destroy(), n4 = null, t4._flushStoreProcessingQueue(), i2();
          }
          t4.once("close", o2), n4.on("error", function (e5) {
            i2(), t4._flushStoreProcessingQueue(), t4.removeListener("close", o2), t4.emit("error", e5);
          }), n4.on("end", function () {
            let n5 = true;
            for (const e5 in t4._packetIdsDuringStoreProcessing)
              if (!t4._packetIdsDuringStoreProcessing[e5]) {
                n5 = false;
                break;
              }
            n5 ? (i2(), t4.removeListener("close", o2), t4._invokeAllStoreProcessingQueue(), t4.emit("connect", e4)) : r4();
          }), function e5() {
            if (!n4)
              return;
            t4._storeProcessing = true;
            const r5 = n4.read(1);
            let i3;
            r5 ? t4._packetIdsDuringStoreProcessing[r5.messageId] ? e5() : t4.disconnecting || t4.reconnectTimer ? n4.destroy && n4.destroy() : (i3 = t4.outgoing[r5.messageId] ? t4.outgoing[r5.messageId].cb : null, t4.outgoing[r5.messageId] = {
              volatile: false, cb: function (t5, r6) {
                i3 && i3(t5, r6), e5();
              }
            }, t4._packetIdsDuringStoreProcessing[r5.messageId] = true, t4.messageIdProvider.register(r5.messageId) ? t4._sendPacket(r5) : g("messageId: %d has already used.", r5.messageId)) : n4.once("readable", e5);
          }();
        }();
      }, A2.prototype._invokeStoreProcessingQueue = function () {
        if (this._storeProcessingQueue.length > 0) {
          const e4 = this._storeProcessingQueue[0];
          if (e4 && e4.invoke())
            return this._storeProcessingQueue.shift(), true;
        }
        return false;
      }, A2.prototype._invokeAllStoreProcessingQueue = function () {
        for (; this._invokeStoreProcessingQueue();)
          ;
      }, A2.prototype._flushStoreProcessingQueue = function () {
        for (const e4 of this._storeProcessingQueue)
          e4.cbStorePut && e4.cbStorePut(new Error("Connection closed")), e4.callback && e4.callback(new Error("Connection closed"));
        this._storeProcessingQueue.splice(0);
      }, e3.exports = A2;
    }, 9908: function (e3, t3, r3) {
      const { Buffer: n3 } = r3(8764), i = r3(8473).Transform, o = r3(5981);
      let s, a, u2, l2 = false;
      e3.exports = function (e4, t4) {
        if (t4.hostname = t4.hostname || t4.host, !t4.hostname)
          throw new Error("Could not determine host. Specify host manually.");
        const r4 = "MQIsdp" === t4.protocolId && 3 === t4.protocolVersion ? "mqttv3.1" : "mqtt";
        !function (e5) {
          e5.hostname || (e5.hostname = "localhost"), e5.path || (e5.path = "/"), e5.wsOptions || (e5.wsOptions = {});
        }(t4);
        const c = function (e5, t5) {
          const r5 = "alis" === e5.protocol ? "wss" : "ws";
          let n4 = r5 + "://" + e5.hostname + e5.path;
          return e5.port && 80 !== e5.port && 443 !== e5.port && (n4 = r5 + "://" + e5.hostname + ":" + e5.port + e5.path), "function" == typeof e5.transformWsUrl && (n4 = e5.transformWsUrl(n4, e5, t5)), n4;
        }(t4, e4);
        return s = t4.my, s.connectSocket({ url: c, protocols: r4 }), a = function () {
          const e5 = new i();
          return e5._write = function (e6, t5, r5) {
            s.sendSocketMessage({
              data: e6.buffer, success: function () {
                r5();
              }, fail: function () {
                r5(new Error());
              }
            });
          }, e5._flush = function (e6) {
            s.closeSocket({
              success: function () {
                e6();
              }
            });
          }, e5;
        }(), u2 = o.obj(), l2 || (l2 = true, s.onSocketOpen(function () {
          u2.setReadable(a), u2.setWritable(a), u2.emit("connect");
        }), s.onSocketMessage(function (e5) {
          if ("string" == typeof e5.data) {
            const t5 = n3.from(e5.data, "base64");
            a.push(t5);
          } else {
            const t5 = new FileReader();
            t5.addEventListener("load", function () {
              let e6 = t5.result;
              e6 = e6 instanceof ArrayBuffer ? n3.from(e6) : n3.from(e6, "utf8"), a.push(e6);
            }), t5.readAsArrayBuffer(e5.data);
          }
        }), s.onSocketClose(function () {
          u2.end(), u2.destroy();
        }), s.onSocketError(function (e5) {
          u2.destroy(e5);
        })), u2;
      };
    }, 2878: function (e3, t3, r3) {
      var n3 = r3(4155);
      const i = r3(3518), o = r3(2681), s = r3(8575), a = r3(7529), u2 = r3(1227)("mqttjs"), l2 = {};
      function c(e4, t4) {
        if (u2("connecting to an MQTT broker..."), "object" != typeof e4 || t4 || (t4 = e4, e4 = null), t4 = t4 || {}, e4) {
          const r5 = s.parse(e4, true);
          if (null != r5.port && (r5.port = Number(r5.port)), null === (t4 = a(r5, t4)).protocol)
            throw new Error("Missing protocol");
          t4.protocol = t4.protocol.replace(/:$/, "");
        }
        if (function (e5) {
          let t5;
          e5.auth && (t5 = e5.auth.match(/^(.+):(.+)$/), t5 ? (e5.username = t5[1], e5.password = t5[2]) : e5.username = e5.auth);
        }(t4), t4.query && "string" == typeof t4.query.clientId && (t4.clientId = t4.query.clientId), t4.cert && t4.key) {
          if (!t4.protocol)
            throw new Error("Missing secure protocol key");
          if (-1 === ["mqtts", "wss", "wxs", "alis"].indexOf(t4.protocol))
            switch (t4.protocol) {
              case "mqtt":
                t4.protocol = "mqtts";
                break;
              case "ws":
                t4.protocol = "wss";
                break;
              case "wx":
                t4.protocol = "wxs";
                break;
              case "ali":
                t4.protocol = "alis";
                break;
              default:
                throw new Error('Unknown protocol for secure connection: "' + t4.protocol + '"!');
            }
        }
        if (!l2[t4.protocol]) {
          const e5 = -1 !== ["mqtts", "wss"].indexOf(t4.protocol);
          t4.protocol = ["mqtt", "mqtts", "ws", "wss", "wx", "wxs", "ali", "alis"].filter(function (t5, r5) {
            return (!e5 || r5 % 2 != 0) && "function" == typeof l2[t5];
          })[0];
        }
        if (false === t4.clean && !t4.clientId)
          throw new Error("Missing clientId for unclean clients");
        t4.protocol && (t4.defaultProtocol = t4.protocol);
        const r4 = new i(function (e5) {
          return t4.servers && (e5._reconnectCount && e5._reconnectCount !== t4.servers.length || (e5._reconnectCount = 0), t4.host = t4.servers[e5._reconnectCount].host, t4.port = t4.servers[e5._reconnectCount].port, t4.protocol = t4.servers[e5._reconnectCount].protocol ? t4.servers[e5._reconnectCount].protocol : t4.defaultProtocol, t4.hostname = t4.host, e5._reconnectCount++), u2("calling streambuilder for", t4.protocol), l2[t4.protocol](e5, t4);
        }, t4);
        return r4.on("error", function () {
        }), r4;
      }
      void 0 !== n3 && "browser" !== n3.title || "function" != typeof r3 ? (l2.mqtt = r3(4983), l2.tcp = r3(4983), l2.ssl = r3(4606), l2.tls = r3(4606), l2.mqtts = r3(4606)) : (l2.wx = r3(7465), l2.wxs = r3(7465), l2.ali = r3(9908), l2.alis = r3(9908)), l2.ws = r3(4574), l2.wss = r3(4574), e3.exports = c, e3.exports.connect = c, e3.exports.MqttClient = i, e3.exports.Store = o;
    }, 4983: function (e3, t3, r3) {
      const n3 = r3(10), i = r3(1227)("mqttjs:tcp");
      e3.exports = function (e4, t4) {
        t4.port = t4.port || 1883, t4.hostname = t4.hostname || t4.host || "localhost";
        const r4 = t4.port, o = t4.hostname;
        return i("port %d and host %s", r4, o), n3.createConnection(r4, o);
      };
    }, 4606: function (e3, t3, r3) {
      const n3 = r3(4995), i = r3(10), o = r3(1227)("mqttjs:tls");
      e3.exports = function (e4, t4) {
        t4.port = t4.port || 8883, t4.host = t4.hostname || t4.host || "localhost", 0 === i.isIP(t4.host) && (t4.servername = t4.host), t4.rejectUnauthorized = false !== t4.rejectUnauthorized, delete t4.path, o("port %d host %s rejectUnauthorized %b", t4.port, t4.host, t4.rejectUnauthorized);
        const r4 = n3.connect(t4);
        function s(n4) {
          t4.rejectUnauthorized && e4.emit("error", n4), r4.end();
        }
        return r4.on("secureConnect", function () {
          t4.rejectUnauthorized && !r4.authorized ? r4.emit("error", new Error("TLS not authorized")) : r4.removeListener("error", s);
        }), r4.on("error", s), r4;
      };
    }, 4574: function (e3, t3, r3) {
      var n3 = r3(4155);
      const { Buffer: i } = r3(8764), o = r3(7026), s = r3(1227)("mqttjs:ws"), a = r3(5981), u2 = r3(8473).Transform, l2 = ["rejectUnauthorized", "ca", "cert", "key", "pfx", "passphrase"], c = void 0 !== n3 && "browser" === n3.title || "function" == typeof r3;
      function h2(e4, t4) {
        let r4 = e4.protocol + "://" + e4.hostname + ":" + e4.port + e4.path;
        return "function" == typeof e4.transformWsUrl && (r4 = e4.transformWsUrl(r4, e4, t4)), r4;
      }
      function f2(e4) {
        const t4 = e4;
        return e4.hostname || (t4.hostname = "localhost"), e4.port || ("wss" === e4.protocol ? t4.port = 443 : t4.port = 80), e4.path || (t4.path = "/"), e4.wsOptions || (t4.wsOptions = {}), c || "wss" !== e4.protocol || l2.forEach(function (r4) {
          Object.prototype.hasOwnProperty.call(e4, r4) && !Object.prototype.hasOwnProperty.call(e4.wsOptions, r4) && (t4.wsOptions[r4] = e4[r4]);
        }), t4;
      }
      e3.exports = c ? function (e4, t4) {
        let r4;
        s("browserStreamBuilder");
        const n4 = function (e5) {
          const t5 = f2(e5);
          if (t5.hostname || (t5.hostname = t5.host), !t5.hostname) {
            if ("undefined" == typeof document)
              throw new Error("Could not determine host. Specify host manually.");
            const e6 = new URL(document.URL);
            t5.hostname = e6.hostname, t5.port || (t5.port = e6.port);
          }
          return void 0 === t5.objectMode && (t5.objectMode = !(true === t5.binary || void 0 === t5.binary)), t5;
        }(t4), o2 = n4.browserBufferSize || 524288, l3 = t4.browserBufferTimeout || 1e3, c2 = !t4.objectMode, p2 = function (e5, t5) {
          const r5 = "MQIsdp" === t5.protocolId && 3 === t5.protocolVersion ? "mqttv3.1" : "mqtt", n5 = h2(t5, e5), i2 = new WebSocket(n5, [r5]);
          return i2.binaryType = "arraybuffer", i2;
        }(e4, t4), d = function (e5, t5, r5) {
          const n5 = new u2({ objectModeMode: e5.objectMode });
          return n5._write = function e6(t6, r6, n6) {
            p2.bufferedAmount > o2 && setTimeout(e6, l3, t6, r6, n6), c2 && "string" == typeof t6 && (t6 = i.from(t6, "utf8"));
            try {
              p2.send(t6);
            } catch (e7) {
              return n6(e7);
            }
            n6();
          }, n5._flush = function (e6) {
            p2.close(), e6();
          }, n5;
        }(t4);
        t4.objectMode || (d._writev = w2), d.on("close", () => {
          p2.close();
        });
        const y2 = void 0 !== p2.addEventListener;
        function g() {
          r4.setReadable(d), r4.setWritable(d), r4.emit("connect");
        }
        function b() {
          r4.end(), r4.destroy();
        }
        function m2(e5) {
          r4.destroy(e5);
        }
        function v2(e5) {
          let t5 = e5.data;
          t5 = t5 instanceof ArrayBuffer ? i.from(t5) : i.from(t5, "utf8"), d.push(t5);
        }
        function w2(e5, t5) {
          const r5 = new Array(e5.length);
          for (let t6 = 0; t6 < e5.length; t6++)
            "string" == typeof e5[t6].chunk ? r5[t6] = i.from(e5[t6], "utf8") : r5[t6] = e5[t6].chunk;
          this._write(i.concat(r5), "binary", t5);
        }
        return p2.readyState === p2.OPEN ? r4 = d : (r4 = r4 = a(void 0, void 0, t4), t4.objectMode || (r4._writev = w2), y2 ? p2.addEventListener("open", g) : p2.onopen = g), r4.socket = p2, y2 ? (p2.addEventListener("close", b), p2.addEventListener("error", m2), p2.addEventListener("message", v2)) : (p2.onclose = b, p2.onerror = m2, p2.onmessage = v2), r4;
      } : function (e4, t4) {
        s("streamBuilder");
        const r4 = f2(t4), n4 = h2(r4, e4), i2 = function (e5, t5, r5) {
          s("createWebSocket"), s("protocol: " + r5.protocolId + " " + r5.protocolVersion);
          const n5 = "MQIsdp" === r5.protocolId && 3 === r5.protocolVersion ? "mqttv3.1" : "mqtt";
          return s("creating new Websocket for url: " + t5 + " and protocol: " + n5), new o(t5, [n5], r5.wsOptions);
        }(0, n4, r4), a2 = o.createWebSocketStream(i2, r4.wsOptions);
        return a2.url = n4, i2.on("close", () => {
          a2.destroy();
        }), a2;
      };
    }, 7465: function (e3, t3, r3) {
      const { Buffer: n3 } = r3(8764), i = r3(8473).Transform, o = r3(5981);
      let s, a, u2;
      e3.exports = function (e4, t4) {
        if (t4.hostname = t4.hostname || t4.host, !t4.hostname)
          throw new Error("Could not determine host. Specify host manually.");
        const r4 = "MQIsdp" === t4.protocolId && 3 === t4.protocolVersion ? "mqttv3.1" : "mqtt";
        !function (e5) {
          e5.hostname || (e5.hostname = "localhost"), e5.path || (e5.path = "/"), e5.wsOptions || (e5.wsOptions = {});
        }(t4);
        const l2 = function (e5, t5) {
          const r5 = "wxs" === e5.protocol ? "wss" : "ws";
          let n4 = r5 + "://" + e5.hostname + e5.path;
          return e5.port && 80 !== e5.port && 443 !== e5.port && (n4 = r5 + "://" + e5.hostname + ":" + e5.port + e5.path), "function" == typeof e5.transformWsUrl && (n4 = e5.transformWsUrl(n4, e5, t5)), n4;
        }(t4, e4);
        s = wx.connectSocket({ url: l2, protocols: [r4] }), a = function () {
          const e5 = new i();
          return e5._write = function (e6, t5, r5) {
            s.send({
              data: e6.buffer, success: function () {
                r5();
              }, fail: function (e7) {
                r5(new Error(e7));
              }
            });
          }, e5._flush = function (e6) {
            s.close({
              success: function () {
                e6();
              }
            });
          }, e5;
        }(), u2 = o.obj(), u2._destroy = function (e5, t5) {
          s.close({
            success: function () {
              t5 && t5(e5);
            }
          });
        };
        const c = u2.destroy;
        return u2.destroy = (function () {
          u2.destroy = c;
          const e5 = this;
          setTimeout(function () {
            s.close({
              fail: function () {
                e5._destroy(new Error());
              }
            });
          }, 0);
        }).bind(u2), s.onOpen(function () {
          u2.setReadable(a), u2.setWritable(a), u2.emit("connect");
        }), s.onMessage(function (e5) {
          let t5 = e5.data;
          t5 = t5 instanceof ArrayBuffer ? n3.from(t5) : n3.from(t5, "utf8"), a.push(t5);
        }), s.onClose(function () {
          u2.end(), u2.destroy();
        }), s.onError(function (e5) {
          u2.destroy(new Error(e5.errMsg));
        }), u2;
      };
    }, 298: function (e3) {
      function t3() {
        if (!(this instanceof t3))
          return new t3();
        this.nextId = Math.max(1, Math.floor(65535 * Math.random()));
      }
      t3.prototype.allocate = function () {
        const e4 = this.nextId++;
        return 65536 === this.nextId && (this.nextId = 1), e4;
      }, t3.prototype.getLastAllocated = function () {
        return 1 === this.nextId ? 65535 : this.nextId - 1;
      }, t3.prototype.register = function (e4) {
        return true;
      }, t3.prototype.deallocate = function (e4) {
      }, t3.prototype.clear = function () {
      }, e3.exports = t3;
    }, 2681: function (e3, t3, r3) {
      const n3 = r3(7529), i = r3(8473).Readable, o = { objectMode: true }, s = { clean: true };
      function a(e4) {
        if (!(this instanceof a))
          return new a(e4);
        this.options = e4 || {}, this.options = n3(s, e4), this._inflights = /* @__PURE__ */ new Map();
      }
      a.prototype.put = function (e4, t4) {
        return this._inflights.set(e4.messageId, e4), t4 && t4(), this;
      }, a.prototype.createStream = function () {
        const e4 = new i(o), t4 = [];
        let r4 = false, n4 = 0;
        return this._inflights.forEach(function (e5, r5) {
          t4.push(e5);
        }), e4._read = function () {
          !r4 && n4 < t4.length ? this.push(t4[n4++]) : this.push(null);
        }, e4.destroy = function () {
          if (r4)
            return;
          const e5 = this;
          r4 = true, setTimeout(function () {
            e5.emit("close");
          }, 0);
        }, e4;
      }, a.prototype.del = function (e4, t4) {
        return (e4 = this._inflights.get(e4.messageId)) ? (this._inflights.delete(e4.messageId), t4(null, e4)) : t4 && t4(new Error("missing packet")), this;
      }, a.prototype.get = function (e4, t4) {
        return (e4 = this._inflights.get(e4.messageId)) ? t4(null, e4) : t4 && t4(new Error("missing packet")), this;
      }, a.prototype.close = function (e4) {
        this.options.clean && (this._inflights = null), e4 && e4();
      }, e3.exports = a;
    }, 8254: function (e3) {
      function t3(e4) {
        if (!(this instanceof t3))
          return new t3(e4);
        this.aliasToTopic = {}, this.max = e4;
      }
      t3.prototype.put = function (e4, t4) {
        return !(0 === t4 || t4 > this.max || (this.aliasToTopic[t4] = e4, this.length = Object.keys(this.aliasToTopic).length, 0));
      }, t3.prototype.getTopicByAlias = function (e4) {
        return this.aliasToTopic[e4];
      }, t3.prototype.clear = function () {
        this.aliasToTopic = {};
      }, e3.exports = t3;
    }, 226: function (e3, t3, r3) {
      const n3 = r3(9593), i = r3(423).Q;
      function o(e4) {
        if (!(this instanceof o))
          return new o(e4);
        e4 > 0 && (this.aliasToTopic = new n3({ max: e4 }), this.topicToAlias = {}, this.numberAllocator = new i(1, e4), this.max = e4, this.length = 0);
      }
      o.prototype.put = function (e4, t4) {
        if (0 === t4 || t4 > this.max)
          return false;
        const r4 = this.aliasToTopic.get(t4);
        return r4 && delete this.topicToAlias[r4], this.aliasToTopic.set(t4, e4), this.topicToAlias[e4] = t4, this.numberAllocator.use(t4), this.length = this.aliasToTopic.length, true;
      }, o.prototype.getTopicByAlias = function (e4) {
        return this.aliasToTopic.get(e4);
      }, o.prototype.getAliasByTopic = function (e4) {
        const t4 = this.topicToAlias[e4];
        return void 0 !== t4 && this.aliasToTopic.get(t4), t4;
      }, o.prototype.clear = function () {
        this.aliasToTopic.reset(), this.topicToAlias = {}, this.numberAllocator.clear(), this.length = 0;
      }, o.prototype.getLruAlias = function () {
        return this.numberAllocator.firstVacant() || this.aliasToTopic.keys()[this.aliasToTopic.length - 1];
      }, e3.exports = o;
    }, 3380: function (e3) {
      function t3(e4) {
        const t4 = e4.split("/");
        for (let e5 = 0; e5 < t4.length; e5++)
          if ("+" !== t4[e5]) {
            if ("#" === t4[e5])
              return e5 === t4.length - 1;
            if (-1 !== t4[e5].indexOf("+") || -1 !== t4[e5].indexOf("#"))
              return false;
          }
        return true;
      }
      e3.exports = {
        validateTopics: function (e4) {
          if (0 === e4.length)
            return "empty_topic_list";
          for (let r3 = 0; r3 < e4.length; r3++)
            if (!t3(e4[r3]))
              return e4[r3];
          return null;
        }
      };
    }
  }, t2 = {};
  function r2(n3) {
    var i = t2[n3];
    if (void 0 !== i)
      return i.exports;
    var o = t2[n3] = { id: n3, loaded: false, exports: {} };
    return e2[n3].call(o.exports, o, o.exports, r2), o.loaded = true, o.exports;
  }
  r2.d = function (e3, t3) {
    for (var n3 in t3)
      r2.o(t3, n3) && !r2.o(e3, n3) && Object.defineProperty(e3, n3, { enumerable: true, get: t3[n3] });
  }, r2.g = function () {
    if ("object" == typeof globalThis)
      return globalThis;
    try {
      return this || new Function("return this")();
    } catch (e3) {
      if ("object" == typeof window)
        return window;
    }
  }(), r2.o = function (e3, t3) {
    return Object.prototype.hasOwnProperty.call(e3, t3);
  }, r2.nmd = function (e3) {
    return e3.paths = [], e3.children || (e3.children = []), e3;
  };
  var n2 = r2(2878);
  mqtt_browser.exports = n2;
}();
var mqtt_browserExports = mqtt_browser.exports;
const mqtt = /* @__PURE__ */ getDefaultExportFromCjs(mqtt_browserExports);
window.SiteConfig = window.SiteConfig || {};
window.SiteConfig.MQTT_CONFIG = window.SiteConfig.MQTT_CONFIG || {};
let { username, password, servers, pre } = window.SiteConfig.MQTT_CONFIG;
let client = null;
const mqttConnect = (prefix = "", uid = "") => {
  var _a, _b;
  prefix = prefix || "";
  uid = uid || "";
  username = username || "yq";
  password = password || "123";
  servers = servers || [];
  pre = pre || "";
  const initInfo = "".concat(prefix, ":").concat(uid);
  if ((_a = client == null ? void 0 : client.options) == null ? void 0 : _a.userInfo) {
    const userInfo = ((_b = client == null ? void 0 : client.options) == null ? void 0 : _b.userInfo) || "";
    if (initInfo === userInfo)
      return;
  }
  if (client) {
    return client.end(true, null, () => {
      console.error(
        "mqtt连接已存在，即将关闭连接，并使用 uid:".concat(uid, " prefix: ").concat(prefix, " 重新连接！！！")
      );
      mqttConnect(prefix, uid);
    });
  }
  const topics = {
    FINANCE: "".concat(prefix, "/").concat(uid, "/finance"),
    // 存款取款事件
    balance: "".concat(prefix, "/").concat(uid),
    // 余额变化事件
    homeData: "".concat(prefix != null ? prefix : pre, "/homeData")
  };
  const events$1 = [];
  if (uid && prefix) {
    events$1.push(topics.FINANCE, topics.balance);
  }
  events$1.push(topics.homeData);
  console.log(prefix, uid, "topics");
  console.log("📶链接topics地址：".concat(prefix, "/").concat(uid, "/finance"), events$1);
  const clientId = "".concat(isH5$1 ? "h5" : "web", "-").concat((/* @__PURE__ */ new Date()).getTime());
  client = mqtt.connect({
    username: username.indexOf("yq") > -1 ? username : selfCrypto.decrypt(username),
    password: password.indexOf("123") > -1 ? password : selfCrypto.decrypt(password),
    keepalive: 6,
    // 心跳时间
    clientId,
    servers,
    userInfo: "".concat(prefix, ":").concat(uid)
  });
  client.on("connect", () => {
    console.log("🔥🔥🔥 mqtt链接成功");
  });
  client.on("error", (error) => {
    console.log("😞😞😞 链接错误", error);
  });
  client.on("close", () => {
    client = null;
    console.log("❌ ❌ ❌ 链接关闭");
  });
  client.subscribe(
    events$1,
    {
      qos: 1
    },
    () => {
      console.log("😽😽😽 订阅成功");
    }
  );
  client.on("message", (topic, message2, packet) => {
    console.log("mqtt-message:", topic, message2.toString());
    switch (topic) {
      case topics.FINANCE:
        handleFinance(topic, message2);
        break;
      case topics.homeData:
        handleHomeData(message2);
    }
  });
  const handleFinance = (topic, message2) => {
    const { ty, status, amount, ts, is_first, id } = JSON.parse(message2.toString().replace(/\r|\n/g, ""));
    if (status === "success") {
      if (parseFloat(amount || 0) > 0) {
        useUserInfoStore.getState().getUserBalanceByStore();
      }
    }
    events.emit("mqttQuickTips", { ty, status, amount, ts });
  };
  const handleHomeData = (message2) => {
    const { m: m2, ty, award, ts } = JSON.parse(message2.toString().replace(/\r|\n/g, ""));
    if (m2) {
      if (ty === "1") {
        const state = useUserInfoStore.getState();
        const marqueelist = state.marqueelist || [];
        if (m2 && m2 !== marqueelist[0]) {
          if (marqueelist.length > 20) {
            marqueelist.pop();
          }
          marqueelist.unshift(m2);
          useUserInfoStore.setState({ marqueelist: [...marqueelist] });
        }
        if (award) {
          useUserInfoStore.setState({ award: award || "" });
        }
      }
      if (ty === "2") {
        const info = useUserInfoStore.getState().info || {};
        const username2 = info.username || "";
        const names = m2.split(",");
        if (names.indexOf(username2) > -1) {
          useUserInfoStore.getState().getMessageNumBySotre();
          events.emit("ReceiveMessage");
        }
      }
      if (ty === "3") {
        events.emit("withdrawalUpdate", { m: m2, award, ts });
      }
    }
  };
};
const getCommissionConfig = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/commission/config", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getRebateConfig = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/rebate/config", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postAgencyMydata = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/agency/mydata", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postAgencyAlldata = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/agency/alldata", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getLinkList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/link/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postRebateAgencyBrief = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/rebate/agency/brief", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postAgentSubMember = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/agent/sub/member", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postDirectAgencyFinance = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/direct/agency/finance", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const rebateAgencyRecord = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/member/rebate/agency/record", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postDirectAgencyBete = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/direct/agency/bet", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const betDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/direct/agency/betdetail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postAgencyMypick = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/agency/mypick", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postDirectAgencyState = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/direct/agency/state", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const myBet = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/member/agency/mybet", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoMap = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/list/sort", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoSingleDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/single/deposit/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoSingleRewardl = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/single/deposit/reward", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoSingleApply = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/single/deposit/apply", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postPromoApply = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/apply", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoApplyStatus = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/apply/status", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoRescueProfit = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/rescue/profit", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoDepositDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/deposit/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoTurntablePrizeList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/turntable/prize/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postPromoTurntableApply = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/turntable/apply", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoTurntableDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/turntable/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoTurntableShare = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/turntable/share", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoTurntableTrans = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/turntable/trans", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoInviteList = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/invite/list", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const postPromoInviteOpen = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/invite/open", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoInviteRecordDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post("/promo/invite/record/detail", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoWelfareConfig = async (data = {}, options = {}) => {
  const { webrtcid } = await getDeviceInfo();
  try {
    const [...res] = await http.get(
      "/promo/welfare/config",
      {
        ...data,
        device_no: webrtcid
      },
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoWelfareRecord = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get("/promo/promo/wait/pick", data, options);
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoWelfareApply = async (data = {}, options = {}) => {
  const { webrtcid } = await getDeviceInfo();
  try {
    const [...res] = await http.get(
      "/promo/welfare/receive",
      {
        ...data,
        // dv: browser.versions.mobile ? 25 : 24,
        device_no: webrtcid
      },
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoWelfareGetconf = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/promo/welfare/getconf",
      {
        ...data
      },
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoRedeemcodeDetail = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.get(
      "/promo/redeemcode/detail",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
const getPromoRedeemcodeApply = async (data = {}, options = {}) => {
  try {
    const [...res] = await http.post(
      "/promo/redeemcode/apply",
      data,
      options
    );
    return [...res];
  } catch (error) {
    return [null, error];
  }
};
class initPixi {
  constructor() {
    let url_link = window.location.href;
    const only_apk_no_api = getQueryVariable("only_apk_no_api") || localStorage.getItem("only_apk_no_api") || "";
    if (only_apk_no_api === "xxx") {
      localStorage.setItem("only_apk_no_api", only_apk_no_api);
    }
    this.checkKwaiId();
    this.checkFbId();
    this.checkTiktokId();
    this.getPixiInfo(url_link);
    this.checkOutOpenWindow();
    this.checkGoogleId();
  }
  checkGoogleId() {
    this.gtagId = getQueryVariable("gtagId") || localStorage.getItem("gtagId") || "";
    if (!!this.gtagId) {
      localStorage.setItem("gtagId", this.gtagId);
    }
  }
  checkKwaiId() {
    this.kwai = getQueryVariable("kwaiPixelBaseCode") || localStorage.getItem("kwaiPixelBaseCode") || "";
    if (!!this.kwai) {
      localStorage.setItem("kwaiPixelBaseCode", this.kwai);
    }
  }
  // 初始化 facebookid
  checkFbId() {
    this.facebook = getQueryVariable("fbpixel") || getQueryVariable("fb_dynamic_pixel") || localStorage.getItem("fbid") || "";
    if (!!this.facebook) {
      localStorage.setItem("fbid", this.facebook);
    }
    this.fbpixel_no_event_id = getQueryVariable("fbpixel_no_event") || localStorage.getItem("fbpixel_no_event");
    if (this.fbpixel_no_event_id) {
      window.fbpixel_no_event = true;
      localStorage.setItem("fbpixel_no_event", this.fbpixel_no_event_id);
      this.initFacebook(this.fbpixel_no_event_id);
    } else {
      window.fbpixel_no_event = false;
    }
  }
  checkTiktokId() {
    this.tiktokid = getQueryVariable("tiktokBaesCode") || localStorage.getItem("tiktokid") || "";
    if (!!this.tiktokid) {
      localStorage.setItem("tiktokid", this.tiktokid);
    }
  }
  async getPixiInfo(url) {
    const [res, error] = await getPixiInfo({
      domain: url
    });
    if (res) {
      const google = res.google || "";
      const facebook = res.facebook || "";
      const tiktok = res.tiktok || "";
      const kwai = res.kwai || "";
      if (this.gtagId || google) {
        this.initGoogle(this.gtagId || google);
      }
      if (this.facebook || facebook) {
        if (!window.fbpixel_no_event) {
          this.initFacebook(this.facebook || facebook);
        }
      }
      if (this.tiktokid || tiktok) {
        this.initTikTok(this.tiktokid || tiktok);
      }
      if (this.kwai || kwai) {
        this.initKwai(this.kwai || kwai);
      }
    }
  }
  initGoogle(id) {
    const tem = '\n      <!-- Google tag (gtag.js) -->\n      <script async src="https://www.googletagmanager.com/gtag/js?id='.concat(id, "\"><\/script>\n      <script>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n\n        gtag('config', '").concat(id, "');\n      <\/script>\n    ");
    this.addDom(tem);
  }
  initFacebook(id) {
    const tem = "\n      <!-- Meta Pixel Code -->\n      <script>\n      !function(f,b,e,v,n,t,s)\n      {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n      n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n      if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n      n.queue=[];t=b.createElement(e);t.async=!0;\n      t.src=v;s=b.getElementsByTagName(e)[0];\n      s.parentNode.insertBefore(t,s)}(window, document,'script',\n      'https://connect.facebook.net/en_US/fbevents.js');\n      fbq('init', '".concat(id, '\');\n      fbq(\'track\', \'PageView\');\n      <\/script>\n      <noscript><img height="1" width="1" style="display:none"\n      src="https://www.facebook.com/tr?id=').concat(id, '&ev=PageView&noscript=1"\n      /></noscript>\n      <!-- End Meta Pixel Code -->\n    ');
    this.addDom(tem);
    if (!localStorage.getItem("alreadyViewInFb")) {
      localStorage.setItem("alreadyViewInFb", true);
      window.fbq && window.fbq("track", "WebUV");
    }
  }
  initTikTok(id) {
    const tem = '\n    <script>\n      !function (w, d, t) {\n        w.TiktokAnalyticsObject=t;\n        var ttq=w[t]=w[t]||[];\n        ttq.methods=["page","track","identify","instances","debug","on","off","once","ready","alias","group","enableCookie","disableCookie"],ttq.setAndDefer=function(t,e){t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}};\n        for(var i=0;i<ttq.methods.length;i++)ttq.setAndDefer(ttq,ttq.methods[i]);ttq.instance=function(t){for(var e=ttq._i[t]||[],n=0;n<ttq.methods.length;n++\n      )ttq.setAndDefer(e,ttq.methods[n]);return e},ttq.load=function(e,n){var i="https://analytics.tiktok.com/i18n/pixel/events.js";\n        ttq._i=ttq._i||{},ttq._i[e]=[],ttq._i[e]._u=i,ttq._t=ttq._t||{},ttq._t[e]=+new Date,ttq._o=ttq._o||{},ttq._o[e]=n||{};n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=i+"?sdkid="+e+"&lib="+t;\n        e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)};\n      ttq.load(\''.concat(id, "');\n      ttq.page();\n    }(window, document, 'ttq');\n    <\/script>");
    this.addDom(tem);
  }
  initKwai(id) {
    const tem = '\n    <script>\n    !function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.install=t():e.install=t()}(window,(function(){return function(e){var t={};\n    function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};\n    return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;\n      if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);\n      if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};!function(e){var t=window;t.KwaiAnalyticsObject=e,t[e]=t[e]||[];var n=t[e];n.methods=["page","track","identify","instances","debug","on","off","once","ready","alias","group","enableCookie","disableCookie"];var o=function(e,t){e[t]=function(){var n=Array.from(arguments),o=r([t],n,!0);e.push(o)}};n.methods.forEach((function(e){o(n,e)})),n.instance=function(e){var t=n._i[e]||[];return n.methods.forEach((function(e){o(t,e)})),t},n.load=function(t,r){n._i=n._i||{},n._i[t]=[],n._i[t]._u="https://s1.kwai.net/kos/s101/nlav11187/pixel/events.js",n._t=n._t||{},n._t[t]=+new Date,n._o=n._o||{},n._o[t]=r||{};var o=document.createElement("script");o.type="text/javascript",o.async=!0,o.src="https://s1.kwai.net/kos/s101/nlav11187/pixel/events.js?sdkid="+t+"&lib="+e;var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(o,i)}}("kwaiq")}])}));\n    <\/script>\n    <script>\n    kwaiq.load(\''.concat(id, "');\n    kwaiq.page();\n    kwaiq.instance_id ='").concat(id, "'\n    <\/script>\n    ");
    this.addDom(tem);
  }
  addDom(str) {
    const div = document.createElement("div");
    div.style.width = "0px";
    div.style.height = "0px";
    div.style.display = "none";
    document.body.appendChild(div);
    const range2 = document.createRange();
    range2.selectNode(div);
    const doc = range2.createContextualFragment(str);
    div.appendChild(doc);
  }
  checkOutOpenWindow() {
    const hostname = window.location.href || "";
    const id = getQueryVariable("id");
    this.hostname = hostname;
    setTimeout(() => {
      if (window.jsBridge && window.jsBridge.postMessage) {
        try {
          if (id === "103132014") {
            window.jsBridge.postMessage("openWindow", JSON.stringify({ "url": hostname }));
          }
        } catch (e2) {
          console.log(e2);
        }
      }
    }, 3 * 1e3);
  }
}
const postPixiChargeEvent = (item = {}) => {
  var _a;
  console.log("---------> 1", item);
  const id = item.id || "";
  const is_remark = item.is_remark || false;
  const is_first = item.is_first || false;
  const amount = item.amount || 0;
  item.finish_at || 0;
  if (!!is_remark)
    return;
  if (id && !is_remark) {
    const afFun = String(is_first) + "|" + String(((_a = window == null ? void 0 : window.jsBridge) == null ? void 0 : _a.postMessage) || "fun");
    const fbFun = String(is_first) + "|" + String((window == null ? void 0 : window.fbq) || "fun");
    const afDm = window.location.href;
    const fbDm = window.location.href;
    memberPointStatisticsRemark({ id, afFun, fbFun, afDm, fbDm }, { noMsg: true });
  }
  if (window.kwaiq && window.kwaiq.track) {
    window.kwaiq.instance(window.kwaiq.instance_id).track("purchase");
  }
  if (window.ttq && window.ttq.track) {
    window.ttq.track("CompletePayment", { "currency": getMoneyUnit(), "value": +amount });
  }
  if (is_first) {
    console.log("---------> 2");
    window.fbq && !window.fbpixel_no_event && window.fbq("track", "firstrecharge");
    window.fbq && !window.fbpixel_no_event && window.fbq("track", "Purchase", { value: +amount, currency: getMoneyUnit() });
    if (window.jsBridge && window.jsBridge.postMessage) {
      const strOb = {
        amount: String(amount || 0),
        currency: getMoneyUnit()
      };
      try {
        window.jsBridge.postMessage("firstrecharge", JSON.stringify(strOb));
        useAlertStore.setState({ alertFor166: true });
      } catch (e2) {
        console.log(e2);
      }
    }
    if (window.jsBridge && window.jsBridge.reportEvent) {
      const strOb = {
        amount: String(amount || 0),
        currency: getMoneyUnit()
      };
      try {
        window.jsBridge.reportEvent("Purchase", JSON.stringify(strOb));
        useAlertStore.setState({ alertFor166: true });
      } catch (e2) {
        console.log(e2);
      }
    }
    if (window.kwaiq && window.kwaiq.track) {
      window.kwaiq.instance(window.kwaiq.instance_id).track("firstDeposit");
    }
    if (window.ttq && window.ttq.track) {
      window.ttq.track("PlaceAnOrder", { "currency": getMoneyUnit(), "value": +amount });
    }
  }
  if (!is_first) {
    console.log("---------> 3");
    window.fbq && !window.fbpixel_no_event && window.fbq("track", "recharge");
    window.fbq && !window.fbpixel_no_event && window.fbq("track", "Purchase", { value: +amount, currency: getMoneyUnit() });
    if (window.jsBridge && window.jsBridge.postMessage) {
      const strOb = {
        amount: String(amount || 0),
        currency: getMoneyUnit()
      };
      try {
        window.jsBridge.postMessage("recharge", JSON.stringify(strOb));
      } catch (e2) {
        console.log(e2);
      }
    }
    if (window.jsBridge && window.jsBridge.reportEvent) {
      const strOb = {
        amount: String(amount || 0),
        currency: getMoneyUnit()
      };
      try {
        window.jsBridge.reportEvent("AddToCart", JSON.stringify(strOb));
      } catch (e2) {
        console.log(e2);
      }
    }
    if (window.kwaiq && window.kwaiq.track) {
      window.kwaiq.instance(window.kwaiq.instance_id).track("addToCart");
    }
    if (window.ttq && window.ttq.track) {
      window.ttq.track("InitiateCheckout");
    }
  }
};
const saveUrlParams = () => {
  const search = location.search || "";
  const url = search.indexOf("click_id") > -1 ? search : "";
  const url2 = search.indexOf("fbclid") > -1 ? search : "";
  const localUrlData = Cache.get("localUrlData") || "";
  Cache.set("localUrlData", url || url2 || localUrlData);
};
const getUrlParams = () => {
  return Cache.get("localUrlData") || "";
};
const selfCrypto = {
  //加密
  encryption(data) {
    data = JSON.stringify(data);
    let str = "";
    let alterText = [];
    let varCost = [];
    const TextLength = data.length;
    for (let i = 0; i < TextLength; i++) {
      let random = parseInt(Math.random() * 266);
      alterText[i] = data.charCodeAt(i) + random;
      varCost[i] = random;
    }
    for (let i = 0; i < TextLength; i++) {
      str += String.fromCharCode(alterText[i], varCost[i]);
    }
    return str;
  },
  //解密
  decrypt(text) {
    let str = "";
    let alterText = [];
    let varCost = [];
    const TextLength = text.length;
    for (let i = 0; i < TextLength; i++) {
      alterText[i] = text.charCodeAt(i);
      varCost[i] = text.charCodeAt(i + 1);
    }
    for (let i = 0; i < TextLength; i = i + 2) {
      str += String.fromCharCode(alterText[i] - varCost[i]);
    }
    return JSON.parse(str);
  }
};
const events = mitt();
const joinClass = (...arr) => {
  return arr.join(" ");
};
const WindowWidth = window.innerWidth;
const getMaxWidth = () => {
  let defaultMaxWidth = document.documentElement.clientWidth * 0.333 - 100;
  const clientHeight = document.documentElement.clientHeight;
  if (clientHeight > defaultMaxWidth * 0.563)
    defaultMaxWidth = clientHeight * 0.563;
  return defaultMaxWidth;
};
const minPxChip = () => {
  const defaultMaxWidth = getMaxWidth();
  if (document.documentElement.getAttribute("nested") === "1") {
    return (WindowWidth > defaultMaxWidth ? defaultMaxWidth : WindowWidth) / 750;
  }
  return WindowWidth / 750;
};
const toPXBack = (number) => {
  return "".concat(number * minPxChip(), "px");
};
const inputNameStrLengthTest = /^[a-z]{1}[a-z0-9]{4,13}$/;
const checkInputUserName = (name) => {
  name = name || "";
  if (!name)
    return "";
  if (name) {
    if (!inputNameStrLengthTest.test(name)) {
      return trans("必须是5-14个英文字母和数字的组合，以字母开头");
    }
    return "";
  }
};
const inputPwdStrLengthTest = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/;
const checkInputUserPwd = (pwd) => {
  pwd = pwd || "";
  if (!pwd)
    return "";
  if (pwd) {
    if (!inputPwdStrLengthTest.test(pwd)) {
      return trans("必须是6-20个英文字母和数字的组合");
    }
    return "";
  }
};
const checkInputPhoneNumber = (phone) => {
  phone = phone || "";
  phone = phone.replace(/\s*/g, "");
  if (!phone)
    return true;
  const reg = /^[0-9]{8,11}$/;
  return reg.test(phone);
};
const customToFixed = (num, decimal = 2) => {
  const locales = "pt-BR";
  if (num === void 0) {
    return "";
  }
  const number = Math.floor(num * Math.pow(10, decimal + 1)) / Math.pow(10, decimal + 1);
  return number.toLocaleString(locales, { minimumFractionDigits: decimal, maximumFractionDigits: decimal });
};
const copyText = (text = "") => {
  if (navigator.clipboard) {
    navigator.clipboard.writeText(text);
  } else {
    const textarea = document.createElement("textarea");
    document.body.appendChild(textarea);
    textarea.style.position = "fixed";
    textarea.style.clip = "rect(0 0 0 0)";
    textarea.style.top = "10px";
    textarea.value = text;
    textarea.select();
    document.execCommand("copy", true);
    document.body.removeChild(textarea);
  }
};
function getQueryVariable(variable) {
  let query = location.search.substring(1);
  let vars = query.split("&");
  for (let i = 0; i < vars.length; i++) {
    let pair = vars[i].split("=");
    if (pair[0] == variable) {
      return pair[1];
    }
  }
  return "";
}
function sendMessage(callbackName, message2) {
  if (!window.flutter_inappwebview)
    return;
  if (window.flutter_inappwebview.callHandler) {
    window.flutter_inappwebview.callHandler(callbackName, message2);
  } else {
    window.flutter_inappwebview._callHandler(callbackName, setTimeout(function () {
    }), JSON.stringify([message2]));
  }
}
function addIcoToHead(href) {
  if (document.querySelector('link[rel="shortcut icon"]')) {
    return;
  }
  const link = document.createElement("link");
  link.rel = "shortcut icon";
  link.href = href;
  document.head.appendChild(link);
}
function addManifestToHead() {
  if (document.querySelector('link[rel="manifest"]')) {
    return;
  }
  const link = document.createElement("link");
  link.rel = "manifest";
  link.href = "/ssss/manifest.json?t=".concat(Date.now());
  document.head.appendChild(link);
}
function getCookieVariable(variable) {
  if (!variable)
    return "";
  if (!document.cookie)
    return "";
  const arrs = document.cookie.split("; ");
  if (!Array.isArray(arrs))
    return "";
  if (arrs.length === 0)
    return "";
  const cookieMap = {};
  arrs.forEach((cookie2) => {
    const [key, value] = cookie2.split("=");
    cookieMap[key] = value || "";
  });
  return cookieMap[variable] || "";
}
function getRandomInt(min, max2) {
  min = Math.ceil(min);
  max2 = Math.floor(max2);
  return Math.floor(Math.random() * (max2 - min + 1)) + min;
}
function getLineClass(num) {
  let cl2 = "lineStrong";
  num = Number(num);
  if (num > 100) {
    cl2 = "lineMiddle";
  }
  if (num > 150) {
    cl2 = "lineWeak";
  }
  return cl2;
}
function checkPasswordStrength(password2) {
  const passwordLength = 8;
  if (!password2)
    return 0;
  let level = 0;
  const rule1 = /^\d+$|^[a-zA-Z]+$/;
  const rule2 = /^(?=.*[0-9])(?=.*[a-zA-Z])[0-9a-zA-Z]+$/;
  const rule3 = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]+$/;
  if (password2.length < passwordLength) {
    level = 1;
  } else if (rule3.test(password2)) {
    level = 4;
  } else if (rule2.test(password2)) {
    level = 2;
  } else if (rule1.test(password2)) {
    level = 1;
  }
  return level;
}
const preloadImage = (url) => {
  return new Promise((resolve) => {
    const img = new Image();
    img.src = url;
    img.onload = () => {
      resolve(true);
    };
  });
};
const removeEmpty = (obj) => {
  if (!obj)
    return obj;
  if (Array.isArray(obj))
    return obj;
  if (typeof obj !== "object")
    return obj;
  const _obj = { ...obj };
  if (!_obj)
    return _obj;
  Object.keys(_obj).forEach((key) => {
    if (_obj[key] === null || _obj[key] === void 0 || _obj[key] === "" || Number.isNaN(_obj[key])) {
      delete _obj[key];
    }
  });
  return _obj;
};
const AuthActions = ["slide", "nine"];
const slideBlockByGeetest4 = (type2) => {
  type2 = type2 || "any";
  if (AuthActions.indexOf(type2) === -1) {
    type2 = AuthActions[Math.floor(Math.random() * 2)];
  }
  return new Promise((reslove) => {
    initGeetest4({
      mask: {
        outside: false,
        bgColor: "rgba(0, 0, 0, 0.6)"
      },
      riskType: type2,
      language: "eng",
      captchaId: "5dae4d272f4005d6511f8cbaa20dae4c",
      product: "bind"
    }, function (captcha) {
      captcha.appendTo("#logRegBlock");
      captcha.onReady(function (...arr) {
        captcha.showCaptcha();
      }).onSuccess(function (...arr) {
        const result = captcha.getValidate();
        reslove(result);
        captcha.destroy();
        captcha = null;
      }).onError(function (...arr) {
        captcha.reset();
      }).onClose(() => {
        reslove(null);
        captcha.destroy();
        captcha = null;
      });
    });
  });
};
const sortGameTabs = (GameTabs, sortList) => {
  if (!sortList)
    return GameTabs;
  const _gameTabs = GameTabs.map((item) => {
    const _obj = sortList.find((sortItem) => sortItem.title === item.type);
    return {
      ...item,
      sort: (_obj == null ? void 0 : _obj.sort_by) || item.sort || 0
    };
  });
  return _gameTabs.sort((a, b) => a.sort - b.sort);
};
const scrollToPlatromItem = (Tabs, selectType) => {
  const scrollDom = document.getElementById("homeBoxScroll");
  const gameTabsBox = document.getElementById("gameTabsBox");
  const downloadDom = document.getElementById("downloadDom");
  const headerBoxDom = document.getElementById("headerBoxDom");
  if (!scrollDom)
    return;
  const targetId = Tabs.find((item) => item.type === selectType).text;
  const target = document.getElementById(targetId);
  if (!target)
    return;
  const targetTop = target.offsetTop;
  const gameTabsBoxHeight = gameTabsBox ? gameTabsBox.offsetHeight : 0;
  const downloadDomHeight = downloadDom ? downloadDom.offsetHeight : 0;
  const headerBoxDomHeight = headerBoxDom ? headerBoxDom.offsetHeight : 0;
  scrollDom.scrollTo({
    top: targetTop - gameTabsBoxHeight - downloadDomHeight - headerBoxDomHeight - 10,
    behavior: "instant"
  });
};
const unitConfig = {
  BR: {
    name: "BRL",
    easyName: "R$",
    code: "+55",
    img: "/home/icons/baxi.webp",
    imgRound: "/home/icons/currency_BR.webp",
    payMethod: "PIX"
  },
  PH: {
    name: "PHP",
    easyName: "₱",
    code: "+63",
    img: "/home/icons/ph.webp",
    imgRound: "/home/icons/currency_PH.webp",
    payMethod: "GCash"
  }
};
const getMoneyUnit = (isEasy = false) => {
  return unitConfig["BR"][isEasy ? "easyName" : "name"];
};
const countryCode = unitConfig["BR"]["code"];
const getCountryFlag = (isRound = false) => {
  return unitConfig["BR"][isRound ? "imgRound" : "img"];
};
const getPayMethod = () => {
  return unitConfig["BR"]["payMethod"];
};
const generateUniqueFileName = (originalName) => {
  const timestamp = Date.now();
  const randomNumber = Math.floor(Math.random() * 1e4);
  const nameSplit = originalName.split(".");
  const uniqueName = "".concat(timestamp, "-").concat(randomNumber, "-").concat(nameSplit.slice(0, nameSplit.length - 1).join(""));
  return "".concat(md5(uniqueName), ".").concat(nameSplit.at(-1));
};
const initLanguage = (language) => {
  instance.changeLanguage(language);
  dayjs.locale(dayjsLocale[language]);
  Cache.set("language", language);
  document.documentElement.setAttribute("lang", language);
};
const useUserInfoStore = create((set, get2) => {
  let language = getQueryVariable("language") || Cache.get("language") || instance.language;
  if (!languageOptions.find((l2) => l2.value === language)) {
    language = defaultLang;
  }
  initLanguage(language);
  return {
    theme: document.documentElement.getAttribute("theme") || "black",
    // 控制 h5左边菜单
    isShowSliderBox: false,
    token: "",
    info: null,
    openForLogin: false,
    openForRegister: false,
    openForXieYi: false,
    download: "",
    marqueelist: [],
    isSetWithdrawPsd: false,
    award: "",
    // jackpot 奖金
    prefix: "",
    // 网站前缀
    appUrl: "",
    services_chats: [],
    wheelInfo: {},
    //拼多多转盘游戏参加详情
    isHiddenDownloadApp: !!getBrowser().isIos && !!navigator.standalone,
    websetConfig: {},
    alertAfterLogin: false,
    logRegisterStyle: 0,
    //注册登录弹窗样式
    // 代理链接
    agentUrl: window.location.origin,
    // 代理id
    agentId: "",
    openForLine: false,
    // 线路检测窗口打开
    curLineTime: 0,
    // 当前线路时间
    language,
    missaoList: [],
    //任务列表
    availableList: {
      //可领取列表 
      d: [],
      agg: "0"
    },
    missaoRule: {},
    missaoSwitch: false,
    rebateStatus: false,
    setLanguage(language2) {
      initLanguage(language2);
      set(() => ({
        language: language2
      }));
    },
    getLanguage() {
      return languageOptions.find((l2) => l2.value === get2().language);
    },
    getMarqueeByStore: async () => {
      const [res, error] = await getMarquee();
      if (res) {
        set(() => {
          return { marqueelist: res };
        });
      }
    },
    updateSliderBoxStatus: (status) => set(() => {
      return { isShowSliderBox: status };
    }),
    getUserInfoByStore: async () => {
      const [info] = await getUserInfo();
      if (info) {
        set((state) => {
          const preInfo = state.info || {};
          return { info: Object.assign({}, preInfo, info), prefix: info.prefix };
        });
      }
    },
    getLogRegisterStyleByStore: async () => {
      const [res] = await memberWebsetList();
      if (res) {
        set((state) => {
          return { logRegisterStyle: (res == null ? void 0 : res.logRegisterStyle) || 1 };
        });
      }
    },
    getUserBalanceByStore: async () => {
      const [balInfo] = await getBalance();
      if (balInfo) {
        delete balInfo.uid;
        set((state) => {
          const preInfo = state.info || {};
          return { info: Object.assign({}, preInfo, balInfo) };
        });
      }
    },

    getDownloadAppByStore: async () => {
      const [urlInfo] = await getDownloadApp();
      if (urlInfo) {
        console.log(urlInfo, "============222222222");
        set((state) => {
          return { appUrl: urlInfo.url || "", version: urlInfo.version || "" };
        });
      }
    },
    exit: async () => {
      set((state) => {
        Cache.set("token", "");
        return {
          info: null,
          token: "",
          wheelInfo: {},
          openForRegister: true,
          openForLogin: false
        };
      });
    },
    getWithdrawPsdStatus: async () => {
      const [data, error] = await getMemberPasswordCheck();
      if (!error) {
        set(() => {
          return { isSetWithdrawPassword: data !== "1249" };
        });
      }
    },
    setServiriesChat: (chats) => {
      set((state) => {
        return { services_chats: chats };
      });
    },
    getWheelInfo: async () => {
      const [wheelDetail, wheelDetailErrpr] = await getPromoTurntableDetail();
      set((state) => {
        return { wheelInfo: wheelDetail };
      });
    },
    setThemeColor: (color) => {
      localStorage.setItem("SiteColor", color);
      document.documentElement.setAttribute("theme", color);
      set(() => {
        return { theme: color };
      });
    },
    closeAppDownloadTopTips: () => {
      set((state) => {
        const websetConfig = state.websetConfig;
        return {
          websetConfig: Object.assign({}, websetConfig, { banner_switch: "0" })
        };
      });
    },
    getMissaoList: async () => {
      const setItemIcon = (id) => {
        if (id === "1") {
          return "save_app.webp";
        } else if (id === "2") {
          return "save_link.webp";
        }
      };
      const [result] = await getPromoWelfareConfig();
      const newRes = (result == null ? void 0 : result.map((item) => {
        return {
          ...item,
          icon: setItemIcon(item.welfare_id)
        };
      }).filter((fEl) => {
        return +fEl.status !== 0;
      })) || [];
      set((state) => {
        return { missaoList: newRes };
      });
    },
    getAvailableList: async (params) => {
      const p2 = {
        ...params
      };
      const [res, err] = await getPromoWelfareRecord(p2);
      set((state) => {
        return {
          availableList: {
            d: res.d || [],
            agg: res.agg || "0"
          }
        };
      });
    },
    getMissaoRule: async (params) => {
      const [res, err] = await getPromoWelfareGetconf();
      const d = browser.versions.mobile ? 2 : 1;
      set((state) => {
        return {
          missaoRule: res,
          missaoSwitch: res.entrance.includes(d)
        };
      });
    },
    fetchRebateConfig: async (game_type) => {
      let rebateStatus = false;
      if (get2().token) {
        const [res, err] = await getRebateConfig({
          game_type
        });
        rebateStatus = !!res && !!res.length;
      }
      set(() => {
        return {
          rebateStatus
        };
      });
    }
  };
});
useUserInfoStore.setState({ token: Cache.get("token") || "" });
localStorage.setItem("SiteColor", useUserInfoStore.getState().theme);
localStorage.setItem("nested", document.documentElement.getAttribute("nested"));
if (!document.documentElement.getAttribute("theme")) {
  document.documentElement.setAttribute("theme", useUserInfoStore.getState().theme);
}
const useGameStore = create((set) => ({
  renderType: "-1",
  hotGames: [],
  games: [],
  selectType: "热门",
  selectGame: {
    pid: "-1",
    flag: 0,
    keyword: ""
  },
  // 所有场馆，无论后台是否开启
  allPlatformMap: {},
  gameNamesMap: {},
  // 缓存场馆是否维护
  maintainedMap: {},
  // 缓存判定游戏类型是否知否展示
  gameOpenMap: {},
  gameSortMap: {},
  // 是否加载过引导注册
  isLoadEncRegister: Cache.get("isAlreadyRegister") || false,
  // 存储活动状态
  activityStatus: {},
  // 储存活动列表
  activityList: [],
  // 隐藏Pc Header的金额
  hidePcHeaderMoney: false,
  // 弹窗队列
  popupQueue: [],
  getHotGamesByStore: async () => {
    const [res] = await getHotGames();
    if (res && Array.isArray(res) && res.length > 0) {
      set(() => {
        return { hotGames: res };
      });
    }
  },
  getGamesByStore: async () => {
    const [_res] = await getGamesNav();
    if (_res && Array.isArray(_res) && _res.length > 0) {
      const res = _res.map((item) => {
        return {
          ...item,
          name: item.title
        };
      });
      set(() => {
        const maps = {};
        const maintainedMap = {};
        const gameOpenMap = {};
        const gameSortMap = {};
        const selectType = res[0].name;
        console.log(res, "game");
        res.forEach((item) => {
          gameSortMap[item.name] = item.sort;
          if (item.l && Array.isArray(item.l) && item.l.length > 0) {
            gameOpenMap[item.name] = true;
            item.l.forEach((game) => {
              const value = game.name.split(" ")[0] || "";
              maps[game.id] = value;
              (game.sub || []).forEach((sub) => {
                maps[sub] = value;
              });
              maintainedMap[game.id] = game.maintained;
            });
          }
        });
        console.log("maps :>> ", maps);
        return {
          selectType,
          games: res,
          gameNamesMap: maps,
          maintainedMap,
          gameOpenMap,
          gameSortMap
        };
      });
    }
  },
  setIsLoadEncRegister: (isLoadEncRegister) => {
    set(() => {
      return { isLoadEncRegister };
    });
  },
  setActivityStatus: () => {
    getPromoList().then(([res, err]) => {
      const statusResult = {};
      res.forEach((item) => {
        statusResult[item.flag] = item.state;
      });
      set(() => {
        return { activityStatus: statusResult, activityList: res };
      });
    });
  },
  setHidePcHeaderMoney: (hidePcHeaderMoney) => {
    set(() => {
      return { hidePcHeaderMoney };
    });
  },
  setPopupQueue: (sort, isOpen) => {
    set((state) => {
      const copyPopup = [...state.popupQueue];
      copyPopup[sort] = isOpen;
      return { ...state, popupQueue: copyPopup };
    });
  },
  // 获取所有场馆，不区分后台是否开启
  async getAllPlatform() {
    const [res, err] = await allPlatformList();
    if (!err) {
      console.log("res :>> ", res);
      set({
        allPlatformMap: res.reduce((pre2, curr) => {
          pre2[curr.id] = curr.name;
          return pre2;
        }, {})
      });
    }
  }
}));
const useMessageStore = create((set) => ({
  num: 0,
  getMessageNumBySotre: async () => {
    const [res] = await getMessageNum();
    set(() => {
      return { num: res || 0 };
    });
  }
}));
const useAlertStore = create((set) => ({
  alertFor166: false
}));
const useFloatPopShareStore = create((set) => ({
  // float表示浮窗
  float: [],
  // 弹窗数据
  pop: [],
  // 分享数据
  share: []
}));
var duration$1 = { exports: {} };
(function (module, exports) {
  !function (t2, s) {
    module.exports = s();
  }(commonjsGlobal, function () {
    var t2, s, n2 = 1e3, i = 6e4, e2 = 36e5, r2 = 864e5, o = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, u2 = 31536e6, d = 2628e6, a = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/, h2 = { years: u2, months: d, days: r2, hours: e2, minutes: i, seconds: n2, milliseconds: 1, weeks: 6048e5 }, c = function (t3) {
      return t3 instanceof g;
    }, f2 = function (t3, s2, n3) {
      return new g(t3, n3, s2.$l);
    }, m2 = function (t3) {
      return s.p(t3) + "s";
    }, l2 = function (t3) {
      return t3 < 0;
    }, $ = function (t3) {
      return l2(t3) ? Math.ceil(t3) : Math.floor(t3);
    }, y2 = function (t3) {
      return Math.abs(t3);
    }, v2 = function (t3, s2) {
      return t3 ? l2(t3) ? { negative: true, format: "" + y2(t3) + s2 } : { negative: false, format: "" + t3 + s2 } : { negative: false, format: "" };
    }, g = function () {
      function l3(t3, s2, n3) {
        var i2 = this;
        if (this.$d = {}, this.$l = n3, void 0 === t3 && (this.$ms = 0, this.parseFromMilliseconds()), s2)
          return f2(t3 * h2[m2(s2)], this);
        if ("number" == typeof t3)
          return this.$ms = t3, this.parseFromMilliseconds(), this;
        if ("object" == typeof t3)
          return Object.keys(t3).forEach(function (s3) {
            i2.$d[m2(s3)] = t3[s3];
          }), this.calMilliseconds(), this;
        if ("string" == typeof t3) {
          var e3 = t3.match(a);
          if (e3) {
            var r3 = e3.slice(2).map(function (t4) {
              return null != t4 ? Number(t4) : 0;
            });
            return this.$d.years = r3[0], this.$d.months = r3[1], this.$d.weeks = r3[2], this.$d.days = r3[3], this.$d.hours = r3[4], this.$d.minutes = r3[5], this.$d.seconds = r3[6], this.calMilliseconds(), this;
          }
        }
        return this;
      }
      var y3 = l3.prototype;
      return y3.calMilliseconds = function () {
        var t3 = this;
        this.$ms = Object.keys(this.$d).reduce(function (s2, n3) {
          return s2 + (t3.$d[n3] || 0) * h2[n3];
        }, 0);
      }, y3.parseFromMilliseconds = function () {
        var t3 = this.$ms;
        this.$d.years = $(t3 / u2), t3 %= u2, this.$d.months = $(t3 / d), t3 %= d, this.$d.days = $(t3 / r2), t3 %= r2, this.$d.hours = $(t3 / e2), t3 %= e2, this.$d.minutes = $(t3 / i), t3 %= i, this.$d.seconds = $(t3 / n2), t3 %= n2, this.$d.milliseconds = t3;
      }, y3.toISOString = function () {
        var t3 = v2(this.$d.years, "Y"), s2 = v2(this.$d.months, "M"), n3 = +this.$d.days || 0;
        this.$d.weeks && (n3 += 7 * this.$d.weeks);
        var i2 = v2(n3, "D"), e3 = v2(this.$d.hours, "H"), r3 = v2(this.$d.minutes, "M"), o2 = this.$d.seconds || 0;
        this.$d.milliseconds && (o2 += this.$d.milliseconds / 1e3, o2 = Math.round(1e3 * o2) / 1e3);
        var u3 = v2(o2, "S"), d2 = t3.negative || s2.negative || i2.negative || e3.negative || r3.negative || u3.negative, a2 = e3.format || r3.format || u3.format ? "T" : "", h3 = (d2 ? "-" : "") + "P" + t3.format + s2.format + i2.format + a2 + e3.format + r3.format + u3.format;
        return "P" === h3 || "-P" === h3 ? "P0D" : h3;
      }, y3.toJSON = function () {
        return this.toISOString();
      }, y3.format = function (t3) {
        var n3 = t3 || "YYYY-MM-DDTHH:mm:ss", i2 = { Y: this.$d.years, YY: s.s(this.$d.years, 2, "0"), YYYY: s.s(this.$d.years, 4, "0"), M: this.$d.months, MM: s.s(this.$d.months, 2, "0"), D: this.$d.days, DD: s.s(this.$d.days, 2, "0"), H: this.$d.hours, HH: s.s(this.$d.hours, 2, "0"), m: this.$d.minutes, mm: s.s(this.$d.minutes, 2, "0"), s: this.$d.seconds, ss: s.s(this.$d.seconds, 2, "0"), SSS: s.s(this.$d.milliseconds, 3, "0") };
        return n3.replace(o, function (t4, s2) {
          return s2 || String(i2[t4]);
        });
      }, y3.as = function (t3) {
        return this.$ms / h2[m2(t3)];
      }, y3.get = function (t3) {
        var s2 = this.$ms, n3 = m2(t3);
        return "milliseconds" === n3 ? s2 %= 1e3 : s2 = "weeks" === n3 ? $(s2 / h2[n3]) : this.$d[n3], s2 || 0;
      }, y3.add = function (t3, s2, n3) {
        var i2;
        return i2 = s2 ? t3 * h2[m2(s2)] : c(t3) ? t3.$ms : f2(t3, this).$ms, f2(this.$ms + i2 * (n3 ? -1 : 1), this);
      }, y3.subtract = function (t3, s2) {
        return this.add(t3, s2, true);
      }, y3.locale = function (t3) {
        var s2 = this.clone();
        return s2.$l = t3, s2;
      }, y3.clone = function () {
        return f2(this.$ms, this);
      }, y3.humanize = function (s2) {
        return t2().add(this.$ms, "ms").locale(this.$l).fromNow(!s2);
      }, y3.valueOf = function () {
        return this.asMilliseconds();
      }, y3.milliseconds = function () {
        return this.get("milliseconds");
      }, y3.asMilliseconds = function () {
        return this.as("milliseconds");
      }, y3.seconds = function () {
        return this.get("seconds");
      }, y3.asSeconds = function () {
        return this.as("seconds");
      }, y3.minutes = function () {
        return this.get("minutes");
      }, y3.asMinutes = function () {
        return this.as("minutes");
      }, y3.hours = function () {
        return this.get("hours");
      }, y3.asHours = function () {
        return this.as("hours");
      }, y3.days = function () {
        return this.get("days");
      }, y3.asDays = function () {
        return this.as("days");
      }, y3.weeks = function () {
        return this.get("weeks");
      }, y3.asWeeks = function () {
        return this.as("weeks");
      }, y3.months = function () {
        return this.get("months");
      }, y3.asMonths = function () {
        return this.as("months");
      }, y3.years = function () {
        return this.get("years");
      }, y3.asYears = function () {
        return this.as("years");
      }, l3;
    }(), p2 = function (t3, s2, n3) {
      return t3.add(s2.years() * n3, "y").add(s2.months() * n3, "M").add(s2.days() * n3, "d").add(s2.hours() * n3, "h").add(s2.minutes() * n3, "m").add(s2.seconds() * n3, "s").add(s2.milliseconds() * n3, "ms");
    };
    return function (n3, i2, e3) {
      t2 = e3, s = e3().$utils(), e3.duration = function (t3, s2) {
        var n4 = e3.locale();
        return f2(t3, { $l: n4 }, s2);
      }, e3.isDuration = c;
      var r3 = i2.prototype.add, o2 = i2.prototype.subtract;
      i2.prototype.add = function (t3, s2) {
        return c(t3) ? p2(this, t3, 1) : r3.bind(this)(t3, s2);
      }, i2.prototype.subtract = function (t3, s2) {
        return c(t3) ? p2(this, t3, -1) : o2.bind(this)(t3, s2);
      };
    };
  });
})(duration$1);
var durationExports = duration$1.exports;
const duration = /* @__PURE__ */ getDefaultExportFromCjs(durationExports);
dayjs.extend(duration);
const parseSize = (size) => {
  if (Number(size / (1024 * 1024 * 1024)).toFixed() > 0) {
    return (Number((size / (1024 * 1024 * 1024)).toFixed()) || 1) + "G";
  } else if (Number(size / (1024 * 1024)).toFixed() > 0) {
    return (Number((size / (1024 * 1024)).toFixed()) || 1) + "M";
  }
  return (Number((size / 1024).toFixed()) || 1) + "K";
};
const localKey = "music_o";
const getLocalstorage = () => {
  const o = localStorage.getItem(localKey);
  try {
    return JSON.parse(o) || {};
  } catch (error) {
    return {};
  }
};
const getLocalItem = (k2, format) => {
  return (format == null ? void 0 : format(getLocalstorage()[k2])) || getLocalstorage()[k2];
};
const setLocalStorage = (o) => {
  localStorage.setItem(localKey, JSON.stringify({ ...getLocalstorage(), ...o }));
};
let CacheRandomList = [];
const useMusicStore = create((set, get2) => {
  let element = document.getElementById("default_audio_&");
  if (!element) {
    element = document.createElement("audio");
    element.id = "default_audio_&";
    element.style.diaplsy = "none";
    element.preload = "auto";
    element.volume = getLocalItem("volume", (v2) => v2 / 100) || 0.5;
    document.body.append(element);
  }
  return {
    element,
    volume: element.volume * 100,
    currentTime: {
      label: "00:00",
      value: 0
    },
    totalTime: {
      label: "00:00",
      value: 0
    },
    isLoading: true,
    paused: element.paused,
    current: null,
    musicList: [],
    collectList: getLocalItem("collectList") || [],
    player_switch: false,
    player_autoplay: false,
    showTag: "hole",
    // hole:全部音乐  collect: 收藏
    loadFilter: {
      isLoading: false,
      loadOver: false,
      size: 20,
      page: 1
    },
    isLoop: true,
    model: 1,
    // 随机播放优化
    playerRandomIndex() {
      const { musicList, collectList, changePlay, showTag } = get2();
      const list = showTag === "hole" ? musicList : collectList;
      const allIndexes = musicList.map((i, index) => index);
      const availableList = allIndexes.filter(
        (x2) => !CacheRandomList.includes(x2)
      );
      const randomIndex = Math.random() * availableList.length >>> 0;
      const resIndex = availableList[randomIndex];
      const newList = CacheRandomList.length === 6 ? CacheRandomList.slice(0, -1) : CacheRandomList;
      CacheRandomList = [resIndex, ...newList];
      changePlay(list[resIndex]);
    },
    setModel() {
      set((state) => {
        return { model: state.model === 3 ? 1 : state.model + 1 };
      });
    },
    async initMusicStore() {
      set({
        loadFilter: { ...get2().loadFilter, isLoading: true }
      });
      await getMemberPlayerList({
        size: get2().loadFilter.size,
        page: get2().loadFilter.page
      }).then((resData) => {
        const data = {};
        if (resData.config["player_switch"] == 1) {
          data.player_switch = true;
        }
        if (resData.config["player_autoplay"] == 1) {
          data.player_autoplay = true;
        }
        if (resData.d.length > 0) {
          const listFormat = resData.d.map((item) => ({
            ...item,
            parseSize: parseSize(item.size)
          }));
          data.musicList = listFormat;
          data.current = data.musicList[0];
          element.src = window.location.origin + data.current.src;
        }
        if (resData.t === data.musicList.length) {
          set({
            loadFilter: { ...get2().loadFilter, loadOver: true }
          });
        }
        if (get2().collectList.length === 0) {
          set({
            collectList: [data.musicList[0]]
          });
        }
        set({ ...data });
      }).finally(() => {
        set({
          loadFilter: { ...get2().loadFilter, isLoading: false }
        });
      });
      element.oncanplay = () => {
        if (!get2().paused) {
          get2().play();
        }
        set({
          currentTime: {
            label: dayjs.duration(element.currentTime * 1e3).format("mm:ss"),
            value: element.currentTime
          },
          totalTime: {
            label: dayjs.duration(element.duration * 1e3).format("mm:ss"),
            value: element.duration
          },
          isLoading: false
        });
      };
      element.ontimeupdate = () => {
        set({
          currentTime: {
            label: dayjs.duration(element.currentTime * 1e3).format("mm:ss"),
            value: element.currentTime
          }
        });
      };
      element.onwaiting = (event) => {
        set({
          isLoading: true
        });
      };
      element.onplaying = () => {
        set({
          isLoading: false
        });
      };
      element.onended = (event) => {
        const isSingleLoop = get2().model === 3 ? true : false;
        get2().next(event, isSingleLoop);
      };
    },
    play() {
      element.play();
      set({ paused: false });
    },
    pause() {
      element.pause();
      set({ paused: true });
    },
    changePlay(current) {
      element.src = window.location.origin + current.src;
      element.currentTime = 0;
      set({
        isLoading: true,
        current,
        currentTime: {
          label: "00:00",
          value: 0
        },
        totalTime: {
          label: "00:00",
          value: 0
        }
      });
      if (!get2().paused) {
        get2().play();
      }
    },
    next($event, isSingleLoop = false) {
      const state = get2();
      const list = state.showTag === "hole" ? state.musicList : state.collectList;
      const index = list.findIndex((item) => item.id === state.current.id);
      let current = null;
      if (isSingleLoop) {
        if (index < 0) {
          current = list[0];
        } else {
          current = list[index];
        }
        state.changePlay(current);
        return;
      }
      if (state.model === 1 || state.model === 3) {
        if (index < 0) {
          current = list[0];
        } else {
          if (index == list.length - 1) {
            current = list[0];
          } else {
            current = list[index + 1];
          }
        }
        state.changePlay(current);
      } else if (state.model === 2) {
        state.playerRandomIndex();
      }
    },
    pre() {
      const state = get2();
      const list = state.showTag === "hole" ? state.musicList : state.collectList;
      const index = list.findIndex((item) => item.id === state.current.id);
      let current = null;
      if (state.model === 1 || state.model === 3) {
        if (index < 0) {
          current = list[0];
        } else if (index == 0) {
          current = list[list.length - 1];
        } else {
          current = list[index - 1];
        }
        state.changePlay(current);
      } else if (state.model === 2) {
        state.playerRandomIndex();
      }
    },
    setVolume(volume) {
      const v2 = volume / 100;
      element.volume = v2;
      setLocalStorage({ volume });
      set({ volume });
    },
    setNoVolume() {
      element.volume = 0;
      setLocalStorage({ preVolume: get2().volume });
      set({ volume: 0 });
    },
    setCurrentTime(c) {
      set((state) => {
        element.currentTime = state.totalTime.value * (c / 100);
        return {
          currentTime: {
            label: dayjs.duration(element.currentTime * 1e3).format("mm:ss"),
            value: element.currentTime
          }
        };
      });
    },
    addCollect(item) {
      const c = [...get2().collectList, item];
      setLocalStorage({ collectList: c });
      set({ collectList: c });
    },
    removeCollect(item) {
      const c = get2().collectList;
      if (c.length > 1) {
        const i = c.findIndex((c2) => c2.id === item.id);
        c.splice(i, 1);
        setLocalStorage({ collectList: c });
        set({ collectList: c });
      } else {
        Message.danger(trans("Last song, which cannot be deleted"));
      }
    },
    setShowTag(v2) {
      set({ showTag: v2 });
    },
    async loadMore() {
      const f2 = get2().loadFilter;
      if (!f2.isLoading && !f2.loadOver) {
        set({
          loadFilter: {
            ...get2().loadFilter,
            isLoading: true,
            page: get2().loadFilter.page + 1
          }
        });
        await getMemberPlayerList({
          size: get2().loadFilter.size,
          page: get2().loadFilter.page
        }).then((resData) => {
          const listFormat = resData.d.map((item) => ({
            ...item,
            parseSize: parseSize(item.size)
          }));
          const musicList = [...get2().musicList, ...listFormat];
          set({
            loadFilter: { ...get2().loadFilter, isLoading: true },
            musicList
          });
          if (resData.t === musicList.length) {
            set({
              loadFilter: { ...get2().loadFilter, loadOver: true }
            });
          }
        }).finally(() => {
          set({
            loadFilter: { ...get2().loadFilter, isLoading: false }
          });
        });
      }
    }
  };
});
const useGuideStore = create((set, get2) => {
  window.addEventListener("beforeinstallprompt", function (promptEvent) {
    set({
      promptEvent
    });
  });
  return {
    promptEvent: null,
    standalone: window.matchMedia("(display-mode: standalone)").matches
  };
});
const useThreeLoginStore = create((set) => ({
  openForRegisterByThree: false,
  setOpenForRegisterByThree: (isOpen) => {
    set(() => {
      return { openForRegisterByThree: !!isOpen };
    });
  },
  openForEditInfoByThree: false,
  setOpenForEditInfoByThree: (isOpen) => {
    set(() => {
      return { openForEditInfoByThree: !!isOpen };
    });
  },
  threeLoginInfo: null,
  setThreeLoginInfo: (info) => {
    set(() => {
      return { threeLoginInfo: info };
    });
  },
  openForInfoPreviewByThree: false,
  setOpenForInfoPreviewByThree: (isOpen) => {
    set(() => {
      return { openForInfoPreviewByThree: !!isOpen };
    });
  }
}));
var utc$1 = { exports: {} };
(function (module, exports) {
  !function (t2, i) {
    module.exports = i();
  }(commonjsGlobal, function () {
    var t2 = "minute", i = /[+-]\d\d(?::?\d\d)?/g, e2 = /([+-]|\d\d)/g;
    return function (s, f2, n2) {
      var u2 = f2.prototype;
      n2.utc = function (t3) {
        var i2 = { date: t3, utc: true, args: arguments };
        return new f2(i2);
      }, u2.utc = function (i2) {
        var e3 = n2(this.toDate(), { locale: this.$L, utc: true });
        return i2 ? e3.add(this.utcOffset(), t2) : e3;
      }, u2.local = function () {
        return n2(this.toDate(), { locale: this.$L, utc: false });
      };
      var o = u2.parse;
      u2.parse = function (t3) {
        t3.utc && (this.$u = true), this.$utils().u(t3.$offset) || (this.$offset = t3.$offset), o.call(this, t3);
      };
      var r2 = u2.init;
      u2.init = function () {
        if (this.$u) {
          var t3 = this.$d;
          this.$y = t3.getUTCFullYear(), this.$M = t3.getUTCMonth(), this.$D = t3.getUTCDate(), this.$W = t3.getUTCDay(), this.$H = t3.getUTCHours(), this.$m = t3.getUTCMinutes(), this.$s = t3.getUTCSeconds(), this.$ms = t3.getUTCMilliseconds();
        } else
          r2.call(this);
      };
      var a = u2.utcOffset;
      u2.utcOffset = function (s2, f3) {
        var n3 = this.$utils().u;
        if (n3(s2))
          return this.$u ? 0 : n3(this.$offset) ? a.call(this) : this.$offset;
        if ("string" == typeof s2 && (s2 = function (t3) {
          void 0 === t3 && (t3 = "");
          var s3 = t3.match(i);
          if (!s3)
            return null;
          var f4 = ("" + s3[0]).match(e2) || ["-", 0, 0], n4 = f4[0], u4 = 60 * +f4[1] + +f4[2];
          return 0 === u4 ? 0 : "+" === n4 ? u4 : -u4;
        }(s2), null === s2))
          return this;
        var u3 = Math.abs(s2) <= 16 ? 60 * s2 : s2, o2 = this;
        if (f3)
          return o2.$offset = u3, o2.$u = 0 === s2, o2;
        if (0 !== s2) {
          var r3 = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();
          (o2 = this.local().add(u3 + r3, t2)).$offset = u3, o2.$x.$localOffset = r3;
        } else
          o2 = this.utc();
        return o2;
      };
      var h2 = u2.format;
      u2.format = function (t3) {
        var i2 = t3 || (this.$u ? "YYYY-MM-DDTHH:mm:ss[Z]" : "");
        return h2.call(this, i2);
      }, u2.valueOf = function () {
        var t3 = this.$utils().u(this.$offset) ? 0 : this.$offset + (this.$x.$localOffset || this.$d.getTimezoneOffset());
        return this.$d.valueOf() - 6e4 * t3;
      }, u2.isUTC = function () {
        return !!this.$u;
      }, u2.toISOString = function () {
        return this.toDate().toISOString();
      }, u2.toString = function () {
        return this.toDate().toUTCString();
      };
      var l2 = u2.toDate;
      u2.toDate = function (t3) {
        return "s" === t3 && this.$offset ? n2(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate() : l2.call(this);
      };
      var c = u2.diff;
      u2.diff = function (t3, i2, e3) {
        if (t3 && this.$u === t3.$u)
          return c.call(this, t3, i2, e3);
        var s2 = this.local(), f3 = n2(t3).local();
        return c.call(s2, f3, i2, e3);
      };
    };
  });
})(utc$1);
var utcExports = utc$1.exports;
const utc = /* @__PURE__ */ getDefaultExportFromCjs(utcExports);
var timezone$1 = { exports: {} };
(function (module, exports) {
  !function (t2, e2) {
    module.exports = e2();
  }(commonjsGlobal, function () {
    var t2 = { year: 0, month: 1, day: 2, hour: 3, minute: 4, second: 5 }, e2 = {};
    return function (n2, i, o) {
      var r2, a = function (t3, n3, i2) {
        void 0 === i2 && (i2 = {});
        var o2 = new Date(t3), r3 = function (t4, n4) {
          void 0 === n4 && (n4 = {});
          var i3 = n4.timeZoneName || "short", o3 = t4 + "|" + i3, r4 = e2[o3];
          return r4 || (r4 = new Intl.DateTimeFormat("en-US", { hour12: false, timeZone: t4, year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", timeZoneName: i3 }), e2[o3] = r4), r4;
        }(n3, i2);
        return r3.formatToParts(o2);
      }, u2 = function (e3, n3) {
        for (var i2 = a(e3, n3), r3 = [], u3 = 0; u3 < i2.length; u3 += 1) {
          var f3 = i2[u3], s2 = f3.type, m2 = f3.value, c = t2[s2];
          c >= 0 && (r3[c] = parseInt(m2, 10));
        }
        var d = r3[3], l2 = 24 === d ? 0 : d, h2 = r3[0] + "-" + r3[1] + "-" + r3[2] + " " + l2 + ":" + r3[4] + ":" + r3[5] + ":000", v2 = +e3;
        return (o.utc(h2).valueOf() - (v2 -= v2 % 1e3)) / 6e4;
      }, f2 = i.prototype;
      f2.tz = function (t3, e3) {
        void 0 === t3 && (t3 = r2);
        var n3 = this.utcOffset(), i2 = this.toDate(), a2 = i2.toLocaleString("en-US", { timeZone: t3 }), u3 = Math.round((i2 - new Date(a2)) / 1e3 / 60), f3 = o(a2, { locale: this.$L }).$set("millisecond", this.$ms).utcOffset(15 * -Math.round(i2.getTimezoneOffset() / 15) - u3, true);
        if (e3) {
          var s2 = f3.utcOffset();
          f3 = f3.add(n3 - s2, "minute");
        }
        return f3.$x.$timezone = t3, f3;
      }, f2.offsetName = function (t3) {
        var e3 = this.$x.$timezone || o.tz.guess(), n3 = a(this.valueOf(), e3, { timeZoneName: t3 }).find(function (t4) {
          return "timezonename" === t4.type.toLowerCase();
        });
        return n3 && n3.value;
      };
      var s = f2.startOf;
      f2.startOf = function (t3, e3) {
        if (!this.$x || !this.$x.$timezone)
          return s.call(this, t3, e3);
        var n3 = o(this.format("YYYY-MM-DD HH:mm:ss:SSS"), { locale: this.$L });
        return s.call(n3, t3, e3).tz(this.$x.$timezone, true);
      }, o.tz = function (t3, e3, n3) {
        var i2 = n3 && e3, a2 = n3 || e3 || r2, f3 = u2(+o(), a2);
        if ("string" != typeof t3)
          return o(t3).tz(a2);
        var s2 = function (t4, e4, n4) {
          var i3 = t4 - 60 * e4 * 1e3, o2 = u2(i3, n4);
          if (e4 === o2)
            return [i3, e4];
          var r3 = u2(i3 -= 60 * (o2 - e4) * 1e3, n4);
          return o2 === r3 ? [i3, o2] : [t4 - 60 * Math.min(o2, r3) * 1e3, Math.max(o2, r3)];
        }(o.utc(t3, i2).valueOf(), f3, a2), m2 = s2[0], c = s2[1], d = o(m2).utcOffset(c);
        return d.$x.$timezone = a2, d;
      }, o.tz.guess = function () {
        return Intl.DateTimeFormat().resolvedOptions().timeZone;
      }, o.tz.setDefault = function (t3) {
        r2 = t3;
      };
    };
  });
})(timezone$1);
var timezoneExports = timezone$1.exports;
const timezone = /* @__PURE__ */ getDefaultExportFromCjs(timezoneExports);
const svg_theme_fill_color = "_svg_theme_fill_color_t5y6x_3";
const h5_skeleton = "_h5_skeleton_t5y6x_55";
const headerBox = "_headerBox_t5y6x_59";
const leftIcon = "_leftIcon_t5y6x_71";
const rightBox = "_rightBox_t5y6x_77";
const rightItemBox1 = "_rightItemBox1_t5y6x_81";
const rightItemBox2 = "_rightItemBox2_t5y6x_87";
const carouselBox = "_carouselBox_t5y6x_93";
const noticeBox = "_noticeBox_t5y6x_101";
const noticeItemBox1 = "_noticeItemBox1_t5y6x_111";
const noticeItemBox2 = "_noticeItemBox2_t5y6x_116";
const typeSelectBox = "_typeSelectBox_t5y6x_121";
const typeSelectItemBox = "_typeSelectItemBox_t5y6x_131";
const gameLogoBox = "_gameLogoBox_t5y6x_136";
const gameLogoItem1 = "_gameLogoItem1_t5y6x_146";
const gameLogoItem2 = "_gameLogoItem2_t5y6x_151";
const gameListBox = "_gameListBox_t5y6x_157";
const gameListItemBox = "_gameListItemBox_t5y6x_168";
const css = {
  svg_theme_fill_color,
  h5_skeleton,
  headerBox,
  leftIcon,
  rightBox,
  rightItemBox1,
  rightItemBox2,
  carouselBox,
  noticeBox,
  noticeItemBox1,
  noticeItemBox2,
  typeSelectBox,
  typeSelectItemBox,
  gameLogoBox,
  gameLogoItem1,
  gameLogoItem2,
  gameListBox,
  gameListItemBox
};
const H5Skeleton = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
    className: joinClass(css.h5_skeleton, "skeletonBoxLightBg2"), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: joinClass(css.headerBox, "skeletonBoxLightBg"), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.leftIcon, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
        className: css.rightBox, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.rightItemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.rightItemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.rightItemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.rightItemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
        ]
      })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.carouselBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.noticeBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.noticeItemBox1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.noticeItemBox2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.typeSelectBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.typeSelectItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.typeSelectItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.typeSelectItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.typeSelectItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.typeSelectItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.carouselBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameLogoBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameListBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameLogoBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameListBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameLogoBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameListBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameLogoBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem1, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameLogoItem2, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", {
      className: css.gameListBox, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: joinClass(css.gameListItemBox, "skeletonBg"), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "skeleton-paragraph" }) })
      ]
    })
    ]
  });
};
const timerOBJ = {
  BR: "America/Sao_Paulo",
  PH: "Asia/Manila"
};
dayjs.extend(utc);
dayjs.extend(timezone);
dayjs.tz.setDefault(timerOBJ["BR"]);
let isH5 = getWebType();
Cache.set("isH5", isH5);
saveUrlParams();
const linkId = getQueryVariable("link_id") || getQueryVariable("id") || "";
if (linkId) {
  Cache.set("link_id", linkId);
}
const fbc = getQueryVariable("fbc") || "";
if (fbc) {
  Cache.set("fbc", fbc);
}
const fbp = getQueryVariable("fbp") || "";
if (fbp) {
  Cache.set("fbp", fbp);
}
const fbclid = getQueryVariable("fbclid") || "";
if (fbclid) {
  Cache.set("fbclid", fbclid);
}
getPageHtmlFontSize();
window.addEventListener("resize", () => {
  getPageHtmlFontSize();
});
const App = reactExports.lazy(() => new Promise((resolve) => {
  console.log("__SiteCountry__ :", "BR");
  Promise.all([__vitePreload(() => import("./App-D9NLPZJN-2024_8_30_15_11.js").then((n2) => n2.aE), true ? __vite__mapDeps([0, 1]) : void 0), languageLoaded()]).then(async ([comp]) => {
    const [res, err] = await memberWebsetList();
    if (res) {
      res.site_uphold = res.site_uphold ? JSON.parse(res.site_uphold) : {};
      res.nav_bottom_h5 = res.nav_bottom_h5 ? JSON.parse(res.nav_bottom_h5) : [];
      const img_shape = res.img_shape || "0";
      if (img_shape === "0") {
        useGameStore.setState({ renderType: "" });
      }
      if (img_shape === "1") {
        useGameStore.setState({ renderType: "rect" });
      }
      const float = res.float || [];
      float.sort((a, b) => a.sort - b.sort);
      const share = res.share || [];
      share.sort((a, b) => a.sort - b.sort);
      useFloatPopShareStore.setState({ float, share });
      const pop = res.pop || [];
      pop.sort((a, b) => a.sort - b.sort);
      useFloatPopShareStore.setState({ pop });
      useUserInfoStore.setState({ websetConfig: res, prefix: res.prefix || "" });
    }
    resolve(comp);
  });
}));
window.onload = function () {
  if (location.href.includes("gameStart")) {
    location.href = "/";
  }
};
document.documentElement.className = "h5";
document.documentElement.lang = "pt";
new initPixi();
client$1.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(BrowserRouter, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(H5Skeleton, {}), children: /* @__PURE__ */ jsxRuntimeExports.jsx(App, {}) }) })
);
export {
  __vitePreload as $,
  useLocation as A,
  useGameStore as B,
  useMessageStore as C,
  getLinkList as D,
  getMoneyUnit as E,
  getWebType as F,
  Cache as G,
  mqttConnect as H,
  memberPointStatisticsDeposit as I,
  postPixiChargeEvent as J,
  jsxRuntimeExports as K,
  getMemberCustomerList as L,
  reactDomExports as M,
  Motion as N,
  spring as O,
  joinClass as P,
  isH5$1 as Q,
  Image$1 as R,
  trans as S,
  React as T,
  ReactDOM as U,
  dayjs as V,
  React$1 as W,
  ReactDOM$1 as X,
  antdLocale as Y,
  copyText as Z,
  __spreadArray as _,
  __vite_legacy_guard,
  getI18n as a,
  getPromoTurntableShare as a$,
  minPxChip as a0,
  postRecallbalance as a1,
  Loading as a2,
  getUrlParams as a3,
  getFinanceChannelType as a4,
  getFinanceChannelList as a5,
  memberWebsetList as a6,
  Message as a7,
  postFinanceThirdDeposit as a8,
  instance as a9,
  useFloatPopShareStore as aA,
  getGamesNav as aB,
  getCommissionConfig as aC,
  checkInputUserName as aD,
  checkInputUserPwd as aE,
  register as aF,
  postAgencyMypick as aG,
  postRebateAgencyBrief as aH,
  lodashExports as aI,
  getMemberRecordGame as aJ,
  getMemberAgencyReportSubPlat as aK,
  H5Skeleton as aL,
  useThreeLoginStore as aM,
  slideBlockByGeetest4 as aN,
  postThreeLogin as aO,
  login as aP,
  useSearchParams as aQ,
  checkPasswordStrength as aR,
  checkInputPhoneNumber as aS,
  countryCode as aT,
  languageOptions as aU,
  getLineClass as aV,
  getRandomInt as aW,
  useMusicStore as aX,
  sortGameTabs as aY,
  scrollToPlatromItem as aZ,
  useAlertStore as a_,
  customToFixed as aa,
  getMemberRecordTrade as ab,
  getMemberShortInfo as ac,
  getCountryFlag as ad,
  postMemberBankcardInsert as ae,
  getMemberBankcardPixTypeList as af,
  postMemberBankcardInsertPH as ag,
  getMemberBankcardPHTypeList as ah,
  getMemberBankcardListPh as ai,
  events as aj,
  getMemberBankcardList as ak,
  getFinanceWithdrawProcessing as al,
  postMemberWpwCheck as am,
  postFinanceWithdraw as an,
  getFinanceWithdrawFee as ao,
  toPXBack as ap,
  postDirectAgencyState as aq,
  rebateAgencyRecord as ar,
  postAgencyMydata as as,
  postAgencyAlldata as at,
  myBet as au,
  postDirectAgencyFinance as av,
  postAgentSubMember as aw,
  removeEmpty as ax,
  betDetail as ay,
  postDirectAgencyBete as az,
  __read as b,
  getBrowser as b0,
  getPayMethod as b1,
  getPromoTurntableTrans as b2,
  getPromoTurntablePrizeList as b3,
  postPromoTurntableApply as b4,
  getPromoDetail as b5,
  getNoticeList as b6,
  preloadImage as b7,
  useGuideStore as b8,
  useRoutes as b9,
  addFeedback as bA,
  getMessageList as bB,
  deleteUserMessage as bC,
  generateUniqueFileName as bD,
  getRebateConfig as bE,
  postMemberLoginPasswordCheck as bF,
  postMemberBindPhone as bG,
  getMemberRecordTradeDetail as bH,
  getPromoWelfareApply as bI,
  getPromoInviteRecordDetail as bJ,
  _ as bK,
  getPromoInviteList as bL,
  postPromoInviteOpen as bM,
  getPromoSingleDetail as bN,
  getPromoSingleRewardl as bO,
  getPromoSingleApply as bP,
  getSlotSearch as bQ,
  getPromoRedeemcodeDetail as bR,
  getPromoRedeemcodeApply as bS,
  getH5Type as ba,
  getBanner as bb,
  useInViewport as bc,
  getAwardAmount as bd,
  getHotGames as be,
  getPlatLaunch as bf,
  historySave as bg,
  favoritesremove as bh,
  favorites as bi,
  favoritesList as bj,
  historyList as bk,
  getPromoMap as bl,
  getPromoApplyStatus as bm,
  getPromoRescueProfit as bn,
  postPromoApply as bo,
  getPromoDepositDetail as bp,
  getVipConfig as bq,
  inputPwdStrLengthTest as br,
  postMemberPasswordUpdate as bs,
  getMemberAvatarUpdate as bt,
  postMemberBindEmail as bu,
  postMemberUpdate as bv,
  getPlatBalance as bw,
  readUserMessage as bx,
  withdrawFeedback as by,
  listFeedback as bz,
  __assign as c,
  depsAreSame as d,
  commonjsGlobal as e,
  getDefaultExportFromCjs as f,
  getDefaults$2 as g,
  __awaiter as h,
  isBrowser as i,
  __generator as j,
  __rest as k,
  isFunction as l,
  useLatest as m,
  getTargetElement as n,
  useEffectWithTarget as o,
  getQueryVariable as p,
  useUserInfoStore as q,
  reactExports as r,
  browser as s,
  addIcoToHead as t,
  useUnmount as u,
  addManifestToHead as v,
  useParams as w,
  useNavigate as x,
  getPromoList as y,
  sendMessage as z
};
